// coding: utf-8
// ----------------------------------------------------------------------------
/* Copyright (c) 2011, Roboterclub Aachen e.V.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of the Roboterclub Aachen e.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
// ----------------------------------------------------------------------------

	#include "constants.h"
	
	.text
	.arm
	
	// Needs to be aligned because we are doing a word access during the remap.
	// Without the alignmet a data abort is generated!
	.align	4
	.global	_vectors
	
	// Vector table to be copied into RAM
_vectors:
	ldr		pc, [pc, #24]		// Reset
	ldr		pc, [pc, #24]		// Undefined Instruction
	ldr		pc, [pc, #24]		// Software Interrupt
	ldr		pc, [pc, #24]		// Prefetch Abort
	ldr		pc, [pc, #24]		// Data Abort
	.word	MAGIC_MARKER		// Reserved for Checksum
	ldr		pc, [pc, #24]		// IRQ
	ldr		pc, [pc, #24]		// FIQ
	
	.word	__start
	.word	_undefined_instruction_handler
	.word	_swi_handler
	.word	_prefetch_abort_handler
	.word	_data_abort_handler
	nop
	.word	_irq_wrapper
	.word	_fiq_wrapper
	
	// The functions _undefined_instruction_handler, _prefetch_abort_handler
	// and _data_abort_handler are defined in 'abort.S' and the _irq_wrapper and
	// _fiq_wrapper functions in 'interrupt.S'.
	
	.end
