#!/usr/bin/env python
# -*- coding: utf-8 -*-
# 
# Copyright (c) 2011, Roboterclub Aachen e.V.
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 
#  * Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#  * Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#  * Neither the name of the Roboterclub Aachen e.V. nor the
#    names of its contributors may be used to endorse or promote products
#    derived from this software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# -----------------------------------------------------------------------------

Import('env')

generator = env['TemplateGenerator'](env, 'spi')
for id in [0, 1]:
	generator.template('spi_%i.hpp' % id, 'spi.hpp.in', { 'id': id })
	generator.template('spi_%i.cpp' % id, 'spi.cpp.in', { 'id': id })

generator = env['TemplateGenerator'](env, 'uart')
for id in [0, 1]:
	generator.template('uart_%i.hpp' % id, 'uart.hpp.in', { 'id': id })
	generator.template('uart_%i.cpp' % id, 'uart.cpp.in', { 'id': id })

generator = env['TemplateGenerator'](env, 'timer')
for id in [0, 1, 2]:
	generator.template('timer_%i.hpp' % id, 'timer.hpp.in', { 'id': id })
	generator.template('timer_%i.cpp' % id, 'timer.cpp.in', { 'id': id })
