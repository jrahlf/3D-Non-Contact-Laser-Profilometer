   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 2
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"pcInterface.cpp"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text._ZN8Handlers12resetHandlerEPKci,"axG",%progbits,_ZN8Handlers12resetHandlerEPKci,com
  20              		.align	2
  21              		.weak	_ZN8Handlers12resetHandlerEPKci
  22              		.thumb
  23              		.thumb_func
  25              	_ZN8Handlers12resetHandlerEPKci:
  26              	.LFB1040:
  27              		.file 1 "commandHandlers.h"
   1:commandHandlers.h **** /*
   2:commandHandlers.h ****  * commandHandlers.h
   3:commandHandlers.h ****  *
   4:commandHandlers.h ****  *  Created on: Jan 23, 2014
   5:commandHandlers.h ****  *      Author: jonas
   6:commandHandlers.h ****  */
   7:commandHandlers.h **** 
   8:commandHandlers.h **** #ifndef COMMANDHANDLERS_H_
   9:commandHandlers.h **** #define COMMANDHANDLERS_H_
  10:commandHandlers.h **** 
  11:commandHandlers.h **** 
  12:commandHandlers.h **** 
  13:commandHandlers.h **** #include <xpcc/architecture.hpp>
  14:commandHandlers.h **** #include "project.h"
  15:commandHandlers.h **** #include "control.h"
  16:commandHandlers.h **** #include "atof.h"
  17:commandHandlers.h **** #include "limits.h"
  18:commandHandlers.h **** #include "transform.h"
  19:commandHandlers.h **** #include "motor.h"
  20:commandHandlers.h **** #include "laserInterface.h"
  21:commandHandlers.h **** #include "Trigger.h"
  22:commandHandlers.h **** #include "../ext/stm32f4xx_lib/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
  23:commandHandlers.h **** #include "utils.h"
  24:commandHandlers.h **** #include "pattern.h"
  25:commandHandlers.h **** #include "rectangle.h"
  26:commandHandlers.h **** #include "quadrangleZigZag.h"
  27:commandHandlers.h **** #include "linePattern.h"
  28:commandHandlers.h **** 
  29:commandHandlers.h **** 
  30:commandHandlers.h **** struct Handlers{
  31:commandHandlers.h **** 
  32:commandHandlers.h **** template<Axis axis>
  33:commandHandlers.h **** static bool gotoHandler(const char* cmd, int length){
  34:commandHandlers.h **** 	float pos = atof2(cmd, length, 99999.0f);
  35:commandHandlers.h **** 	if(pos == 99999.0f){
  36:commandHandlers.h **** 		return false;
  37:commandHandlers.h **** 	}
  38:commandHandlers.h **** 	Utils::startLoggingControl();
  39:commandHandlers.h **** 	pos = Transform::mmToEncoder(pos);
  40:commandHandlers.h **** 	Control<ALL>::enablePositionControl(true);
  41:commandHandlers.h **** 	Control<axis>::setShallPosition(pos);
  42:commandHandlers.h **** 	dout << axis << " going to " << pos << endl;
  43:commandHandlers.h **** 	return true;
  44:commandHandlers.h **** }
  45:commandHandlers.h **** 
  46:commandHandlers.h **** template<Axis axis>
  47:commandHandlers.h **** static bool moveHandler(const char* cmd, int length){
  48:commandHandlers.h **** 	float pos = atof2(cmd, length, 99999.0f);
  49:commandHandlers.h **** 	if(pos == 99999.0f){
  50:commandHandlers.h **** 		return false;
  51:commandHandlers.h **** 	}
  52:commandHandlers.h **** 	Utils::startLoggingControl();
  53:commandHandlers.h **** 	pos = Transform::mmToEncoder(pos);
  54:commandHandlers.h **** 	Control<ALL>::enablePositionControl(true);
  55:commandHandlers.h **** 	pos = Control<axis>::getIsPosition() + pos;
  56:commandHandlers.h **** 	Control<axis>::setShallPosition(pos);
  57:commandHandlers.h **** 	dout << axis << " going to " << pos << endl;
  58:commandHandlers.h **** 	return true;
  59:commandHandlers.h **** }
  60:commandHandlers.h **** 
  61:commandHandlers.h **** template<Axis axis>
  62:commandHandlers.h **** static bool setSpeedHandler(const char* cmd, int length){
  63:commandHandlers.h **** 	float speed = atof2(cmd, length, 2.f);
  64:commandHandlers.h **** 	if(speed == 2.f){
  65:commandHandlers.h **** 		cerr << "speed param must be between -1 and 1" << endl;
  66:commandHandlers.h **** 		return false;
  67:commandHandlers.h **** 	}
  68:commandHandlers.h **** 	Utils::startLoggingControl();
  69:commandHandlers.h **** 	Control<ALL>::enablePositionControl(false);
  70:commandHandlers.h **** 	Control<ALL>::enableSpeedControl(true);
  71:commandHandlers.h **** 	Control<axis>::setShallSpeed(speed);
  72:commandHandlers.h **** 	//dout << axis << " set speed to " << speed << endl;
  73:commandHandlers.h **** 	return true;
  74:commandHandlers.h **** }
  75:commandHandlers.h **** 
  76:commandHandlers.h **** static bool setMaxSpeedHandler(const char* cmd, int length){
  77:commandHandlers.h **** 	float speed = atof2(cmd, length, 2.f);
  78:commandHandlers.h **** 	if(speed == 2.f){
  79:commandHandlers.h **** 		cerr << "speed param must be between 0 and 1" << endl;
  80:commandHandlers.h **** 		return false;
  81:commandHandlers.h **** 	}
  82:commandHandlers.h **** 	Control<ALL>::setMaxSpeed(speed);
  83:commandHandlers.h **** 	dout << " set speed to " << speed << endl;
  84:commandHandlers.h **** 	return true;
  85:commandHandlers.h **** }
  86:commandHandlers.h **** 
  87:commandHandlers.h **** template<Axis axis>
  88:commandHandlers.h **** static bool setPwmHandler(const char* cmd, int length){
  89:commandHandlers.h **** 	int speed = atoi2(cmd, length, INT_MAX);
  90:commandHandlers.h **** 	if(speed == INT_MAX){
  91:commandHandlers.h **** 		return false;
  92:commandHandlers.h **** 	}
  93:commandHandlers.h **** 	xpcc::stm32::SysTickTimer::enable();
  94:commandHandlers.h **** 	xpcc::delay_ms(5);
  95:commandHandlers.h **** 	if(speed > 1200){
  96:commandHandlers.h **** 		speed = 1200;
  97:commandHandlers.h **** 	}else if(speed < -1200){
  98:commandHandlers.h **** 		speed = -1200;
  99:commandHandlers.h **** 	}
 100:commandHandlers.h **** 	Control<ALL>::enablePositionControl(false);
 101:commandHandlers.h **** 	Control<ALL>::enableSpeedControl(false);
 102:commandHandlers.h **** 	Motor<axis>::setSpeed(speed);
 103:commandHandlers.h **** 	dout << axis << " set pwm to " << speed << endl;
 104:commandHandlers.h **** 	return true;
 105:commandHandlers.h **** }
 106:commandHandlers.h **** 
 107:commandHandlers.h **** static bool enableSystickHandler(const char* cmd, int length){
 108:commandHandlers.h **** 	(void) cmd;
 109:commandHandlers.h **** 	(void) length;
 110:commandHandlers.h **** 	bool enable = atoi2(cmd, 1, 1);
 111:commandHandlers.h **** 	if(enable){
 112:commandHandlers.h **** 		Utils::enableSystick();
 113:commandHandlers.h **** 	}else{
 114:commandHandlers.h **** 		Utils::disableSystick();
 115:commandHandlers.h **** 	}
 116:commandHandlers.h **** 	dout << "systick enable " << enable << endl;
 117:commandHandlers.h **** 	return true;
 118:commandHandlers.h **** }
 119:commandHandlers.h **** 
 120:commandHandlers.h **** static bool enableTrigger(const char* cmd, int length){
 121:commandHandlers.h **** 	(void) cmd;
 122:commandHandlers.h **** 	(void) length;
 123:commandHandlers.h **** 	bool param = atoi2(cmd, 1, 2);
 124:commandHandlers.h **** 	Trigger::enable(param);
 125:commandHandlers.h **** 	dout << "trigger enable " << param << endl;
 126:commandHandlers.h **** 	return true;
 127:commandHandlers.h **** }
 128:commandHandlers.h **** 
 129:commandHandlers.h **** static bool getLaserError(const char* cmd, int length){
 130:commandHandlers.h **** 	(void) cmd;
 131:commandHandlers.h **** 	(void) length;
 132:commandHandlers.h **** 	iout << "Laser error: " << Laser::getLastError() << endl;
 133:commandHandlers.h **** 	return false;
 134:commandHandlers.h **** }
 135:commandHandlers.h **** 
 136:commandHandlers.h **** static bool resetHandler(const char* cmd, int length){
  28              		.loc 1 136 0
  29              		.cfi_startproc
  30              		@ Volatile: function does not return.
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
  35              	.LBB570:
  36              	.LBB571:
  37              	.LBB572:
  38              	.LBB573:
  39              		.file 2 "/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h"
   1:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** /**************************************************************************//**
   2:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****  * @file     core_cmInstr.h
   3:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****  * @brief    CMSIS Cortex-M Core Instruction Access Header File
   4:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****  * @version  V2.10
   5:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****  * @date     19. July 2011
   6:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****  *
   7:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****  * @note
   8:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****  * Copyright (C) 2009-2011 ARM Limited. All rights reserved.
   9:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****  *
  10:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****  * @par
  11:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M 
  12:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****  * processor based microcontrollers.  This file can be freely distributed 
  13:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****  * within development tools that are supporting such ARM based processors. 
  14:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****  *
  15:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****  * @par
  16:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****  *
  22:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****  ******************************************************************************/
  23:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
  24:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** #ifndef __CORE_CMINSTR_H
  25:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** #define __CORE_CMINSTR_H
  26:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
  27:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
  28:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** /* ##########################  Core Instruction Access  ######################### */
  29:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
  30:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****   Access to dedicated instructions
  31:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****   @{
  32:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** */
  33:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
  34:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** #if   defined ( __CC_ARM ) /*------------------RealView Compiler -----------------*/
  35:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** /* ARM armcc specific functions */
  36:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
  37:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** #if (__ARMCC_VERSION < 400677)
  38:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****   #error "Please use ARM Compiler Toolchain V4.0.677 or later!"
  39:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** #endif
  40:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
  41:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
  42:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** /** \brief  No Operation
  43:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
  44:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
  45:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****  */
  46:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** #define __NOP                             __nop
  47:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
  48:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
  49:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Interrupt
  50:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
  51:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
  52:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     until one of a number of events occurs.
  53:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****  */
  54:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** #define __WFI                             __wfi
  55:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
  56:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
  57:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Event
  58:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
  59:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
  60:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
  61:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****  */
  62:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** #define __WFE                             __wfe
  63:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
  64:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
  65:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** /** \brief  Send Event
  66:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
  67:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
  68:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****  */
  69:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** #define __SEV                             __sev
  70:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
  71:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
  72:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
  73:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
  74:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor, 
  75:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or 
  76:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     memory, after the instruction has been completed.
  77:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****  */
  78:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** #define __ISB()                           __isb(0xF)
  79:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
  80:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
  81:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
  82:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
  83:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier. 
  84:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
  85:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****  */
  86:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** #define __DSB()                           __dsb(0xF)
  87:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
  88:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
  89:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Memory Barrier
  90:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
  91:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before 
  92:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
  93:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****  */
  94:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** #define __DMB()                           __dmb(0xF)
  95:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
  96:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
  97:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
  98:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
  99:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in integer value.
 100:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 101:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 102:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 103:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****  */
 104:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** #define __REV                             __rev
 105:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 106:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 107:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order (16 bit)
 108:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 109:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in two unsigned short values.
 110:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 111:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 112:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 113:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****  */
 114:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** static __INLINE __ASM uint32_t __REV16(uint32_t value)
 115:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** {
 116:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****   rev16 r0, r0
 117:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****   bx lr
 118:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** }
 119:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 120:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 121:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order in signed short value
 122:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 123:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in a signed short value with sign extension to integer.
 124:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 125:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 126:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 127:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****  */
 128:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** static __INLINE __ASM int32_t __REVSH(int32_t value)
 129:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** {
 130:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****   revsh r0, r0
 131:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****   bx lr
 132:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** }
 133:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 134:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 135:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** #if       (__CORTEX_M >= 0x03)
 136:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 137:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse bit order of value
 138:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 139:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     This function reverses the bit order of the given value.
 140:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 141:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 142:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 143:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****  */
 144:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** #define __RBIT                            __rbit
 145:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 146:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 147:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** /** \brief  LDR Exclusive (8 bit)
 148:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 149:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive LDR command for 8 bit value.
 150:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 151:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 152:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     \return             value of type uint8_t at (*ptr)
 153:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****  */
 154:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** #define __LDREXB(ptr)                     ((uint8_t ) __ldrex(ptr))
 155:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 156:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 157:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** /** \brief  LDR Exclusive (16 bit)
 158:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 159:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive LDR command for 16 bit values.
 160:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 161:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 162:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     \return        value of type uint16_t at (*ptr)
 163:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****  */
 164:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** #define __LDREXH(ptr)                     ((uint16_t) __ldrex(ptr))
 165:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 166:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 167:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** /** \brief  LDR Exclusive (32 bit)
 168:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 169:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive LDR command for 32 bit values.
 170:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 171:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 172:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     \return        value of type uint32_t at (*ptr)
 173:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****  */
 174:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** #define __LDREXW(ptr)                     ((uint32_t ) __ldrex(ptr))
 175:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 176:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 177:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** /** \brief  STR Exclusive (8 bit)
 178:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 179:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive STR command for 8 bit values.
 180:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 181:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 182:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 183:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     \return          0  Function succeeded
 184:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     \return          1  Function failed
 185:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****  */
 186:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 187:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 188:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 189:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** /** \brief  STR Exclusive (16 bit)
 190:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 191:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive STR command for 16 bit values.
 192:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 193:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 194:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 195:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     \return          0  Function succeeded
 196:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     \return          1  Function failed
 197:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****  */
 198:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 199:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 200:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 201:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** /** \brief  STR Exclusive (32 bit)
 202:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 203:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive STR command for 32 bit values.
 204:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 205:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 206:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 207:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     \return          0  Function succeeded
 208:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     \return          1  Function failed
 209:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****  */
 210:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 211:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 212:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 213:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** /** \brief  Remove the exclusive lock
 214:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 215:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     This function removes the exclusive lock which is created by LDREX.
 216:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 217:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****  */
 218:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** #define __CLREX                           __clrex
 219:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 220:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 221:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** /** \brief  Signed Saturate
 222:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 223:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     This function saturates a signed value.
 224:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 225:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 226:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (1..32)
 227:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     \return             Saturated value
 228:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****  */
 229:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** #define __SSAT                            __ssat
 230:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 231:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 232:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** /** \brief  Unsigned Saturate
 233:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 234:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     This function saturates an unsigned value.
 235:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 236:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 237:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (0..31)
 238:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     \return             Saturated value
 239:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****  */
 240:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** #define __USAT                            __usat
 241:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 242:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 243:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** /** \brief  Count leading zeros
 244:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 245:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     This function counts the number of leading zeros of a data value.
 246:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 247:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to count the leading zeros
 248:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     \return             number of leading zeros in value
 249:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****  */
 250:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** #define __CLZ                             __clz 
 251:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 252:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** #endif /* (__CORTEX_M >= 0x03) */
 253:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 254:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 255:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 256:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** #elif defined ( __ICCARM__ ) /*------------------ ICC Compiler -------------------*/
 257:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** /* IAR iccarm specific functions */
 258:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 259:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** #include <cmsis_iar.h>
 260:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 261:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 262:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** #elif defined ( __GNUC__ ) /*------------------ GNU Compiler ---------------------*/
 263:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** /* GNU gcc specific functions */
 264:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 265:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** /** \brief  No Operation
 266:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 267:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
 268:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****  */
 269:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __NOP(void)
 270:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** {
 271:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("nop");
 272:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** }
 273:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 274:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 275:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Interrupt
 276:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 277:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
 278:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     until one of a number of events occurs.
 279:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****  */
 280:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __WFI(void)
 281:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** {
 282:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("wfi");
 283:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** }
 284:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 285:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 286:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Event
 287:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 288:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
 289:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
 290:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****  */
 291:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __WFE(void)
 292:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** {
 293:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("wfe");
 294:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** }
 295:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 296:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 297:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** /** \brief  Send Event
 298:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 299:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 300:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****  */
 301:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __SEV(void)
 302:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** {
 303:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("sev");
 304:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** }
 305:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 306:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 307:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
 308:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 309:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor, 
 310:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or 
 311:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     memory, after the instruction has been completed.
 312:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****  */
 313:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __ISB(void)
 314:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** {
 315:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("isb");
 316:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** }
 317:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 318:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 319:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
 320:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** 
 321:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier. 
 322:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
 323:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****  */
 324:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __DSB(void)
 325:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h **** {
 326:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("dsb");
  40              		.loc 2 326 0
  41              	@ 326 "/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h" 1
  42 0000 BFF34F8F 		dsb
  43              	@ 0 "" 2
  44              		.thumb
  45              	.LBE573:
  46              	.LBE572:
  47              		.file 3 "/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h"
   1:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /**************************************************************************//**
   2:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  * @file     core_cm4.h
   3:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  * @version  V2.10
   5:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  * @date     19. July 2011
   6:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  *
   7:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  * @note
   8:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  * Copyright (C) 2009-2011 ARM Limited. All rights reserved.
   9:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  *
  10:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  * @par
  11:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M
  12:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  * processor based microcontrollers.  This file can be freely distributed
  13:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  * within development tools that are supporting such ARM based processors.
  14:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  *
  15:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  * @par
  16:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  *
  22:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
  23:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #if defined ( __ICCARM__ )
  24:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  #pragma system_include  /* treat file as system include file for MISRA check */
  25:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #endif
  26:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
  27:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
  28:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  extern "C" {
  29:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #endif
  30:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
  31:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  32:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  33:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
  34:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
  35:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /** \mainpage CMSIS Cortex-M4
  36:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
  37:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   This documentation describes the CMSIS Cortex-M Core Peripheral Access Layer.
  38:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   It consists of:
  39:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
  40:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****      - Cortex-M Core Register Definitions
  41:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****      - Cortex-M functions
  42:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****      - Cortex-M instructions
  43:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****      - Cortex-M SIMD instructions
  44:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
  45:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   The CMSIS Cortex-M4 Core Peripheral Access Layer contains C and assembly functions that ease
  46:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   access to the Cortex-M Core
  47:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  */
  48:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
  49:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /** \defgroup CMSIS_MISRA_Exceptions  CMSIS MISRA-C:2004 Compliance Exceptions
  50:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   CMSIS violates following MISRA-C2004 Rules:
  51:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   
  52:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****    - Violates MISRA 2004 Required Rule 8.5, object/function definition in header file.<br>
  53:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'. 
  54:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
  55:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****    - Violates MISRA 2004 Required Rule 18.4, declaration of union type or object of union type: '{.
  56:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****      Unions are used for effective representation of core registers.
  57:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****    
  58:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****    - Violates MISRA 2004 Advisory Rule 19.7, Function-like macro defined.<br>
  59:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****      Function-like macros are used to allow more efficient code. 
  60:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
  61:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  */
  62:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
  63:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
  64:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /*******************************************************************************
  65:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  *                 CMSIS definitions
  66:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
  67:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /** \defgroup CMSIS_core_definitions CMSIS Core Definitions
  68:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   This file defines all structures and symbols for CMSIS core:
  69:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****    - CMSIS version number
  70:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****    - Cortex-M core
  71:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****    - Cortex-M core Revision Number
  72:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   @{
  73:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  */
  74:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
  75:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /*  CMSIS CM4 definitions */
  76:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (0x02)                                                       /*!<
  77:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (0x10)                                                       /*!<
  78:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16) | __CM4_CMSIS_VERSION_SUB) /*!<
  79:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
  80:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define __CORTEX_M                (0x04)                                                       /*!<
  81:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
  82:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
  83:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #if   defined ( __CC_ARM )
  84:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  85:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  86:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
  87:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #elif defined ( __ICCARM__ )
  88:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   #define __ASM           __asm                                       /*!< asm keyword for IAR Comp
  89:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   #define __INLINE        inline                                      /*!< inline keyword for IAR C
  90:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
  91:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #elif defined ( __GNUC__ )
  92:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  93:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  94:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
  95:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #elif defined ( __TASKING__ )
  96:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
  97:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
  98:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
  99:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #endif
 100:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 101:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /*!< __FPU_USED to be checked prior to making use of FPU specific registers and functions */
 102:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #if defined ( __CC_ARM )
 103:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   #if defined __TARGET_FPU_VFP
 104:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 105:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1
 106:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     #else
 107:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 108:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0
 109:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     #endif
 110:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   #else
 111:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0
 112:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   #endif
 113:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 114:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #elif defined ( __ICCARM__ )
 115:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   #if defined __ARMVFP__
 116:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 117:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1
 118:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     #else
 119:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 120:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0
 121:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     #endif
 122:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   #else
 123:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0
 124:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   #endif
 125:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 126:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #elif defined ( __GNUC__ )
 127:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 128:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 129:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1
 130:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     #else
 131:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 132:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0
 133:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     #endif
 134:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   #else
 135:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0
 136:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   #endif
 137:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 138:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #elif defined ( __TASKING__ )
 139:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     /* add preprocessor checks to define __FPU_USED */
 140:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0
 141:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #endif
 142:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 143:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #include <stdint.h>                      /*!< standard types definitions                      */
 144:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #include <core_cmInstr.h>                /*!< Core Instruction Access                         */
 145:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #include <core_cmFunc.h>                 /*!< Core Function Access                            */
 146:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #include <core_cm4_simd.h>               /*!< Compiler specific SIMD Intrinsics               */
 147:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 148:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 149:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 150:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #ifndef __CMSIS_GENERIC
 151:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 152:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 153:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 154:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 155:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /* check device defines and use defaults */
 156:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 157:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   #ifndef __CM4_REV
 158:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     #define __CM4_REV               0x0000
 159:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 160:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   #endif
 161:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 162:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   #ifndef __FPU_PRESENT
 163:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     #define __FPU_PRESENT             0
 164:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 165:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   #endif
 166:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 167:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   #ifndef __MPU_PRESENT
 168:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     #define __MPU_PRESENT             0
 169:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 170:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   #endif
 171:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 172:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 173:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     #define __NVIC_PRIO_BITS          4
 174:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 175:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   #endif
 176:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 177:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 178:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     #define __Vendor_SysTickConfig    0
 179:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 180:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   #endif
 181:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #endif
 182:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 183:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 184:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 185:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   #define   __I     volatile             /*!< defines 'read only' permissions                 */
 186:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #else
 187:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   #define   __I     volatile const       /*!< defines 'read only' permissions                 */
 188:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #endif
 189:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define     __O     volatile             /*!< defines 'write only' permissions                */
 190:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define     __IO    volatile             /*!< defines 'read / write' permissions              */
 191:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 192:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_core_definitions */
 193:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 194:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 195:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 196:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /*******************************************************************************
 197:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  *                 Register Abstraction
 198:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
 199:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /** \defgroup CMSIS_core_register CMSIS Core Register
 200:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   Core Register contain:
 201:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   - Core Register
 202:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   - Core NVIC Register
 203:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   - Core SCB Register
 204:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   - Core SysTick Register
 205:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   - Core Debug Register
 206:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   - Core MPU Register
 207:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   - Core FPU Register
 208:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** */
 209:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 210:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 211:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_CORE CMSIS Core
 212:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   Type definitions for the Cortex-M Core Registers
 213:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   @{
 214:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  */
 215:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 216:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /** \brief  Union type to access the Application Program Status Register (APSR).
 217:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  */
 218:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** typedef union
 219:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** {
 220:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   struct
 221:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   {
 222:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #if (__CORTEX_M != 0x04)
 223:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:27;              /*!< bit:  0..26  Reserved                           */
 224:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #else
 225:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved                           */
 226:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags        */
 227:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved                           */
 228:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #endif
 229:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag          */
 230:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag       */
 231:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag          */
 232:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag           */
 233:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag       */
 234:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 235:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 236:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** } APSR_Type;
 237:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 238:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 239:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /** \brief  Union type to access the Interrupt Program Status Register (IPSR).
 240:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  */
 241:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** typedef union
 242:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** {
 243:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   struct
 244:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   {
 245:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number                   */
 246:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved                           */
 247:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 248:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 249:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** } IPSR_Type;
 250:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 251:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 252:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /** \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 253:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  */
 254:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** typedef union
 255:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** {
 256:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   struct
 257:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   {
 258:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number                   */
 259:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #if (__CORTEX_M != 0x04)
 260:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved                           */
 261:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #else
 262:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:7;               /*!< bit:  9..15  Reserved                           */
 263:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags        */
 264:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved                           */
 265:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #endif
 266:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0)          */
 267:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0)          */
 268:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag          */
 269:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag       */
 270:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag          */
 271:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag           */
 272:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag       */
 273:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 274:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 275:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** } xPSR_Type;
 276:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 277:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 278:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /** \brief  Union type to access the Control Registers (CONTROL).
 279:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  */
 280:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** typedef union
 281:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** {
 282:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   struct
 283:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   {
 284:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 285:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used                   */
 286:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag           */
 287:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved                           */
 288:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 289:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 290:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** } CONTROL_Type;
 291:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 292:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CORE */
 293:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 294:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 295:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 296:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_NVIC CMSIS NVIC
 297:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   Type definitions for the Cortex-M NVIC Registers
 298:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   @{
 299:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  */
 300:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 301:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 302:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  */
 303:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** typedef struct
 304:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** {
 305:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __IO uint32_t ISER[8];                 /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register   
 306:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED0[24];
 307:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __IO uint32_t ICER[8];                 /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 308:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****        uint32_t RSERVED1[24];
 309:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __IO uint32_t ISPR[8];                 /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register  
 310:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED2[24];
 311:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __IO uint32_t ICPR[8];                 /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 312:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED3[24];
 313:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __IO uint32_t IABR[8];                 /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register   
 314:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED4[56];
 315:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __IO uint8_t  IP[240];                 /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 316:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED5[644];
 317:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __O  uint32_t STIR;                    /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 318:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** }  NVIC_Type;
 319:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 320:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 321:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0                                          /*!< STIR: I
 322:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL << NVIC_STIR_INTID_Pos)            /*!< STIR: I
 323:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 324:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 325:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 326:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 327:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 328:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_SCB CMSIS SCB
 329:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   Type definitions for the Cortex-M System Control Block Registers
 330:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   @{
 331:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  */
 332:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 333:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the System Control Block (SCB).
 334:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  */
 335:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** typedef struct
 336:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** {
 337:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __I  uint32_t CPUID;                   /*!< Offset: 0x000 (R/ )  CPUID Base Register             
 338:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __IO uint32_t ICSR;                    /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 339:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __IO uint32_t VTOR;                    /*!< Offset: 0x008 (R/W)  Vector Table Offset Register    
 340:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __IO uint32_t AIRCR;                   /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 341:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __IO uint32_t SCR;                     /*!< Offset: 0x010 (R/W)  System Control Register         
 342:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __IO uint32_t CCR;                     /*!< Offset: 0x014 (R/W)  Configuration Control Register  
 343:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __IO uint8_t  SHP[12];                 /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 344:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __IO uint32_t SHCSR;                   /*!< Offset: 0x024 (R/W)  System Handler Control and State
 345:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __IO uint32_t CFSR;                    /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 346:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __IO uint32_t HFSR;                    /*!< Offset: 0x02C (R/W)  HardFault Status Register       
 347:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __IO uint32_t DFSR;                    /*!< Offset: 0x030 (R/W)  Debug Fault Status Register     
 348:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __IO uint32_t MMFAR;                   /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 349:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __IO uint32_t BFAR;                    /*!< Offset: 0x038 (R/W)  BusFault Address Register       
 350:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __IO uint32_t AFSR;                    /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 351:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __I  uint32_t PFR[2];                  /*!< Offset: 0x040 (R/ )  Processor Feature Register      
 352:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __I  uint32_t DFR;                     /*!< Offset: 0x048 (R/ )  Debug Feature Register          
 353:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __I  uint32_t ADR;                     /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register      
 354:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __I  uint32_t MMFR[4];                 /*!< Offset: 0x050 (R/ )  Memory Model Feature Register   
 355:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __I  uint32_t ISAR[5];                 /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 356:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED0[5];
 357:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __IO uint32_t CPACR;                   /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 358:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** } SCB_Type;
 359:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 360:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /* SCB CPUID Register Definitions */
 361:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 362:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 363:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 364:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 365:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 366:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 367:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16                                             /*!< SCB 
 368:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 369:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 370:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 371:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 372:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 373:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 374:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 375:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 376:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 377:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 378:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 379:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 380:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 381:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 382:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 383:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 384:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 385:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 386:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 387:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 388:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 389:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 390:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 391:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 392:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 393:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 394:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 395:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 396:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 397:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 398:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 399:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 400:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 401:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 402:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 403:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 404:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 405:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 406:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 407:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 408:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 409:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 410:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 411:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 412:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 413:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 414:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 415:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 416:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 417:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 418:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 419:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 420:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 421:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 422:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 423:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 424:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 425:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 426:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 427:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 428:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 429:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 430:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 431:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 432:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 433:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /* SCB System Control Register Definitions */
 434:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 435:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 436:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 437:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 438:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 439:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 440:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 441:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 442:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 443:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 444:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 445:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 446:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 447:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 448:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 449:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 450:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 451:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 452:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 453:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 454:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 455:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 456:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 457:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 458:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 459:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 460:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 461:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 462:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 463:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 464:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 465:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 466:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 467:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 468:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 469:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 470:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 471:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 472:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 473:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 474:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 475:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 476:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 477:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 478:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 479:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 480:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 481:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 482:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 483:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 484:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 485:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 486:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 487:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 488:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 489:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 490:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 491:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 492:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 493:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 494:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 495:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 496:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 497:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 498:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 499:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 500:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 501:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 502:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 503:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 504:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 505:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /* SCB Configurable Fault Status Registers Definitions */
 506:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 507:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 508:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 509:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 510:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 511:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 512:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 513:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 514:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 515:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /* SCB Hard Fault Status Registers Definitions */
 516:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 517:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 518:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 519:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 520:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 521:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 522:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 523:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 524:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 525:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 526:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 527:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 528:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 529:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 530:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 531:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 532:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 533:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 534:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 535:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 536:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 537:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 538:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 539:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 540:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 541:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCB */
 542:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 543:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 544:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 545:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_SCnSCB CMSIS System Control and ID Register not in the SCB
 546:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   Type definitions for the Cortex-M System Control and ID Register not in the SCB
 547:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   @{
 548:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  */
 549:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 550:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the System Control and ID Register not in the SCB.
 551:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  */
 552:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** typedef struct
 553:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** {
 554:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED0[1];
 555:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __I  uint32_t ICTR;                    /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 556:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __IO uint32_t ACTLR;                   /*!< Offset: 0x008 (R/W)  Auxiliary Control Register      
 557:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** } SCnSCB_Type;
 558:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 559:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 560:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0                                          /*!< ICTR: I
 561:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL << SCnSCB_ICTR_INTLINESNUM_Pos)      /*!< ICTR: I
 562:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 563:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /* Auxiliary Control Register Definitions */
 564:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9                                          /*!< ACTLR: 
 565:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 566:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 567:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8                                          /*!< ACTLR: 
 568:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 569:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 570:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2                                          /*!< ACTLR: 
 571:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 572:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 573:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1                                          /*!< ACTLR: 
 574:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 575:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 576:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0                                          /*!< ACTLR: 
 577:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL << SCnSCB_ACTLR_DISMCYCINT_Pos)        /*!< ACTLR: 
 578:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 579:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 580:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 581:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 582:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 583:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_SysTick CMSIS SysTick
 584:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   Type definitions for the Cortex-M System Timer Registers
 585:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   @{
 586:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  */
 587:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 588:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the System Timer (SysTick).
 589:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  */
 590:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** typedef struct
 591:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** {
 592:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 593:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __IO uint32_t LOAD;                    /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register   
 594:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __IO uint32_t VAL;                     /*!< Offset: 0x008 (R/W)  SysTick Current Value Register  
 595:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __I  uint32_t CALIB;                   /*!< Offset: 0x00C (R/ )  SysTick Calibration Register    
 596:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** } SysTick_Type;
 597:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 598:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 599:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 600:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 601:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 602:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 603:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 604:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 605:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 606:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 607:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 608:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 609:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 610:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 611:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /* SysTick Reload Register Definitions */
 612:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 613:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 614:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 615:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /* SysTick Current Register Definitions */
 616:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 617:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 618:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 619:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /* SysTick Calibration Register Definitions */
 620:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 621:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 622:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 623:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 624:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 625:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 626:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 627:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 628:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 629:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 630:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 631:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 632:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 633:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_ITM CMSIS ITM
 634:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   Type definitions for the Cortex-M Instrumentation Trace Macrocell (ITM)
 635:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   @{
 636:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  */
 637:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 638:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 639:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  */
 640:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** typedef struct
 641:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** {
 642:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __O  union
 643:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   {
 644:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     __O  uint8_t    u8;                  /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit         
 645:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     __O  uint16_t   u16;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit        
 646:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     __O  uint32_t   u32;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit        
 647:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   }  PORT [32];                          /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers     
 648:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED0[864];
 649:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __IO uint32_t TER;                     /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register       
 650:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED1[15];
 651:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __IO uint32_t TPR;                     /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register    
 652:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED2[15];
 653:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __IO uint32_t TCR;                     /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register      
 654:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** } ITM_Type;
 655:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 656:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 657:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0                                          /*!< ITM TPR
 658:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL << ITM_TPR_PRIVMASK_Pos)             /*!< ITM TPR
 659:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 660:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /* ITM Trace Control Register Definitions */
 661:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23                                          /*!< ITM TCR
 662:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                   /*!< ITM TCR
 663:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 664:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16                                          /*!< ITM TCR
 665:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)          /*!< ITM TCR
 666:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 667:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10                                          /*!< ITM TCR
 668:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                /*!< ITM TCR
 669:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 670:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8                                          /*!< ITM TCR
 671:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)             /*!< ITM TCR
 672:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 673:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4                                          /*!< ITM TCR
 674:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                 /*!< ITM TCR
 675:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 676:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TXENA_Pos                   3                                          /*!< ITM TCR
 677:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TXENA_Msk                  (1UL << ITM_TCR_TXENA_Pos)                  /*!< ITM TCR
 678:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 679:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2                                          /*!< ITM TCR
 680:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                /*!< ITM TCR
 681:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 682:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1                                          /*!< ITM TCR
 683:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                  /*!< ITM TCR
 684:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 685:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0                                          /*!< ITM TCR
 686:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL << ITM_TCR_ITMENA_Pos)                 /*!< ITM TCR
 687:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 688:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 689:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 690:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 691:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #if (__MPU_PRESENT == 1)
 692:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 693:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_MPU CMSIS MPU
 694:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   Type definitions for the Cortex-M Memory Protection Unit (MPU)
 695:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   @{
 696:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  */
 697:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 698:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the Memory Protection Unit (MPU).
 699:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  */
 700:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** typedef struct
 701:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** {
 702:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __I  uint32_t TYPE;                    /*!< Offset: 0x000 (R/ )  MPU Type Register               
 703:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x004 (R/W)  MPU Control Register            
 704:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __IO uint32_t RNR;                     /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register      
 705:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __IO uint32_t RBAR;                    /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
 706:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __IO uint32_t RASR;                    /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
 707:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __IO uint32_t RBAR_A1;                 /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
 708:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __IO uint32_t RASR_A1;                 /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
 709:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __IO uint32_t RBAR_A2;                 /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
 710:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __IO uint32_t RASR_A2;                 /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
 711:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __IO uint32_t RBAR_A3;                 /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
 712:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __IO uint32_t RASR_A3;                 /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
 713:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** } MPU_Type;
 714:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 715:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /* MPU Type Register */
 716:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
 717:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
 718:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 719:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
 720:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 721:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 722:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
 723:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
 724:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 725:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /* MPU Control Register */
 726:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
 727:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 728:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 729:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
 730:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 731:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 732:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
 733:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
 734:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 735:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /* MPU Region Number Register */
 736:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
 737:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL << MPU_RNR_REGION_Pos)                 /*!< MPU 
 738:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 739:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /* MPU Region Base Address Register */
 740:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
 741:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
 742:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 743:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
 744:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
 745:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 746:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
 747:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL << MPU_RBAR_REGION_Pos)                 /*!< MPU 
 748:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 749:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /* MPU Region Attribute and Size Register */
 750:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16                                             /*!< MPU 
 751:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
 752:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 753:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
 754:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
 755:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 756:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
 757:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
 758:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 759:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0                                             /*!< MPU 
 760:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL << MPU_RASR_ENABLE_Pos)                   /*!< MPU 
 761:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 762:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_MPU */
 763:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #endif
 764:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 765:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 766:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #if (__FPU_PRESENT == 1)
 767:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 768:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_FPU CMSIS FPU
 769:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   Type definitions for the Cortex-M Floating Point Unit (FPU)
 770:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   @{
 771:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  */
 772:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 773:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the Floating Point Unit (FPU).
 774:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  */
 775:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** typedef struct
 776:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** {
 777:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED0[1];
 778:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __IO uint32_t FPCCR;                   /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
 779:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __IO uint32_t FPCAR;                   /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
 780:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __IO uint32_t FPDSCR;                  /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
 781:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __I  uint32_t MVFR0;                   /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
 782:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __I  uint32_t MVFR1;                   /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
 783:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** } FPU_Type;
 784:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 785:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Control Register */
 786:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31                                             /*!< FPCC
 787:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
 788:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 789:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30                                             /*!< FPCC
 790:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
 791:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 792:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8                                             /*!< FPCC
 793:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
 794:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 795:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6                                             /*!< FPCC
 796:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
 797:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 798:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5                                             /*!< FPCC
 799:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
 800:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 801:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4                                             /*!< FPCC
 802:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
 803:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 804:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3                                             /*!< FPCC
 805:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
 806:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 807:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1                                             /*!< FPCC
 808:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
 809:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 810:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0                                             /*!< FPCC
 811:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL << FPU_FPCCR_LSPACT_Pos)                  /*!< FPCC
 812:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 813:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Address Register */
 814:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3                                             /*!< FPCA
 815:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
 816:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 817:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /* Floating-Point Default Status Control Register */
 818:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26                                             /*!< FPDS
 819:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
 820:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 821:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25                                             /*!< FPDS
 822:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
 823:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 824:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24                                             /*!< FPDS
 825:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
 826:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 827:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22                                             /*!< FPDS
 828:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
 829:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 830:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 0 */
 831:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28                                             /*!< MVFR
 832:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
 833:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 834:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24                                             /*!< MVFR
 835:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
 836:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 837:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20                                             /*!< MVFR
 838:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
 839:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 840:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16                                             /*!< MVFR
 841:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
 842:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 843:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12                                             /*!< MVFR
 844:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
 845:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 846:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8                                             /*!< MVFR
 847:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
 848:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 849:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4                                             /*!< MVFR
 850:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
 851:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 852:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0                                             /*!< MVFR
 853:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL << FPU_MVFR0_A_SIMD_registers_Pos)      /*!< MVFR
 854:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 855:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 1 */
 856:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28                                             /*!< MVFR
 857:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
 858:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 859:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24                                             /*!< MVFR
 860:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
 861:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 862:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4                                             /*!< MVFR
 863:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
 864:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 865:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0                                             /*!< MVFR
 866:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL << FPU_MVFR1_FtZ_mode_Pos)              /*!< MVFR
 867:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 868:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_FPU */
 869:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #endif
 870:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 871:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 872:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 873:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_CoreDebug CMSIS Core Debug
 874:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   Type definitions for the Cortex-M Core Debug Registers
 875:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   @{
 876:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  */
 877:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 878:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the Core Debug Register (CoreDebug).
 879:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  */
 880:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** typedef struct
 881:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** {
 882:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __IO uint32_t DHCSR;                   /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
 883:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __O  uint32_t DCRSR;                   /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
 884:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __IO uint32_t DCRDR;                   /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
 885:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __IO uint32_t DEMCR;                   /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
 886:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** } CoreDebug_Type;
 887:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 888:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /* Debug Halting Control and Status Register */
 889:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
 890:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
 891:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 892:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
 893:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
 894:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 895:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
 896:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
 897:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 898:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
 899:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
 900:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 901:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
 902:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
 903:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 904:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
 905:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
 906:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 907:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
 908:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
 909:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 910:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
 911:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
 912:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 913:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
 914:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
 915:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 916:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
 917:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
 918:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 919:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
 920:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
 921:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 922:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
 923:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
 924:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 925:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /* Debug Core Register Selector Register */
 926:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
 927:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
 928:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 929:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
 930:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
 931:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 932:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /* Debug Exception and Monitor Control Register */
 933:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
 934:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
 935:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 936:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
 937:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
 938:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 939:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
 940:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
 941:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 942:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
 943:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
 944:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 945:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
 946:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
 947:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 948:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
 949:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
 950:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 951:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
 952:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
 953:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 954:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
 955:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
 956:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 957:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
 958:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
 959:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 960:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
 961:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
 962:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 963:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
 964:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
 965:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 966:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
 967:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
 968:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 969:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
 970:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
 971:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 972:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
 973:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 974:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 975:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 976:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   @{
 977:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  */
 978:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 979:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /* Memory mapping of Cortex-M4 Hardware */
 980:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
 981:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address        
 982:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
 983:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address    
 984:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address       
 985:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
 986:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 987:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
 988:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
 989:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
 990:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
 991:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
 992:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
 993:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 994:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #if (__MPU_PRESENT == 1)
 995:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit  
 996:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit  
 997:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #endif
 998:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
 999:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #if (__FPU_PRESENT == 1)
1000:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   #define FPU_BASE          (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit     
1001:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   #define FPU               ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit     
1002:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** #endif
1003:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1004:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /*@} */
1005:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1006:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1007:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1008:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /*******************************************************************************
1009:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  *                Hardware Abstraction Layer
1010:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
1011:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /** \defgroup CMSIS_Core_FunctionInterface CMSIS Core Function Interface
1012:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   Core Function Interface contains:
1013:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   - Core NVIC Functions
1014:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   - Core SysTick Functions
1015:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   - Core Debug Functions
1016:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   - Core Register Access Functions
1017:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** */
1018:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1019:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1020:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1021:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1022:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_Core_FunctionInterface
1023:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_Core_NVICFunctions CMSIS Core NVIC Functions
1024:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   @{
1025:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  */
1026:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1027:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /** \brief  Set Priority Grouping
1028:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1029:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   This function sets the priority grouping field using the required unlock sequence.
1030:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1031:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   Only values from 0..7 are used.
1032:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   In case of a conflict between priority grouping and available
1033:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1034:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1035:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     \param [in]      PriorityGroup  Priority grouping field
1036:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  */
1037:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** static __INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1038:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** {
1039:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   uint32_t reg_value;
1040:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07);               /* only values 0..7 a
1041:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1042:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1043:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to chan
1044:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   reg_value  =  (reg_value                                 |
1045:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****                 ((uint32_t)0x5FA << SCB_AIRCR_VECTKEY_Pos) |
1046:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****                 (PriorityGroupTmp << 8));                                     /* Insert write key a
1047:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   SCB->AIRCR =  reg_value;
1048:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** }
1049:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1050:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1051:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /** \brief  Get Priority Grouping
1052:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1053:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   This function gets the priority grouping from NVIC Interrupt Controller.
1054:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   Priority grouping is SCB->AIRCR [10:8] PRIGROUP field.
1055:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1056:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     \return                Priority grouping field
1057:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  */
1058:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** static __INLINE uint32_t NVIC_GetPriorityGrouping(void)
1059:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** {
1060:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   return ((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos);   /* read priority grou
1061:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** }
1062:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1063:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1064:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /** \brief  Enable External Interrupt
1065:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1066:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     This function enables a device specific interrupt in the NVIC interrupt controller.
1067:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     The interrupt number cannot be a negative value.
1068:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1069:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     \param [in]      IRQn  Number of the external interrupt to enable
1070:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  */
1071:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1072:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** {
1073:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /*  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));  enable interrupt */
1074:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32
1075:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** }
1076:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1077:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1078:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /** \brief  Disable External Interrupt
1079:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1080:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     This function disables a device specific interrupt in the NVIC interrupt controller.
1081:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     The interrupt number cannot be a negative value.
1082:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1083:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     \param [in]      IRQn  Number of the external interrupt to disable
1084:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  */
1085:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** static __INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1086:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** {
1087:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
1088:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** }
1089:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1090:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1091:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /** \brief  Get Pending Interrupt
1092:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1093:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     This function reads the pending register in the NVIC and returns the pending bit
1094:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     for the specified interrupt.
1095:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1096:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     \param [in]      IRQn  Number of the interrupt for get pending
1097:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     \return             0  Interrupt status is not pending
1098:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     \return             1  Interrupt status is pending
1099:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  */
1100:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** static __INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1101:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** {
1102:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   return((uint32_t) ((NVIC->ISPR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); 
1103:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** }
1104:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1105:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1106:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /** \brief  Set Pending Interrupt
1107:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1108:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     This function sets the pending bit for the specified interrupt.
1109:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     The interrupt number cannot be a negative value.
1110:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1111:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     \param [in]      IRQn  Number of the interrupt for set pending
1112:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  */
1113:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** static __INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1114:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** {
1115:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   NVIC->ISPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* set interrupt pending 
1116:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** }
1117:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1118:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1119:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /** \brief  Clear Pending Interrupt
1120:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1121:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     This function clears the pending bit for the specified interrupt.
1122:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     The interrupt number cannot be a negative value.
1123:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1124:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     \param [in]      IRQn  Number of the interrupt for clear pending
1125:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  */
1126:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** static __INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1127:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** {
1128:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrup
1129:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** }
1130:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1131:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1132:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /** \brief  Get Active Interrupt
1133:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1134:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     This function reads the active register in NVIC and returns the active bit.
1135:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     \param [in]      IRQn  Number of the interrupt for get active
1136:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     \return             0  Interrupt status is not active
1137:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     \return             1  Interrupt status is active
1138:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  */
1139:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** static __INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1140:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** {
1141:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   return((uint32_t)((NVIC->IABR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); /
1142:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** }
1143:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1144:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1145:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /** \brief  Set Interrupt Priority
1146:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1147:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     This function sets the priority for the specified interrupt. The interrupt
1148:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     number can be positive to specify an external (device specific)
1149:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     interrupt, or negative to specify an internal (core) interrupt.
1150:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1151:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     Note: The priority cannot be set for every core interrupt.
1152:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1153:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     \param [in]      IRQn  Number of the interrupt for set priority
1154:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     \param [in]  priority  Priority to set
1155:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  */
1156:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** static __INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1157:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** {
1158:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   if(IRQn < 0) {
1159:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set 
1160:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   else {
1161:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set 
1162:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** }
1163:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1164:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1165:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /** \brief  Get Interrupt Priority
1166:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1167:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     This function reads the priority for the specified interrupt. The interrupt
1168:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     number can be positive to specify an external (device specific)
1169:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     interrupt, or negative to specify an internal (core) interrupt.
1170:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1171:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     The returned priority value is automatically aligned to the implemented
1172:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     priority bits of the microcontroller.
1173:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1174:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     \param [in]   IRQn  Number of the interrupt for get priority
1175:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     \return             Interrupt Priority
1176:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  */
1177:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** static __INLINE uint32_t NVIC_GetPriority(IRQn_Type IRQn)
1178:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** {
1179:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1180:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   if(IRQn < 0) {
1181:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     return((uint32_t)(SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] >> (8 - __NVIC_PRIO_BITS)));  } /* get p
1182:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   else {
1183:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     return((uint32_t)(NVIC->IP[(uint32_t)(IRQn)]           >> (8 - __NVIC_PRIO_BITS)));  } /* get p
1184:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** }
1185:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1186:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1187:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /** \brief  Encode Priority
1188:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1189:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     This function encodes the priority for an interrupt with the given priority group,
1190:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     preemptive priority value and sub priority value.
1191:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     In case of a conflict between priority grouping and available
1192:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     priority bits (__NVIC_PRIO_BITS) the samllest possible priority group is set.
1193:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1194:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     The returned priority value can be used for NVIC_SetPriority(...) function
1195:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1196:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     \param [in]     PriorityGroup  Used priority group
1197:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     \param [in]   PreemptPriority  Preemptive priority value (starting from 0)
1198:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     \param [in]       SubPriority  Sub priority value (starting from 0)
1199:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     \return                        Encoded priority for the interrupt
1200:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  */
1201:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** static __INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1202:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** {
1203:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);          /* only values 0..7 are used        
1204:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
1205:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
1206:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1207:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   PreemptPriorityBits = ((7 - PriorityGroupTmp) > __NVIC_PRIO_BITS) ? __NVIC_PRIO_BITS : 7 - Priori
1208:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + __NVIC_PRIO_BITS) < 7) ? 0 : PriorityGroupTmp - 7 + __
1209:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1210:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   return (
1211:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****            ((PreemptPriority & ((1 << (PreemptPriorityBits)) - 1)) << SubPriorityBits) |
1212:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****            ((SubPriority     & ((1 << (SubPriorityBits    )) - 1)))
1213:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****          );
1214:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** }
1215:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1216:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1217:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /** \brief  Decode Priority
1218:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1219:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     This function decodes an interrupt priority value with the given priority group to
1220:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     preemptive priority value and sub priority value.
1221:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     In case of a conflict between priority grouping and available
1222:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     priority bits (__NVIC_PRIO_BITS) the samllest possible priority group is set.
1223:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1224:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     The priority value can be retrieved with NVIC_GetPriority(...) function
1225:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1226:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     \param [in]         Priority   Priority value
1227:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     \param [in]     PriorityGroup  Used priority group
1228:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     \param [out] pPreemptPriority  Preemptive priority value (starting from 0)
1229:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     \param [out]     pSubPriority  Sub priority value (starting from 0)
1230:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  */
1231:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** static __INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* pPre
1232:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** {
1233:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);          /* only values 0..7 are used        
1234:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
1235:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
1236:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1237:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   PreemptPriorityBits = ((7 - PriorityGroupTmp) > __NVIC_PRIO_BITS) ? __NVIC_PRIO_BITS : 7 - Priori
1238:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + __NVIC_PRIO_BITS) < 7) ? 0 : PriorityGroupTmp - 7 + __
1239:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1240:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & ((1 << (PreemptPriorityBits)) - 1);
1241:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & ((1 << (SubPriorityBits    )) - 1);
1242:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** }
1243:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1244:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1245:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** /** \brief  System Reset
1246:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** 
1247:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****     This function initiate a system reset request to reset the MCU.
1248:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****  */
1249:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** static __INLINE void NVIC_SystemReset(void)
1250:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h **** {
1251:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   __DSB();                                                     /* Ensure all outstanding memory acc
1252:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****                                                                   buffered write are completed befo
1253:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****   SCB->AIRCR  = ((0x5FA << SCB_AIRCR_VECTKEY_Pos)      |
1254:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****                  (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
1255:/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h ****                  SCB_AIRCR_SYSRESETREQ_Msk);                   /* Keep priority group unchanged */
  48              		.loc 3 1255 0
  49 0004 044A     		ldr	r2, .L4
  50 0006 054B     		ldr	r3, .L4+4
  51 0008 D168     		ldr	r1, [r2, #12]
  52              	.LVL1:
  53 000a 01F4E061 		and	r1, r1, #1792
  54 000e 0B43     		orrs	r3, r3, r1
  55 0010 D360     		str	r3, [r2, #12]
  56              	.LBB574:
  57              	.LBB575:
  58              		.loc 2 326 0
  59              	@ 326 "/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cmInstr.h" 1
  60 0012 BFF34F8F 		dsb
  61              	@ 0 "" 2
  62              		.thumb
  63              	.L2:
  64 0016 FEE7     		b	.L2
  65              	.L5:
  66              		.align	2
  67              	.L4:
  68 0018 00ED00E0 		.word	-536810240
  69 001c 0400FA05 		.word	100270084
  70              	.LBE575:
  71              	.LBE574:
  72              	.LBE571:
  73              	.LBE570:
  74              		.cfi_endproc
  75              	.LFE1040:
  77              		.section	.text._ZN8Handlers19pausePatternHandlerEPKci,"axG",%progbits,_ZN8Handlers19pausePatternHa
  78              		.align	2
  79              		.weak	_ZN8Handlers19pausePatternHandlerEPKci
  80              		.thumb
  81              		.thumb_func
  83              	_ZN8Handlers19pausePatternHandlerEPKci:
  84              	.LFB1041:
 137:commandHandlers.h **** 	(void) cmd;
 138:commandHandlers.h **** 	(void) length;
 139:commandHandlers.h **** 	NVIC_SystemReset();
 140:commandHandlers.h **** 	return true;
 141:commandHandlers.h **** }
 142:commandHandlers.h **** 
 143:commandHandlers.h **** static bool pausePatternHandler(const char* cmd, int length){
  85              		.loc 1 143 0
  86              		.cfi_startproc
  87              		@ args = 0, pretend = 0, frame = 0
  88              		@ frame_needed = 0, uses_anonymous_args = 0
  89              		@ link register save eliminated.
  90              	.LVL2:
  91              	.LBB576:
  92              	.LBB577:
  93              		.file 4 "pattern.h"
   1:pattern.h     **** /*
   2:pattern.h     ****  * pattern.h
   3:pattern.h     ****  *
   4:pattern.h     ****  *  Created on: Jan 18, 2014
   5:pattern.h     ****  *      Author: jonas
   6:pattern.h     ****  */
   7:pattern.h     **** 
   8:pattern.h     **** #ifndef PATTERN_H_
   9:pattern.h     **** #define PATTERN_H_
  10:pattern.h     **** 
  11:pattern.h     **** #include "control.h"
  12:pattern.h     **** #include "project.h"
  13:pattern.h     **** #include "state.h"
  14:pattern.h     **** #include "pcInterface.h"
  15:pattern.h     **** 
  16:pattern.h     **** class QuadrangleZigZag;
  17:pattern.h     **** 
  18:pattern.h     **** class Pattern{
  19:pattern.h     **** 	static void (*func)(void);
  20:pattern.h     **** 	static bool running;
  21:pattern.h     **** 	static bool paused;
  22:pattern.h     **** public:
  23:pattern.h     **** 	template<class T>
  24:pattern.h     **** 	static void setPattern(T pattern, float maxSpeed = 1){
  25:pattern.h     **** 		(void)pattern;
  26:pattern.h     **** 		//Control<ALL>::setMaxSpeed(maxSpeed);
  27:pattern.h     **** 		func = &T::sample;
  28:pattern.h     **** 	}
  29:pattern.h     **** 	static void follow(){
  30:pattern.h     **** 		if(!running || func == 0){
  31:pattern.h     **** 			return;
  32:pattern.h     **** 		}
  33:pattern.h     **** 		func();
  34:pattern.h     **** 	}
  35:pattern.h     **** 	static void pause(){
  36:pattern.h     **** 		running = false;
  94              		.loc 4 36 0
  95 0000 034B     		ldr	r3, .L7
  96 0002 0022     		movs	r2, #0
  97 0004 1A70     		strb	r2, [r3, #0]
  37:pattern.h     **** 		paused = true;
  98              		.loc 4 37 0
  99 0006 034B     		ldr	r3, .L7+4
 100 0008 0120     		movs	r0, #1
 101              	.LVL3:
 102 000a 1870     		strb	r0, [r3, #0]
 103              	.LBE577:
 104              	.LBE576:
 144:commandHandlers.h **** 	(void) cmd;
 145:commandHandlers.h **** 	(void) length;
 146:commandHandlers.h **** 	Pattern::pause();
 147:commandHandlers.h **** 	return true;
 148:commandHandlers.h **** }
 105              		.loc 1 148 0
 106 000c 7047     		bx	lr
 107              	.L8:
 108 000e 00BF     		.align	2
 109              	.L7:
 110 0010 00000000 		.word	_ZN7Pattern7runningE
 111 0014 00000000 		.word	_ZN7Pattern6pausedE
 112              		.cfi_endproc
 113              	.LFE1041:
 115              		.section	.text._ZN8Handlers20resumePatternHandlerEPKci,"axG",%progbits,_ZN8Handlers20resumePattern
 116              		.align	2
 117              		.weak	_ZN8Handlers20resumePatternHandlerEPKci
 118              		.thumb
 119              		.thumb_func
 121              	_ZN8Handlers20resumePatternHandlerEPKci:
 122              	.LFB1042:
 149:commandHandlers.h **** 
 150:commandHandlers.h **** static bool resumePatternHandler(const char* cmd, int length){
 123              		.loc 1 150 0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 0
 126              		@ frame_needed = 0, uses_anonymous_args = 0
 127              		@ link register save eliminated.
 128              	.LVL4:
 129              	.LBB578:
 130              	.LBB579:
  38:pattern.h     **** 	}
  39:pattern.h     **** 	static void start(){
  40:pattern.h     **** 		running = true;
  41:pattern.h     **** 		paused = false;
  42:pattern.h     **** 		State::set(State::SCANNING_RECTANGLE);
  43:pattern.h     **** 		dout << "Pattern start" << endl;
  44:pattern.h     **** 		commandOut << PC::ucCommand::FLUSH_DATA << endl;
  45:pattern.h     **** 	}
  46:pattern.h     **** 	static void resume(){
  47:pattern.h     **** 		running = true;
 131              		.loc 4 47 0
 132 0000 034B     		ldr	r3, .L10
 133 0002 0120     		movs	r0, #1
 134              	.LVL5:
 135 0004 1870     		strb	r0, [r3, #0]
  48:pattern.h     **** 		/*if(!paused){
  49:pattern.h     **** 			start();
  50:pattern.h     **** 		}*/
  51:pattern.h     **** 		paused = false;
 136              		.loc 4 51 0
 137 0006 034B     		ldr	r3, .L10+4
 138 0008 0022     		movs	r2, #0
 139 000a 1A70     		strb	r2, [r3, #0]
 140              	.LBE579:
 141              	.LBE578:
 151:commandHandlers.h **** 	(void) cmd;
 152:commandHandlers.h **** 	(void) length;
 153:commandHandlers.h **** 	Pattern::resume();
 154:commandHandlers.h **** 	return true;
 155:commandHandlers.h **** }
 142              		.loc 1 155 0
 143 000c 7047     		bx	lr
 144              	.L11:
 145 000e 00BF     		.align	2
 146              	.L10:
 147 0010 00000000 		.word	_ZN7Pattern7runningE
 148 0014 00000000 		.word	_ZN7Pattern6pausedE
 149              		.cfi_endproc
 150              	.LFE1042:
 152              		.section	.text._ZN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEED2Ev,"axG",%progbits,_ZN4xpc
 153              		.align	2
 154              		.weak	_ZN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEED2Ev
 155              		.thumb
 156              		.thumb_func
 158              	_ZN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEED2Ev:
 159              	.LFB1157:
 160              		.file 5 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp"
   1:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** // coding: utf-8
   2:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** // ----------------------------------------------------------------------------
   3:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** /* Copyright (c) 2009, Roboterclub Aachen e.V.
   4:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp ****  * All rights reserved.
   5:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp ****  *
   6:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp ****  * Redistribution and use in source and binary forms, with or without
   7:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp ****  * modification, are permitted provided that the following conditions are met:
   8:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp ****  * 
   9:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp ****  *     * Redistributions of source code must retain the above copyright
  10:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp ****  *       notice, this list of conditions and the following disclaimer.
  11:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp ****  *     * Redistributions in binary form must reproduce the above copyright
  12:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp ****  *       notice, this list of conditions and the following disclaimer in the
  13:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp ****  *       documentation and/or other materials provided with the distribution.
  14:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp ****  *     * Neither the name of the Roboterclub Aachen e.V. nor the
  15:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp ****  *       names of its contributors may be used to endorse or promote products
  16:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp ****  *       derived from this software without specific prior written permission.
  17:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp ****  *
  18:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp ****  * THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
  19:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp ****  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  20:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  21:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp ****  * DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
  22:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  23:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  24:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  25:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  26:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  27:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  28:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp ****  */
  29:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** // ----------------------------------------------------------------------------
  30:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 
  31:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** #ifndef XPCC__IODEVICE_WRAPPER_HPP
  32:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** #define XPCC__IODEVICE_WRAPPER_HPP
  33:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** #include <stdint.h>
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 
  36:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** #include "iodevice.hpp"
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** namespace xpcc
  39:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** {
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	/**
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	 * \brief		Wrapper to use any peripheral device that supports static
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	 * 				put() and get() as an IODevice
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	 * 
  44:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	 * \tparam		T	Peripheral which should be wrapped
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	 * 
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	 * Example:
  47:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	 * \code
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	 * // configure a UART
  49:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	 * xpcc::BufferedUart0 uart(9600);
  50:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	 * 
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	 * // wrap it into an IODevice
  52:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	 * xpcc::IODeviceWrapper<xpcc::BufferedUart0> device(uart);
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	 * 
  54:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	 * // use this device to print a message
  55:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	 * device.write("Hello");
  56:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	 * 
  57:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	 * // or create a IOStream and use the stream to print something
  58:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	 * xpcc::IOStream stream(device);
  59:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	 * stream << " World!";
  60:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	 * \endcode
  61:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	 * 
  62:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	 * \ingroup		io
  63:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	 */
  64:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	template<typename T>
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	class IODeviceWrapper : public IODevice
 161              		.loc 5 65 0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165              		@ link register save eliminated.
 166              	.LVL6:
 167              	.LBB580:
 168              	.LBB581:
 169              	.LBB582:
 170              		.file 6 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp"
   1:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp **** // coding: utf-8
   2:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp **** // ----------------------------------------------------------------------------
   3:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp **** /* Copyright (c) 2009, Roboterclub Aachen e.V.
   4:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp ****  * All rights reserved.
   5:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp ****  *
   6:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp ****  * Redistribution and use in source and binary forms, with or without
   7:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp ****  * modification, are permitted provided that the following conditions are met:
   8:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp ****  * 
   9:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp ****  *     * Redistributions of source code must retain the above copyright
  10:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp ****  *       notice, this list of conditions and the following disclaimer.
  11:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp ****  *     * Redistributions in binary form must reproduce the above copyright
  12:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp ****  *       notice, this list of conditions and the following disclaimer in the
  13:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp ****  *       documentation and/or other materials provided with the distribution.
  14:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp ****  *     * Neither the name of the Roboterclub Aachen e.V. nor the
  15:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp ****  *       names of its contributors may be used to endorse or promote products
  16:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp ****  *       derived from this software without specific prior written permission.
  17:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp ****  *
  18:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp ****  * THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
  19:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp ****  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  20:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  21:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp ****  * DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
  22:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  23:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  24:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  25:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  26:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  27:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  28:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp ****  */
  29:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp **** // ----------------------------------------------------------------------------
  30:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp **** 
  31:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp **** #ifndef XPCC__IODEVICE_HPP
  32:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp **** #define XPCC__IODEVICE_HPP
  33:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp **** 
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp **** namespace xpcc
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp **** {
  36:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp **** 	/**
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp **** 	 * \brief 	Abstract calls of io-devices
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp **** 	 *
  39:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp **** 	 * \ingroup io
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp **** 	 * \author	Martin Rosekeit <martin.rosekeit@rwth-aachen.de>
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp **** 	 */
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp **** 	class IODevice
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp **** 	{
  44:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp **** 	public :
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp **** 		IODevice()
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp **** 		{
  47:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp **** 		}
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp **** 		
  49:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp **** 		virtual
  50:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp **** 		~IODevice()
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp **** 		{
 171              		.loc 6 51 0
 172 0000 014B     		ldr	r3, .L13
 173 0002 0360     		str	r3, [r0, #0]
 174              	.LBE582:
 175              	.LBE581:
 176              	.LBE580:
 177              		.loc 5 65 0
 178 0004 7047     		bx	lr
 179              	.L14:
 180 0006 00BF     		.align	2
 181              	.L13:
 182 0008 08000000 		.word	_ZTVN4xpcc8IODeviceE+8
 183              		.cfi_endproc
 184              	.LFE1157:
 186              		.weak	_ZN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEED1Ev
 187              		.thumb_set _ZN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEED1Ev,_ZN4xpcc15IODeviceWrapperI6
 188              		.section	.text._ZN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEED2Ev,"axG",%progbits,_ZN4xpc
 189              		.align	2
 190              		.weak	_ZN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEED2Ev
 191              		.thumb
 192              		.thumb_func
 194              	_ZN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEED2Ev:
 195              	.LFB1161:
 196              		.loc 5 65 0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200              		@ link register save eliminated.
 201              	.LVL7:
 202              	.LBB583:
 203              	.LBB584:
 204              	.LBB585:
 205              		.loc 6 51 0
 206 0000 014B     		ldr	r3, .L16
 207 0002 0360     		str	r3, [r0, #0]
 208              	.LBE585:
 209              	.LBE584:
 210              	.LBE583:
 211              		.loc 5 65 0
 212 0004 7047     		bx	lr
 213              	.L17:
 214 0006 00BF     		.align	2
 215              	.L16:
 216 0008 08000000 		.word	_ZTVN4xpcc8IODeviceE+8
 217              		.cfi_endproc
 218              	.LFE1161:
 220              		.weak	_ZN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEED1Ev
 221              		.thumb_set _ZN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEED1Ev,_ZN4xpcc15IODeviceWrapperI6
 222              		.section	.text._ZN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEED2Ev,"axG",%progbits,_ZN4xpc
 223              		.align	2
 224              		.weak	_ZN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEED2Ev
 225              		.thumb
 226              		.thumb_func
 228              	_ZN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEED2Ev:
 229              	.LFB1165:
 230              		.loc 5 65 0
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 0
 233              		@ frame_needed = 0, uses_anonymous_args = 0
 234              		@ link register save eliminated.
 235              	.LVL8:
 236              	.LBB586:
 237              	.LBB587:
 238              	.LBB588:
 239              		.loc 6 51 0
 240 0000 014B     		ldr	r3, .L19
 241 0002 0360     		str	r3, [r0, #0]
 242              	.LBE588:
 243              	.LBE587:
 244              	.LBE586:
 245              		.loc 5 65 0
 246 0004 7047     		bx	lr
 247              	.L20:
 248 0006 00BF     		.align	2
 249              	.L19:
 250 0008 08000000 		.word	_ZTVN4xpcc8IODeviceE+8
 251              		.cfi_endproc
 252              	.LFE1165:
 254              		.weak	_ZN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEED1Ev
 255              		.thumb_set _ZN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEED1Ev,_ZN4xpcc15IODeviceWrapperI6
 256              		.section	.text._ZN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEED2Ev,"axG",%progbits,_ZN4xpc
 257              		.align	2
 258              		.weak	_ZN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEED2Ev
 259              		.thumb
 260              		.thumb_func
 262              	_ZN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEED2Ev:
 263              	.LFB1169:
 264              		.loc 5 65 0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 0
 267              		@ frame_needed = 0, uses_anonymous_args = 0
 268              		@ link register save eliminated.
 269              	.LVL9:
 270              	.LBB589:
 271              	.LBB590:
 272              	.LBB591:
 273              		.loc 6 51 0
 274 0000 014B     		ldr	r3, .L22
 275 0002 0360     		str	r3, [r0, #0]
 276              	.LBE591:
 277              	.LBE590:
 278              	.LBE589:
 279              		.loc 5 65 0
 280 0004 7047     		bx	lr
 281              	.L23:
 282 0006 00BF     		.align	2
 283              	.L22:
 284 0008 08000000 		.word	_ZTVN4xpcc8IODeviceE+8
 285              		.cfi_endproc
 286              	.LFE1169:
 288              		.weak	_ZN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEED1Ev
 289              		.thumb_set _ZN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEED1Ev,_ZN4xpcc15IODeviceWrapperI6
 290              		.section	.text._ZN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEED2Ev,"axG",%progbits,_ZN4xpc
 291              		.align	2
 292              		.weak	_ZN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEED2Ev
 293              		.thumb
 294              		.thumb_func
 296              	_ZN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEED2Ev:
 297              	.LFB1173:
 298              		.loc 5 65 0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 0
 301              		@ frame_needed = 0, uses_anonymous_args = 0
 302              		@ link register save eliminated.
 303              	.LVL10:
 304              	.LBB592:
 305              	.LBB593:
 306              	.LBB594:
 307              		.loc 6 51 0
 308 0000 014B     		ldr	r3, .L25
 309 0002 0360     		str	r3, [r0, #0]
 310              	.LBE594:
 311              	.LBE593:
 312              	.LBE592:
 313              		.loc 5 65 0
 314 0004 7047     		bx	lr
 315              	.L26:
 316 0006 00BF     		.align	2
 317              	.L25:
 318 0008 08000000 		.word	_ZTVN4xpcc8IODeviceE+8
 319              		.cfi_endproc
 320              	.LFE1173:
 322              		.weak	_ZN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEED1Ev
 323              		.thumb_set _ZN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEED1Ev,_ZN4xpcc15IODeviceWrapperI6
 324              		.section	.text._ZN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEED2Ev,"axG",%progbits,_ZN4xpc
 325              		.align	2
 326              		.weak	_ZN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEED2Ev
 327              		.thumb
 328              		.thumb_func
 330              	_ZN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEED2Ev:
 331              	.LFB1177:
 332              		.loc 5 65 0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 0
 335              		@ frame_needed = 0, uses_anonymous_args = 0
 336              		@ link register save eliminated.
 337              	.LVL11:
 338              	.LBB595:
 339              	.LBB596:
 340              	.LBB597:
 341              		.loc 6 51 0
 342 0000 014B     		ldr	r3, .L28
 343 0002 0360     		str	r3, [r0, #0]
 344              	.LBE597:
 345              	.LBE596:
 346              	.LBE595:
 347              		.loc 5 65 0
 348 0004 7047     		bx	lr
 349              	.L29:
 350 0006 00BF     		.align	2
 351              	.L28:
 352 0008 08000000 		.word	_ZTVN4xpcc8IODeviceE+8
 353              		.cfi_endproc
 354              	.LFE1177:
 356              		.weak	_ZN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEED1Ev
 357              		.thumb_set _ZN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEED1Ev,_ZN4xpcc15IODeviceWrapperI6
 358              		.section	.text._ZN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEED2Ev,"axG",%progbits,_ZN4xpc
 359              		.align	2
 360              		.weak	_ZN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEED2Ev
 361              		.thumb
 362              		.thumb_func
 364              	_ZN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEED2Ev:
 365              	.LFB1181:
 366              		.loc 5 65 0
 367              		.cfi_startproc
 368              		@ args = 0, pretend = 0, frame = 0
 369              		@ frame_needed = 0, uses_anonymous_args = 0
 370              		@ link register save eliminated.
 371              	.LVL12:
 372              	.LBB598:
 373              	.LBB599:
 374              	.LBB600:
 375              		.loc 6 51 0
 376 0000 014B     		ldr	r3, .L31
 377 0002 0360     		str	r3, [r0, #0]
 378              	.LBE600:
 379              	.LBE599:
 380              	.LBE598:
 381              		.loc 5 65 0
 382 0004 7047     		bx	lr
 383              	.L32:
 384 0006 00BF     		.align	2
 385              	.L31:
 386 0008 08000000 		.word	_ZTVN4xpcc8IODeviceE+8
 387              		.cfi_endproc
 388              	.LFE1181:
 390              		.weak	_ZN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEED1Ev
 391              		.thumb_set _ZN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEED1Ev,_ZN4xpcc15IODeviceWrapperI6
 392              		.section	.text._ZN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EED2Ev,"axG",%progbits,_ZN4xpcc1
 393              		.align	2
 394              		.weak	_ZN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EED2Ev
 395              		.thumb
 396              		.thumb_func
 398              	_ZN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EED2Ev:
 399              	.LFB1185:
 400              		.loc 5 65 0
 401              		.cfi_startproc
 402              		@ args = 0, pretend = 0, frame = 0
 403              		@ frame_needed = 0, uses_anonymous_args = 0
 404              		@ link register save eliminated.
 405              	.LVL13:
 406              	.LBB601:
 407              	.LBB602:
 408              	.LBB603:
 409              		.loc 6 51 0
 410 0000 014B     		ldr	r3, .L34
 411 0002 0360     		str	r3, [r0, #0]
 412              	.LBE603:
 413              	.LBE602:
 414              	.LBE601:
 415              		.loc 5 65 0
 416 0004 7047     		bx	lr
 417              	.L35:
 418 0006 00BF     		.align	2
 419              	.L34:
 420 0008 08000000 		.word	_ZTVN4xpcc8IODeviceE+8
 421              		.cfi_endproc
 422              	.LFE1185:
 424              		.weak	_ZN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EED1Ev
 425              		.thumb_set _ZN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EED1Ev,_ZN4xpcc15IODeviceWrapperINS_
 426              		.section	.text._ZN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEE5flushEv,"axG",%progbits,_ZN
 427              		.align	2
 428              		.weak	_ZN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEE5flushEv
 429              		.thumb
 430              		.thumb_func
 432              	_ZN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEE5flushEv:
 433              	.LFB1191:
  66:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	{
  67:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	public:
  68:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		/**
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		 * \brief	Constructor
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		 *
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		 * \param	device	configured object
  72:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		 */
  73:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		IODeviceWrapper(const T& device)
  74:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		{
  75:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 			// get rid of the warning about an unused parameter
  76:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 			(void) device;
  77:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		}
  78:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		IODeviceWrapper()
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		{
  80:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		}
  81:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		
  82:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		virtual void
  83:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		write(char c)
  84:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		{
  85:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 			T::write(c);
  86:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		}
  87:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		
  88:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		virtual void
  89:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		write(const char *s)
  90:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		{
  91:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 			char c;
  92:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 			while ((c = *s++)) {
  93:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 				T::write(static_cast<uint8_t>(c));
  94:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 			}
  95:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		}
  96:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		
  97:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		virtual void
  98:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		flush()
 434              		.loc 5 98 0
 435              		.cfi_startproc
 436              		@ args = 0, pretend = 0, frame = 0
 437              		@ frame_needed = 0, uses_anonymous_args = 0
 438              		@ link register save eliminated.
 439              	.LVL14:
 440 0000 7047     		bx	lr
 441              		.cfi_endproc
 442              	.LFE1191:
 444 0002 00BF     		.section	.text._ZN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEE4readERc,"axG",%progbits,_ZN
 445              		.align	2
 446              		.weak	_ZN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEE4readERc
 447              		.thumb
 448              		.thumb_func
 450              	_ZN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEE4readERc:
 451              	.LFB1192:
  99:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		{
 100:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		}
 101:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		
 102:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		virtual bool
 103:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		read(char& c)
 452              		.loc 5 103 0
 453              		.cfi_startproc
 454              		@ args = 0, pretend = 0, frame = 0
 455              		@ frame_needed = 0, uses_anonymous_args = 0
 456              		@ link register save eliminated.
 457              	.LVL15:
 104:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		{
 105:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 			// FIXME
 106:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 			uint8_t t;
 107:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 			if (T::read(t)) {
 108:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 				c = t;
 109:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 				return true;
 110:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 			}
 111:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 			else {
 112:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 				return false;
 113:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 			}
 114:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		}
 458              		.loc 5 114 0
 459 0000 0020     		movs	r0, #0
 460              	.LVL16:
 461 0002 7047     		bx	lr
 462              		.cfi_endproc
 463              	.LFE1192:
 465              		.section	.text._ZN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEE5flushEv,"axG",%progbits,_ZN
 466              		.align	2
 467              		.weak	_ZN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEE5flushEv
 468              		.thumb
 469              		.thumb_func
 471              	_ZN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEE5flushEv:
 472              	.LFB1195:
  98:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		flush()
 473              		.loc 5 98 0
 474              		.cfi_startproc
 475              		@ args = 0, pretend = 0, frame = 0
 476              		@ frame_needed = 0, uses_anonymous_args = 0
 477              		@ link register save eliminated.
 478              	.LVL17:
 479 0000 7047     		bx	lr
 480              		.cfi_endproc
 481              	.LFE1195:
 483 0002 00BF     		.section	.text._ZN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEE4readERc,"axG",%progbits,_ZN
 484              		.align	2
 485              		.weak	_ZN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEE4readERc
 486              		.thumb
 487              		.thumb_func
 489              	_ZN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEE4readERc:
 490              	.LFB1196:
 103:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		read(char& c)
 491              		.loc 5 103 0
 492              		.cfi_startproc
 493              		@ args = 0, pretend = 0, frame = 0
 494              		@ frame_needed = 0, uses_anonymous_args = 0
 495              		@ link register save eliminated.
 496              	.LVL18:
 497              		.loc 5 114 0
 498 0000 0020     		movs	r0, #0
 499              	.LVL19:
 500 0002 7047     		bx	lr
 501              		.cfi_endproc
 502              	.LFE1196:
 504              		.section	.text._ZN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEE5flushEv,"axG",%progbits,_ZN
 505              		.align	2
 506              		.weak	_ZN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEE5flushEv
 507              		.thumb
 508              		.thumb_func
 510              	_ZN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEE5flushEv:
 511              	.LFB1199:
  98:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		flush()
 512              		.loc 5 98 0
 513              		.cfi_startproc
 514              		@ args = 0, pretend = 0, frame = 0
 515              		@ frame_needed = 0, uses_anonymous_args = 0
 516              		@ link register save eliminated.
 517              	.LVL20:
 518 0000 7047     		bx	lr
 519              		.cfi_endproc
 520              	.LFE1199:
 522 0002 00BF     		.section	.text._ZN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEE4readERc,"axG",%progbits,_ZN
 523              		.align	2
 524              		.weak	_ZN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEE4readERc
 525              		.thumb
 526              		.thumb_func
 528              	_ZN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEE4readERc:
 529              	.LFB1200:
 103:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		read(char& c)
 530              		.loc 5 103 0
 531              		.cfi_startproc
 532              		@ args = 0, pretend = 0, frame = 0
 533              		@ frame_needed = 0, uses_anonymous_args = 0
 534              		@ link register save eliminated.
 535              	.LVL21:
 536              		.loc 5 114 0
 537 0000 0020     		movs	r0, #0
 538              	.LVL22:
 539 0002 7047     		bx	lr
 540              		.cfi_endproc
 541              	.LFE1200:
 543              		.section	.text._ZN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEE5flushEv,"axG",%progbits,_ZN
 544              		.align	2
 545              		.weak	_ZN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEE5flushEv
 546              		.thumb
 547              		.thumb_func
 549              	_ZN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEE5flushEv:
 550              	.LFB1203:
  98:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		flush()
 551              		.loc 5 98 0
 552              		.cfi_startproc
 553              		@ args = 0, pretend = 0, frame = 0
 554              		@ frame_needed = 0, uses_anonymous_args = 0
 555              		@ link register save eliminated.
 556              	.LVL23:
 557 0000 7047     		bx	lr
 558              		.cfi_endproc
 559              	.LFE1203:
 561 0002 00BF     		.section	.text._ZN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEE4readERc,"axG",%progbits,_ZN
 562              		.align	2
 563              		.weak	_ZN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEE4readERc
 564              		.thumb
 565              		.thumb_func
 567              	_ZN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEE4readERc:
 568              	.LFB1204:
 103:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		read(char& c)
 569              		.loc 5 103 0
 570              		.cfi_startproc
 571              		@ args = 0, pretend = 0, frame = 0
 572              		@ frame_needed = 0, uses_anonymous_args = 0
 573              		@ link register save eliminated.
 574              	.LVL24:
 575              		.loc 5 114 0
 576 0000 0020     		movs	r0, #0
 577              	.LVL25:
 578 0002 7047     		bx	lr
 579              		.cfi_endproc
 580              	.LFE1204:
 582              		.section	.text._ZN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEE5flushEv,"axG",%progbits,_ZN
 583              		.align	2
 584              		.weak	_ZN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEE5flushEv
 585              		.thumb
 586              		.thumb_func
 588              	_ZN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEE5flushEv:
 589              	.LFB1207:
  98:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		flush()
 590              		.loc 5 98 0
 591              		.cfi_startproc
 592              		@ args = 0, pretend = 0, frame = 0
 593              		@ frame_needed = 0, uses_anonymous_args = 0
 594              		@ link register save eliminated.
 595              	.LVL26:
 596 0000 7047     		bx	lr
 597              		.cfi_endproc
 598              	.LFE1207:
 600 0002 00BF     		.section	.text._ZN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEE4readERc,"axG",%progbits,_ZN
 601              		.align	2
 602              		.weak	_ZN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEE4readERc
 603              		.thumb
 604              		.thumb_func
 606              	_ZN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEE4readERc:
 607              	.LFB1208:
 103:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		read(char& c)
 608              		.loc 5 103 0
 609              		.cfi_startproc
 610              		@ args = 0, pretend = 0, frame = 0
 611              		@ frame_needed = 0, uses_anonymous_args = 0
 612              		@ link register save eliminated.
 613              	.LVL27:
 614              		.loc 5 114 0
 615 0000 0020     		movs	r0, #0
 616              	.LVL28:
 617 0002 7047     		bx	lr
 618              		.cfi_endproc
 619              	.LFE1208:
 621              		.section	.text._ZN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEE5flushEv,"axG",%progbits,_ZN
 622              		.align	2
 623              		.weak	_ZN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEE5flushEv
 624              		.thumb
 625              		.thumb_func
 627              	_ZN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEE5flushEv:
 628              	.LFB1211:
  98:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		flush()
 629              		.loc 5 98 0
 630              		.cfi_startproc
 631              		@ args = 0, pretend = 0, frame = 0
 632              		@ frame_needed = 0, uses_anonymous_args = 0
 633              		@ link register save eliminated.
 634              	.LVL29:
 635 0000 7047     		bx	lr
 636              		.cfi_endproc
 637              	.LFE1211:
 639 0002 00BF     		.section	.text._ZN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEE4readERc,"axG",%progbits,_ZN
 640              		.align	2
 641              		.weak	_ZN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEE4readERc
 642              		.thumb
 643              		.thumb_func
 645              	_ZN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEE4readERc:
 646              	.LFB1212:
 103:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		read(char& c)
 647              		.loc 5 103 0
 648              		.cfi_startproc
 649              		@ args = 0, pretend = 0, frame = 0
 650              		@ frame_needed = 0, uses_anonymous_args = 0
 651              		@ link register save eliminated.
 652              	.LVL30:
 653              		.loc 5 114 0
 654 0000 0020     		movs	r0, #0
 655              	.LVL31:
 656 0002 7047     		bx	lr
 657              		.cfi_endproc
 658              	.LFE1212:
 660              		.section	.text._ZN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEE5flushEv,"axG",%progbits,_ZN
 661              		.align	2
 662              		.weak	_ZN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEE5flushEv
 663              		.thumb
 664              		.thumb_func
 666              	_ZN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEE5flushEv:
 667              	.LFB1215:
  98:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		flush()
 668              		.loc 5 98 0
 669              		.cfi_startproc
 670              		@ args = 0, pretend = 0, frame = 0
 671              		@ frame_needed = 0, uses_anonymous_args = 0
 672              		@ link register save eliminated.
 673              	.LVL32:
 674 0000 7047     		bx	lr
 675              		.cfi_endproc
 676              	.LFE1215:
 678 0002 00BF     		.section	.text._ZN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEE4readERc,"axG",%progbits,_ZN
 679              		.align	2
 680              		.weak	_ZN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEE4readERc
 681              		.thumb
 682              		.thumb_func
 684              	_ZN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEE4readERc:
 685              	.LFB1216:
 103:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		read(char& c)
 686              		.loc 5 103 0
 687              		.cfi_startproc
 688              		@ args = 0, pretend = 0, frame = 0
 689              		@ frame_needed = 0, uses_anonymous_args = 0
 690              		@ link register save eliminated.
 691              	.LVL33:
 692              		.loc 5 114 0
 693 0000 0020     		movs	r0, #0
 694              	.LVL34:
 695 0002 7047     		bx	lr
 696              		.cfi_endproc
 697              	.LFE1216:
 699              		.section	.text._ZN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EE5flushEv,"axG",%progbits,_ZN4x
 700              		.align	2
 701              		.weak	_ZN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EE5flushEv
 702              		.thumb
 703              		.thumb_func
 705              	_ZN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EE5flushEv:
 706              	.LFB1219:
  98:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		flush()
 707              		.loc 5 98 0
 708              		.cfi_startproc
 709              		@ args = 0, pretend = 0, frame = 0
 710              		@ frame_needed = 0, uses_anonymous_args = 0
 711              		@ link register save eliminated.
 712              	.LVL35:
 713 0000 7047     		bx	lr
 714              		.cfi_endproc
 715              	.LFE1219:
 717 0002 00BF     		.section	.text._ZN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EE4readERc,"axG",%progbits,_ZN4x
 718              		.align	2
 719              		.weak	_ZN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EE4readERc
 720              		.thumb
 721              		.thumb_func
 723              	_ZN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EE4readERc:
 724              	.LFB1220:
 103:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		read(char& c)
 725              		.loc 5 103 0
 726              		.cfi_startproc
 727              		@ args = 0, pretend = 0, frame = 8
 728              		@ frame_needed = 0, uses_anonymous_args = 0
 729              	.LVL36:
 103:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		read(char& c)
 730              		.loc 5 103 0
 731 0000 10B5     		push	{r4, lr}
 732              	.LCFI0:
 733              		.cfi_def_cfa_offset 8
 734              		.cfi_offset 4, -8
 735              		.cfi_offset 14, -4
 736 0002 82B0     		sub	sp, sp, #8
 737              	.LCFI1:
 738              		.cfi_def_cfa_offset 16
 739              	.LBB604:
 107:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 			if (T::read(t)) {
 740              		.loc 5 107 0
 741 0004 0DF10700 		add	r0, sp, #7
 742              	.LVL37:
 743 0008 044B     		ldr	r3, .L54
 744              	.LBE604:
 103:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		read(char& c)
 745              		.loc 5 103 0
 746 000a 0C46     		mov	r4, r1
 747              	.LBB605:
 107:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 			if (T::read(t)) {
 748              		.loc 5 107 0
 749 000c 9847     		blx	r3
 750              	.LVL38:
 751 000e 18B1     		cbz	r0, .L52
 752              	.LVL39:
 108:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 				c = t;
 753              		.loc 5 108 0
 754 0010 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 755              	.LVL40:
 109:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 				return true;
 756              		.loc 5 109 0
 757 0014 0120     		movs	r0, #1
 758              	.LVL41:
 108:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 				c = t;
 759              		.loc 5 108 0
 760 0016 2370     		strb	r3, [r4, #0]
 761              	.L52:
 762              	.LBE605:
 763              		.loc 5 114 0
 764 0018 02B0     		add	sp, sp, #8
 765 001a 10BD     		pop	{r4, pc}
 766              	.L55:
 767              		.align	2
 768              	.L54:
 769 001c 00000000 		.word	_ZN4xpcc5stm3214BufferedUsart24readERh
 770              		.cfi_endproc
 771              	.LFE1220:
 773              		.section	.text._ZN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EE5writeEPKc,"axG",%progbits,_ZN
 774              		.align	2
 775              		.weak	_ZN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EE5writeEPKc
 776              		.thumb
 777              		.thumb_func
 779              	_ZN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EE5writeEPKc:
 780              	.LFB1218:
  89:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		write(const char *s)
 781              		.loc 5 89 0
 782              		.cfi_startproc
 783              		@ args = 0, pretend = 0, frame = 0
 784              		@ frame_needed = 0, uses_anonymous_args = 0
 785              	.LVL42:
 786 0000 38B5     		push	{r3, r4, r5, lr}
 787              	.LCFI2:
 788              		.cfi_def_cfa_offset 16
 789              		.cfi_offset 3, -16
 790              		.cfi_offset 4, -12
 791              		.cfi_offset 5, -8
 792              		.cfi_offset 14, -4
 793              	.LBB606:
  92:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 			while ((c = *s++)) {
 794              		.loc 5 92 0
 795 0002 0C46     		mov	r4, r1
 796 0004 14F8010B 		ldrb	r0, [r4], #1	@ zero_extendqisi2
 797              	.LVL43:
 798 0008 28B1     		cbz	r0, .L56
 799 000a 034D     		ldr	r5, .L62
 800              	.LVL44:
 801              	.L58:
  93:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 				T::write(static_cast<uint8_t>(c));
 802              		.loc 5 93 0
 803 000c A847     		blx	r5
 804              	.LVL45:
  92:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 			while ((c = *s++)) {
 805              		.loc 5 92 0
 806 000e 14F8010B 		ldrb	r0, [r4], #1	@ zero_extendqisi2
 807              	.LVL46:
 808 0012 0028     		cmp	r0, #0
 809 0014 FAD1     		bne	.L58
 810              	.LVL47:
 811              	.L56:
 812 0016 38BD     		pop	{r3, r4, r5, pc}
 813              	.L63:
 814              		.align	2
 815              	.L62:
 816 0018 00000000 		.word	_ZN4xpcc5stm3214BufferedUsart25writeEh
 817              	.LBE606:
 818              		.cfi_endproc
 819              	.LFE1218:
 821              		.section	.text._ZN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EE5writeEc,"axG",%progbits,_ZN4x
 822              		.align	2
 823              		.weak	_ZN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EE5writeEc
 824              		.thumb
 825              		.thumb_func
 827              	_ZN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EE5writeEc:
 828              	.LFB1217:
  83:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		write(char c)
 829              		.loc 5 83 0
 830              		.cfi_startproc
 831              		@ args = 0, pretend = 0, frame = 0
 832              		@ frame_needed = 0, uses_anonymous_args = 0
 833              	.LVL48:
 834 0000 08B5     		push	{r3, lr}
 835              	.LCFI3:
 836              		.cfi_def_cfa_offset 8
 837              		.cfi_offset 3, -8
 838              		.cfi_offset 14, -4
  85:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 			T::write(c);
 839              		.loc 5 85 0
 840 0002 0846     		mov	r0, r1
 841              	.LVL49:
 842 0004 014B     		ldr	r3, .L65
 843 0006 9847     		blx	r3
 844              	.LVL50:
 845 0008 08BD     		pop	{r3, pc}
 846              	.L66:
 847 000a 00BF     		.align	2
 848              	.L65:
 849 000c 00000000 		.word	_ZN4xpcc5stm3214BufferedUsart25writeEh
 850              		.cfi_endproc
 851              	.LFE1217:
 853              		.section	.text._ZN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EED0Ev,"axG",%progbits,_ZN4xpcc1
 854              		.align	2
 855              		.weak	_ZN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EED0Ev
 856              		.thumb
 857              		.thumb_func
 859              	_ZN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EED0Ev:
 860              	.LFB1187:
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	class IODeviceWrapper : public IODevice
 861              		.loc 5 65 0
 862              		.cfi_startproc
 863              		@ args = 0, pretend = 0, frame = 0
 864              		@ frame_needed = 0, uses_anonymous_args = 0
 865              	.LVL51:
 866              	.LBB607:
 867              	.LBB608:
 868              	.LBB609:
 869              	.LBB610:
 870              		.loc 6 51 0
 871 0000 034B     		ldr	r3, .L68
 872              	.LBE610:
 873              	.LBE609:
 874              	.LBE608:
 875              	.LBE607:
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	class IODeviceWrapper : public IODevice
 876              		.loc 5 65 0
 877 0002 10B5     		push	{r4, lr}
 878              	.LCFI4:
 879              		.cfi_def_cfa_offset 8
 880              		.cfi_offset 4, -8
 881              		.cfi_offset 14, -4
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	class IODeviceWrapper : public IODevice
 882              		.loc 5 65 0
 883 0004 0446     		mov	r4, r0
 884              	.LVL52:
 885              	.LBB614:
 886              	.LBB613:
 887              	.LBB612:
 888              	.LBB611:
 889              		.loc 6 51 0
 890 0006 0360     		str	r3, [r0, #0]
 891              	.LBE611:
 892              	.LBE612:
 893              	.LBE613:
 894              	.LBE614:
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	class IODeviceWrapper : public IODevice
 895              		.loc 5 65 0
 896 0008 024B     		ldr	r3, .L68+4
 897 000a 9847     		blx	r3
 898              	.LVL53:
 899 000c 2046     		mov	r0, r4
 900 000e 10BD     		pop	{r4, pc}
 901              	.L69:
 902              		.align	2
 903              	.L68:
 904 0010 08000000 		.word	_ZTVN4xpcc8IODeviceE+8
 905 0014 00000000 		.word	_ZdlPv
 906              		.cfi_endproc
 907              	.LFE1187:
 909              		.section	.text._ZN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEED0Ev,"axG",%progbits,_ZN4xpc
 910              		.align	2
 911              		.weak	_ZN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEED0Ev
 912              		.thumb
 913              		.thumb_func
 915              	_ZN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEED0Ev:
 916              	.LFB1183:
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	class IODeviceWrapper : public IODevice
 917              		.loc 5 65 0
 918              		.cfi_startproc
 919              		@ args = 0, pretend = 0, frame = 0
 920              		@ frame_needed = 0, uses_anonymous_args = 0
 921              	.LVL54:
 922              	.LBB615:
 923              	.LBB616:
 924              	.LBB617:
 925              	.LBB618:
 926              		.loc 6 51 0
 927 0000 034B     		ldr	r3, .L71
 928              	.LBE618:
 929              	.LBE617:
 930              	.LBE616:
 931              	.LBE615:
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	class IODeviceWrapper : public IODevice
 932              		.loc 5 65 0
 933 0002 10B5     		push	{r4, lr}
 934              	.LCFI5:
 935              		.cfi_def_cfa_offset 8
 936              		.cfi_offset 4, -8
 937              		.cfi_offset 14, -4
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	class IODeviceWrapper : public IODevice
 938              		.loc 5 65 0
 939 0004 0446     		mov	r4, r0
 940              	.LVL55:
 941              	.LBB622:
 942              	.LBB621:
 943              	.LBB620:
 944              	.LBB619:
 945              		.loc 6 51 0
 946 0006 0360     		str	r3, [r0, #0]
 947              	.LBE619:
 948              	.LBE620:
 949              	.LBE621:
 950              	.LBE622:
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	class IODeviceWrapper : public IODevice
 951              		.loc 5 65 0
 952 0008 024B     		ldr	r3, .L71+4
 953 000a 9847     		blx	r3
 954              	.LVL56:
 955 000c 2046     		mov	r0, r4
 956 000e 10BD     		pop	{r4, pc}
 957              	.L72:
 958              		.align	2
 959              	.L71:
 960 0010 08000000 		.word	_ZTVN4xpcc8IODeviceE+8
 961 0014 00000000 		.word	_ZdlPv
 962              		.cfi_endproc
 963              	.LFE1183:
 965              		.section	.text._ZN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEED0Ev,"axG",%progbits,_ZN4xpc
 966              		.align	2
 967              		.weak	_ZN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEED0Ev
 968              		.thumb
 969              		.thumb_func
 971              	_ZN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEED0Ev:
 972              	.LFB1179:
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	class IODeviceWrapper : public IODevice
 973              		.loc 5 65 0
 974              		.cfi_startproc
 975              		@ args = 0, pretend = 0, frame = 0
 976              		@ frame_needed = 0, uses_anonymous_args = 0
 977              	.LVL57:
 978              	.LBB623:
 979              	.LBB624:
 980              	.LBB625:
 981              	.LBB626:
 982              		.loc 6 51 0
 983 0000 034B     		ldr	r3, .L74
 984              	.LBE626:
 985              	.LBE625:
 986              	.LBE624:
 987              	.LBE623:
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	class IODeviceWrapper : public IODevice
 988              		.loc 5 65 0
 989 0002 10B5     		push	{r4, lr}
 990              	.LCFI6:
 991              		.cfi_def_cfa_offset 8
 992              		.cfi_offset 4, -8
 993              		.cfi_offset 14, -4
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	class IODeviceWrapper : public IODevice
 994              		.loc 5 65 0
 995 0004 0446     		mov	r4, r0
 996              	.LVL58:
 997              	.LBB630:
 998              	.LBB629:
 999              	.LBB628:
 1000              	.LBB627:
 1001              		.loc 6 51 0
 1002 0006 0360     		str	r3, [r0, #0]
 1003              	.LBE627:
 1004              	.LBE628:
 1005              	.LBE629:
 1006              	.LBE630:
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	class IODeviceWrapper : public IODevice
 1007              		.loc 5 65 0
 1008 0008 024B     		ldr	r3, .L74+4
 1009 000a 9847     		blx	r3
 1010              	.LVL59:
 1011 000c 2046     		mov	r0, r4
 1012 000e 10BD     		pop	{r4, pc}
 1013              	.L75:
 1014              		.align	2
 1015              	.L74:
 1016 0010 08000000 		.word	_ZTVN4xpcc8IODeviceE+8
 1017 0014 00000000 		.word	_ZdlPv
 1018              		.cfi_endproc
 1019              	.LFE1179:
 1021              		.section	.text._ZN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEED0Ev,"axG",%progbits,_ZN4xpc
 1022              		.align	2
 1023              		.weak	_ZN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEED0Ev
 1024              		.thumb
 1025              		.thumb_func
 1027              	_ZN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEED0Ev:
 1028              	.LFB1175:
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	class IODeviceWrapper : public IODevice
 1029              		.loc 5 65 0
 1030              		.cfi_startproc
 1031              		@ args = 0, pretend = 0, frame = 0
 1032              		@ frame_needed = 0, uses_anonymous_args = 0
 1033              	.LVL60:
 1034              	.LBB631:
 1035              	.LBB632:
 1036              	.LBB633:
 1037              	.LBB634:
 1038              		.loc 6 51 0
 1039 0000 034B     		ldr	r3, .L77
 1040              	.LBE634:
 1041              	.LBE633:
 1042              	.LBE632:
 1043              	.LBE631:
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	class IODeviceWrapper : public IODevice
 1044              		.loc 5 65 0
 1045 0002 10B5     		push	{r4, lr}
 1046              	.LCFI7:
 1047              		.cfi_def_cfa_offset 8
 1048              		.cfi_offset 4, -8
 1049              		.cfi_offset 14, -4
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	class IODeviceWrapper : public IODevice
 1050              		.loc 5 65 0
 1051 0004 0446     		mov	r4, r0
 1052              	.LVL61:
 1053              	.LBB638:
 1054              	.LBB637:
 1055              	.LBB636:
 1056              	.LBB635:
 1057              		.loc 6 51 0
 1058 0006 0360     		str	r3, [r0, #0]
 1059              	.LBE635:
 1060              	.LBE636:
 1061              	.LBE637:
 1062              	.LBE638:
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	class IODeviceWrapper : public IODevice
 1063              		.loc 5 65 0
 1064 0008 024B     		ldr	r3, .L77+4
 1065 000a 9847     		blx	r3
 1066              	.LVL62:
 1067 000c 2046     		mov	r0, r4
 1068 000e 10BD     		pop	{r4, pc}
 1069              	.L78:
 1070              		.align	2
 1071              	.L77:
 1072 0010 08000000 		.word	_ZTVN4xpcc8IODeviceE+8
 1073 0014 00000000 		.word	_ZdlPv
 1074              		.cfi_endproc
 1075              	.LFE1175:
 1077              		.section	.text._ZN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEED0Ev,"axG",%progbits,_ZN4xpc
 1078              		.align	2
 1079              		.weak	_ZN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEED0Ev
 1080              		.thumb
 1081              		.thumb_func
 1083              	_ZN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEED0Ev:
 1084              	.LFB1171:
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	class IODeviceWrapper : public IODevice
 1085              		.loc 5 65 0
 1086              		.cfi_startproc
 1087              		@ args = 0, pretend = 0, frame = 0
 1088              		@ frame_needed = 0, uses_anonymous_args = 0
 1089              	.LVL63:
 1090              	.LBB639:
 1091              	.LBB640:
 1092              	.LBB641:
 1093              	.LBB642:
 1094              		.loc 6 51 0
 1095 0000 034B     		ldr	r3, .L80
 1096              	.LBE642:
 1097              	.LBE641:
 1098              	.LBE640:
 1099              	.LBE639:
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	class IODeviceWrapper : public IODevice
 1100              		.loc 5 65 0
 1101 0002 10B5     		push	{r4, lr}
 1102              	.LCFI8:
 1103              		.cfi_def_cfa_offset 8
 1104              		.cfi_offset 4, -8
 1105              		.cfi_offset 14, -4
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	class IODeviceWrapper : public IODevice
 1106              		.loc 5 65 0
 1107 0004 0446     		mov	r4, r0
 1108              	.LVL64:
 1109              	.LBB646:
 1110              	.LBB645:
 1111              	.LBB644:
 1112              	.LBB643:
 1113              		.loc 6 51 0
 1114 0006 0360     		str	r3, [r0, #0]
 1115              	.LBE643:
 1116              	.LBE644:
 1117              	.LBE645:
 1118              	.LBE646:
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	class IODeviceWrapper : public IODevice
 1119              		.loc 5 65 0
 1120 0008 024B     		ldr	r3, .L80+4
 1121 000a 9847     		blx	r3
 1122              	.LVL65:
 1123 000c 2046     		mov	r0, r4
 1124 000e 10BD     		pop	{r4, pc}
 1125              	.L81:
 1126              		.align	2
 1127              	.L80:
 1128 0010 08000000 		.word	_ZTVN4xpcc8IODeviceE+8
 1129 0014 00000000 		.word	_ZdlPv
 1130              		.cfi_endproc
 1131              	.LFE1171:
 1133              		.section	.text._ZN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEED0Ev,"axG",%progbits,_ZN4xpc
 1134              		.align	2
 1135              		.weak	_ZN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEED0Ev
 1136              		.thumb
 1137              		.thumb_func
 1139              	_ZN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEED0Ev:
 1140              	.LFB1167:
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	class IODeviceWrapper : public IODevice
 1141              		.loc 5 65 0
 1142              		.cfi_startproc
 1143              		@ args = 0, pretend = 0, frame = 0
 1144              		@ frame_needed = 0, uses_anonymous_args = 0
 1145              	.LVL66:
 1146              	.LBB647:
 1147              	.LBB648:
 1148              	.LBB649:
 1149              	.LBB650:
 1150              		.loc 6 51 0
 1151 0000 034B     		ldr	r3, .L83
 1152              	.LBE650:
 1153              	.LBE649:
 1154              	.LBE648:
 1155              	.LBE647:
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	class IODeviceWrapper : public IODevice
 1156              		.loc 5 65 0
 1157 0002 10B5     		push	{r4, lr}
 1158              	.LCFI9:
 1159              		.cfi_def_cfa_offset 8
 1160              		.cfi_offset 4, -8
 1161              		.cfi_offset 14, -4
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	class IODeviceWrapper : public IODevice
 1162              		.loc 5 65 0
 1163 0004 0446     		mov	r4, r0
 1164              	.LVL67:
 1165              	.LBB654:
 1166              	.LBB653:
 1167              	.LBB652:
 1168              	.LBB651:
 1169              		.loc 6 51 0
 1170 0006 0360     		str	r3, [r0, #0]
 1171              	.LBE651:
 1172              	.LBE652:
 1173              	.LBE653:
 1174              	.LBE654:
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	class IODeviceWrapper : public IODevice
 1175              		.loc 5 65 0
 1176 0008 024B     		ldr	r3, .L83+4
 1177 000a 9847     		blx	r3
 1178              	.LVL68:
 1179 000c 2046     		mov	r0, r4
 1180 000e 10BD     		pop	{r4, pc}
 1181              	.L84:
 1182              		.align	2
 1183              	.L83:
 1184 0010 08000000 		.word	_ZTVN4xpcc8IODeviceE+8
 1185 0014 00000000 		.word	_ZdlPv
 1186              		.cfi_endproc
 1187              	.LFE1167:
 1189              		.section	.text._ZN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEED0Ev,"axG",%progbits,_ZN4xpc
 1190              		.align	2
 1191              		.weak	_ZN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEED0Ev
 1192              		.thumb
 1193              		.thumb_func
 1195              	_ZN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEED0Ev:
 1196              	.LFB1163:
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	class IODeviceWrapper : public IODevice
 1197              		.loc 5 65 0
 1198              		.cfi_startproc
 1199              		@ args = 0, pretend = 0, frame = 0
 1200              		@ frame_needed = 0, uses_anonymous_args = 0
 1201              	.LVL69:
 1202              	.LBB655:
 1203              	.LBB656:
 1204              	.LBB657:
 1205              	.LBB658:
 1206              		.loc 6 51 0
 1207 0000 034B     		ldr	r3, .L86
 1208              	.LBE658:
 1209              	.LBE657:
 1210              	.LBE656:
 1211              	.LBE655:
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	class IODeviceWrapper : public IODevice
 1212              		.loc 5 65 0
 1213 0002 10B5     		push	{r4, lr}
 1214              	.LCFI10:
 1215              		.cfi_def_cfa_offset 8
 1216              		.cfi_offset 4, -8
 1217              		.cfi_offset 14, -4
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	class IODeviceWrapper : public IODevice
 1218              		.loc 5 65 0
 1219 0004 0446     		mov	r4, r0
 1220              	.LVL70:
 1221              	.LBB662:
 1222              	.LBB661:
 1223              	.LBB660:
 1224              	.LBB659:
 1225              		.loc 6 51 0
 1226 0006 0360     		str	r3, [r0, #0]
 1227              	.LBE659:
 1228              	.LBE660:
 1229              	.LBE661:
 1230              	.LBE662:
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	class IODeviceWrapper : public IODevice
 1231              		.loc 5 65 0
 1232 0008 024B     		ldr	r3, .L86+4
 1233 000a 9847     		blx	r3
 1234              	.LVL71:
 1235 000c 2046     		mov	r0, r4
 1236 000e 10BD     		pop	{r4, pc}
 1237              	.L87:
 1238              		.align	2
 1239              	.L86:
 1240 0010 08000000 		.word	_ZTVN4xpcc8IODeviceE+8
 1241 0014 00000000 		.word	_ZdlPv
 1242              		.cfi_endproc
 1243              	.LFE1163:
 1245              		.section	.text._ZN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEED0Ev,"axG",%progbits,_ZN4xpc
 1246              		.align	2
 1247              		.weak	_ZN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEED0Ev
 1248              		.thumb
 1249              		.thumb_func
 1251              	_ZN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEED0Ev:
 1252              	.LFB1159:
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	class IODeviceWrapper : public IODevice
 1253              		.loc 5 65 0
 1254              		.cfi_startproc
 1255              		@ args = 0, pretend = 0, frame = 0
 1256              		@ frame_needed = 0, uses_anonymous_args = 0
 1257              	.LVL72:
 1258              	.LBB663:
 1259              	.LBB664:
 1260              	.LBB665:
 1261              	.LBB666:
 1262              		.loc 6 51 0
 1263 0000 034B     		ldr	r3, .L89
 1264              	.LBE666:
 1265              	.LBE665:
 1266              	.LBE664:
 1267              	.LBE663:
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	class IODeviceWrapper : public IODevice
 1268              		.loc 5 65 0
 1269 0002 10B5     		push	{r4, lr}
 1270              	.LCFI11:
 1271              		.cfi_def_cfa_offset 8
 1272              		.cfi_offset 4, -8
 1273              		.cfi_offset 14, -4
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	class IODeviceWrapper : public IODevice
 1274              		.loc 5 65 0
 1275 0004 0446     		mov	r4, r0
 1276              	.LVL73:
 1277              	.LBB670:
 1278              	.LBB669:
 1279              	.LBB668:
 1280              	.LBB667:
 1281              		.loc 6 51 0
 1282 0006 0360     		str	r3, [r0, #0]
 1283              	.LBE667:
 1284              	.LBE668:
 1285              	.LBE669:
 1286              	.LBE670:
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 	class IODeviceWrapper : public IODevice
 1287              		.loc 5 65 0
 1288 0008 024B     		ldr	r3, .L89+4
 1289 000a 9847     		blx	r3
 1290              	.LVL74:
 1291 000c 2046     		mov	r0, r4
 1292 000e 10BD     		pop	{r4, pc}
 1293              	.L90:
 1294              		.align	2
 1295              	.L89:
 1296 0010 08000000 		.word	_ZTVN4xpcc8IODeviceE+8
 1297 0014 00000000 		.word	_ZdlPv
 1298              		.cfi_endproc
 1299              	.LFE1159:
 1301              		.section	.text._ZN8Handlers14getMeasurementEPKci,"axG",%progbits,_ZN8Handlers14getMeasurementEPKci
 1302              		.align	2
 1303              		.weak	_ZN8Handlers14getMeasurementEPKci
 1304              		.thumb
 1305              		.thumb_func
 1307              	_ZN8Handlers14getMeasurementEPKci:
 1308              	.LFB1045:
 156:commandHandlers.h **** 
 157:commandHandlers.h **** static bool stopPatternHandler(const char* cmd, int length){
 158:commandHandlers.h **** 	(void) cmd;
 159:commandHandlers.h **** 	(void) length;
 160:commandHandlers.h **** 	Pattern::done();
 161:commandHandlers.h **** 	return true;
 162:commandHandlers.h **** }
 163:commandHandlers.h **** 
 164:commandHandlers.h **** static bool getPushButtonStates(const char* cmd, int length){
 165:commandHandlers.h **** 	(void) cmd;
 166:commandHandlers.h **** 	(void) length;
 167:commandHandlers.h **** 	iout << "real states: X: " << HallSensor<X>::getFrontState() << "-" << HallSensor<X>::getEndState(
 168:commandHandlers.h **** 	iout << " :: Y: " << HallSensor<Y>::getFrontState() << "-" << HallSensor<Y>::getEndState() << endl
 169:commandHandlers.h **** 	iout << "buffered states: " << HallSensor<X>::isAtFront() << "-" << HallSensor<X>::isAtEnd();
 170:commandHandlers.h **** 	iout << " :: " << HallSensor<Y>::isAtFront() << "-" << HallSensor<Y>::isAtEnd() << endl;
 171:commandHandlers.h **** 	return false;
 172:commandHandlers.h **** }
 173:commandHandlers.h **** 
 174:commandHandlers.h **** static bool getMeasurement(const char* cmd, int length){
 1309              		.loc 1 174 0
 1310              		.cfi_startproc
 1311              		@ args = 0, pretend = 0, frame = 0
 1312              		@ frame_needed = 0, uses_anonymous_args = 0
 1313              	.LVL75:
 1314 0000 08B5     		push	{r3, lr}
 1315              	.LCFI12:
 1316              		.cfi_def_cfa_offset 8
 1317              		.cfi_offset 3, -8
 1318              		.cfi_offset 14, -4
 175:commandHandlers.h **** 	(void) cmd;
 176:commandHandlers.h **** 	(void) length;
 177:commandHandlers.h **** 	Trigger::forceTrigger();
 1319              		.loc 1 177 0
 1320 0002 024B     		ldr	r3, .L92
 1321 0004 9847     		blx	r3
 1322              	.LVL76:
 178:commandHandlers.h **** 	return false;
 179:commandHandlers.h **** }
 1323              		.loc 1 179 0
 1324 0006 0020     		movs	r0, #0
 1325 0008 08BD     		pop	{r3, pc}
 1326              	.L93:
 1327 000a 00BF     		.align	2
 1328              	.L92:
 1329 000c 00000000 		.word	_ZN7Trigger12forceTriggerEv
 1330              		.cfi_endproc
 1331              	.LFE1045:
 1333              		.section	.text._ZN8Handlers17getControlOutputsIL4Axis0EEEbPKci,"axG",%progbits,_ZN8Handlers17getCo
 1334              		.align	2
 1335              		.weak	_ZN8Handlers17getControlOutputsIL4Axis0EEEbPKci
 1336              		.thumb
 1337              		.thumb_func
 1339              	_ZN8Handlers17getControlOutputsIL4Axis0EEEbPKci:
 1340              	.LFB1128:
 180:commandHandlers.h **** 
 181:commandHandlers.h **** static bool execLaserCommand(const char* cmd, int length){
 182:commandHandlers.h **** 	//TODO
 183:commandHandlers.h **** 	(void) length;
 184:commandHandlers.h **** 	const char* result = Laser::exec(cmd);
 185:commandHandlers.h **** 	iout << "EXEC: " << result << endl;
 186:commandHandlers.h **** 	return false;
 187:commandHandlers.h **** }
 188:commandHandlers.h **** 
 189:commandHandlers.h **** static bool mirrorCommand(const char* cmd, int length){
 190:commandHandlers.h **** 	//TODO
 191:commandHandlers.h **** 	(void) cmd;
 192:commandHandlers.h **** 	(void) length;
 193:commandHandlers.h **** 	if(length < 1){
 194:commandHandlers.h **** 		iout << "no command found to mirror" << endl;
 195:commandHandlers.h **** 		return false;
 196:commandHandlers.h **** 	}
 197:commandHandlers.h **** 	commandOut << cmd << endl;
 198:commandHandlers.h **** 	return false;
 199:commandHandlers.h **** }
 200:commandHandlers.h **** 
 201:commandHandlers.h **** static bool setTriggerThreshold(const char* cmd, int length){
 202:commandHandlers.h **** 	float param = atof2(cmd, length, 0);
 203:commandHandlers.h **** 	if(param == 0){
 204:commandHandlers.h **** 		iout << "invalid argument for trigger threshold" << endl;
 205:commandHandlers.h **** 		return false;
 206:commandHandlers.h **** 	}
 207:commandHandlers.h **** 	int threshold = Transform::mumToEncoder(param);
 208:commandHandlers.h **** 	Trigger::setThreshold(threshold);
 209:commandHandlers.h **** 	return true;
 210:commandHandlers.h **** }
 211:commandHandlers.h **** 
 212:commandHandlers.h **** template<Axis axis>
 213:commandHandlers.h **** static bool getControlOutputs(const char* cmd, int length){
 1341              		.loc 1 213 0
 1342              		.cfi_startproc
 1343              		@ args = 0, pretend = 0, frame = 0
 1344              		@ frame_needed = 0, uses_anonymous_args = 0
 1345              	.LVL77:
 1346 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1347              	.LCFI13:
 1348              		.cfi_def_cfa_offset 24
 1349              		.cfi_offset 3, -24
 1350              		.cfi_offset 4, -20
 1351              		.cfi_offset 5, -16
 1352              		.cfi_offset 6, -12
 1353              		.cfi_offset 7, -8
 1354              		.cfi_offset 14, -4
 1355              	.LBB749:
 1356              	.LBB750:
 1357              		.file 7 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp"
   1:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** // coding: utf-8
   2:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** // ----------------------------------------------------------------------------
   3:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** /* Copyright (c) 2009, Roboterclub Aachen e.V.
   4:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * All rights reserved.
   5:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *
   6:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * Redistribution and use in source and binary forms, with or without
   7:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * modification, are permitted provided that the following conditions are met:
   8:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * 
   9:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *     * Redistributions of source code must retain the above copyright
  10:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *       notice, this list of conditions and the following disclaimer.
  11:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *     * Redistributions in binary form must reproduce the above copyright
  12:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *       notice, this list of conditions and the following disclaimer in the
  13:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *       documentation and/or other materials provided with the distribution.
  14:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *     * Neither the name of the Roboterclub Aachen e.V. nor the
  15:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *       names of its contributors may be used to endorse or promote products
  16:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *       derived from this software without specific prior written permission.
  17:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *
  18:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
  19:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  20:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  21:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
  22:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  23:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  24:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  25:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  26:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  27:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  28:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  */
  29:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** // ----------------------------------------------------------------------------
  30:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
  31:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #ifndef XPCC__IOSTREAM_HPP
  32:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #define XPCC__IOSTREAM_HPP
  33:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #include <xpcc/architecture/utils.hpp>
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
  36:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #include "iodevice.hpp"
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #include "iodevice_wrapper.hpp"
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
  39:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** namespace xpcc
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** {
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	/**
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	 * \brief 	This Formats all primary types into a string stream for
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	 * 			output or it reads values from a input and converts them to
  44:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	 * 			a given type;
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	 *
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	 * \ingroup io
  47:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	 * \author	Martin Rosekeit <martin.rosekeit@rwth-aachen.de>
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	 */
  49:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	class IOStream
  50:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	{
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	public :
  52:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		/**
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		 * \brief	Constructor
  54:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		 * 
  55:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		 * \param	device	device to write the stream to
  56:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		 * 
  57:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		 * \code
  58:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		 *	MyIODevice device;
  59:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		 *	IOStream stream( device );
  60:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		 * \endcode
  61:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		 */
  62:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		IOStream(IODevice& device);
  63:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
  64:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		inline IOStream&
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		write(char c)
  66:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
  67:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->device->write(c);
  68:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		inline IOStream&
  72:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		flush()
  73:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
  74:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->device->flush();
  75:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->mode = Mode::Ascii;
  76:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
  77:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
  78:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		/// set the output mode to Mode::Binary style for \c char and \c char*
  80:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
  81:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		bin()
  82:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
  83:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->mode = Mode::Binary;
  84:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
  85:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
  86:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
  87:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		/// set the output mode to Mode::Hexadecimal style for \c char and \c char*
  88:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
  89:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		hex()
  90:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
  91:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->mode = Mode::Hexadecimal;
  92:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
  93:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
  94:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
  95:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		/// set the output mode to Mode::Ascii style for \c char and \c char*
  96:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
  97:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ascii()
  98:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
  99:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->mode = Mode::Ascii;
 100:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 101:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 102:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 103:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 104:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		IOStream&
 105:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const unsigned char& v)
 106:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 107:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 108:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeInteger(static_cast<uint16_t>(v));
 109:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 110:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 111:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 112:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 113:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else {
 114:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 115:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 116:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 117:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 118:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
 119:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		IOStream&
 120:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const char& v)
 121:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 124:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 127:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 128:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else {
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 130:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 131:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 132:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 133:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 134:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 135:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const uint16_t& v)
 136:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 137:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 138:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeInteger(v);
 139:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 140:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 141:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v >> 8));
 142:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v & 0xff));
 143:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 144:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else {
 145:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v >> 8));
 146:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v & 0xff));
 147:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 148:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 149:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 150:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
 151:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 152:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const int16_t& v)
 153:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 154:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 155:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeInteger(v);
 156:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 157:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 158:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v >> 8));
 159:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v & 0xff));
 160:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 161:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else {
 162:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v >> 8));
 163:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v & 0xff));
 164:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 165:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 166:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 167:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
 168:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 169:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const uint32_t& v)
 170:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 171:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 172:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeInteger(v);
 173:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 174:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 175:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v >> 24));
 176:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v >> 16));
 177:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v >> 8));
 178:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v & 0xff));
 179:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 180:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else {
 181:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v >> 24));
 182:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v >> 16));
 183:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v >> 8));
 184:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v & 0xff));
 185:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 186:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 187:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 188:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
 189:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 190:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const int32_t& v)
 191:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 192:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 193:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeInteger(v);
 194:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 195:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 196:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v >> 24));
 197:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v >> 16));
 198:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v >> 8));
 199:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v & 0xff));
 200:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 201:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else {
 202:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v >> 24));
 203:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v >> 16));
 204:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v >> 8));
 205:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v & 0xff));
 206:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 207:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 208:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 209:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 210:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #if defined(XPCC__OS_OSX)
 211:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		// For APPLE 'int64_t' is of type 'int'. Therefore there is no
 212:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		// function here for the default type 'long int'. As 'long int' has the same
 213:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		// width as 'int64_t' we just use a typedef here.
 214:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 215:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const long int& v)
 216:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 217:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int64_t>(v));
 218:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 219:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 220:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 221:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 222:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const long unsigned int& v)
 223:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 224:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<uint64_t>(v));
 225:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 226:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 227:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #endif
 228:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 229:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #if defined(XPCC__CPU_ARM) || defined(XPCC__CPU_AVR32)
 230:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		// For ARM 'int32_t' is of type 'long'. Therefore there is no
 231:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		// function here for the default type 'int'. As 'int' has the same
 232:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		// width as 'int32_t' we just use a typedef here.
 233:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 234:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const int& v)
 235:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 237:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 238:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 239:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 240:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 241:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const unsigned int& v)
 242:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 243:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<uint32_t>(v));
 244:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 245:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 246:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #endif
 247:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 248:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** // The 64-bit types on the AVR are extremely slow and are
 249:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** // therefore excluded here
 250:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #if !defined(XPCC__CPU_AVR)
 251:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 252:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const uint64_t& v)
 253:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 254:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(v);
 255:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 256:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 257:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 258:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 259:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const int64_t& v)
 260:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 261:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(v);
 262:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 263:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 264:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #endif
 265:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 266:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 267:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const float& v)
 268:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 269:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeFloat(v);
 270:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 271:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 272:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
 273:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 274:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const double& v)
 275:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 276:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #if defined(XPCC__CPU_AVR)
 277:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeFloat(static_cast<float>(v));
 278:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #else
 279:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeDouble(v);
 280:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #endif
 281:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 282:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 283:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
 284:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		IOStream&
 285:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const char* s)
 286:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 1358              		.loc 7 287 0
 1359 0002 874C     		ldr	r4, .L148
 1360 0004 6368     		ldr	r3, [r4, #4]
 1361 0006 002B     		cmp	r3, #0
 1362 0008 00F0B880 		beq	.L134
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 289:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 1363              		.loc 7 290 0
 1364 000c 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 1365              		.loc 7 291 0
 1366 000e 2046     		mov	r0, r4
 1367              	.LVL78:
 1368 0010 0CBF     		ite	eq
 1369 0012 844B     		ldreq	r3, .L148+4
 292:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 293:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else {
 294:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(s);
 1370              		.loc 7 294 0
 1371 0014 844B     		ldrne	r3, .L148+8
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 1372              		.loc 7 291 0
 1373 0016 8549     		ldr	r1, .L148+12
 1374              	.LVL79:
 1375              		.loc 7 294 0
 1376 0018 9847     		blx	r3
 1377              	.LVL80:
 1378              	.LBE750:
 1379              	.LBE749:
 1380              	.LBB754:
 1381              	.LBB755:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 1382              		.loc 7 122 0
 1383 001a 6368     		ldr	r3, [r4, #4]
 1384 001c 8048     		ldr	r0, .L148
 1385 001e 002B     		cmp	r3, #0
 1386 0020 00F0B680 		beq	.L135
 1387              	.L98:
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 1388              		.loc 7 126 0
 1389 0024 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 1390              		.loc 7 125 0
 1391 0026 022B     		cmp	r3, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 1392              		.loc 7 126 0
 1393 0028 0CBF     		ite	eq
 1394 002a 814B     		ldreq	r3, .L148+16
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 1395              		.loc 7 129 0
 1396 002c 814B     		ldrne	r3, .L148+20
 1397 002e 9847     		blx	r3
 1398              	.LVL81:
 1399              	.L99:
 1400              	.LBE755:
 1401              	.LBE754:
 1402              	.LBB759:
 1403              	.LBB760:
 1404              		.file 8 "control.h"
   1:control.h     **** /*
   2:control.h     ****  * control.h
   3:control.h     ****  *
   4:control.h     ****  *  Created on: Nov 24, 2013
   5:control.h     ****  *      Author: jonas
   6:control.h     ****  */
   7:control.h     **** 
   8:control.h     **** #ifndef CONTROL_H_
   9:control.h     **** #define CONTROL_H_
  10:control.h     **** 
  11:control.h     **** #include "project.h"
  12:control.h     **** #include <xpcc/math/filter/pid.hpp>
  13:control.h     **** 
  14:control.h     **** 
  15:control.h     **** template<Axis axis>
  16:control.h     **** class Control{
  17:control.h     **** 
  18:control.h     **** 	friend class Control<ALL>;
  19:control.h     **** 
  20:control.h     **** private:
  21:control.h     **** 	static volatile int pos_shall;
  22:control.h     **** 	static volatile int v_is; // velocity in pulses/s
  23:control.h     **** 	static volatile int v_shall;
  24:control.h     **** 
  25:control.h     **** 	static float maxSpeed;
  26:control.h     **** 	static xpcc::Pid<float, 1> v_pid;
  27:control.h     **** 	static xpcc::Pid<float, 1> pos_pid;
  28:control.h     **** 	static int v_u; // speed controller output
  29:control.h     **** 	static int v_ureal;
  30:control.h     **** 	static int last_pos; //position when the last control loop was executed
  31:control.h     **** 
  32:control.h     **** 	static bool positionControlEnabled;
  33:control.h     **** 	static bool speedControlEnabled;
  34:control.h     **** 
  35:control.h     **** public:
  36:control.h     **** 
  37:control.h     **** 	static bool init();
  38:control.h     **** 	static void enablePositionControl(bool enable);
  39:control.h     **** 	static void enableSpeedControl(bool enable);
  40:control.h     **** 	static void setShallPosition(int x);
  41:control.h     **** 	/**
  42:control.h     **** 	 * Also disables the position controller
  43:control.h     **** 	 * @param speed [-1,1]
  44:control.h     **** 	 */
  45:control.h     **** 	static void setShallSpeed(double speed);
  46:control.h     **** 	static int getSpeedErrorSum();
  47:control.h     **** 	static int getPositionErrorSum();
  48:control.h     **** 	static int32_t getIsPosition();
  49:control.h     **** 	static inline int getShallSpeed(){ return v_shall; }
  50:control.h     **** 	static inline int getIsSpeed(){ return v_is; }
  51:control.h     **** 	static inline int getShallPosition(){ return pos_shall; }
 1405              		.loc 8 51 0
 1406 0030 814B     		ldr	r3, .L148+24
 1407              	.LBE760:
 1408              	.LBE759:
 1409              	.LBB762:
 1410              	.LBB763:
 214:commandHandlers.h **** 	(void) cmd;
 215:commandHandlers.h **** 	(void) length;
 216:commandHandlers.h **** 	iout << "w_x x w_v v v_u v_ureal" << endl;
 217:commandHandlers.h **** 	iout << Control<axis>::getShallPosition() << " " << Control<axis>::getIsPosition() << " "
 1411              		.loc 1 217 0
 1412 0032 7B4E     		ldr	r6, .L148
 1413              	.LBE763:
 1414              	.LBE762:
 1415              	.LBB765:
 1416              	.LBB761:
 1417              		.loc 8 51 0
 1418 0034 1968     		ldr	r1, [r3, #0]
 1419              	.LVL82:
 1420              	.LBE761:
 1421              	.LBE765:
 1422              	.LBB766:
 1423              	.LBB764:
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 1424              		.loc 7 236 0
 1425 0036 814D     		ldr	r5, .L148+28
 1426 0038 3046     		mov	r0, r6
 1427 003a A847     		blx	r5
 1428              	.LVL83:
 1429              	.LBE764:
 1430              	.LBE766:
 1431              	.LBB767:
 1432              	.LBB768:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 1433              		.loc 7 287 0
 1434 003c 6368     		ldr	r3, [r4, #4]
 1435 003e 002B     		cmp	r3, #0
 1436 0040 00F0E780 		beq	.L136
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 1437              		.loc 7 290 0
 1438 0044 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 1439              		.loc 7 291 0
 1440 0046 3046     		mov	r0, r6
 1441 0048 7D49     		ldr	r1, .L148+32
 1442 004a 0CBF     		ite	eq
 1443 004c 754B     		ldreq	r3, .L148+4
 1444              		.loc 7 294 0
 1445 004e 764B     		ldrne	r3, .L148+8
 1446 0050 9847     		blx	r3
 1447              	.LVL84:
 1448              	.L102:
 1449              	.LBE768:
 1450              	.LBE767:
 1451              		.loc 1 217 0
 1452 0052 7C4B     		ldr	r3, .L148+36
 1453 0054 9847     		blx	r3
 1454              	.LVL85:
 1455              	.LBB772:
 1456              	.LBB773:
 192:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 1457              		.loc 7 192 0
 1458 0056 6368     		ldr	r3, [r4, #4]
 1459              	.LBE773:
 1460              	.LBE772:
 1461              		.loc 1 217 0
 1462 0058 0646     		mov	r6, r0
 1463              	.LVL86:
 1464              	.LBB777:
 1465              	.LBB774:
 192:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 1466              		.loc 7 192 0
 1467 005a 002B     		cmp	r3, #0
 1468 005c 00F0D580 		beq	.L137
 195:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 1469              		.loc 7 195 0
 1470 0060 022B     		cmp	r3, #2
 1471 0062 00F00181 		beq	.L138
 202:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v >> 24));
 1472              		.loc 7 202 0
 1473 0066 734F     		ldr	r7, .L148+20
 1474 0068 6D48     		ldr	r0, .L148
 1475 006a 310E     		lsrs	r1, r6, #24
 1476 006c B847     		blx	r7
 1477              	.LVL87:
 203:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v >> 16));
 1478              		.loc 7 203 0
 1479 006e 6C48     		ldr	r0, .L148
 1480 0070 C6F30741 		ubfx	r1, r6, #16, #8
 1481 0074 B847     		blx	r7
 1482              	.LVL88:
 204:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v >> 8));
 1483              		.loc 7 204 0
 1484 0076 6A48     		ldr	r0, .L148
 1485 0078 C6F30721 		ubfx	r1, r6, #8, #8
 1486 007c B847     		blx	r7
 1487              	.LVL89:
 205:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v & 0xff));
 1488              		.loc 7 205 0
 1489 007e 6848     		ldr	r0, .L148
 1490 0080 F1B2     		uxtb	r1, r6
 1491 0082 B847     		blx	r7
 1492              	.LVL90:
 1493              	.L105:
 1494              	.LBE774:
 1495              	.LBE777:
 1496              	.LBB778:
 1497              	.LBB779:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 1498              		.loc 7 287 0
 1499 0084 6368     		ldr	r3, [r4, #4]
 1500 0086 6648     		ldr	r0, .L148
 1501 0088 002B     		cmp	r3, #0
 1502 008a 00F0B880 		beq	.L139
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 1503              		.loc 7 290 0
 1504 008e 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 1505              		.loc 7 291 0
 1506 0090 6B49     		ldr	r1, .L148+32
 1507 0092 0CBF     		ite	eq
 1508 0094 634B     		ldreq	r3, .L148+4
 1509              		.loc 7 294 0
 1510 0096 644B     		ldrne	r3, .L148+8
 1511 0098 9847     		blx	r3
 1512              	.LVL91:
 1513              	.L108:
 1514              	.LBE779:
 1515              	.LBE778:
 1516              	.LBB783:
 1517              	.LBB784:
  49:control.h     **** 	static inline int getShallSpeed(){ return v_shall; }
 1518              		.loc 8 49 0
 1519 009a 6B4B     		ldr	r3, .L148+40
 1520              	.LBE784:
 1521              	.LBE783:
 1522              	.LBB786:
 1523              	.LBB787:
 218:commandHandlers.h **** 				<< Control<axis>::getShallSpeed() << " " << Control<axis>::getIsSpeed() << " "
 219:commandHandlers.h **** 				<< Control<axis>::getSpeedU() << " " << Control<axis>::getSpeedRealU() << endl;
 220:commandHandlers.h **** 	iout << "posPid enabled, vPid enabled" << endl;
 221:commandHandlers.h **** 	iout << Control<axis>::isPositionControlEnabled() << ", " << Control<axis>::isSpeedControlEnabled(
 1524              		.loc 1 221 0
 1525 009c 604E     		ldr	r6, .L148
 1526              	.LBE787:
 1527              	.LBE786:
 1528              	.LBB789:
 1529              	.LBB785:
  49:control.h     **** 	static inline int getShallSpeed(){ return v_shall; }
 1530              		.loc 8 49 0
 1531 009e 1968     		ldr	r1, [r3, #0]
 1532              	.LBE785:
 1533              	.LBE789:
 1534              	.LBB790:
 1535              	.LBB788:
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 1536              		.loc 7 236 0
 1537 00a0 3046     		mov	r0, r6
 1538 00a2 A847     		blx	r5
 1539              	.LVL92:
 1540              	.LBE788:
 1541              	.LBE790:
 1542              	.LBB791:
 1543              	.LBB792:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 1544              		.loc 7 287 0
 1545 00a4 6368     		ldr	r3, [r4, #4]
 1546 00a6 002B     		cmp	r3, #0
 1547 00a8 00F0A380 		beq	.L140
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 1548              		.loc 7 290 0
 1549 00ac 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 1550              		.loc 7 291 0
 1551 00ae 3046     		mov	r0, r6
 1552 00b0 6349     		ldr	r1, .L148+32
 1553 00b2 0CBF     		ite	eq
 1554 00b4 5B4B     		ldreq	r3, .L148+4
 1555              		.loc 7 294 0
 1556 00b6 5C4B     		ldrne	r3, .L148+8
 1557 00b8 9847     		blx	r3
 1558              	.LVL93:
 1559              	.L111:
 1560              	.LBE792:
 1561              	.LBE791:
 1562              	.LBB796:
 1563              	.LBB797:
  50:control.h     **** 	static inline int getIsSpeed(){ return v_is; }
 1564              		.loc 8 50 0
 1565 00ba 644B     		ldr	r3, .L148+44
 1566              	.LBE797:
 1567              	.LBE796:
 1568              	.LBB799:
 1569              	.LBB800:
 1570              		.loc 1 221 0
 1571 00bc 584E     		ldr	r6, .L148
 1572              	.LBE800:
 1573              	.LBE799:
 1574              	.LBB802:
 1575              	.LBB798:
  50:control.h     **** 	static inline int getIsSpeed(){ return v_is; }
 1576              		.loc 8 50 0
 1577 00be 1968     		ldr	r1, [r3, #0]
 1578              	.LBE798:
 1579              	.LBE802:
 1580              	.LBB803:
 1581              	.LBB801:
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 1582              		.loc 7 236 0
 1583 00c0 3046     		mov	r0, r6
 1584 00c2 A847     		blx	r5
 1585              	.LVL94:
 1586              	.LBE801:
 1587              	.LBE803:
 1588              	.LBB804:
 1589              	.LBB805:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 1590              		.loc 7 287 0
 1591 00c4 6368     		ldr	r3, [r4, #4]
 1592 00c6 002B     		cmp	r3, #0
 1593 00c8 00F08D80 		beq	.L141
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 1594              		.loc 7 290 0
 1595 00cc 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 1596              		.loc 7 291 0
 1597 00ce 3046     		mov	r0, r6
 1598 00d0 5B49     		ldr	r1, .L148+32
 1599 00d2 0CBF     		ite	eq
 1600 00d4 534B     		ldreq	r3, .L148+4
 1601              		.loc 7 294 0
 1602 00d6 544B     		ldrne	r3, .L148+8
 1603 00d8 9847     		blx	r3
 1604              	.LVL95:
 1605              	.L114:
 1606              	.LBE805:
 1607              	.LBE804:
 1608              	.LBB809:
 1609              	.LBB810:
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 1610              		.loc 7 236 0
 1611 00da 5D4B     		ldr	r3, .L148+48
 1612              		.loc 1 221 0
 1613 00dc 504E     		ldr	r6, .L148
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 1614              		.loc 7 236 0
 1615 00de 1968     		ldr	r1, [r3, #0]
 1616 00e0 3046     		mov	r0, r6
 1617 00e2 A847     		blx	r5
 1618              	.LVL96:
 1619              	.LBE810:
 1620              	.LBE809:
 1621              	.LBB811:
 1622              	.LBB812:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 1623              		.loc 7 287 0
 1624 00e4 6368     		ldr	r3, [r4, #4]
 1625 00e6 002B     		cmp	r3, #0
 1626 00e8 77D0     		beq	.L142
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 1627              		.loc 7 290 0
 1628 00ea 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 1629              		.loc 7 291 0
 1630 00ec 3046     		mov	r0, r6
 1631 00ee 5449     		ldr	r1, .L148+32
 1632 00f0 0CBF     		ite	eq
 1633 00f2 4C4B     		ldreq	r3, .L148+4
 1634              		.loc 7 294 0
 1635 00f4 4C4B     		ldrne	r3, .L148+8
 1636 00f6 9847     		blx	r3
 1637              	.LVL97:
 1638              	.L117:
 1639              	.LBE812:
 1640              	.LBE811:
 1641              	.LBB816:
 1642              	.LBB817:
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 1643              		.loc 7 236 0
 1644 00f8 564B     		ldr	r3, .L148+52
 1645              		.loc 1 221 0
 1646 00fa 494E     		ldr	r6, .L148
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 1647              		.loc 7 236 0
 1648 00fc 1968     		ldr	r1, [r3, #0]
 1649 00fe 3046     		mov	r0, r6
 1650 0100 A847     		blx	r5
 1651              	.LVL98:
 1652              	.LBE817:
 1653              	.LBE816:
 1654              	.LBB818:
 1655              	.LBB819:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 1656              		.loc 7 122 0
 1657 0102 6368     		ldr	r3, [r4, #4]
 1658 0104 002B     		cmp	r3, #0
 1659 0106 62D0     		beq	.L143
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 1660              		.loc 7 126 0
 1661 0108 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 1662              		.loc 7 125 0
 1663 010a 022B     		cmp	r3, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 1664              		.loc 7 126 0
 1665 010c 3046     		mov	r0, r6
 1666 010e 0CBF     		ite	eq
 1667 0110 474B     		ldreq	r3, .L148+16
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 1668              		.loc 7 129 0
 1669 0112 484B     		ldrne	r3, .L148+20
 1670 0114 9847     		blx	r3
 1671              	.LVL99:
 1672              	.L120:
 1673              	.LBE819:
 1674              	.LBE818:
 1675              	.LBB823:
 1676              	.LBB824:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 1677              		.loc 7 287 0
 1678 0116 6368     		ldr	r3, [r4, #4]
 1679 0118 4148     		ldr	r0, .L148
 1680 011a 002B     		cmp	r3, #0
 1681 011c 51D0     		beq	.L144
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 1682              		.loc 7 290 0
 1683 011e 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 1684              		.loc 7 291 0
 1685 0120 4D49     		ldr	r1, .L148+56
 1686 0122 0CBF     		ite	eq
 1687 0124 3F4B     		ldreq	r3, .L148+4
 1688              		.loc 7 294 0
 1689 0126 404B     		ldrne	r3, .L148+8
 1690 0128 9847     		blx	r3
 1691              	.LVL100:
 1692              	.L123:
 1693              	.LBE824:
 1694              	.LBE823:
 1695              	.LBB828:
 1696              	.LBB829:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 1697              		.loc 7 122 0
 1698 012a 6368     		ldr	r3, [r4, #4]
 1699 012c 3C48     		ldr	r0, .L148
 1700 012e 002B     		cmp	r3, #0
 1701 0130 41D0     		beq	.L145
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 1702              		.loc 7 126 0
 1703 0132 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 1704              		.loc 7 125 0
 1705 0134 022B     		cmp	r3, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 1706              		.loc 7 126 0
 1707 0136 0CBF     		ite	eq
 1708 0138 3D4B     		ldreq	r3, .L148+16
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 1709              		.loc 7 129 0
 1710 013a 3E4B     		ldrne	r3, .L148+20
 1711 013c 9847     		blx	r3
 1712              	.LVL101:
 1713              	.L126:
 1714              	.LBE829:
 1715              	.LBE828:
 1716              	.LBB833:
 1717              	.LBB834:
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 1718              		.loc 7 236 0
 1719 013e 474B     		ldr	r3, .L148+60
 1720              		.loc 1 221 0
 1721 0140 374E     		ldr	r6, .L148
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 1722              		.loc 7 236 0
 1723 0142 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 1724 0144 3046     		mov	r0, r6
 1725 0146 A847     		blx	r5
 1726              	.LVL102:
 1727              	.LBE834:
 1728              	.LBE833:
 1729              	.LBB835:
 1730              	.LBB836:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 1731              		.loc 7 287 0
 1732 0148 6368     		ldr	r3, [r4, #4]
 1733 014a 002B     		cmp	r3, #0
 1734 014c 2DD0     		beq	.L146
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 1735              		.loc 7 290 0
 1736 014e 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 1737              		.loc 7 291 0
 1738 0150 3046     		mov	r0, r6
 1739 0152 4349     		ldr	r1, .L148+64
 1740 0154 0CBF     		ite	eq
 1741 0156 334B     		ldreq	r3, .L148+4
 1742              		.loc 7 294 0
 1743 0158 334B     		ldrne	r3, .L148+8
 1744 015a 9847     		blx	r3
 1745              	.LVL103:
 1746              	.L129:
 1747              	.LBE836:
 1748              	.LBE835:
 1749              	.LBB840:
 1750              	.LBB841:
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 1751              		.loc 7 236 0
 1752 015c 414B     		ldr	r3, .L148+68
 1753              		.loc 1 221 0
 1754 015e 304E     		ldr	r6, .L148
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 1755              		.loc 7 236 0
 1756 0160 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 1757 0162 3046     		mov	r0, r6
 1758 0164 A847     		blx	r5
 1759              	.LVL104:
 1760              	.LBE841:
 1761              	.LBE840:
 1762              	.LBB842:
 1763              	.LBB843:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 1764              		.loc 7 122 0
 1765 0166 6368     		ldr	r3, [r4, #4]
 1766 0168 C3B1     		cbz	r3, .L147
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 1767              		.loc 7 126 0
 1768 016a 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 1769              		.loc 7 125 0
 1770 016c 022B     		cmp	r3, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 1771              		.loc 7 126 0
 1772 016e 3046     		mov	r0, r6
 1773 0170 0CBF     		ite	eq
 1774 0172 2F4B     		ldreq	r3, .L148+16
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 1775              		.loc 7 129 0
 1776 0174 2F4B     		ldrne	r3, .L148+20
 1777 0176 9847     		blx	r3
 1778              	.LVL105:
 1779              	.LBE843:
 1780              	.LBE842:
 222:commandHandlers.h **** 	return false;
 223:commandHandlers.h **** }
 1781              		.loc 1 223 0
 1782 0178 0020     		movs	r0, #0
 1783 017a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1784              	.LVL106:
 1785              	.L134:
 1786              	.LBB847:
 1787              	.LBB753:
 1788              	.LBB751:
 1789              	.LBB752:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 1790              		.loc 7 288 0
 1791 017c 2068     		ldr	r0, [r4, #0]
 1792              	.LVL107:
 1793 017e 2B49     		ldr	r1, .L148+12
 1794              	.LVL108:
 1795 0180 0368     		ldr	r3, [r0, #0]
 1796 0182 DB68     		ldr	r3, [r3, #12]
 1797 0184 9847     		blx	r3
 1798              	.LVL109:
 1799              	.LBE752:
 1800              	.LBE751:
 1801              	.LBE753:
 1802              	.LBE847:
 1803              	.LBB848:
 1804              	.LBB758:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 1805              		.loc 7 122 0
 1806 0186 6368     		ldr	r3, [r4, #4]
 1807 0188 2548     		ldr	r0, .L148
 1808 018a 002B     		cmp	r3, #0
 1809 018c 7FF44AAF 		bne	.L98
 1810              	.LVL110:
 1811              	.L135:
 1812              	.LBB756:
 1813              	.LBB757:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 1814              		.loc 7 123 0
 1815 0190 0068     		ldr	r0, [r0, #0]
 1816 0192 0368     		ldr	r3, [r0, #0]
 1817 0194 0A21     		movs	r1, #10
 1818 0196 9B68     		ldr	r3, [r3, #8]
 1819 0198 9847     		blx	r3
 1820              	.LVL111:
 1821 019a 49E7     		b	.L99
 1822              	.LVL112:
 1823              	.L147:
 1824              	.LBE757:
 1825              	.LBE756:
 1826              	.LBE758:
 1827              	.LBE848:
 1828              	.LBB849:
 1829              	.LBB846:
 1830              	.LBB844:
 1831              	.LBB845:
 1832 019c 3068     		ldr	r0, [r6, #0]
 1833 019e 0368     		ldr	r3, [r0, #0]
 1834 01a0 0A21     		movs	r1, #10
 1835 01a2 9B68     		ldr	r3, [r3, #8]
 1836 01a4 9847     		blx	r3
 1837              	.LVL113:
 1838              	.LBE845:
 1839              	.LBE844:
 1840              	.LBE846:
 1841              	.LBE849:
 1842              		.loc 1 223 0
 1843 01a6 0020     		movs	r0, #0
 1844 01a8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1845              	.LVL114:
 1846              	.L146:
 1847              	.LBB850:
 1848              	.LBB839:
 1849              	.LBB837:
 1850              	.LBB838:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 1851              		.loc 7 288 0
 1852 01aa 3068     		ldr	r0, [r6, #0]
 1853 01ac 2C49     		ldr	r1, .L148+64
 1854 01ae 0368     		ldr	r3, [r0, #0]
 1855 01b0 DB68     		ldr	r3, [r3, #12]
 1856 01b2 9847     		blx	r3
 1857              	.LVL115:
 1858 01b4 D2E7     		b	.L129
 1859              	.LVL116:
 1860              	.L145:
 1861              	.LBE838:
 1862              	.LBE837:
 1863              	.LBE839:
 1864              	.LBE850:
 1865              	.LBB851:
 1866              	.LBB832:
 1867              	.LBB830:
 1868              	.LBB831:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 1869              		.loc 7 123 0
 1870 01b6 0068     		ldr	r0, [r0, #0]
 1871 01b8 0368     		ldr	r3, [r0, #0]
 1872 01ba 0A21     		movs	r1, #10
 1873 01bc 9B68     		ldr	r3, [r3, #8]
 1874 01be 9847     		blx	r3
 1875              	.LVL117:
 1876 01c0 BDE7     		b	.L126
 1877              	.LVL118:
 1878              	.L144:
 1879              	.LBE831:
 1880              	.LBE830:
 1881              	.LBE832:
 1882              	.LBE851:
 1883              	.LBB852:
 1884              	.LBB827:
 1885              	.LBB825:
 1886              	.LBB826:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 1887              		.loc 7 288 0
 1888 01c2 0068     		ldr	r0, [r0, #0]
 1889 01c4 2449     		ldr	r1, .L148+56
 1890 01c6 0368     		ldr	r3, [r0, #0]
 1891 01c8 DB68     		ldr	r3, [r3, #12]
 1892 01ca 9847     		blx	r3
 1893              	.LVL119:
 1894 01cc ADE7     		b	.L123
 1895              	.LVL120:
 1896              	.L143:
 1897              	.LBE826:
 1898              	.LBE825:
 1899              	.LBE827:
 1900              	.LBE852:
 1901              	.LBB853:
 1902              	.LBB822:
 1903              	.LBB820:
 1904              	.LBB821:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 1905              		.loc 7 123 0
 1906 01ce 3068     		ldr	r0, [r6, #0]
 1907 01d0 0368     		ldr	r3, [r0, #0]
 1908 01d2 0A21     		movs	r1, #10
 1909 01d4 9B68     		ldr	r3, [r3, #8]
 1910 01d6 9847     		blx	r3
 1911              	.LVL121:
 1912 01d8 9DE7     		b	.L120
 1913              	.LVL122:
 1914              	.L142:
 1915              	.LBE821:
 1916              	.LBE820:
 1917              	.LBE822:
 1918              	.LBE853:
 1919              	.LBB854:
 1920              	.LBB815:
 1921              	.LBB813:
 1922              	.LBB814:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 1923              		.loc 7 288 0
 1924 01da 3068     		ldr	r0, [r6, #0]
 1925 01dc 1849     		ldr	r1, .L148+32
 1926 01de 0368     		ldr	r3, [r0, #0]
 1927 01e0 DB68     		ldr	r3, [r3, #12]
 1928 01e2 9847     		blx	r3
 1929              	.LVL123:
 1930 01e4 88E7     		b	.L117
 1931              	.LVL124:
 1932              	.L141:
 1933              	.LBE814:
 1934              	.LBE813:
 1935              	.LBE815:
 1936              	.LBE854:
 1937              	.LBB855:
 1938              	.LBB808:
 1939              	.LBB806:
 1940              	.LBB807:
 1941 01e6 3068     		ldr	r0, [r6, #0]
 1942 01e8 1549     		ldr	r1, .L148+32
 1943 01ea 0368     		ldr	r3, [r0, #0]
 1944 01ec DB68     		ldr	r3, [r3, #12]
 1945 01ee 9847     		blx	r3
 1946              	.LVL125:
 1947 01f0 73E7     		b	.L114
 1948              	.LVL126:
 1949              	.L140:
 1950              	.LBE807:
 1951              	.LBE806:
 1952              	.LBE808:
 1953              	.LBE855:
 1954              	.LBB856:
 1955              	.LBB795:
 1956              	.LBB793:
 1957              	.LBB794:
 1958 01f2 3068     		ldr	r0, [r6, #0]
 1959 01f4 1249     		ldr	r1, .L148+32
 1960 01f6 0368     		ldr	r3, [r0, #0]
 1961 01f8 DB68     		ldr	r3, [r3, #12]
 1962 01fa 9847     		blx	r3
 1963              	.LVL127:
 1964 01fc 5DE7     		b	.L111
 1965              	.LVL128:
 1966              	.L139:
 1967              	.LBE794:
 1968              	.LBE793:
 1969              	.LBE795:
 1970              	.LBE856:
 1971              	.LBB857:
 1972              	.LBB782:
 1973              	.LBB780:
 1974              	.LBB781:
 1975 01fe 0068     		ldr	r0, [r0, #0]
 1976 0200 0F49     		ldr	r1, .L148+32
 1977 0202 0368     		ldr	r3, [r0, #0]
 1978 0204 DB68     		ldr	r3, [r3, #12]
 1979 0206 9847     		blx	r3
 1980              	.LVL129:
 1981 0208 47E7     		b	.L108
 1982              	.LVL130:
 1983              	.L137:
 1984              	.LBE781:
 1985              	.LBE780:
 1986              	.LBE782:
 1987              	.LBE857:
 1988              	.LBB858:
 1989              	.LBB775:
 193:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeInteger(v);
 1990              		.loc 7 193 0
 1991 020a 0548     		ldr	r0, .L148
 1992 020c 3146     		mov	r1, r6
 1993 020e A847     		blx	r5
 1994              	.LVL131:
 1995 0210 38E7     		b	.L105
 1996              	.LVL132:
 1997              	.L136:
 1998              	.LBE775:
 1999              	.LBE858:
 2000              	.LBB859:
 2001              	.LBB771:
 2002              	.LBB769:
 2003              	.LBB770:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 2004              		.loc 7 288 0
 2005 0212 3068     		ldr	r0, [r6, #0]
 2006 0214 0A49     		ldr	r1, .L148+32
 2007 0216 0368     		ldr	r3, [r0, #0]
 2008 0218 DB68     		ldr	r3, [r3, #12]
 2009 021a 9847     		blx	r3
 2010              	.LVL133:
 2011 021c 19E7     		b	.L102
 2012              	.L149:
 2013 021e 00BF     		.align	2
 2014              	.L148:
 2015 0220 00000000 		.word	.LANCHOR0
 2016 0224 00000000 		.word	_ZN4xpcc8IOStream8writeBinEPKc
 2017 0228 00000000 		.word	_ZN4xpcc8IOStream8writeHexEPKc
 2018 022c 00000000 		.word	.LC0
 2019 0230 00000000 		.word	_ZN4xpcc8IOStream8writeBinEh
 2020 0234 00000000 		.word	_ZN4xpcc8IOStream8writeHexEh
 2021 0238 00000000 		.word	_ZN7ControlIL4Axis0EE9pos_shallE
 2022 023c 00000000 		.word	_ZN4xpcc8IOStream12writeIntegerEl
 2023 0240 18000000 		.word	.LC1
 2024 0244 00000000 		.word	_ZN7ControlIL4Axis0EE13getIsPositionEv
 2025 0248 00000000 		.word	_ZN7ControlIL4Axis0EE7v_shallE
 2026 024c 00000000 		.word	_ZN7ControlIL4Axis0EE4v_isE
 2027 0250 00000000 		.word	_ZN7ControlIL4Axis0EE3v_uE
 2028 0254 00000000 		.word	_ZN7ControlIL4Axis0EE7v_urealE
 2029 0258 1C000000 		.word	.LC2
 2030 025c 00000000 		.word	_ZN7ControlIL4Axis0EE22positionControlEnabledE
 2031 0260 3C000000 		.word	.LC3
 2032 0264 00000000 		.word	_ZN7ControlIL4Axis0EE19speedControlEnabledE
 2033              	.LVL134:
 2034              	.L138:
 2035              	.LBE770:
 2036              	.LBE769:
 2037              	.LBE771:
 2038              	.LBE859:
 2039              	.LBB860:
 2040              	.LBB776:
 196:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v >> 24));
 2041              		.loc 7 196 0
 2042 0268 074F     		ldr	r7, .L150
 2043 026a 0848     		ldr	r0, .L150+4
 2044 026c 310E     		lsrs	r1, r6, #24
 2045 026e B847     		blx	r7
 2046              	.LVL135:
 197:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v >> 16));
 2047              		.loc 7 197 0
 2048 0270 C6F30741 		ubfx	r1, r6, #16, #8
 2049 0274 0548     		ldr	r0, .L150+4
 2050 0276 B847     		blx	r7
 2051              	.LVL136:
 198:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v >> 8));
 2052              		.loc 7 198 0
 2053 0278 C6F30721 		ubfx	r1, r6, #8, #8
 2054 027c 0348     		ldr	r0, .L150+4
 2055 027e B847     		blx	r7
 2056              	.LVL137:
 199:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v & 0xff));
 2057              		.loc 7 199 0
 2058 0280 0248     		ldr	r0, .L150+4
 2059 0282 F1B2     		uxtb	r1, r6
 2060 0284 B847     		blx	r7
 2061              	.LVL138:
 2062 0286 FDE6     		b	.L105
 2063              	.L151:
 2064              		.align	2
 2065              	.L150:
 2066 0288 00000000 		.word	_ZN4xpcc8IOStream8writeBinEh
 2067 028c 00000000 		.word	.LANCHOR0
 2068              	.LBE776:
 2069              	.LBE860:
 2070              		.cfi_endproc
 2071              	.LFE1128:
 2073              		.global	__aeabi_f2d
 2074              		.global	__aeabi_dcmpgt
 2075              		.global	__aeabi_dcmplt
 2076              		.global	__aeabi_dmul
 2077              		.global	__aeabi_d2iz
 2078              		.section	.text._ZN8Handlers15setSpeedHandlerIL4Axis2EEEbPKci,"axG",%progbits,_ZN8Handlers15setSpee
 2079              		.align	2
 2080              		.weak	_ZN8Handlers15setSpeedHandlerIL4Axis2EEEbPKci
 2081              		.thumb
 2082              		.thumb_func
 2084              	_ZN8Handlers15setSpeedHandlerIL4Axis2EEEbPKci:
 2085              	.LFB1125:
  62:commandHandlers.h **** static bool setSpeedHandler(const char* cmd, int length){
 2086              		.loc 1 62 0
 2087              		.cfi_startproc
 2088              		@ args = 0, pretend = 0, frame = 0
 2089              		@ frame_needed = 0, uses_anonymous_args = 0
 2090              	.LVL139:
 2091 0000 70B5     		push	{r4, r5, r6, lr}
 2092              	.LCFI14:
 2093              		.cfi_def_cfa_offset 16
 2094              		.cfi_offset 4, -16
 2095              		.cfi_offset 5, -12
 2096              		.cfi_offset 6, -8
 2097              		.cfi_offset 14, -4
 2098              	.LBB875:
  63:commandHandlers.h **** 	float speed = atof2(cmd, length, 2.f);
 2099              		.loc 1 63 0
 2100 0002 4FF08042 		mov	r2, #1073741824
 2101              	.LBE875:
  62:commandHandlers.h **** static bool setSpeedHandler(const char* cmd, int length){
 2102              		.loc 1 62 0
 2103 0006 2DED028B 		fstmfdd	sp!, {d8}
 2104              	.LCFI15:
 2105              		.cfi_def_cfa_offset 24
 2106              		.cfi_offset 80, -24
 2107              	.LBB880:
  63:commandHandlers.h **** 	float speed = atof2(cmd, length, 2.f);
 2108              		.loc 1 63 0
 2109 000a 334B     		ldr	r3, .L168+8
 2110 000c 9847     		blx	r3
 2111              	.LVL140:
 2112 000e 08EE100A 		fmsr	s16, r0
 2113              	.LVL141:
  64:commandHandlers.h **** 	if(speed == 2.f){
 2114              		.loc 1 64 0
 2115 0012 F0EE007A 		fconsts	s15, #0
 2116 0016 B4EE678A 		fcmps	s16, s15
 2117 001a F1EE10FA 		fmstat
 2118 001e 1ED0     		beq	.L163
  68:commandHandlers.h **** 	Utils::startLoggingControl();
 2119              		.loc 1 68 0
 2120 0020 2E4B     		ldr	r3, .L168+12
  69:commandHandlers.h **** 	Control<ALL>::enablePositionControl(false);
 2121              		.loc 1 69 0
 2122 0022 2F4E     		ldr	r6, .L168+16
  68:commandHandlers.h **** 	Utils::startLoggingControl();
 2123              		.loc 1 68 0
 2124 0024 9847     		blx	r3
 2125              	.LVL142:
  69:commandHandlers.h **** 	Control<ALL>::enablePositionControl(false);
 2126              		.loc 1 69 0
 2127 0026 0020     		movs	r0, #0
 2128 0028 B047     		blx	r6
 2129              	.LVL143:
  70:commandHandlers.h **** 	Control<ALL>::enableSpeedControl(true);
 2130              		.loc 1 70 0
 2131 002a 0120     		movs	r0, #1
 2132 002c 2D4B     		ldr	r3, .L168+20
 2133 002e 9847     		blx	r3
 2134              	.LVL144:
  71:commandHandlers.h **** 	Control<axis>::setShallSpeed(speed);
 2135              		.loc 1 71 0
 2136 0030 2D4B     		ldr	r3, .L168+24
 2137 0032 18EE100A 		fmrs	r0, s16
 2138 0036 9847     		blx	r3
 2139              	.LVL145:
 2140 0038 0446     		mov	r4, r0
 2141 003a 0D46     		mov	r5, r1
 2142              	.LVL146:
 2143              	.LBB876:
 2144              	.LBB877:
 2145              		.file 9 "control_impl.h"
   1:control_impl.h **** /*
   2:control_impl.h ****  * control.cpp
   3:control_impl.h ****  *
   4:control_impl.h ****  *  Created on: Nov 25, 2013
   5:control_impl.h ****  *      Author: jonas
   6:control_impl.h ****  */
   7:control_impl.h **** 
   8:control_impl.h **** 
   9:control_impl.h **** #include "project.h"
  10:control_impl.h **** #include "control.h"
  11:control_impl.h **** #include "motor.h"
  12:control_impl.h **** #include "hallSensor.h"
  13:control_impl.h **** #include "securityController.h"
  14:control_impl.h **** 
  15:control_impl.h **** template<Axis axis>
  16:control_impl.h **** class Motor;
  17:control_impl.h **** 
  18:control_impl.h **** 
  19:control_impl.h **** template<Axis axis>
  20:control_impl.h **** bool Control<axis>::init(){
  21:control_impl.h **** 	Control<axis>::v_is = 0;
  22:control_impl.h **** 	Control<axis>::v_shall = 0;
  23:control_impl.h **** 	Control<axis>::last_pos = 0;
  24:control_impl.h **** 	Control<axis>::positionControlEnabled = true;
  25:control_impl.h **** 	Control<axis>::speedControlEnabled = true;
  26:control_impl.h **** 	//param order: P, I, D, maxErrorSum, maxOutput
  27:control_impl.h **** 	Control<axis>::pos_pid = xpcc::Pid<float, 1>(CONTROLX_KP, CONTROLX_KI, CONTROLX_KD,
  28:control_impl.h **** 			CONTROLX_MAX_ERRORSUM, CONTROLX_MAX_OUTPUT);
  29:control_impl.h **** 	Control<axis>::v_pid = xpcc::Pid<float, 1>(CONTROLV_KP, CONTROLV_KI, CONTROLV_KD,
  30:control_impl.h **** 			CONTROLV_MAX_ERRORSUM, CONTROLV_MAX_OUTPUT);
  31:control_impl.h **** 	return true;
  32:control_impl.h **** }
  33:control_impl.h **** 
  34:control_impl.h **** 
  35:control_impl.h **** template<Axis axis>
  36:control_impl.h **** void Control<axis>::update(bool externalLimitation){
  37:control_impl.h **** 	int enc = getIsPosition();
  38:control_impl.h **** 
  39:control_impl.h **** 	if(positionControlEnabled){
  40:control_impl.h **** 		pos_pid.update(pos_shall - enc, externalLimitation);
  41:control_impl.h **** 		v_shall = pos_pid.getValue();
  42:control_impl.h **** 		/*if(abs(pos_shall - enc) <= CONTROLX_DEADBAND){
  43:control_impl.h **** 			v_shall = 0;
  44:control_impl.h **** 		}*/
  45:control_impl.h **** 	}
  46:control_impl.h **** 
  47:control_impl.h **** 	v_is = (enc - last_pos)*CONTROL_FREQUENCY;
  48:control_impl.h **** 	last_pos = enc;
  49:control_impl.h **** 
  50:control_impl.h **** 	if(speedControlEnabled){
  51:control_impl.h **** 		v_pid.update(v_shall - v_is);
  52:control_impl.h **** 		v_u = v_pid.getValue();
  53:control_impl.h **** 		v_ureal = v_u;
  54:control_impl.h **** 		SecurityController<axis>::saturate(v_ureal);
  55:control_impl.h **** 		if((abs(pos_shall - enc) <= CONTROLX_DEADBAND && positionControlEnabled)
  56:control_impl.h **** 				|| (!positionControlEnabled && abs(v_shall - v_is) < 1000)){
  57:control_impl.h **** 			v_ureal = 0;
  58:control_impl.h **** 			v_pid.reset();
  59:control_impl.h **** 			pos_pid.reset();
  60:control_impl.h **** 		}
  61:control_impl.h **** 		Motor<axis>::setSpeed(v_ureal);
  62:control_impl.h **** 	}
  63:control_impl.h **** }
  64:control_impl.h **** 
  65:control_impl.h **** template<Axis axis>
  66:control_impl.h **** void Control<axis>::setShallPosition(int position){
  67:control_impl.h **** 	Control<ALL>::resetPosPid();
  68:control_impl.h **** 	Control<ALL>::resetVPid();
  69:control_impl.h **** 	pos_shall = position;
  70:control_impl.h **** }
  71:control_impl.h **** 
  72:control_impl.h **** //max speed is 5500rpm*400 counts/rev
  73:control_impl.h **** template<Axis axis>
  74:control_impl.h **** void Control<axis>::setShallSpeed(double speed){
  75:control_impl.h **** 	//disable position control
  76:control_impl.h **** 	Control<ALL>::enablePositionControl(false);
 2146              		.loc 9 76 0
 2147 003c 0020     		movs	r0, #0
 2148 003e B047     		blx	r6
 2149              	.LVL147:
  77:control_impl.h **** 	if(speed > 1)
 2150              		.loc 9 77 0
 2151 0040 2046     		mov	r0, r4
 2152 0042 2946     		mov	r1, r5
 2153 0044 0022     		movs	r2, #0
 2154 0046 294B     		ldr	r3, .L168+28
 2155 0048 294E     		ldr	r6, .L168+32
 2156 004a B047     		blx	r6
 2157              	.LVL148:
 2158 004c E0B1     		cbz	r0, .L164
 2159 004e 4BF66872 		movw	r2, #49000
 2160              	.LVL149:
 2161              	.L160:
  78:control_impl.h **** 		speed = 1;
  79:control_impl.h **** 	if(speed < -1)
  80:control_impl.h **** 		speed = -1;
  81:control_impl.h **** 	v_shall = speed*MOTOR_MAX_SPEED;
 2162              		.loc 9 81 0
 2163 0052 284B     		ldr	r3, .L168+36
  73:commandHandlers.h **** 	return true;
 2164              		.loc 1 73 0
 2165 0054 0120     		movs	r0, #1
 2166              		.loc 9 81 0
 2167 0056 1A60     		str	r2, [r3, #0]
 2168              	.L158:
 2169              	.LBE877:
 2170              	.LBE876:
 2171              	.LBE880:
  74:commandHandlers.h **** }
 2172              		.loc 1 74 0
 2173 0058 BDEC028B 		fldmfdd	sp!, {d8}
 2174 005c 70BD     		pop	{r4, r5, r6, pc}
 2175              	.LVL150:
 2176              	.L163:
 2177              	.LBB881:
 2178              	.LBB882:
 2179              	.LBB883:
 2180              	.LBB884:
 2181              	.LBB885:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 2182              		.loc 7 287 0
 2183 005e 264C     		ldr	r4, .L168+40
 2184 0060 6368     		ldr	r3, [r4, #4]
 2185 0062 0BB3     		cbz	r3, .L165
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 2186              		.loc 7 290 0
 2187 0064 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 2188              		.loc 7 291 0
 2189 0066 2046     		mov	r0, r4
 2190              	.LVL151:
 2191 0068 2449     		ldr	r1, .L168+44
 2192 006a 0CBF     		ite	eq
 2193 006c 244B     		ldreq	r3, .L168+48
 2194              		.loc 7 294 0
 2195 006e 254B     		ldrne	r3, .L168+52
 2196 0070 9847     		blx	r3
 2197              	.LVL152:
 2198              	.L155:
 2199              	.LBE885:
 2200              	.LBE884:
 2201              	.LBB889:
 2202              	.LBB890:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 2203              		.loc 7 122 0
 2204 0072 6468     		ldr	r4, [r4, #4]
 2205 0074 2048     		ldr	r0, .L168+40
 2206 0076 84B1     		cbz	r4, .L166
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 2207              		.loc 7 126 0
 2208 0078 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 2209              		.loc 7 125 0
 2210 007a 022C     		cmp	r4, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 2211              		.loc 7 126 0
 2212 007c 0CBF     		ite	eq
 2213 007e 224B     		ldreq	r3, .L168+56
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 2214              		.loc 7 129 0
 2215 0080 224B     		ldrne	r3, .L168+60
 2216 0082 9847     		blx	r3
 2217              	.LVL153:
 2218 0084 0020     		movs	r0, #0
 2219 0086 E7E7     		b	.L158
 2220              	.LVL154:
 2221              	.L164:
 2222              	.LBE890:
 2223              	.LBE889:
 2224              	.LBE883:
 2225              	.LBE882:
 2226              	.LBE881:
 2227              	.LBB898:
 2228              	.LBB879:
 2229              	.LBB878:
  79:control_impl.h **** 	if(speed < -1)
 2230              		.loc 9 79 0
 2231 0088 2046     		mov	r0, r4
 2232 008a 2946     		mov	r1, r5
 2233 008c 0022     		movs	r2, #0
 2234 008e 204B     		ldr	r3, .L168+64
 2235 0090 204E     		ldr	r6, .L168+68
 2236 0092 B047     		blx	r6
 2237              	.LVL155:
 2238 0094 70B1     		cbz	r0, .L167
 2239 0096 204A     		ldr	r2, .L168+72
 2240 0098 DBE7     		b	.L160
 2241              	.LVL156:
 2242              	.L166:
 2243              	.LBE878:
 2244              	.LBE879:
 2245              	.LBE898:
 2246              	.LBB899:
 2247              	.LBB897:
 2248              	.LBB896:
 2249              	.LBB894:
 2250              	.LBB893:
 2251              	.LBB891:
 2252              	.LBB892:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 2253              		.loc 7 123 0
 2254 009a 0068     		ldr	r0, [r0, #0]
 2255 009c 0368     		ldr	r3, [r0, #0]
 2256 009e 0A21     		movs	r1, #10
 2257 00a0 9B68     		ldr	r3, [r3, #8]
 2258 00a2 9847     		blx	r3
 2259              	.LVL157:
 2260 00a4 2046     		mov	r0, r4
 2261 00a6 D7E7     		b	.L158
 2262              	.LVL158:
 2263              	.L165:
 2264              	.LBE892:
 2265              	.LBE891:
 2266              	.LBE893:
 2267              	.LBE894:
 2268              	.LBB895:
 2269              	.LBB888:
 2270              	.LBB886:
 2271              	.LBB887:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 2272              		.loc 7 288 0
 2273 00a8 2068     		ldr	r0, [r4, #0]
 2274              	.LVL159:
 2275 00aa 1449     		ldr	r1, .L168+44
 2276 00ac 0368     		ldr	r3, [r0, #0]
 2277 00ae DB68     		ldr	r3, [r3, #12]
 2278 00b0 9847     		blx	r3
 2279              	.LVL160:
 2280 00b2 DEE7     		b	.L155
 2281              	.LVL161:
 2282              	.L167:
 2283 00b4 06A3     		adr	r3, .L168
 2284 00b6 D3E90023 		ldrd	r2, [r3]
 2285 00ba 2046     		mov	r0, r4
 2286 00bc 2946     		mov	r1, r5
 2287 00be 174C     		ldr	r4, .L168+76
 2288              	.LVL162:
 2289 00c0 A047     		blx	r4
 2290              	.LVL163:
 2291 00c2 174B     		ldr	r3, .L168+80
 2292 00c4 9847     		blx	r3
 2293              	.LVL164:
 2294 00c6 0246     		mov	r2, r0
 2295 00c8 C3E7     		b	.L160
 2296              	.L169:
 2297 00ca 00BFAFF3 		.align	3
 2297      0080
 2298              	.L168:
 2299 00d0 00000000 		.word	0
 2300 00d4 00EDE740 		.word	1088941312
 2301 00d8 00000000 		.word	_Z5atof2PKcif
 2302 00dc 00000000 		.word	_ZN5Utils19startLoggingControlEv
 2303 00e0 00000000 		.word	_ZN7ControlIL4Axis5EE21enablePositionControlEb
 2304 00e4 00000000 		.word	_ZN7ControlIL4Axis5EE18enableSpeedControlEb
 2305 00e8 00000000 		.word	__aeabi_f2d
 2306 00ec 0000F03F 		.word	1072693248
 2307 00f0 00000000 		.word	__aeabi_dcmpgt
 2308 00f4 00000000 		.word	_ZN7ControlIL4Axis2EE7v_shallE
 2309 00f8 00000000 		.word	.LANCHOR1
 2310 00fc 40000000 		.word	.LC4
 2311 0100 00000000 		.word	_ZN4xpcc8IOStream8writeBinEPKc
 2312 0104 00000000 		.word	_ZN4xpcc8IOStream8writeHexEPKc
 2313 0108 00000000 		.word	_ZN4xpcc8IOStream8writeBinEh
 2314 010c 00000000 		.word	_ZN4xpcc8IOStream8writeHexEh
 2315 0110 0000F0BF 		.word	-1074790400
 2316 0114 00000000 		.word	__aeabi_dcmplt
 2317 0118 9840FFFF 		.word	-49000
 2318 011c 00000000 		.word	__aeabi_dmul
 2319 0120 00000000 		.word	__aeabi_d2iz
 2320              	.LBE887:
 2321              	.LBE886:
 2322              	.LBE888:
 2323              	.LBE895:
 2324              	.LBE896:
 2325              	.LBE897:
 2326              	.LBE899:
 2327              		.cfi_endproc
 2328              	.LFE1125:
 2330 0124 AFF30080 		.section	.text._ZN8Handlers15setSpeedHandlerIL4Axis0EEEbPKci,"axG",%progbits,_ZN8Handlers15setSpee
 2331              		.align	2
 2332              		.weak	_ZN8Handlers15setSpeedHandlerIL4Axis0EEEbPKci
 2333              		.thumb
 2334              		.thumb_func
 2336              	_ZN8Handlers15setSpeedHandlerIL4Axis0EEEbPKci:
 2337              	.LFB1124:
  62:commandHandlers.h **** static bool setSpeedHandler(const char* cmd, int length){
 2338              		.loc 1 62 0
 2339              		.cfi_startproc
 2340              		@ args = 0, pretend = 0, frame = 0
 2341              		@ frame_needed = 0, uses_anonymous_args = 0
 2342              	.LVL165:
 2343 0000 70B5     		push	{r4, r5, r6, lr}
 2344              	.LCFI16:
 2345              		.cfi_def_cfa_offset 16
 2346              		.cfi_offset 4, -16
 2347              		.cfi_offset 5, -12
 2348              		.cfi_offset 6, -8
 2349              		.cfi_offset 14, -4
 2350              	.LBB914:
  63:commandHandlers.h **** 	float speed = atof2(cmd, length, 2.f);
 2351              		.loc 1 63 0
 2352 0002 4FF08042 		mov	r2, #1073741824
 2353              	.LBE914:
  62:commandHandlers.h **** static bool setSpeedHandler(const char* cmd, int length){
 2354              		.loc 1 62 0
 2355 0006 2DED028B 		fstmfdd	sp!, {d8}
 2356              	.LCFI17:
 2357              		.cfi_def_cfa_offset 24
 2358              		.cfi_offset 80, -24
 2359              	.LBB919:
  63:commandHandlers.h **** 	float speed = atof2(cmd, length, 2.f);
 2360              		.loc 1 63 0
 2361 000a 334B     		ldr	r3, .L186+8
 2362 000c 9847     		blx	r3
 2363              	.LVL166:
 2364 000e 08EE100A 		fmsr	s16, r0
 2365              	.LVL167:
  64:commandHandlers.h **** 	if(speed == 2.f){
 2366              		.loc 1 64 0
 2367 0012 F0EE007A 		fconsts	s15, #0
 2368 0016 B4EE678A 		fcmps	s16, s15
 2369 001a F1EE10FA 		fmstat
 2370 001e 1ED0     		beq	.L181
  68:commandHandlers.h **** 	Utils::startLoggingControl();
 2371              		.loc 1 68 0
 2372 0020 2E4B     		ldr	r3, .L186+12
  69:commandHandlers.h **** 	Control<ALL>::enablePositionControl(false);
 2373              		.loc 1 69 0
 2374 0022 2F4E     		ldr	r6, .L186+16
  68:commandHandlers.h **** 	Utils::startLoggingControl();
 2375              		.loc 1 68 0
 2376 0024 9847     		blx	r3
 2377              	.LVL168:
  69:commandHandlers.h **** 	Control<ALL>::enablePositionControl(false);
 2378              		.loc 1 69 0
 2379 0026 0020     		movs	r0, #0
 2380 0028 B047     		blx	r6
 2381              	.LVL169:
  70:commandHandlers.h **** 	Control<ALL>::enableSpeedControl(true);
 2382              		.loc 1 70 0
 2383 002a 0120     		movs	r0, #1
 2384 002c 2D4B     		ldr	r3, .L186+20
 2385 002e 9847     		blx	r3
 2386              	.LVL170:
  71:commandHandlers.h **** 	Control<axis>::setShallSpeed(speed);
 2387              		.loc 1 71 0
 2388 0030 2D4B     		ldr	r3, .L186+24
 2389 0032 18EE100A 		fmrs	r0, s16
 2390 0036 9847     		blx	r3
 2391              	.LVL171:
 2392 0038 0446     		mov	r4, r0
 2393 003a 0D46     		mov	r5, r1
 2394              	.LVL172:
 2395              	.LBB915:
 2396              	.LBB916:
  76:control_impl.h **** 	Control<ALL>::enablePositionControl(false);
 2397              		.loc 9 76 0
 2398 003c 0020     		movs	r0, #0
 2399 003e B047     		blx	r6
 2400              	.LVL173:
  77:control_impl.h **** 	if(speed > 1)
 2401              		.loc 9 77 0
 2402 0040 2046     		mov	r0, r4
 2403 0042 2946     		mov	r1, r5
 2404 0044 0022     		movs	r2, #0
 2405 0046 294B     		ldr	r3, .L186+28
 2406 0048 294E     		ldr	r6, .L186+32
 2407 004a B047     		blx	r6
 2408              	.LVL174:
 2409 004c E0B1     		cbz	r0, .L182
 2410 004e 4BF66872 		movw	r2, #49000
 2411              	.LVL175:
 2412              	.L178:
 2413              		.loc 9 81 0
 2414 0052 284B     		ldr	r3, .L186+36
  73:commandHandlers.h **** 	return true;
 2415              		.loc 1 73 0
 2416 0054 0120     		movs	r0, #1
 2417              		.loc 9 81 0
 2418 0056 1A60     		str	r2, [r3, #0]
 2419              	.L176:
 2420              	.LBE916:
 2421              	.LBE915:
 2422              	.LBE919:
  74:commandHandlers.h **** }
 2423              		.loc 1 74 0
 2424 0058 BDEC028B 		fldmfdd	sp!, {d8}
 2425 005c 70BD     		pop	{r4, r5, r6, pc}
 2426              	.LVL176:
 2427              	.L181:
 2428              	.LBB920:
 2429              	.LBB921:
 2430              	.LBB922:
 2431              	.LBB923:
 2432              	.LBB924:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 2433              		.loc 7 287 0
 2434 005e 264C     		ldr	r4, .L186+40
 2435 0060 6368     		ldr	r3, [r4, #4]
 2436 0062 0BB3     		cbz	r3, .L183
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 2437              		.loc 7 290 0
 2438 0064 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 2439              		.loc 7 291 0
 2440 0066 2046     		mov	r0, r4
 2441              	.LVL177:
 2442 0068 2449     		ldr	r1, .L186+44
 2443 006a 0CBF     		ite	eq
 2444 006c 244B     		ldreq	r3, .L186+48
 2445              		.loc 7 294 0
 2446 006e 254B     		ldrne	r3, .L186+52
 2447 0070 9847     		blx	r3
 2448              	.LVL178:
 2449              	.L173:
 2450              	.LBE924:
 2451              	.LBE923:
 2452              	.LBB928:
 2453              	.LBB929:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 2454              		.loc 7 122 0
 2455 0072 6468     		ldr	r4, [r4, #4]
 2456 0074 2048     		ldr	r0, .L186+40
 2457 0076 84B1     		cbz	r4, .L184
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 2458              		.loc 7 126 0
 2459 0078 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 2460              		.loc 7 125 0
 2461 007a 022C     		cmp	r4, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 2462              		.loc 7 126 0
 2463 007c 0CBF     		ite	eq
 2464 007e 224B     		ldreq	r3, .L186+56
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 2465              		.loc 7 129 0
 2466 0080 224B     		ldrne	r3, .L186+60
 2467 0082 9847     		blx	r3
 2468              	.LVL179:
 2469 0084 0020     		movs	r0, #0
 2470 0086 E7E7     		b	.L176
 2471              	.LVL180:
 2472              	.L182:
 2473              	.LBE929:
 2474              	.LBE928:
 2475              	.LBE922:
 2476              	.LBE921:
 2477              	.LBE920:
 2478              	.LBB937:
 2479              	.LBB918:
 2480              	.LBB917:
  79:control_impl.h **** 	if(speed < -1)
 2481              		.loc 9 79 0
 2482 0088 2046     		mov	r0, r4
 2483 008a 2946     		mov	r1, r5
 2484 008c 0022     		movs	r2, #0
 2485 008e 204B     		ldr	r3, .L186+64
 2486 0090 204E     		ldr	r6, .L186+68
 2487 0092 B047     		blx	r6
 2488              	.LVL181:
 2489 0094 70B1     		cbz	r0, .L185
 2490 0096 204A     		ldr	r2, .L186+72
 2491 0098 DBE7     		b	.L178
 2492              	.LVL182:
 2493              	.L184:
 2494              	.LBE917:
 2495              	.LBE918:
 2496              	.LBE937:
 2497              	.LBB938:
 2498              	.LBB936:
 2499              	.LBB935:
 2500              	.LBB933:
 2501              	.LBB932:
 2502              	.LBB930:
 2503              	.LBB931:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 2504              		.loc 7 123 0
 2505 009a 0068     		ldr	r0, [r0, #0]
 2506 009c 0368     		ldr	r3, [r0, #0]
 2507 009e 0A21     		movs	r1, #10
 2508 00a0 9B68     		ldr	r3, [r3, #8]
 2509 00a2 9847     		blx	r3
 2510              	.LVL183:
 2511 00a4 2046     		mov	r0, r4
 2512 00a6 D7E7     		b	.L176
 2513              	.LVL184:
 2514              	.L183:
 2515              	.LBE931:
 2516              	.LBE930:
 2517              	.LBE932:
 2518              	.LBE933:
 2519              	.LBB934:
 2520              	.LBB927:
 2521              	.LBB925:
 2522              	.LBB926:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 2523              		.loc 7 288 0
 2524 00a8 2068     		ldr	r0, [r4, #0]
 2525              	.LVL185:
 2526 00aa 1449     		ldr	r1, .L186+44
 2527 00ac 0368     		ldr	r3, [r0, #0]
 2528 00ae DB68     		ldr	r3, [r3, #12]
 2529 00b0 9847     		blx	r3
 2530              	.LVL186:
 2531 00b2 DEE7     		b	.L173
 2532              	.LVL187:
 2533              	.L185:
 2534 00b4 06A3     		adr	r3, .L186
 2535 00b6 D3E90023 		ldrd	r2, [r3]
 2536 00ba 2046     		mov	r0, r4
 2537 00bc 2946     		mov	r1, r5
 2538 00be 174C     		ldr	r4, .L186+76
 2539              	.LVL188:
 2540 00c0 A047     		blx	r4
 2541              	.LVL189:
 2542 00c2 174B     		ldr	r3, .L186+80
 2543 00c4 9847     		blx	r3
 2544              	.LVL190:
 2545 00c6 0246     		mov	r2, r0
 2546 00c8 C3E7     		b	.L178
 2547              	.L187:
 2548 00ca 00BFAFF3 		.align	3
 2548      0080
 2549              	.L186:
 2550 00d0 00000000 		.word	0
 2551 00d4 00EDE740 		.word	1088941312
 2552 00d8 00000000 		.word	_Z5atof2PKcif
 2553 00dc 00000000 		.word	_ZN5Utils19startLoggingControlEv
 2554 00e0 00000000 		.word	_ZN7ControlIL4Axis5EE21enablePositionControlEb
 2555 00e4 00000000 		.word	_ZN7ControlIL4Axis5EE18enableSpeedControlEb
 2556 00e8 00000000 		.word	__aeabi_f2d
 2557 00ec 0000F03F 		.word	1072693248
 2558 00f0 00000000 		.word	__aeabi_dcmpgt
 2559 00f4 00000000 		.word	_ZN7ControlIL4Axis0EE7v_shallE
 2560 00f8 00000000 		.word	.LANCHOR1
 2561 00fc 40000000 		.word	.LC4
 2562 0100 00000000 		.word	_ZN4xpcc8IOStream8writeBinEPKc
 2563 0104 00000000 		.word	_ZN4xpcc8IOStream8writeHexEPKc
 2564 0108 00000000 		.word	_ZN4xpcc8IOStream8writeBinEh
 2565 010c 00000000 		.word	_ZN4xpcc8IOStream8writeHexEh
 2566 0110 0000F0BF 		.word	-1074790400
 2567 0114 00000000 		.word	__aeabi_dcmplt
 2568 0118 9840FFFF 		.word	-49000
 2569 011c 00000000 		.word	__aeabi_dmul
 2570 0120 00000000 		.word	__aeabi_d2iz
 2571              	.LBE926:
 2572              	.LBE925:
 2573              	.LBE927:
 2574              	.LBE934:
 2575              	.LBE935:
 2576              	.LBE936:
 2577              	.LBE938:
 2578              		.cfi_endproc
 2579              	.LFE1124:
 2581 0124 AFF30080 		.section	.text._ZN8Handlers17getControlOutputsIL4Axis2EEEbPKci,"axG",%progbits,_ZN8Handlers17getCo
 2582              		.align	2
 2583              		.weak	_ZN8Handlers17getControlOutputsIL4Axis2EEEbPKci
 2584              		.thumb
 2585              		.thumb_func
 2587              	_ZN8Handlers17getControlOutputsIL4Axis2EEEbPKci:
 2588              	.LFB1129:
 213:commandHandlers.h **** static bool getControlOutputs(const char* cmd, int length){
 2589              		.loc 1 213 0
 2590              		.cfi_startproc
 2591              		@ args = 0, pretend = 0, frame = 0
 2592              		@ frame_needed = 0, uses_anonymous_args = 0
 2593              	.LVL191:
 2594 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2595              	.LCFI18:
 2596              		.cfi_def_cfa_offset 24
 2597              		.cfi_offset 3, -24
 2598              		.cfi_offset 4, -20
 2599              		.cfi_offset 5, -16
 2600              		.cfi_offset 6, -12
 2601              		.cfi_offset 7, -8
 2602              		.cfi_offset 14, -4
 2603              	.LBB1017:
 2604              	.LBB1018:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 2605              		.loc 7 287 0
 2606 0002 874C     		ldr	r4, .L242
 2607 0004 6368     		ldr	r3, [r4, #4]
 2608 0006 002B     		cmp	r3, #0
 2609 0008 00F0B880 		beq	.L228
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 2610              		.loc 7 290 0
 2611 000c 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 2612              		.loc 7 291 0
 2613 000e 2046     		mov	r0, r4
 2614              	.LVL192:
 2615 0010 0CBF     		ite	eq
 2616 0012 844B     		ldreq	r3, .L242+4
 2617              		.loc 7 294 0
 2618 0014 844B     		ldrne	r3, .L242+8
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 2619              		.loc 7 291 0
 2620 0016 8549     		ldr	r1, .L242+12
 2621              	.LVL193:
 2622              		.loc 7 294 0
 2623 0018 9847     		blx	r3
 2624              	.LVL194:
 2625              	.LBE1018:
 2626              	.LBE1017:
 2627              	.LBB1022:
 2628              	.LBB1023:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 2629              		.loc 7 122 0
 2630 001a 6368     		ldr	r3, [r4, #4]
 2631 001c 8048     		ldr	r0, .L242
 2632 001e 002B     		cmp	r3, #0
 2633 0020 00F0B680 		beq	.L229
 2634              	.L192:
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 2635              		.loc 7 126 0
 2636 0024 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 2637              		.loc 7 125 0
 2638 0026 022B     		cmp	r3, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 2639              		.loc 7 126 0
 2640 0028 0CBF     		ite	eq
 2641 002a 814B     		ldreq	r3, .L242+16
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 2642              		.loc 7 129 0
 2643 002c 814B     		ldrne	r3, .L242+20
 2644 002e 9847     		blx	r3
 2645              	.LVL195:
 2646              	.L193:
 2647              	.LBE1023:
 2648              	.LBE1022:
 2649              	.LBB1027:
 2650              	.LBB1028:
 2651              		.loc 8 51 0
 2652 0030 814B     		ldr	r3, .L242+24
 2653              	.LBE1028:
 2654              	.LBE1027:
 2655              	.LBB1030:
 2656              	.LBB1031:
 217:commandHandlers.h **** 	iout << Control<axis>::getShallPosition() << " " << Control<axis>::getIsPosition() << " "
 2657              		.loc 1 217 0
 2658 0032 7B4E     		ldr	r6, .L242
 2659              	.LBE1031:
 2660              	.LBE1030:
 2661              	.LBB1033:
 2662              	.LBB1029:
 2663              		.loc 8 51 0
 2664 0034 1968     		ldr	r1, [r3, #0]
 2665              	.LVL196:
 2666              	.LBE1029:
 2667              	.LBE1033:
 2668              	.LBB1034:
 2669              	.LBB1032:
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 2670              		.loc 7 236 0
 2671 0036 814D     		ldr	r5, .L242+28
 2672 0038 3046     		mov	r0, r6
 2673 003a A847     		blx	r5
 2674              	.LVL197:
 2675              	.LBE1032:
 2676              	.LBE1034:
 2677              	.LBB1035:
 2678              	.LBB1036:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 2679              		.loc 7 287 0
 2680 003c 6368     		ldr	r3, [r4, #4]
 2681 003e 002B     		cmp	r3, #0
 2682 0040 00F0E780 		beq	.L230
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 2683              		.loc 7 290 0
 2684 0044 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 2685              		.loc 7 291 0
 2686 0046 3046     		mov	r0, r6
 2687 0048 7D49     		ldr	r1, .L242+32
 2688 004a 0CBF     		ite	eq
 2689 004c 754B     		ldreq	r3, .L242+4
 2690              		.loc 7 294 0
 2691 004e 764B     		ldrne	r3, .L242+8
 2692 0050 9847     		blx	r3
 2693              	.LVL198:
 2694              	.L196:
 2695              	.LBE1036:
 2696              	.LBE1035:
 217:commandHandlers.h **** 	iout << Control<axis>::getShallPosition() << " " << Control<axis>::getIsPosition() << " "
 2697              		.loc 1 217 0
 2698 0052 7C4B     		ldr	r3, .L242+36
 2699 0054 9847     		blx	r3
 2700              	.LVL199:
 2701              	.LBB1040:
 2702              	.LBB1041:
 192:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 2703              		.loc 7 192 0
 2704 0056 6368     		ldr	r3, [r4, #4]
 2705              	.LBE1041:
 2706              	.LBE1040:
 217:commandHandlers.h **** 	iout << Control<axis>::getShallPosition() << " " << Control<axis>::getIsPosition() << " "
 2707              		.loc 1 217 0
 2708 0058 0646     		mov	r6, r0
 2709              	.LVL200:
 2710              	.LBB1045:
 2711              	.LBB1042:
 192:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 2712              		.loc 7 192 0
 2713 005a 002B     		cmp	r3, #0
 2714 005c 00F0D580 		beq	.L231
 195:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 2715              		.loc 7 195 0
 2716 0060 022B     		cmp	r3, #2
 2717 0062 00F00181 		beq	.L232
 202:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v >> 24));
 2718              		.loc 7 202 0
 2719 0066 734F     		ldr	r7, .L242+20
 2720 0068 6D48     		ldr	r0, .L242
 2721 006a 310E     		lsrs	r1, r6, #24
 2722 006c B847     		blx	r7
 2723              	.LVL201:
 203:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v >> 16));
 2724              		.loc 7 203 0
 2725 006e 6C48     		ldr	r0, .L242
 2726 0070 C6F30741 		ubfx	r1, r6, #16, #8
 2727 0074 B847     		blx	r7
 2728              	.LVL202:
 204:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v >> 8));
 2729              		.loc 7 204 0
 2730 0076 6A48     		ldr	r0, .L242
 2731 0078 C6F30721 		ubfx	r1, r6, #8, #8
 2732 007c B847     		blx	r7
 2733              	.LVL203:
 205:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v & 0xff));
 2734              		.loc 7 205 0
 2735 007e 6848     		ldr	r0, .L242
 2736 0080 F1B2     		uxtb	r1, r6
 2737 0082 B847     		blx	r7
 2738              	.LVL204:
 2739              	.L199:
 2740              	.LBE1042:
 2741              	.LBE1045:
 2742              	.LBB1046:
 2743              	.LBB1047:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 2744              		.loc 7 287 0
 2745 0084 6368     		ldr	r3, [r4, #4]
 2746 0086 6648     		ldr	r0, .L242
 2747 0088 002B     		cmp	r3, #0
 2748 008a 00F0B880 		beq	.L233
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 2749              		.loc 7 290 0
 2750 008e 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 2751              		.loc 7 291 0
 2752 0090 6B49     		ldr	r1, .L242+32
 2753 0092 0CBF     		ite	eq
 2754 0094 634B     		ldreq	r3, .L242+4
 2755              		.loc 7 294 0
 2756 0096 644B     		ldrne	r3, .L242+8
 2757 0098 9847     		blx	r3
 2758              	.LVL205:
 2759              	.L202:
 2760              	.LBE1047:
 2761              	.LBE1046:
 2762              	.LBB1051:
 2763              	.LBB1052:
  49:control.h     **** 	static inline int getShallSpeed(){ return v_shall; }
 2764              		.loc 8 49 0
 2765 009a 6B4B     		ldr	r3, .L242+40
 2766              	.LBE1052:
 2767              	.LBE1051:
 2768              	.LBB1054:
 2769              	.LBB1055:
 221:commandHandlers.h **** 	iout << Control<axis>::isPositionControlEnabled() << ", " << Control<axis>::isSpeedControlEnabled(
 2770              		.loc 1 221 0
 2771 009c 604E     		ldr	r6, .L242
 2772              	.LBE1055:
 2773              	.LBE1054:
 2774              	.LBB1057:
 2775              	.LBB1053:
  49:control.h     **** 	static inline int getShallSpeed(){ return v_shall; }
 2776              		.loc 8 49 0
 2777 009e 1968     		ldr	r1, [r3, #0]
 2778              	.LBE1053:
 2779              	.LBE1057:
 2780              	.LBB1058:
 2781              	.LBB1056:
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 2782              		.loc 7 236 0
 2783 00a0 3046     		mov	r0, r6
 2784 00a2 A847     		blx	r5
 2785              	.LVL206:
 2786              	.LBE1056:
 2787              	.LBE1058:
 2788              	.LBB1059:
 2789              	.LBB1060:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 2790              		.loc 7 287 0
 2791 00a4 6368     		ldr	r3, [r4, #4]
 2792 00a6 002B     		cmp	r3, #0
 2793 00a8 00F0A380 		beq	.L234
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 2794              		.loc 7 290 0
 2795 00ac 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 2796              		.loc 7 291 0
 2797 00ae 3046     		mov	r0, r6
 2798 00b0 6349     		ldr	r1, .L242+32
 2799 00b2 0CBF     		ite	eq
 2800 00b4 5B4B     		ldreq	r3, .L242+4
 2801              		.loc 7 294 0
 2802 00b6 5C4B     		ldrne	r3, .L242+8
 2803 00b8 9847     		blx	r3
 2804              	.LVL207:
 2805              	.L205:
 2806              	.LBE1060:
 2807              	.LBE1059:
 2808              	.LBB1064:
 2809              	.LBB1065:
  50:control.h     **** 	static inline int getIsSpeed(){ return v_is; }
 2810              		.loc 8 50 0
 2811 00ba 644B     		ldr	r3, .L242+44
 2812              	.LBE1065:
 2813              	.LBE1064:
 2814              	.LBB1067:
 2815              	.LBB1068:
 221:commandHandlers.h **** 	iout << Control<axis>::isPositionControlEnabled() << ", " << Control<axis>::isSpeedControlEnabled(
 2816              		.loc 1 221 0
 2817 00bc 584E     		ldr	r6, .L242
 2818              	.LBE1068:
 2819              	.LBE1067:
 2820              	.LBB1070:
 2821              	.LBB1066:
  50:control.h     **** 	static inline int getIsSpeed(){ return v_is; }
 2822              		.loc 8 50 0
 2823 00be 1968     		ldr	r1, [r3, #0]
 2824              	.LBE1066:
 2825              	.LBE1070:
 2826              	.LBB1071:
 2827              	.LBB1069:
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 2828              		.loc 7 236 0
 2829 00c0 3046     		mov	r0, r6
 2830 00c2 A847     		blx	r5
 2831              	.LVL208:
 2832              	.LBE1069:
 2833              	.LBE1071:
 2834              	.LBB1072:
 2835              	.LBB1073:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 2836              		.loc 7 287 0
 2837 00c4 6368     		ldr	r3, [r4, #4]
 2838 00c6 002B     		cmp	r3, #0
 2839 00c8 00F08D80 		beq	.L235
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 2840              		.loc 7 290 0
 2841 00cc 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 2842              		.loc 7 291 0
 2843 00ce 3046     		mov	r0, r6
 2844 00d0 5B49     		ldr	r1, .L242+32
 2845 00d2 0CBF     		ite	eq
 2846 00d4 534B     		ldreq	r3, .L242+4
 2847              		.loc 7 294 0
 2848 00d6 544B     		ldrne	r3, .L242+8
 2849 00d8 9847     		blx	r3
 2850              	.LVL209:
 2851              	.L208:
 2852              	.LBE1073:
 2853              	.LBE1072:
 2854              	.LBB1077:
 2855              	.LBB1078:
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 2856              		.loc 7 236 0
 2857 00da 5D4B     		ldr	r3, .L242+48
 221:commandHandlers.h **** 	iout << Control<axis>::isPositionControlEnabled() << ", " << Control<axis>::isSpeedControlEnabled(
 2858              		.loc 1 221 0
 2859 00dc 504E     		ldr	r6, .L242
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 2860              		.loc 7 236 0
 2861 00de 1968     		ldr	r1, [r3, #0]
 2862 00e0 3046     		mov	r0, r6
 2863 00e2 A847     		blx	r5
 2864              	.LVL210:
 2865              	.LBE1078:
 2866              	.LBE1077:
 2867              	.LBB1079:
 2868              	.LBB1080:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 2869              		.loc 7 287 0
 2870 00e4 6368     		ldr	r3, [r4, #4]
 2871 00e6 002B     		cmp	r3, #0
 2872 00e8 77D0     		beq	.L236
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 2873              		.loc 7 290 0
 2874 00ea 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 2875              		.loc 7 291 0
 2876 00ec 3046     		mov	r0, r6
 2877 00ee 5449     		ldr	r1, .L242+32
 2878 00f0 0CBF     		ite	eq
 2879 00f2 4C4B     		ldreq	r3, .L242+4
 2880              		.loc 7 294 0
 2881 00f4 4C4B     		ldrne	r3, .L242+8
 2882 00f6 9847     		blx	r3
 2883              	.LVL211:
 2884              	.L211:
 2885              	.LBE1080:
 2886              	.LBE1079:
 2887              	.LBB1084:
 2888              	.LBB1085:
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 2889              		.loc 7 236 0
 2890 00f8 564B     		ldr	r3, .L242+52
 221:commandHandlers.h **** 	iout << Control<axis>::isPositionControlEnabled() << ", " << Control<axis>::isSpeedControlEnabled(
 2891              		.loc 1 221 0
 2892 00fa 494E     		ldr	r6, .L242
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 2893              		.loc 7 236 0
 2894 00fc 1968     		ldr	r1, [r3, #0]
 2895 00fe 3046     		mov	r0, r6
 2896 0100 A847     		blx	r5
 2897              	.LVL212:
 2898              	.LBE1085:
 2899              	.LBE1084:
 2900              	.LBB1086:
 2901              	.LBB1087:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 2902              		.loc 7 122 0
 2903 0102 6368     		ldr	r3, [r4, #4]
 2904 0104 002B     		cmp	r3, #0
 2905 0106 62D0     		beq	.L237
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 2906              		.loc 7 126 0
 2907 0108 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 2908              		.loc 7 125 0
 2909 010a 022B     		cmp	r3, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 2910              		.loc 7 126 0
 2911 010c 3046     		mov	r0, r6
 2912 010e 0CBF     		ite	eq
 2913 0110 474B     		ldreq	r3, .L242+16
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 2914              		.loc 7 129 0
 2915 0112 484B     		ldrne	r3, .L242+20
 2916 0114 9847     		blx	r3
 2917              	.LVL213:
 2918              	.L214:
 2919              	.LBE1087:
 2920              	.LBE1086:
 2921              	.LBB1091:
 2922              	.LBB1092:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 2923              		.loc 7 287 0
 2924 0116 6368     		ldr	r3, [r4, #4]
 2925 0118 4148     		ldr	r0, .L242
 2926 011a 002B     		cmp	r3, #0
 2927 011c 51D0     		beq	.L238
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 2928              		.loc 7 290 0
 2929 011e 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 2930              		.loc 7 291 0
 2931 0120 4D49     		ldr	r1, .L242+56
 2932 0122 0CBF     		ite	eq
 2933 0124 3F4B     		ldreq	r3, .L242+4
 2934              		.loc 7 294 0
 2935 0126 404B     		ldrne	r3, .L242+8
 2936 0128 9847     		blx	r3
 2937              	.LVL214:
 2938              	.L217:
 2939              	.LBE1092:
 2940              	.LBE1091:
 2941              	.LBB1096:
 2942              	.LBB1097:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 2943              		.loc 7 122 0
 2944 012a 6368     		ldr	r3, [r4, #4]
 2945 012c 3C48     		ldr	r0, .L242
 2946 012e 002B     		cmp	r3, #0
 2947 0130 41D0     		beq	.L239
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 2948              		.loc 7 126 0
 2949 0132 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 2950              		.loc 7 125 0
 2951 0134 022B     		cmp	r3, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 2952              		.loc 7 126 0
 2953 0136 0CBF     		ite	eq
 2954 0138 3D4B     		ldreq	r3, .L242+16
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 2955              		.loc 7 129 0
 2956 013a 3E4B     		ldrne	r3, .L242+20
 2957 013c 9847     		blx	r3
 2958              	.LVL215:
 2959              	.L220:
 2960              	.LBE1097:
 2961              	.LBE1096:
 2962              	.LBB1101:
 2963              	.LBB1102:
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 2964              		.loc 7 236 0
 2965 013e 474B     		ldr	r3, .L242+60
 221:commandHandlers.h **** 	iout << Control<axis>::isPositionControlEnabled() << ", " << Control<axis>::isSpeedControlEnabled(
 2966              		.loc 1 221 0
 2967 0140 374E     		ldr	r6, .L242
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 2968              		.loc 7 236 0
 2969 0142 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 2970 0144 3046     		mov	r0, r6
 2971 0146 A847     		blx	r5
 2972              	.LVL216:
 2973              	.LBE1102:
 2974              	.LBE1101:
 2975              	.LBB1103:
 2976              	.LBB1104:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 2977              		.loc 7 287 0
 2978 0148 6368     		ldr	r3, [r4, #4]
 2979 014a 002B     		cmp	r3, #0
 2980 014c 2DD0     		beq	.L240
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 2981              		.loc 7 290 0
 2982 014e 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 2983              		.loc 7 291 0
 2984 0150 3046     		mov	r0, r6
 2985 0152 4349     		ldr	r1, .L242+64
 2986 0154 0CBF     		ite	eq
 2987 0156 334B     		ldreq	r3, .L242+4
 2988              		.loc 7 294 0
 2989 0158 334B     		ldrne	r3, .L242+8
 2990 015a 9847     		blx	r3
 2991              	.LVL217:
 2992              	.L223:
 2993              	.LBE1104:
 2994              	.LBE1103:
 2995              	.LBB1108:
 2996              	.LBB1109:
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 2997              		.loc 7 236 0
 2998 015c 414B     		ldr	r3, .L242+68
 221:commandHandlers.h **** 	iout << Control<axis>::isPositionControlEnabled() << ", " << Control<axis>::isSpeedControlEnabled(
 2999              		.loc 1 221 0
 3000 015e 304E     		ldr	r6, .L242
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 3001              		.loc 7 236 0
 3002 0160 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 3003 0162 3046     		mov	r0, r6
 3004 0164 A847     		blx	r5
 3005              	.LVL218:
 3006              	.LBE1109:
 3007              	.LBE1108:
 3008              	.LBB1110:
 3009              	.LBB1111:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 3010              		.loc 7 122 0
 3011 0166 6368     		ldr	r3, [r4, #4]
 3012 0168 C3B1     		cbz	r3, .L241
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 3013              		.loc 7 126 0
 3014 016a 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 3015              		.loc 7 125 0
 3016 016c 022B     		cmp	r3, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 3017              		.loc 7 126 0
 3018 016e 3046     		mov	r0, r6
 3019 0170 0CBF     		ite	eq
 3020 0172 2F4B     		ldreq	r3, .L242+16
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 3021              		.loc 7 129 0
 3022 0174 2F4B     		ldrne	r3, .L242+20
 3023 0176 9847     		blx	r3
 3024              	.LVL219:
 3025              	.LBE1111:
 3026              	.LBE1110:
 3027              		.loc 1 223 0
 3028 0178 0020     		movs	r0, #0
 3029 017a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3030              	.LVL220:
 3031              	.L228:
 3032              	.LBB1115:
 3033              	.LBB1021:
 3034              	.LBB1019:
 3035              	.LBB1020:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 3036              		.loc 7 288 0
 3037 017c 2068     		ldr	r0, [r4, #0]
 3038              	.LVL221:
 3039 017e 2B49     		ldr	r1, .L242+12
 3040              	.LVL222:
 3041 0180 0368     		ldr	r3, [r0, #0]
 3042 0182 DB68     		ldr	r3, [r3, #12]
 3043 0184 9847     		blx	r3
 3044              	.LVL223:
 3045              	.LBE1020:
 3046              	.LBE1019:
 3047              	.LBE1021:
 3048              	.LBE1115:
 3049              	.LBB1116:
 3050              	.LBB1026:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 3051              		.loc 7 122 0
 3052 0186 6368     		ldr	r3, [r4, #4]
 3053 0188 2548     		ldr	r0, .L242
 3054 018a 002B     		cmp	r3, #0
 3055 018c 7FF44AAF 		bne	.L192
 3056              	.LVL224:
 3057              	.L229:
 3058              	.LBB1024:
 3059              	.LBB1025:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 3060              		.loc 7 123 0
 3061 0190 0068     		ldr	r0, [r0, #0]
 3062 0192 0368     		ldr	r3, [r0, #0]
 3063 0194 0A21     		movs	r1, #10
 3064 0196 9B68     		ldr	r3, [r3, #8]
 3065 0198 9847     		blx	r3
 3066              	.LVL225:
 3067 019a 49E7     		b	.L193
 3068              	.LVL226:
 3069              	.L241:
 3070              	.LBE1025:
 3071              	.LBE1024:
 3072              	.LBE1026:
 3073              	.LBE1116:
 3074              	.LBB1117:
 3075              	.LBB1114:
 3076              	.LBB1112:
 3077              	.LBB1113:
 3078 019c 3068     		ldr	r0, [r6, #0]
 3079 019e 0368     		ldr	r3, [r0, #0]
 3080 01a0 0A21     		movs	r1, #10
 3081 01a2 9B68     		ldr	r3, [r3, #8]
 3082 01a4 9847     		blx	r3
 3083              	.LVL227:
 3084              	.LBE1113:
 3085              	.LBE1112:
 3086              	.LBE1114:
 3087              	.LBE1117:
 3088              		.loc 1 223 0
 3089 01a6 0020     		movs	r0, #0
 3090 01a8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3091              	.LVL228:
 3092              	.L240:
 3093              	.LBB1118:
 3094              	.LBB1107:
 3095              	.LBB1105:
 3096              	.LBB1106:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 3097              		.loc 7 288 0
 3098 01aa 3068     		ldr	r0, [r6, #0]
 3099 01ac 2C49     		ldr	r1, .L242+64
 3100 01ae 0368     		ldr	r3, [r0, #0]
 3101 01b0 DB68     		ldr	r3, [r3, #12]
 3102 01b2 9847     		blx	r3
 3103              	.LVL229:
 3104 01b4 D2E7     		b	.L223
 3105              	.LVL230:
 3106              	.L239:
 3107              	.LBE1106:
 3108              	.LBE1105:
 3109              	.LBE1107:
 3110              	.LBE1118:
 3111              	.LBB1119:
 3112              	.LBB1100:
 3113              	.LBB1098:
 3114              	.LBB1099:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 3115              		.loc 7 123 0
 3116 01b6 0068     		ldr	r0, [r0, #0]
 3117 01b8 0368     		ldr	r3, [r0, #0]
 3118 01ba 0A21     		movs	r1, #10
 3119 01bc 9B68     		ldr	r3, [r3, #8]
 3120 01be 9847     		blx	r3
 3121              	.LVL231:
 3122 01c0 BDE7     		b	.L220
 3123              	.LVL232:
 3124              	.L238:
 3125              	.LBE1099:
 3126              	.LBE1098:
 3127              	.LBE1100:
 3128              	.LBE1119:
 3129              	.LBB1120:
 3130              	.LBB1095:
 3131              	.LBB1093:
 3132              	.LBB1094:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 3133              		.loc 7 288 0
 3134 01c2 0068     		ldr	r0, [r0, #0]
 3135 01c4 2449     		ldr	r1, .L242+56
 3136 01c6 0368     		ldr	r3, [r0, #0]
 3137 01c8 DB68     		ldr	r3, [r3, #12]
 3138 01ca 9847     		blx	r3
 3139              	.LVL233:
 3140 01cc ADE7     		b	.L217
 3141              	.LVL234:
 3142              	.L237:
 3143              	.LBE1094:
 3144              	.LBE1093:
 3145              	.LBE1095:
 3146              	.LBE1120:
 3147              	.LBB1121:
 3148              	.LBB1090:
 3149              	.LBB1088:
 3150              	.LBB1089:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 3151              		.loc 7 123 0
 3152 01ce 3068     		ldr	r0, [r6, #0]
 3153 01d0 0368     		ldr	r3, [r0, #0]
 3154 01d2 0A21     		movs	r1, #10
 3155 01d4 9B68     		ldr	r3, [r3, #8]
 3156 01d6 9847     		blx	r3
 3157              	.LVL235:
 3158 01d8 9DE7     		b	.L214
 3159              	.LVL236:
 3160              	.L236:
 3161              	.LBE1089:
 3162              	.LBE1088:
 3163              	.LBE1090:
 3164              	.LBE1121:
 3165              	.LBB1122:
 3166              	.LBB1083:
 3167              	.LBB1081:
 3168              	.LBB1082:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 3169              		.loc 7 288 0
 3170 01da 3068     		ldr	r0, [r6, #0]
 3171 01dc 1849     		ldr	r1, .L242+32
 3172 01de 0368     		ldr	r3, [r0, #0]
 3173 01e0 DB68     		ldr	r3, [r3, #12]
 3174 01e2 9847     		blx	r3
 3175              	.LVL237:
 3176 01e4 88E7     		b	.L211
 3177              	.LVL238:
 3178              	.L235:
 3179              	.LBE1082:
 3180              	.LBE1081:
 3181              	.LBE1083:
 3182              	.LBE1122:
 3183              	.LBB1123:
 3184              	.LBB1076:
 3185              	.LBB1074:
 3186              	.LBB1075:
 3187 01e6 3068     		ldr	r0, [r6, #0]
 3188 01e8 1549     		ldr	r1, .L242+32
 3189 01ea 0368     		ldr	r3, [r0, #0]
 3190 01ec DB68     		ldr	r3, [r3, #12]
 3191 01ee 9847     		blx	r3
 3192              	.LVL239:
 3193 01f0 73E7     		b	.L208
 3194              	.LVL240:
 3195              	.L234:
 3196              	.LBE1075:
 3197              	.LBE1074:
 3198              	.LBE1076:
 3199              	.LBE1123:
 3200              	.LBB1124:
 3201              	.LBB1063:
 3202              	.LBB1061:
 3203              	.LBB1062:
 3204 01f2 3068     		ldr	r0, [r6, #0]
 3205 01f4 1249     		ldr	r1, .L242+32
 3206 01f6 0368     		ldr	r3, [r0, #0]
 3207 01f8 DB68     		ldr	r3, [r3, #12]
 3208 01fa 9847     		blx	r3
 3209              	.LVL241:
 3210 01fc 5DE7     		b	.L205
 3211              	.LVL242:
 3212              	.L233:
 3213              	.LBE1062:
 3214              	.LBE1061:
 3215              	.LBE1063:
 3216              	.LBE1124:
 3217              	.LBB1125:
 3218              	.LBB1050:
 3219              	.LBB1048:
 3220              	.LBB1049:
 3221 01fe 0068     		ldr	r0, [r0, #0]
 3222 0200 0F49     		ldr	r1, .L242+32
 3223 0202 0368     		ldr	r3, [r0, #0]
 3224 0204 DB68     		ldr	r3, [r3, #12]
 3225 0206 9847     		blx	r3
 3226              	.LVL243:
 3227 0208 47E7     		b	.L202
 3228              	.LVL244:
 3229              	.L231:
 3230              	.LBE1049:
 3231              	.LBE1048:
 3232              	.LBE1050:
 3233              	.LBE1125:
 3234              	.LBB1126:
 3235              	.LBB1043:
 193:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeInteger(v);
 3236              		.loc 7 193 0
 3237 020a 0548     		ldr	r0, .L242
 3238 020c 3146     		mov	r1, r6
 3239 020e A847     		blx	r5
 3240              	.LVL245:
 3241 0210 38E7     		b	.L199
 3242              	.LVL246:
 3243              	.L230:
 3244              	.LBE1043:
 3245              	.LBE1126:
 3246              	.LBB1127:
 3247              	.LBB1039:
 3248              	.LBB1037:
 3249              	.LBB1038:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 3250              		.loc 7 288 0
 3251 0212 3068     		ldr	r0, [r6, #0]
 3252 0214 0A49     		ldr	r1, .L242+32
 3253 0216 0368     		ldr	r3, [r0, #0]
 3254 0218 DB68     		ldr	r3, [r3, #12]
 3255 021a 9847     		blx	r3
 3256              	.LVL247:
 3257 021c 19E7     		b	.L196
 3258              	.L243:
 3259 021e 00BF     		.align	2
 3260              	.L242:
 3261 0220 00000000 		.word	.LANCHOR0
 3262 0224 00000000 		.word	_ZN4xpcc8IOStream8writeBinEPKc
 3263 0228 00000000 		.word	_ZN4xpcc8IOStream8writeHexEPKc
 3264 022c 00000000 		.word	.LC0
 3265 0230 00000000 		.word	_ZN4xpcc8IOStream8writeBinEh
 3266 0234 00000000 		.word	_ZN4xpcc8IOStream8writeHexEh
 3267 0238 00000000 		.word	_ZN7ControlIL4Axis2EE9pos_shallE
 3268 023c 00000000 		.word	_ZN4xpcc8IOStream12writeIntegerEl
 3269 0240 18000000 		.word	.LC1
 3270 0244 00000000 		.word	_ZN7ControlIL4Axis2EE13getIsPositionEv
 3271 0248 00000000 		.word	_ZN7ControlIL4Axis2EE7v_shallE
 3272 024c 00000000 		.word	_ZN7ControlIL4Axis2EE4v_isE
 3273 0250 00000000 		.word	_ZN7ControlIL4Axis2EE3v_uE
 3274 0254 00000000 		.word	_ZN7ControlIL4Axis2EE7v_urealE
 3275 0258 1C000000 		.word	.LC2
 3276 025c 00000000 		.word	_ZN7ControlIL4Axis2EE22positionControlEnabledE
 3277 0260 3C000000 		.word	.LC3
 3278 0264 00000000 		.word	_ZN7ControlIL4Axis2EE19speedControlEnabledE
 3279              	.LVL248:
 3280              	.L232:
 3281              	.LBE1038:
 3282              	.LBE1037:
 3283              	.LBE1039:
 3284              	.LBE1127:
 3285              	.LBB1128:
 3286              	.LBB1044:
 196:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v >> 24));
 3287              		.loc 7 196 0
 3288 0268 074F     		ldr	r7, .L244
 3289 026a 0848     		ldr	r0, .L244+4
 3290 026c 310E     		lsrs	r1, r6, #24
 3291 026e B847     		blx	r7
 3292              	.LVL249:
 197:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v >> 16));
 3293              		.loc 7 197 0
 3294 0270 C6F30741 		ubfx	r1, r6, #16, #8
 3295 0274 0548     		ldr	r0, .L244+4
 3296 0276 B847     		blx	r7
 3297              	.LVL250:
 198:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v >> 8));
 3298              		.loc 7 198 0
 3299 0278 C6F30721 		ubfx	r1, r6, #8, #8
 3300 027c 0348     		ldr	r0, .L244+4
 3301 027e B847     		blx	r7
 3302              	.LVL251:
 199:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v & 0xff));
 3303              		.loc 7 199 0
 3304 0280 0248     		ldr	r0, .L244+4
 3305 0282 F1B2     		uxtb	r1, r6
 3306 0284 B847     		blx	r7
 3307              	.LVL252:
 3308 0286 FDE6     		b	.L199
 3309              	.L245:
 3310              		.align	2
 3311              	.L244:
 3312 0288 00000000 		.word	_ZN4xpcc8IOStream8writeBinEh
 3313 028c 00000000 		.word	.LANCHOR0
 3314              	.LBE1044:
 3315              	.LBE1128:
 3316              		.cfi_endproc
 3317              	.LFE1129:
 3319              		.section	.text._ZN8Handlers19getPushButtonStatesEPKci,"axG",%progbits,_ZN8Handlers19getPushButtonS
 3320              		.align	2
 3321              		.weak	_ZN8Handlers19getPushButtonStatesEPKci
 3322              		.thumb
 3323              		.thumb_func
 3325              	_ZN8Handlers19getPushButtonStatesEPKci:
 3326              	.LFB1044:
 164:commandHandlers.h **** static bool getPushButtonStates(const char* cmd, int length){
 3327              		.loc 1 164 0
 3328              		.cfi_startproc
 3329              		@ args = 0, pretend = 0, frame = 0
 3330              		@ frame_needed = 0, uses_anonymous_args = 0
 3331              	.LVL253:
 3332 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3333              	.LCFI19:
 3334              		.cfi_def_cfa_offset 24
 3335              		.cfi_offset 3, -24
 3336              		.cfi_offset 4, -20
 3337              		.cfi_offset 5, -16
 3338              		.cfi_offset 6, -12
 3339              		.cfi_offset 7, -8
 3340              		.cfi_offset 14, -4
 3341              	.LBB1205:
 3342              	.LBB1206:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 3343              		.loc 7 287 0
 3344 0002 6B4C     		ldr	r4, .L287
 3345 0004 6368     		ldr	r3, [r4, #4]
 3346 0006 002B     		cmp	r3, #0
 3347 0008 00F09480 		beq	.L277
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 3348              		.loc 7 290 0
 3349 000c 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 3350              		.loc 7 291 0
 3351 000e 2046     		mov	r0, r4
 3352              	.LVL254:
 3353 0010 6849     		ldr	r1, .L287+4
 3354              	.LVL255:
 3355 0012 0CBF     		ite	eq
 3356 0014 684B     		ldreq	r3, .L287+8
 3357              		.loc 7 294 0
 3358 0016 694B     		ldrne	r3, .L287+12
 3359 0018 9847     		blx	r3
 3360              	.LVL256:
 3361              	.L248:
 3362              	.LBE1206:
 3363              	.LBE1205:
 3364              	.LBB1210:
 3365              	.LBB1211:
 3366              	.LBB1212:
 3367              		.file 10 "hallSensor.h"
   1:hallSensor.h  **** /*
   2:hallSensor.h  ****  * hallSensor.h
   3:hallSensor.h  ****  *
   4:hallSensor.h  ****  *  Created on: Dec 23, 2013
   5:hallSensor.h  ****  *      Author: jonas
   6:hallSensor.h  ****  */
   7:hallSensor.h  **** 
   8:hallSensor.h  **** #ifndef HALLSENSOR_H_
   9:hallSensor.h  **** #define HALLSENSOR_H_
  10:hallSensor.h  **** 
  11:hallSensor.h  **** //#pragma GCC push_options
  12:hallSensor.h  **** //#pragma GCC optimize ("O0")
  13:hallSensor.h  **** 
  14:hallSensor.h  **** #include "project.h"
  15:hallSensor.h  **** #include "control.h"
  16:hallSensor.h  **** 
  17:hallSensor.h  **** template<Axis axis>
  18:hallSensor.h  **** class HallSensor{
  19:hallSensor.h  **** private:
  20:hallSensor.h  **** 	static volatile bool triggered[2];
  21:hallSensor.h  **** 	static volatile bool state[2]; //the real current state
  22:hallSensor.h  **** 	static volatile int triggeredPosition[2];
  23:hallSensor.h  **** 
  24:hallSensor.h  **** 	GPIO__INPUT(XFRONT, E, 11);
 3368              		.loc 10 24 0
 3369 001a 694B     		ldr	r3, .L287+16
 3370              	.LBE1212:
 3371              	.LBE1211:
 3372              	.LBE1210:
 3373              	.LBB1215:
 3374              	.LBB1216:
 221:commandHandlers.h **** 	iout << Control<axis>::isPositionControlEnabled() << ", " << Control<axis>::isSpeedControlEnabled(
 3375              		.loc 1 221 0
 3376 001c 644E     		ldr	r6, .L287
 3377              	.LBE1216:
 3378              	.LBE1215:
 3379              	.LBB1218:
 3380              	.LBB1214:
 3381              	.LBB1213:
 3382              		.loc 10 24 0
 3383 001e 1969     		ldr	r1, [r3, #16]
 3384              	.LBE1213:
 3385              	.LBE1214:
 3386              	.LBE1218:
 3387              	.LBB1219:
 3388              	.LBB1217:
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 3389              		.loc 7 236 0
 3390 0020 684D     		ldr	r5, .L287+20
 3391 0022 3046     		mov	r0, r6
 3392 0024 C1F3C021 		ubfx	r1, r1, #11, #1
 3393 0028 A847     		blx	r5
 3394              	.LVL257:
 3395              	.LBE1217:
 3396              	.LBE1219:
 3397              	.LBB1220:
 3398              	.LBB1221:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 3399              		.loc 7 287 0
 3400 002a 6368     		ldr	r3, [r4, #4]
 3401 002c 002B     		cmp	r3, #0
 3402 002e 00F0B880 		beq	.L278
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 3403              		.loc 7 290 0
 3404 0032 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 3405              		.loc 7 291 0
 3406 0034 3046     		mov	r0, r6
 3407 0036 6449     		ldr	r1, .L287+24
 3408 0038 0CBF     		ite	eq
 3409 003a 5F4B     		ldreq	r3, .L287+8
 3410              		.loc 7 294 0
 3411 003c 5F4B     		ldrne	r3, .L287+12
 3412 003e 9847     		blx	r3
 3413              	.LVL258:
 3414              	.L251:
 3415              	.LBE1221:
 3416              	.LBE1220:
 3417              	.LBB1225:
 3418              	.LBB1226:
 3419              	.LBB1227:
  25:hallSensor.h  **** 	GPIO__INPUT(XEND, E, 7);
 3420              		.loc 10 25 0
 3421 0040 5F4B     		ldr	r3, .L287+16
 3422              	.LBE1227:
 3423              	.LBE1226:
 3424              	.LBE1225:
 3425              	.LBB1230:
 3426              	.LBB1231:
 221:commandHandlers.h **** 	iout << Control<axis>::isPositionControlEnabled() << ", " << Control<axis>::isSpeedControlEnabled(
 3427              		.loc 1 221 0
 3428 0042 5B4E     		ldr	r6, .L287
 3429              	.LBE1231:
 3430              	.LBE1230:
 3431              	.LBB1233:
 3432              	.LBB1229:
 3433              	.LBB1228:
 3434              		.loc 10 25 0
 3435 0044 1969     		ldr	r1, [r3, #16]
 3436              	.LBE1228:
 3437              	.LBE1229:
 3438              	.LBE1233:
 3439              	.LBB1234:
 3440              	.LBB1232:
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 3441              		.loc 7 236 0
 3442 0046 3046     		mov	r0, r6
 3443 0048 C1F3C011 		ubfx	r1, r1, #7, #1
 3444 004c A847     		blx	r5
 3445              	.LVL259:
 3446              	.LBE1232:
 3447              	.LBE1234:
 3448              	.LBB1235:
 3449              	.LBB1236:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 3450              		.loc 7 287 0
 3451 004e 6368     		ldr	r3, [r4, #4]
 3452 0050 002B     		cmp	r3, #0
 3453 0052 00F0A080 		beq	.L279
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 3454              		.loc 7 290 0
 3455 0056 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 3456              		.loc 7 291 0
 3457 0058 3046     		mov	r0, r6
 3458 005a 5C49     		ldr	r1, .L287+28
 3459 005c 0CBF     		ite	eq
 3460 005e 564B     		ldreq	r3, .L287+8
 3461              		.loc 7 294 0
 3462 0060 564B     		ldrne	r3, .L287+12
 3463 0062 9847     		blx	r3
 3464              	.LVL260:
 3465              	.L254:
 3466              	.LBE1236:
 3467              	.LBE1235:
 3468              	.LBB1240:
 3469              	.LBB1241:
 3470              	.LBB1242:
  26:hallSensor.h  **** 	GPIO__INPUT(YFRONT, D, 8);
 3471              		.loc 10 26 0
 3472 0064 5A4B     		ldr	r3, .L287+32
 3473              	.LBE1242:
 3474              	.LBE1241:
 3475              	.LBE1240:
 3476              	.LBB1245:
 3477              	.LBB1246:
 221:commandHandlers.h **** 	iout << Control<axis>::isPositionControlEnabled() << ", " << Control<axis>::isSpeedControlEnabled(
 3478              		.loc 1 221 0
 3479 0066 524E     		ldr	r6, .L287
 3480              	.LBE1246:
 3481              	.LBE1245:
 3482              	.LBB1248:
 3483              	.LBB1244:
 3484              	.LBB1243:
 3485              		.loc 10 26 0
 3486 0068 1969     		ldr	r1, [r3, #16]
 3487              	.LBE1243:
 3488              	.LBE1244:
 3489              	.LBE1248:
 3490              	.LBB1249:
 3491              	.LBB1247:
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 3492              		.loc 7 236 0
 3493 006a 3046     		mov	r0, r6
 3494 006c C1F30021 		ubfx	r1, r1, #8, #1
 3495 0070 A847     		blx	r5
 3496              	.LVL261:
 3497              	.LBE1247:
 3498              	.LBE1249:
 3499              	.LBB1250:
 3500              	.LBB1251:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 3501              		.loc 7 287 0
 3502 0072 6368     		ldr	r3, [r4, #4]
 3503 0074 002B     		cmp	r3, #0
 3504 0076 00F08880 		beq	.L280
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 3505              		.loc 7 290 0
 3506 007a 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 3507              		.loc 7 291 0
 3508 007c 3046     		mov	r0, r6
 3509 007e 5249     		ldr	r1, .L287+24
 3510 0080 0CBF     		ite	eq
 3511 0082 4D4B     		ldreq	r3, .L287+8
 3512              		.loc 7 294 0
 3513 0084 4D4B     		ldrne	r3, .L287+12
 3514 0086 9847     		blx	r3
 3515              	.LVL262:
 3516              	.L257:
 3517              	.LBE1251:
 3518              	.LBE1250:
 3519              	.LBB1255:
 3520              	.LBB1256:
 3521              	.LBB1257:
  27:hallSensor.h  **** 	GPIO__INPUT(YEND, D, 9);
 3522              		.loc 10 27 0
 3523 0088 514B     		ldr	r3, .L287+32
 3524              	.LBE1257:
 3525              	.LBE1256:
 3526              	.LBE1255:
 3527              	.LBB1260:
 3528              	.LBB1261:
 221:commandHandlers.h **** 	iout << Control<axis>::isPositionControlEnabled() << ", " << Control<axis>::isSpeedControlEnabled(
 3529              		.loc 1 221 0
 3530 008a 494E     		ldr	r6, .L287
 3531              	.LBE1261:
 3532              	.LBE1260:
 3533              	.LBB1263:
 3534              	.LBB1259:
 3535              	.LBB1258:
 3536              		.loc 10 27 0
 3537 008c 1969     		ldr	r1, [r3, #16]
 3538              	.LBE1258:
 3539              	.LBE1259:
 3540              	.LBE1263:
 3541              	.LBB1264:
 3542              	.LBB1262:
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 3543              		.loc 7 236 0
 3544 008e 3046     		mov	r0, r6
 3545 0090 C1F34021 		ubfx	r1, r1, #9, #1
 3546 0094 A847     		blx	r5
 3547              	.LVL263:
 3548              	.LBE1262:
 3549              	.LBE1264:
 3550              	.LBB1265:
 3551              	.LBB1266:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 3552              		.loc 7 122 0
 3553 0096 6368     		ldr	r3, [r4, #4]
 3554 0098 002B     		cmp	r3, #0
 3555 009a 70D0     		beq	.L281
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 3556              		.loc 7 126 0
 3557 009c 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 3558              		.loc 7 125 0
 3559 009e 022B     		cmp	r3, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 3560              		.loc 7 126 0
 3561 00a0 3046     		mov	r0, r6
 3562 00a2 0CBF     		ite	eq
 3563 00a4 4B4B     		ldreq	r3, .L287+36
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 3564              		.loc 7 129 0
 3565 00a6 4C4B     		ldrne	r3, .L287+40
 3566 00a8 9847     		blx	r3
 3567              	.LVL264:
 3568              	.L260:
 3569              	.LBE1266:
 3570              	.LBE1265:
 3571              	.LBB1270:
 3572              	.LBB1271:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 3573              		.loc 7 287 0
 3574 00aa 6368     		ldr	r3, [r4, #4]
 3575 00ac 4048     		ldr	r0, .L287
 3576 00ae 002B     		cmp	r3, #0
 3577 00b0 5FD0     		beq	.L282
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 3578              		.loc 7 290 0
 3579 00b2 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 3580              		.loc 7 291 0
 3581 00b4 4949     		ldr	r1, .L287+44
 3582 00b6 0CBF     		ite	eq
 3583 00b8 3F4B     		ldreq	r3, .L287+8
 3584              		.loc 7 294 0
 3585 00ba 404B     		ldrne	r3, .L287+12
 3586 00bc 9847     		blx	r3
 3587              	.LVL265:
 3588              	.L263:
 3589              	.LBE1271:
 3590              	.LBE1270:
 3591              	.LBB1275:
 3592              	.LBB1276:
  28:hallSensor.h  **** 
  29:hallSensor.h  **** public:
  30:hallSensor.h  **** 	static bool init();
  31:hallSensor.h  **** 
  32:hallSensor.h  **** 	static bool isAtFront(){
  33:hallSensor.h  **** 		return triggered[0];
 3593              		.loc 10 33 0
 3594 00be 484E     		ldr	r6, .L287+48
 3595              	.LBE1276:
 3596              	.LBE1275:
 3597              	.LBB1278:
 3598              	.LBB1279:
 221:commandHandlers.h **** 	iout << Control<axis>::isPositionControlEnabled() << ", " << Control<axis>::isSpeedControlEnabled(
 3599              		.loc 1 221 0
 3600 00c0 3B4F     		ldr	r7, .L287
 3601              	.LBE1279:
 3602              	.LBE1278:
 3603              	.LBB1281:
 3604              	.LBB1277:
 3605              		.loc 10 33 0
 3606 00c2 3178     		ldrb	r1, [r6, #0]	@ zero_extendqisi2
 3607              	.LBE1277:
 3608              	.LBE1281:
 3609              	.LBB1282:
 3610              	.LBB1280:
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 3611              		.loc 7 236 0
 3612 00c4 3846     		mov	r0, r7
 3613 00c6 A847     		blx	r5
 3614              	.LVL266:
 3615              	.LBE1280:
 3616              	.LBE1282:
 3617              	.LBB1283:
 3618              	.LBB1284:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 3619              		.loc 7 287 0
 3620 00c8 6368     		ldr	r3, [r4, #4]
 3621 00ca 002B     		cmp	r3, #0
 3622 00cc 4BD0     		beq	.L283
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 3623              		.loc 7 290 0
 3624 00ce 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 3625              		.loc 7 291 0
 3626 00d0 3846     		mov	r0, r7
 3627 00d2 3D49     		ldr	r1, .L287+24
 3628 00d4 0CBF     		ite	eq
 3629 00d6 384B     		ldreq	r3, .L287+8
 3630              		.loc 7 294 0
 3631 00d8 384B     		ldrne	r3, .L287+12
 3632 00da 9847     		blx	r3
 3633              	.LVL267:
 3634              	.L266:
 3635              	.LBE1284:
 3636              	.LBE1283:
 3637              	.LBB1288:
 3638              	.LBB1289:
  34:hallSensor.h  **** 	}
  35:hallSensor.h  **** 
  36:hallSensor.h  **** 	static bool isAtEnd(){
  37:hallSensor.h  **** 		return triggered[1];
 3639              		.loc 10 37 0
 3640 00dc 7178     		ldrb	r1, [r6, #1]	@ zero_extendqisi2
 3641              	.LBE1289:
 3642              	.LBE1288:
 3643              	.LBB1290:
 3644              	.LBB1291:
 221:commandHandlers.h **** 	iout << Control<axis>::isPositionControlEnabled() << ", " << Control<axis>::isSpeedControlEnabled(
 3645              		.loc 1 221 0
 3646 00de 344E     		ldr	r6, .L287
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 3647              		.loc 7 236 0
 3648 00e0 3046     		mov	r0, r6
 3649 00e2 A847     		blx	r5
 3650              	.LVL268:
 3651              	.LBE1291:
 3652              	.LBE1290:
 3653              	.LBB1292:
 3654              	.LBB1293:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 3655              		.loc 7 287 0
 3656 00e4 6368     		ldr	r3, [r4, #4]
 3657 00e6 002B     		cmp	r3, #0
 3658 00e8 37D0     		beq	.L284
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 3659              		.loc 7 290 0
 3660 00ea 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 3661              		.loc 7 291 0
 3662 00ec 3046     		mov	r0, r6
 3663 00ee 3D49     		ldr	r1, .L287+52
 3664 00f0 0CBF     		ite	eq
 3665 00f2 314B     		ldreq	r3, .L287+8
 3666              		.loc 7 294 0
 3667 00f4 314B     		ldrne	r3, .L287+12
 3668 00f6 9847     		blx	r3
 3669              	.LVL269:
 3670              	.L269:
 3671              	.LBE1293:
 3672              	.LBE1292:
 3673              	.LBB1297:
 3674              	.LBB1298:
  33:hallSensor.h  **** 		return triggered[0];
 3675              		.loc 10 33 0
 3676 00f8 3B4E     		ldr	r6, .L287+56
 3677              	.LBE1298:
 3678              	.LBE1297:
 3679              	.LBB1300:
 3680              	.LBB1301:
 221:commandHandlers.h **** 	iout << Control<axis>::isPositionControlEnabled() << ", " << Control<axis>::isSpeedControlEnabled(
 3681              		.loc 1 221 0
 3682 00fa 2D4F     		ldr	r7, .L287
 3683              	.LBE1301:
 3684              	.LBE1300:
 3685              	.LBB1303:
 3686              	.LBB1299:
  33:hallSensor.h  **** 		return triggered[0];
 3687              		.loc 10 33 0
 3688 00fc 3178     		ldrb	r1, [r6, #0]	@ zero_extendqisi2
 3689              	.LBE1299:
 3690              	.LBE1303:
 3691              	.LBB1304:
 3692              	.LBB1302:
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 3693              		.loc 7 236 0
 3694 00fe 3846     		mov	r0, r7
 3695 0100 A847     		blx	r5
 3696              	.LVL270:
 3697              	.LBE1302:
 3698              	.LBE1304:
 3699              	.LBB1305:
 3700              	.LBB1306:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 3701              		.loc 7 287 0
 3702 0102 6368     		ldr	r3, [r4, #4]
 3703 0104 002B     		cmp	r3, #0
 3704 0106 22D0     		beq	.L285
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 3705              		.loc 7 290 0
 3706 0108 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 3707              		.loc 7 291 0
 3708 010a 3846     		mov	r0, r7
 3709 010c 2E49     		ldr	r1, .L287+24
 3710 010e 0CBF     		ite	eq
 3711 0110 294B     		ldreq	r3, .L287+8
 3712              		.loc 7 294 0
 3713 0112 2A4B     		ldrne	r3, .L287+12
 3714 0114 9847     		blx	r3
 3715              	.LVL271:
 3716              	.L272:
 3717              	.LBE1306:
 3718              	.LBE1305:
 3719              	.LBB1310:
 3720              	.LBB1311:
 3721              		.loc 10 37 0
 3722 0116 7178     		ldrb	r1, [r6, #1]	@ zero_extendqisi2
 3723              	.LBE1311:
 3724              	.LBE1310:
 3725              	.LBB1312:
 3726              	.LBB1313:
 221:commandHandlers.h **** 	iout << Control<axis>::isPositionControlEnabled() << ", " << Control<axis>::isSpeedControlEnabled(
 3727              		.loc 1 221 0
 3728 0118 254E     		ldr	r6, .L287
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 3729              		.loc 7 236 0
 3730 011a 3046     		mov	r0, r6
 3731 011c A847     		blx	r5
 3732              	.LVL272:
 3733              	.LBE1313:
 3734              	.LBE1312:
 3735              	.LBB1314:
 3736              	.LBB1315:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 3737              		.loc 7 122 0
 3738 011e 6368     		ldr	r3, [r4, #4]
 3739 0120 73B1     		cbz	r3, .L286
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 3740              		.loc 7 126 0
 3741 0122 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 3742              		.loc 7 125 0
 3743 0124 022B     		cmp	r3, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 3744              		.loc 7 126 0
 3745 0126 3046     		mov	r0, r6
 3746 0128 0CBF     		ite	eq
 3747 012a 2A4B     		ldreq	r3, .L287+36
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 3748              		.loc 7 129 0
 3749 012c 2A4B     		ldrne	r3, .L287+40
 3750 012e 9847     		blx	r3
 3751              	.LVL273:
 3752              	.LBE1315:
 3753              	.LBE1314:
 172:commandHandlers.h **** }
 3754              		.loc 1 172 0
 3755 0130 0020     		movs	r0, #0
 3756 0132 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3757              	.LVL274:
 3758              	.L277:
 3759              	.LBB1319:
 3760              	.LBB1209:
 3761              	.LBB1207:
 3762              	.LBB1208:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 3763              		.loc 7 288 0
 3764 0134 2068     		ldr	r0, [r4, #0]
 3765              	.LVL275:
 3766 0136 1F49     		ldr	r1, .L287+4
 3767              	.LVL276:
 3768 0138 0368     		ldr	r3, [r0, #0]
 3769 013a DB68     		ldr	r3, [r3, #12]
 3770 013c 9847     		blx	r3
 3771              	.LVL277:
 3772 013e 6CE7     		b	.L248
 3773              	.LVL278:
 3774              	.L286:
 3775              	.LBE1208:
 3776              	.LBE1207:
 3777              	.LBE1209:
 3778              	.LBE1319:
 3779              	.LBB1320:
 3780              	.LBB1318:
 3781              	.LBB1316:
 3782              	.LBB1317:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 3783              		.loc 7 123 0
 3784 0140 3068     		ldr	r0, [r6, #0]
 3785 0142 0368     		ldr	r3, [r0, #0]
 3786 0144 0A21     		movs	r1, #10
 3787 0146 9B68     		ldr	r3, [r3, #8]
 3788 0148 9847     		blx	r3
 3789              	.LVL279:
 3790              	.LBE1317:
 3791              	.LBE1316:
 3792              	.LBE1318:
 3793              	.LBE1320:
 172:commandHandlers.h **** }
 3794              		.loc 1 172 0
 3795 014a 0020     		movs	r0, #0
 3796 014c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3797              	.LVL280:
 3798              	.L285:
 3799              	.LBB1321:
 3800              	.LBB1309:
 3801              	.LBB1307:
 3802              	.LBB1308:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 3803              		.loc 7 288 0
 3804 014e 3868     		ldr	r0, [r7, #0]
 3805 0150 1D49     		ldr	r1, .L287+24
 3806 0152 0368     		ldr	r3, [r0, #0]
 3807 0154 DB68     		ldr	r3, [r3, #12]
 3808 0156 9847     		blx	r3
 3809              	.LVL281:
 3810 0158 DDE7     		b	.L272
 3811              	.LVL282:
 3812              	.L284:
 3813              	.LBE1308:
 3814              	.LBE1307:
 3815              	.LBE1309:
 3816              	.LBE1321:
 3817              	.LBB1322:
 3818              	.LBB1296:
 3819              	.LBB1294:
 3820              	.LBB1295:
 3821 015a 3068     		ldr	r0, [r6, #0]
 3822 015c 2149     		ldr	r1, .L287+52
 3823 015e 0368     		ldr	r3, [r0, #0]
 3824 0160 DB68     		ldr	r3, [r3, #12]
 3825 0162 9847     		blx	r3
 3826              	.LVL283:
 3827 0164 C8E7     		b	.L269
 3828              	.LVL284:
 3829              	.L283:
 3830              	.LBE1295:
 3831              	.LBE1294:
 3832              	.LBE1296:
 3833              	.LBE1322:
 3834              	.LBB1323:
 3835              	.LBB1287:
 3836              	.LBB1285:
 3837              	.LBB1286:
 3838 0166 3868     		ldr	r0, [r7, #0]
 3839 0168 1749     		ldr	r1, .L287+24
 3840 016a 0368     		ldr	r3, [r0, #0]
 3841 016c DB68     		ldr	r3, [r3, #12]
 3842 016e 9847     		blx	r3
 3843              	.LVL285:
 3844 0170 B4E7     		b	.L266
 3845              	.LVL286:
 3846              	.L282:
 3847              	.LBE1286:
 3848              	.LBE1285:
 3849              	.LBE1287:
 3850              	.LBE1323:
 3851              	.LBB1324:
 3852              	.LBB1274:
 3853              	.LBB1272:
 3854              	.LBB1273:
 3855 0172 0068     		ldr	r0, [r0, #0]
 3856 0174 1949     		ldr	r1, .L287+44
 3857 0176 0368     		ldr	r3, [r0, #0]
 3858 0178 DB68     		ldr	r3, [r3, #12]
 3859 017a 9847     		blx	r3
 3860              	.LVL287:
 3861 017c 9FE7     		b	.L263
 3862              	.LVL288:
 3863              	.L281:
 3864              	.LBE1273:
 3865              	.LBE1272:
 3866              	.LBE1274:
 3867              	.LBE1324:
 3868              	.LBB1325:
 3869              	.LBB1269:
 3870              	.LBB1267:
 3871              	.LBB1268:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 3872              		.loc 7 123 0
 3873 017e 3068     		ldr	r0, [r6, #0]
 3874 0180 0368     		ldr	r3, [r0, #0]
 3875 0182 0A21     		movs	r1, #10
 3876 0184 9B68     		ldr	r3, [r3, #8]
 3877 0186 9847     		blx	r3
 3878              	.LVL289:
 3879 0188 8FE7     		b	.L260
 3880              	.LVL290:
 3881              	.L280:
 3882              	.LBE1268:
 3883              	.LBE1267:
 3884              	.LBE1269:
 3885              	.LBE1325:
 3886              	.LBB1326:
 3887              	.LBB1254:
 3888              	.LBB1252:
 3889              	.LBB1253:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 3890              		.loc 7 288 0
 3891 018a 3068     		ldr	r0, [r6, #0]
 3892 018c 0E49     		ldr	r1, .L287+24
 3893 018e 0368     		ldr	r3, [r0, #0]
 3894 0190 DB68     		ldr	r3, [r3, #12]
 3895 0192 9847     		blx	r3
 3896              	.LVL291:
 3897 0194 78E7     		b	.L257
 3898              	.LVL292:
 3899              	.L279:
 3900              	.LBE1253:
 3901              	.LBE1252:
 3902              	.LBE1254:
 3903              	.LBE1326:
 3904              	.LBB1327:
 3905              	.LBB1239:
 3906              	.LBB1237:
 3907              	.LBB1238:
 3908 0196 3068     		ldr	r0, [r6, #0]
 3909 0198 0C49     		ldr	r1, .L287+28
 3910 019a 0368     		ldr	r3, [r0, #0]
 3911 019c DB68     		ldr	r3, [r3, #12]
 3912 019e 9847     		blx	r3
 3913              	.LVL293:
 3914 01a0 60E7     		b	.L254
 3915              	.LVL294:
 3916              	.L278:
 3917              	.LBE1238:
 3918              	.LBE1237:
 3919              	.LBE1239:
 3920              	.LBE1327:
 3921              	.LBB1328:
 3922              	.LBB1224:
 3923              	.LBB1222:
 3924              	.LBB1223:
 3925 01a2 3068     		ldr	r0, [r6, #0]
 3926 01a4 0849     		ldr	r1, .L287+24
 3927 01a6 0368     		ldr	r3, [r0, #0]
 3928 01a8 DB68     		ldr	r3, [r3, #12]
 3929 01aa 9847     		blx	r3
 3930              	.LVL295:
 3931 01ac 48E7     		b	.L251
 3932              	.L288:
 3933 01ae 00BF     		.align	2
 3934              	.L287:
 3935 01b0 00000000 		.word	.LANCHOR0
 3936 01b4 68000000 		.word	.LC5
 3937 01b8 00000000 		.word	_ZN4xpcc8IOStream8writeBinEPKc
 3938 01bc 00000000 		.word	_ZN4xpcc8IOStream8writeHexEPKc
 3939 01c0 00100240 		.word	1073876992
 3940 01c4 00000000 		.word	_ZN4xpcc8IOStream12writeIntegerEl
 3941 01c8 7C000000 		.word	.LC6
 3942 01cc 80000000 		.word	.LC7
 3943 01d0 000C0240 		.word	1073875968
 3944 01d4 00000000 		.word	_ZN4xpcc8IOStream8writeBinEh
 3945 01d8 00000000 		.word	_ZN4xpcc8IOStream8writeHexEh
 3946 01dc 88000000 		.word	.LC8
 3947 01e0 00000000 		.word	_ZN10HallSensorIL4Axis0EE9triggeredE
 3948 01e4 9C000000 		.word	.LC9
 3949 01e8 00000000 		.word	_ZN10HallSensorIL4Axis2EE9triggeredE
 3950              	.LBE1223:
 3951              	.LBE1222:
 3952              	.LBE1224:
 3953              	.LBE1328:
 3954              		.cfi_endproc
 3955              	.LFE1044:
 3957              		.section	.text._ZN8Handlers18stopPatternHandlerEPKci,"axG",%progbits,_ZN8Handlers18stopPatternHand
 3958              		.align	2
 3959              		.weak	_ZN8Handlers18stopPatternHandlerEPKci
 3960              		.thumb
 3961              		.thumb_func
 3963              	_ZN8Handlers18stopPatternHandlerEPKci:
 3964              	.LFB1043:
 157:commandHandlers.h **** static bool stopPatternHandler(const char* cmd, int length){
 3965              		.loc 1 157 0
 3966              		.cfi_startproc
 3967              		@ args = 0, pretend = 0, frame = 0
 3968              		@ frame_needed = 0, uses_anonymous_args = 0
 3969              	.LVL296:
 3970              	.LBB1339:
 3971              	.LBB1340:
  52:pattern.h     **** 	}
  53:pattern.h     **** 	static void done(){
  54:pattern.h     **** 		running = 0;
 3972              		.loc 4 54 0
 3973 0000 154B     		ldr	r3, .L298
 3974              	.LBE1340:
 3975              	.LBE1339:
 157:commandHandlers.h **** static bool stopPatternHandler(const char* cmd, int length){
 3976              		.loc 1 157 0
 3977 0002 10B5     		push	{r4, lr}
 3978              	.LCFI20:
 3979              		.cfi_def_cfa_offset 8
 3980              		.cfi_offset 4, -8
 3981              		.cfi_offset 14, -4
 3982              	.LBB1357:
 3983              	.LBB1355:
 3984              		.loc 4 54 0
 3985 0004 0022     		movs	r2, #0
 3986              	.LBB1341:
 3987              	.LBB1342:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 3988              		.loc 7 287 0
 3989 0006 154C     		ldr	r4, .L298+4
 3990              	.LBE1342:
 3991              	.LBE1341:
 3992              		.loc 4 54 0
 3993 0008 1A70     		strb	r2, [r3, #0]
  55:pattern.h     **** 		State::set(State::READY);
 3994              		.loc 4 55 0
 3995 000a 0120     		movs	r0, #1
 3996              	.LVL297:
 3997 000c 144B     		ldr	r3, .L298+8
 3998 000e 9847     		blx	r3
 3999              	.LVL298:
 4000              	.LBB1347:
 4001              	.LBB1345:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 4002              		.loc 7 287 0
 4003 0010 6368     		ldr	r3, [r4, #4]
 4004 0012 8BB1     		cbz	r3, .L296
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 4005              		.loc 7 290 0
 4006 0014 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 4007              		.loc 7 291 0
 4008 0016 2046     		mov	r0, r4
 4009 0018 0CBF     		ite	eq
 4010 001a 124B     		ldreq	r3, .L298+12
 4011              		.loc 7 294 0
 4012 001c 124B     		ldrne	r3, .L298+16
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 4013              		.loc 7 291 0
 4014 001e 1349     		ldr	r1, .L298+20
 4015              		.loc 7 294 0
 4016 0020 9847     		blx	r3
 4017              	.LVL299:
 4018              	.LBE1345:
 4019              	.LBE1347:
 4020              	.LBB1348:
 4021              	.LBB1349:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 4022              		.loc 7 122 0
 4023 0022 6368     		ldr	r3, [r4, #4]
 4024 0024 0D48     		ldr	r0, .L298+4
 4025 0026 83B1     		cbz	r3, .L297
 4026              	.L293:
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 4027              		.loc 7 126 0
 4028 0028 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 4029              		.loc 7 125 0
 4030 002a 022B     		cmp	r3, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 4031              		.loc 7 126 0
 4032 002c 0CBF     		ite	eq
 4033 002e 104B     		ldreq	r3, .L298+24
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 4034              		.loc 7 129 0
 4035 0030 104B     		ldrne	r3, .L298+28
 4036 0032 9847     		blx	r3
 4037              	.LVL300:
 4038              	.LBE1349:
 4039              	.LBE1348:
 4040              	.LBE1355:
 4041              	.LBE1357:
 162:commandHandlers.h **** }
 4042              		.loc 1 162 0
 4043 0034 0120     		movs	r0, #1
 4044 0036 10BD     		pop	{r4, pc}
 4045              	.LVL301:
 4046              	.L296:
 4047              	.LBB1358:
 4048              	.LBB1356:
 4049              	.LBB1353:
 4050              	.LBB1346:
 4051              	.LBB1343:
 4052              	.LBB1344:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 4053              		.loc 7 288 0
 4054 0038 2068     		ldr	r0, [r4, #0]
 4055 003a 0C49     		ldr	r1, .L298+20
 4056 003c 0368     		ldr	r3, [r0, #0]
 4057 003e DB68     		ldr	r3, [r3, #12]
 4058 0040 9847     		blx	r3
 4059              	.LVL302:
 4060              	.LBE1344:
 4061              	.LBE1343:
 4062              	.LBE1346:
 4063              	.LBE1353:
 4064              	.LBB1354:
 4065              	.LBB1352:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 4066              		.loc 7 122 0
 4067 0042 6368     		ldr	r3, [r4, #4]
 4068 0044 0548     		ldr	r0, .L298+4
 4069 0046 002B     		cmp	r3, #0
 4070 0048 EED1     		bne	.L293
 4071              	.LVL303:
 4072              	.L297:
 4073              	.LBB1350:
 4074              	.LBB1351:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 4075              		.loc 7 123 0
 4076 004a 0068     		ldr	r0, [r0, #0]
 4077 004c 0368     		ldr	r3, [r0, #0]
 4078 004e 0A21     		movs	r1, #10
 4079 0050 9B68     		ldr	r3, [r3, #8]
 4080 0052 9847     		blx	r3
 4081              	.LVL304:
 4082              	.LBE1351:
 4083              	.LBE1350:
 4084              	.LBE1352:
 4085              	.LBE1354:
 4086              	.LBE1356:
 4087              	.LBE1358:
 162:commandHandlers.h **** }
 4088              		.loc 1 162 0
 4089 0054 0120     		movs	r0, #1
 4090 0056 10BD     		pop	{r4, pc}
 4091              	.L299:
 4092              		.align	2
 4093              	.L298:
 4094 0058 00000000 		.word	_ZN7Pattern7runningE
 4095 005c 00000000 		.word	.LANCHOR2
 4096 0060 00000000 		.word	_ZN5State3setEi
 4097 0064 00000000 		.word	_ZN4xpcc8IOStream8writeBinEPKc
 4098 0068 00000000 		.word	_ZN4xpcc8IOStream8writeHexEPKc
 4099 006c A4000000 		.word	.LC10
 4100 0070 00000000 		.word	_ZN4xpcc8IOStream8writeBinEh
 4101 0074 00000000 		.word	_ZN4xpcc8IOStream8writeHexEh
 4102              		.cfi_endproc
 4103              	.LFE1043:
 4105              		.section	.text._ZN8Handlers19setTriggerThresholdEPKci,"axG",%progbits,_ZN8Handlers19setTriggerThre
 4106              		.align	2
 4107              		.weak	_ZN8Handlers19setTriggerThresholdEPKci
 4108              		.thumb
 4109              		.thumb_func
 4111              	_ZN8Handlers19setTriggerThresholdEPKci:
 4112              	.LFB1048:
 201:commandHandlers.h **** static bool setTriggerThreshold(const char* cmd, int length){
 4113              		.loc 1 201 0
 4114              		.cfi_startproc
 4115              		@ args = 0, pretend = 0, frame = 0
 4116              		@ frame_needed = 0, uses_anonymous_args = 0
 4117              	.LVL305:
 4118              	.LBB1375:
 202:commandHandlers.h **** 	float param = atof2(cmd, length, 0);
 4119              		.loc 1 202 0
 4120 0000 0022     		movs	r2, #0
 4121              	.LBE1375:
 201:commandHandlers.h **** static bool setTriggerThreshold(const char* cmd, int length){
 4122              		.loc 1 201 0
 4123 0002 10B5     		push	{r4, lr}
 4124              	.LCFI21:
 4125              		.cfi_def_cfa_offset 8
 4126              		.cfi_offset 4, -8
 4127              		.cfi_offset 14, -4
 4128              	.LBB1378:
 202:commandHandlers.h **** 	float param = atof2(cmd, length, 0);
 4129              		.loc 1 202 0
 4130 0004 1C4B     		ldr	r3, .L311
 4131 0006 9847     		blx	r3
 4132              	.LVL306:
 4133 0008 07EE900A 		fmsr	s15, r0
 4134              	.LVL307:
 203:commandHandlers.h **** 	if(param == 0){
 4135              		.loc 1 203 0
 4136 000c F5EE407A 		fcmpzs	s15
 4137 0010 F1EE10FA 		fmstat
 4138 0014 0DD0     		beq	.L308
 4139              	.LVL308:
 4140              	.LBB1376:
 4141              	.LBB1377:
 4142              		.file 11 "transform.h"
   1:transform.h   **** /*
   2:transform.h   ****  * transform.h
   3:transform.h   ****  *
   4:transform.h   ****  *  Created on: Jan 23, 2014
   5:transform.h   ****  *      Author: jonas
   6:transform.h   ****  */
   7:transform.h   **** 
   8:transform.h   **** #ifndef TRANSFORM_H_
   9:transform.h   **** #define TRANSFORM_H_
  10:transform.h   **** 
  11:transform.h   **** #include "project.h"
  12:transform.h   **** 
  13:transform.h   **** struct Transform{
  14:transform.h   **** 	static int mmToEncoder(float mm){
  15:transform.h   **** 		return int(MOTOR_ENC_PER_REV*MOTOR_GEAR_RATIO*mm + 0.5f);
  16:transform.h   **** 	}
  17:transform.h   **** 	static float encoderToMM(int encoder){
  18:transform.h   **** 		return float(encoder)/float(MOTOR_ENC_PER_REV*MOTOR_GEAR_RATIO);
  19:transform.h   **** 	}
  20:transform.h   **** 	static int mumToEncoder(float mum){
  21:transform.h   **** 		return int(mum*2 + 0.5f);
 4143              		.loc 11 21 0
 4144 0016 77EEA77A 		fadds	s15, s15, s15
 4145 001a B6EE007A 		fconsts	s14, #96
 4146 001e 77EE877A 		fadds	s15, s15, s14
 4147              	.LBE1377:
 4148              	.LBE1376:
 208:commandHandlers.h **** 	Trigger::setThreshold(threshold);
 4149              		.loc 1 208 0
 4150 0022 164B     		ldr	r3, .L311+4
 4151 0024 FDEEE77A 		ftosizs	s15, s15
 4152 0028 17EE900A 		fmrs	r0, s15	@ int
 4153              	.LVL309:
 4154 002c 9847     		blx	r3
 4155              	.LVL310:
 209:commandHandlers.h **** 	return true;
 4156              		.loc 1 209 0
 4157 002e 0120     		movs	r0, #1
 4158              	.LBE1378:
 210:commandHandlers.h **** }
 4159              		.loc 1 210 0
 4160 0030 10BD     		pop	{r4, pc}
 4161              	.LVL311:
 4162              	.L308:
 4163              	.LBB1379:
 4164              	.LBB1380:
 4165              	.LBB1381:
 4166              	.LBB1382:
 4167              	.LBB1383:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 4168              		.loc 7 287 0
 4169 0032 134C     		ldr	r4, .L311+8
 4170 0034 6368     		ldr	r3, [r4, #4]
 4171 0036 8BB1     		cbz	r3, .L309
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 4172              		.loc 7 290 0
 4173 0038 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 4174              		.loc 7 291 0
 4175 003a 2046     		mov	r0, r4
 4176              	.LVL312:
 4177 003c 1149     		ldr	r1, .L311+12
 4178 003e 0CBF     		ite	eq
 4179 0040 114B     		ldreq	r3, .L311+16
 4180              		.loc 7 294 0
 4181 0042 124B     		ldrne	r3, .L311+20
 4182 0044 9847     		blx	r3
 4183              	.LVL313:
 4184              	.L303:
 4185              	.LBE1383:
 4186              	.LBE1382:
 4187              	.LBB1387:
 4188              	.LBB1388:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 4189              		.loc 7 122 0
 4190 0046 6468     		ldr	r4, [r4, #4]
 4191 0048 0D48     		ldr	r0, .L311+8
 4192 004a 6CB1     		cbz	r4, .L310
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 4193              		.loc 7 126 0
 4194 004c 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 4195              		.loc 7 125 0
 4196 004e 022C     		cmp	r4, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 4197              		.loc 7 126 0
 4198 0050 0CBF     		ite	eq
 4199 0052 0F4B     		ldreq	r3, .L311+24
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 4200              		.loc 7 129 0
 4201 0054 0F4B     		ldrne	r3, .L311+28
 4202 0056 9847     		blx	r3
 4203              	.LVL314:
 4204 0058 0020     		movs	r0, #0
 4205 005a 10BD     		pop	{r4, pc}
 4206              	.LVL315:
 4207              	.L309:
 4208              	.LBE1388:
 4209              	.LBE1387:
 4210              	.LBB1392:
 4211              	.LBB1386:
 4212              	.LBB1384:
 4213              	.LBB1385:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 4214              		.loc 7 288 0
 4215 005c 2068     		ldr	r0, [r4, #0]
 4216              	.LVL316:
 4217 005e 0949     		ldr	r1, .L311+12
 4218 0060 0368     		ldr	r3, [r0, #0]
 4219 0062 DB68     		ldr	r3, [r3, #12]
 4220 0064 9847     		blx	r3
 4221              	.LVL317:
 4222 0066 EEE7     		b	.L303
 4223              	.LVL318:
 4224              	.L310:
 4225              	.LBE1385:
 4226              	.LBE1384:
 4227              	.LBE1386:
 4228              	.LBE1392:
 4229              	.LBB1393:
 4230              	.LBB1391:
 4231              	.LBB1389:
 4232              	.LBB1390:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 4233              		.loc 7 123 0
 4234 0068 0068     		ldr	r0, [r0, #0]
 4235 006a 0368     		ldr	r3, [r0, #0]
 4236 006c 0A21     		movs	r1, #10
 4237 006e 9B68     		ldr	r3, [r3, #8]
 4238 0070 9847     		blx	r3
 4239              	.LVL319:
 4240 0072 2046     		mov	r0, r4
 4241 0074 10BD     		pop	{r4, pc}
 4242              	.L312:
 4243 0076 00BF     		.align	2
 4244              	.L311:
 4245 0078 00000000 		.word	_Z5atof2PKcif
 4246 007c 00000000 		.word	_ZN7Trigger12setThresholdEi
 4247 0080 00000000 		.word	.LANCHOR0
 4248 0084 B4000000 		.word	.LC11
 4249 0088 00000000 		.word	_ZN4xpcc8IOStream8writeBinEPKc
 4250 008c 00000000 		.word	_ZN4xpcc8IOStream8writeHexEPKc
 4251 0090 00000000 		.word	_ZN4xpcc8IOStream8writeBinEh
 4252 0094 00000000 		.word	_ZN4xpcc8IOStream8writeHexEh
 4253              	.LBE1390:
 4254              	.LBE1389:
 4255              	.LBE1391:
 4256              	.LBE1393:
 4257              	.LBE1381:
 4258              	.LBE1380:
 4259              	.LBE1379:
 4260              		.cfi_endproc
 4261              	.LFE1048:
 4263              		.section	.text._ZN8Handlers20enableSystickHandlerEPKci,"axG",%progbits,_ZN8Handlers20enableSystick
 4264              		.align	2
 4265              		.weak	_ZN8Handlers20enableSystickHandlerEPKci
 4266              		.thumb
 4267              		.thumb_func
 4269              	_ZN8Handlers20enableSystickHandlerEPKci:
 4270              	.LFB1037:
 107:commandHandlers.h **** static bool enableSystickHandler(const char* cmd, int length){
 4271              		.loc 1 107 0
 4272              		.cfi_startproc
 4273              		@ args = 0, pretend = 0, frame = 0
 4274              		@ frame_needed = 0, uses_anonymous_args = 0
 4275              	.LVL320:
 4276              	.LBB1405:
 110:commandHandlers.h **** 	bool enable = atoi2(cmd, 1, 1);
 4277              		.loc 1 110 0
 4278 0000 0121     		movs	r1, #1
 4279              	.LVL321:
 4280              	.LBE1405:
 107:commandHandlers.h **** static bool enableSystickHandler(const char* cmd, int length){
 4281              		.loc 1 107 0
 4282 0002 70B5     		push	{r4, r5, r6, lr}
 4283              	.LCFI22:
 4284              		.cfi_def_cfa_offset 16
 4285              		.cfi_offset 4, -16
 4286              		.cfi_offset 5, -12
 4287              		.cfi_offset 6, -8
 4288              		.cfi_offset 14, -4
 4289              	.LBB1424:
 110:commandHandlers.h **** 	bool enable = atoi2(cmd, 1, 1);
 4290              		.loc 1 110 0
 4291 0004 0A46     		mov	r2, r1
 4292 0006 1A4B     		ldr	r3, .L325
 4293 0008 9847     		blx	r3
 4294              	.LVL322:
 4295 000a 051C     		adds	r5, r0, #0
 4296 000c 18BF     		it	ne
 4297 000e 0125     		movne	r5, #1
 4298              	.LVL323:
 111:commandHandlers.h **** 	if(enable){
 4299              		.loc 1 111 0
 4300 0010 DDB9     		cbnz	r5, .L322
 4301              	.LBB1406:
 4302              	.LBB1407:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 4303              		.loc 7 287 0
 4304 0012 184C     		ldr	r4, .L325+4
 4305              	.LBE1407:
 4306              	.LBE1406:
 114:commandHandlers.h **** 		Utils::disableSystick();
 4307              		.loc 1 114 0
 4308 0014 184B     		ldr	r3, .L325+8
 4309 0016 9847     		blx	r3
 4310              	.LVL324:
 4311              	.LBB1413:
 4312              	.LBB1410:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 4313              		.loc 7 287 0
 4314 0018 6368     		ldr	r3, [r4, #4]
 4315 001a E3B1     		cbz	r3, .L323
 4316              	.L316:
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 4317              		.loc 7 290 0
 4318 001c 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 4319              		.loc 7 291 0
 4320 001e 2046     		mov	r0, r4
 4321 0020 1649     		ldr	r1, .L325+12
 4322 0022 0CBF     		ite	eq
 4323 0024 164B     		ldreq	r3, .L325+16
 4324              		.loc 7 294 0
 4325 0026 174B     		ldrne	r3, .L325+20
 4326 0028 9847     		blx	r3
 4327              	.LVL325:
 4328              	.L317:
 4329              	.LBE1410:
 4330              	.LBE1413:
 4331              	.LBB1414:
 4332              	.LBB1415:
 103:commandHandlers.h **** 	dout << axis << " set pwm to " << speed << endl;
 4333              		.loc 1 103 0
 4334 002a 124E     		ldr	r6, .L325+4
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 4335              		.loc 7 236 0
 4336 002c 164B     		ldr	r3, .L325+24
 4337 002e 3046     		mov	r0, r6
 4338 0030 2946     		mov	r1, r5
 4339 0032 9847     		blx	r3
 4340              	.LVL326:
 4341              	.LBE1415:
 4342              	.LBE1414:
 4343              	.LBB1416:
 4344              	.LBB1417:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 4345              		.loc 7 122 0
 4346 0034 6368     		ldr	r3, [r4, #4]
 4347 0036 A3B1     		cbz	r3, .L324
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 4348              		.loc 7 126 0
 4349 0038 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 4350              		.loc 7 125 0
 4351 003a 022B     		cmp	r3, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 4352              		.loc 7 126 0
 4353 003c 3046     		mov	r0, r6
 4354 003e 0CBF     		ite	eq
 4355 0040 124B     		ldreq	r3, .L325+28
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 4356              		.loc 7 129 0
 4357 0042 134B     		ldrne	r3, .L325+32
 4358 0044 9847     		blx	r3
 4359              	.LVL327:
 4360              	.LBE1417:
 4361              	.LBE1416:
 4362              	.LBE1424:
 118:commandHandlers.h **** }
 4363              		.loc 1 118 0
 4364 0046 0120     		movs	r0, #1
 4365 0048 70BD     		pop	{r4, r5, r6, pc}
 4366              	.LVL328:
 4367              	.L322:
 4368              	.LBB1425:
 4369              	.LBB1421:
 4370              	.LBB1411:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 4371              		.loc 7 287 0
 4372 004a 0A4C     		ldr	r4, .L325+4
 4373              	.LBE1411:
 4374              	.LBE1421:
 112:commandHandlers.h **** 		Utils::enableSystick();
 4375              		.loc 1 112 0
 4376 004c 114B     		ldr	r3, .L325+36
 4377 004e 9847     		blx	r3
 4378              	.LVL329:
 4379              	.LBB1422:
 4380              	.LBB1412:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 4381              		.loc 7 287 0
 4382 0050 6368     		ldr	r3, [r4, #4]
 4383 0052 002B     		cmp	r3, #0
 4384 0054 E2D1     		bne	.L316
 4385              	.L323:
 4386              	.LVL330:
 4387              	.LBB1408:
 4388              	.LBB1409:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 4389              		.loc 7 288 0
 4390 0056 2068     		ldr	r0, [r4, #0]
 4391 0058 0849     		ldr	r1, .L325+12
 4392 005a 0368     		ldr	r3, [r0, #0]
 4393 005c DB68     		ldr	r3, [r3, #12]
 4394 005e 9847     		blx	r3
 4395              	.LVL331:
 4396 0060 E3E7     		b	.L317
 4397              	.LVL332:
 4398              	.L324:
 4399              	.LBE1409:
 4400              	.LBE1408:
 4401              	.LBE1412:
 4402              	.LBE1422:
 4403              	.LBB1423:
 4404              	.LBB1420:
 4405              	.LBB1418:
 4406              	.LBB1419:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 4407              		.loc 7 123 0
 4408 0062 3068     		ldr	r0, [r6, #0]
 4409 0064 0368     		ldr	r3, [r0, #0]
 4410 0066 0A21     		movs	r1, #10
 4411 0068 9B68     		ldr	r3, [r3, #8]
 4412 006a 9847     		blx	r3
 4413              	.LVL333:
 4414              	.LBE1419:
 4415              	.LBE1418:
 4416              	.LBE1420:
 4417              	.LBE1423:
 4418              	.LBE1425:
 118:commandHandlers.h **** }
 4419              		.loc 1 118 0
 4420 006c 0120     		movs	r0, #1
 4421 006e 70BD     		pop	{r4, r5, r6, pc}
 4422              	.L326:
 4423              		.align	2
 4424              	.L325:
 4425 0070 00000000 		.word	_Z5atoi2PKcii
 4426 0074 00000000 		.word	.LANCHOR2
 4427 0078 00000000 		.word	_ZN5Utils14disableSystickEv
 4428 007c DC000000 		.word	.LC12
 4429 0080 00000000 		.word	_ZN4xpcc8IOStream8writeBinEPKc
 4430 0084 00000000 		.word	_ZN4xpcc8IOStream8writeHexEPKc
 4431 0088 00000000 		.word	_ZN4xpcc8IOStream12writeIntegerEl
 4432 008c 00000000 		.word	_ZN4xpcc8IOStream8writeBinEh
 4433 0090 00000000 		.word	_ZN4xpcc8IOStream8writeHexEh
 4434 0094 00000000 		.word	_ZN5Utils13enableSystickEv
 4435              		.cfi_endproc
 4436              	.LFE1037:
 4438              		.section	.text._ZN8Handlers13getLaserErrorEPKci,"axG",%progbits,_ZN8Handlers13getLaserErrorEPKci,c
 4439              		.align	2
 4440              		.weak	_ZN8Handlers13getLaserErrorEPKci
 4441              		.thumb
 4442              		.thumb_func
 4444              	_ZN8Handlers13getLaserErrorEPKci:
 4445              	.LFB1039:
 129:commandHandlers.h **** static bool getLaserError(const char* cmd, int length){
 4446              		.loc 1 129 0
 4447              		.cfi_startproc
 4448              		@ args = 0, pretend = 0, frame = 0
 4449              		@ frame_needed = 0, uses_anonymous_args = 0
 4450              	.LVL334:
 4451 0000 38B5     		push	{r3, r4, r5, lr}
 4452              	.LCFI23:
 4453              		.cfi_def_cfa_offset 16
 4454              		.cfi_offset 3, -16
 4455              		.cfi_offset 4, -12
 4456              		.cfi_offset 5, -8
 4457              		.cfi_offset 14, -4
 4458              	.LBB1436:
 4459              	.LBB1437:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 4460              		.loc 7 287 0
 4461 0002 144C     		ldr	r4, .L336
 4462 0004 6368     		ldr	r3, [r4, #4]
 4463 0006 C3B1     		cbz	r3, .L334
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 4464              		.loc 7 290 0
 4465 0008 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 4466              		.loc 7 291 0
 4467 000a 2046     		mov	r0, r4
 4468              	.LVL335:
 4469 000c 1249     		ldr	r1, .L336+4
 4470              	.LVL336:
 4471 000e 0CBF     		ite	eq
 4472 0010 124B     		ldreq	r3, .L336+8
 4473              		.loc 7 294 0
 4474 0012 134B     		ldrne	r3, .L336+12
 4475 0014 9847     		blx	r3
 4476              	.LVL337:
 4477              	.L329:
 4478              	.LBE1437:
 4479              	.LBE1436:
 132:commandHandlers.h **** 	iout << "Laser error: " << Laser::getLastError() << endl;
 4480              		.loc 1 132 0
 4481 0016 134B     		ldr	r3, .L336+16
 4482              	.LBB1441:
 4483              	.LBB1442:
 221:commandHandlers.h **** 	iout << Control<axis>::isPositionControlEnabled() << ", " << Control<axis>::isSpeedControlEnabled(
 4484              		.loc 1 221 0
 4485 0018 0E4D     		ldr	r5, .L336
 4486              	.LBE1442:
 4487              	.LBE1441:
 132:commandHandlers.h **** 	iout << "Laser error: " << Laser::getLastError() << endl;
 4488              		.loc 1 132 0
 4489 001a 9847     		blx	r3
 4490              	.LVL338:
 4491              	.LBB1445:
 4492              	.LBB1443:
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 4493              		.loc 7 236 0
 4494 001c 124B     		ldr	r3, .L336+20
 4495              	.LBE1443:
 4496              	.LBE1445:
 132:commandHandlers.h **** 	iout << "Laser error: " << Laser::getLastError() << endl;
 4497              		.loc 1 132 0
 4498 001e 0146     		mov	r1, r0
 4499              	.LBB1446:
 4500              	.LBB1444:
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 4501              		.loc 7 236 0
 4502 0020 2846     		mov	r0, r5
 4503 0022 9847     		blx	r3
 4504              	.LVL339:
 4505              	.LBE1444:
 4506              	.LBE1446:
 4507              	.LBB1447:
 4508              	.LBB1448:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 4509              		.loc 7 122 0
 4510 0024 6368     		ldr	r3, [r4, #4]
 4511 0026 73B1     		cbz	r3, .L335
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 4512              		.loc 7 126 0
 4513 0028 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 4514              		.loc 7 125 0
 4515 002a 022B     		cmp	r3, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 4516              		.loc 7 126 0
 4517 002c 2846     		mov	r0, r5
 4518 002e 0CBF     		ite	eq
 4519 0030 0E4B     		ldreq	r3, .L336+24
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 4520              		.loc 7 129 0
 4521 0032 0F4B     		ldrne	r3, .L336+28
 4522 0034 9847     		blx	r3
 4523              	.LVL340:
 4524              	.LBE1448:
 4525              	.LBE1447:
 134:commandHandlers.h **** }
 4526              		.loc 1 134 0
 4527 0036 0020     		movs	r0, #0
 4528 0038 38BD     		pop	{r3, r4, r5, pc}
 4529              	.LVL341:
 4530              	.L334:
 4531              	.LBB1452:
 4532              	.LBB1440:
 4533              	.LBB1438:
 4534              	.LBB1439:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 4535              		.loc 7 288 0
 4536 003a 2068     		ldr	r0, [r4, #0]
 4537              	.LVL342:
 4538 003c 0649     		ldr	r1, .L336+4
 4539              	.LVL343:
 4540 003e 0368     		ldr	r3, [r0, #0]
 4541 0040 DB68     		ldr	r3, [r3, #12]
 4542 0042 9847     		blx	r3
 4543              	.LVL344:
 4544 0044 E7E7     		b	.L329
 4545              	.LVL345:
 4546              	.L335:
 4547              	.LBE1439:
 4548              	.LBE1438:
 4549              	.LBE1440:
 4550              	.LBE1452:
 4551              	.LBB1453:
 4552              	.LBB1451:
 4553              	.LBB1449:
 4554              	.LBB1450:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 4555              		.loc 7 123 0
 4556 0046 2868     		ldr	r0, [r5, #0]
 4557 0048 0368     		ldr	r3, [r0, #0]
 4558 004a 0A21     		movs	r1, #10
 4559 004c 9B68     		ldr	r3, [r3, #8]
 4560 004e 9847     		blx	r3
 4561              	.LVL346:
 4562              	.LBE1450:
 4563              	.LBE1449:
 4564              	.LBE1451:
 4565              	.LBE1453:
 134:commandHandlers.h **** }
 4566              		.loc 1 134 0
 4567 0050 0020     		movs	r0, #0
 4568 0052 38BD     		pop	{r3, r4, r5, pc}
 4569              	.L337:
 4570              		.align	2
 4571              	.L336:
 4572 0054 00000000 		.word	.LANCHOR0
 4573 0058 EC000000 		.word	.LC13
 4574 005c 00000000 		.word	_ZN4xpcc8IOStream8writeBinEPKc
 4575 0060 00000000 		.word	_ZN4xpcc8IOStream8writeHexEPKc
 4576 0064 00000000 		.word	_ZN5Laser12getLastErrorEv
 4577 0068 00000000 		.word	_ZN4xpcc8IOStream12writeIntegerEl
 4578 006c 00000000 		.word	_ZN4xpcc8IOStream8writeBinEh
 4579 0070 00000000 		.word	_ZN4xpcc8IOStream8writeHexEh
 4580              		.cfi_endproc
 4581              	.LFE1039:
 4583              		.section	.text._ZN8Handlers13enableTriggerEPKci,"axG",%progbits,_ZN8Handlers13enableTriggerEPKci,c
 4584              		.align	2
 4585              		.weak	_ZN8Handlers13enableTriggerEPKci
 4586              		.thumb
 4587              		.thumb_func
 4589              	_ZN8Handlers13enableTriggerEPKci:
 4590              	.LFB1038:
 120:commandHandlers.h **** static bool enableTrigger(const char* cmd, int length){
 4591              		.loc 1 120 0
 4592              		.cfi_startproc
 4593              		@ args = 0, pretend = 0, frame = 0
 4594              		@ frame_needed = 0, uses_anonymous_args = 0
 4595              	.LVL347:
 4596 0000 70B5     		push	{r4, r5, r6, lr}
 4597              	.LCFI24:
 4598              		.cfi_def_cfa_offset 16
 4599              		.cfi_offset 4, -16
 4600              		.cfi_offset 5, -12
 4601              		.cfi_offset 6, -8
 4602              		.cfi_offset 14, -4
 4603              	.LBB1465:
 123:commandHandlers.h **** 	bool param = atoi2(cmd, 1, 2);
 4604              		.loc 1 123 0
 4605 0002 0121     		movs	r1, #1
 4606              	.LVL348:
 4607 0004 0222     		movs	r2, #2
 4608 0006 174B     		ldr	r3, .L347
 4609              	.LBB1466:
 4610              	.LBB1467:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 4611              		.loc 7 287 0
 4612 0008 174C     		ldr	r4, .L347+4
 4613              	.LBE1467:
 4614              	.LBE1466:
 123:commandHandlers.h **** 	bool param = atoi2(cmd, 1, 2);
 4615              		.loc 1 123 0
 4616 000a 9847     		blx	r3
 4617              	.LVL349:
 4618 000c 051C     		adds	r5, r0, #0
 4619 000e 18BF     		it	ne
 4620 0010 0125     		movne	r5, #1
 4621              	.LVL350:
 124:commandHandlers.h **** 	Trigger::enable(param);
 4622              		.loc 1 124 0
 4623 0012 164B     		ldr	r3, .L347+8
 4624 0014 2846     		mov	r0, r5
 4625              	.LVL351:
 4626 0016 9847     		blx	r3
 4627              	.LVL352:
 4628              	.LBB1472:
 4629              	.LBB1470:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 4630              		.loc 7 287 0
 4631 0018 6368     		ldr	r3, [r4, #4]
 4632 001a B3B1     		cbz	r3, .L345
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 4633              		.loc 7 290 0
 4634 001c 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 4635              		.loc 7 291 0
 4636 001e 2046     		mov	r0, r4
 4637 0020 1349     		ldr	r1, .L347+12
 4638 0022 0CBF     		ite	eq
 4639 0024 134B     		ldreq	r3, .L347+16
 4640              		.loc 7 294 0
 4641 0026 144B     		ldrne	r3, .L347+20
 4642 0028 9847     		blx	r3
 4643              	.LVL353:
 4644              	.L340:
 4645              	.LBE1470:
 4646              	.LBE1472:
 4647              	.LBB1473:
 4648              	.LBB1474:
 103:commandHandlers.h **** 	dout << axis << " set pwm to " << speed << endl;
 4649              		.loc 1 103 0
 4650 002a 0F4E     		ldr	r6, .L347+4
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 4651              		.loc 7 236 0
 4652 002c 134B     		ldr	r3, .L347+24
 4653 002e 3046     		mov	r0, r6
 4654 0030 2946     		mov	r1, r5
 4655 0032 9847     		blx	r3
 4656              	.LVL354:
 4657              	.LBE1474:
 4658              	.LBE1473:
 4659              	.LBB1475:
 4660              	.LBB1476:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 4661              		.loc 7 122 0
 4662 0034 6368     		ldr	r3, [r4, #4]
 4663 0036 73B1     		cbz	r3, .L346
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 4664              		.loc 7 126 0
 4665 0038 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 4666              		.loc 7 125 0
 4667 003a 022B     		cmp	r3, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 4668              		.loc 7 126 0
 4669 003c 3046     		mov	r0, r6
 4670 003e 0CBF     		ite	eq
 4671 0040 0F4B     		ldreq	r3, .L347+28
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 4672              		.loc 7 129 0
 4673 0042 104B     		ldrne	r3, .L347+32
 4674 0044 9847     		blx	r3
 4675              	.LVL355:
 4676              	.LBE1476:
 4677              	.LBE1475:
 4678              	.LBE1465:
 127:commandHandlers.h **** }
 4679              		.loc 1 127 0
 4680 0046 0120     		movs	r0, #1
 4681 0048 70BD     		pop	{r4, r5, r6, pc}
 4682              	.LVL356:
 4683              	.L345:
 4684              	.LBB1482:
 4685              	.LBB1480:
 4686              	.LBB1471:
 4687              	.LBB1468:
 4688              	.LBB1469:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 4689              		.loc 7 288 0
 4690 004a 2068     		ldr	r0, [r4, #0]
 4691 004c 0849     		ldr	r1, .L347+12
 4692 004e 0368     		ldr	r3, [r0, #0]
 4693 0050 DB68     		ldr	r3, [r3, #12]
 4694 0052 9847     		blx	r3
 4695              	.LVL357:
 4696 0054 E9E7     		b	.L340
 4697              	.LVL358:
 4698              	.L346:
 4699              	.LBE1469:
 4700              	.LBE1468:
 4701              	.LBE1471:
 4702              	.LBE1480:
 4703              	.LBB1481:
 4704              	.LBB1479:
 4705              	.LBB1477:
 4706              	.LBB1478:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 4707              		.loc 7 123 0
 4708 0056 3068     		ldr	r0, [r6, #0]
 4709 0058 0368     		ldr	r3, [r0, #0]
 4710 005a 0A21     		movs	r1, #10
 4711 005c 9B68     		ldr	r3, [r3, #8]
 4712 005e 9847     		blx	r3
 4713              	.LVL359:
 4714              	.LBE1478:
 4715              	.LBE1477:
 4716              	.LBE1479:
 4717              	.LBE1481:
 4718              	.LBE1482:
 127:commandHandlers.h **** }
 4719              		.loc 1 127 0
 4720 0060 0120     		movs	r0, #1
 4721 0062 70BD     		pop	{r4, r5, r6, pc}
 4722              	.L348:
 4723              		.align	2
 4724              	.L347:
 4725 0064 00000000 		.word	_Z5atoi2PKcii
 4726 0068 00000000 		.word	.LANCHOR2
 4727 006c 00000000 		.word	_ZN7Trigger6enableEb
 4728 0070 FC000000 		.word	.LC14
 4729 0074 00000000 		.word	_ZN4xpcc8IOStream8writeBinEPKc
 4730 0078 00000000 		.word	_ZN4xpcc8IOStream8writeHexEPKc
 4731 007c 00000000 		.word	_ZN4xpcc8IOStream12writeIntegerEl
 4732 0080 00000000 		.word	_ZN4xpcc8IOStream8writeBinEh
 4733 0084 00000000 		.word	_ZN4xpcc8IOStream8writeHexEh
 4734              		.cfi_endproc
 4735              	.LFE1038:
 4737              		.section	.text._ZN8Handlers16execLaserCommandEPKci,"axG",%progbits,_ZN8Handlers16execLaserCommandE
 4738              		.align	2
 4739              		.weak	_ZN8Handlers16execLaserCommandEPKci
 4740              		.thumb
 4741              		.thumb_func
 4743              	_ZN8Handlers16execLaserCommandEPKci:
 4744              	.LFB1046:
 181:commandHandlers.h **** static bool execLaserCommand(const char* cmd, int length){
 4745              		.loc 1 181 0
 4746              		.cfi_startproc
 4747              		@ args = 0, pretend = 0, frame = 0
 4748              		@ frame_needed = 0, uses_anonymous_args = 0
 4749              	.LVL360:
 4750 0000 38B5     		push	{r3, r4, r5, lr}
 4751              	.LCFI25:
 4752              		.cfi_def_cfa_offset 16
 4753              		.cfi_offset 3, -16
 4754              		.cfi_offset 4, -12
 4755              		.cfi_offset 5, -8
 4756              		.cfi_offset 14, -4
 4757              	.LBB1496:
 184:commandHandlers.h **** 	const char* result = Laser::exec(cmd);
 4758              		.loc 1 184 0
 4759 0002 1D4B     		ldr	r3, .L362
 4760              	.LBB1497:
 4761              	.LBB1498:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 4762              		.loc 7 287 0
 4763 0004 1D4C     		ldr	r4, .L362+4
 4764              	.LBE1498:
 4765              	.LBE1497:
 184:commandHandlers.h **** 	const char* result = Laser::exec(cmd);
 4766              		.loc 1 184 0
 4767 0006 9847     		blx	r3
 4768              	.LVL361:
 4769              	.LBB1504:
 4770              	.LBB1501:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 4771              		.loc 7 287 0
 4772 0008 6368     		ldr	r3, [r4, #4]
 4773              	.LBE1501:
 4774              	.LBE1504:
 184:commandHandlers.h **** 	const char* result = Laser::exec(cmd);
 4775              		.loc 1 184 0
 4776 000a 0546     		mov	r5, r0
 4777              	.LVL362:
 4778              	.LBB1505:
 4779              	.LBB1502:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 4780              		.loc 7 287 0
 4781 000c D3B1     		cbz	r3, .L359
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 4782              		.loc 7 290 0
 4783 000e 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 4784              		.loc 7 291 0
 4785 0010 2046     		mov	r0, r4
 4786              	.LVL363:
 4787 0012 0CBF     		ite	eq
 4788 0014 1A4B     		ldreq	r3, .L362+8
 4789              		.loc 7 294 0
 4790 0016 1B4B     		ldrne	r3, .L362+12
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 4791              		.loc 7 291 0
 4792 0018 1B49     		ldr	r1, .L362+16
 4793              		.loc 7 294 0
 4794 001a 9847     		blx	r3
 4795              	.LVL364:
 4796              	.LBE1502:
 4797              	.LBE1505:
 4798              	.LBB1506:
 4799              	.LBB1507:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 4800              		.loc 7 287 0
 4801 001c 6368     		ldr	r3, [r4, #4]
 4802 001e 1748     		ldr	r0, .L362+4
 4803 0020 CBB1     		cbz	r3, .L360
 4804              	.L353:
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 4805              		.loc 7 290 0
 4806 0022 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 4807              		.loc 7 291 0
 4808 0024 0CBF     		ite	eq
 4809 0026 164B     		ldreq	r3, .L362+8
 4810              		.loc 7 294 0
 4811 0028 164B     		ldrne	r3, .L362+12
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 4812              		.loc 7 291 0
 4813 002a 2946     		mov	r1, r5
 4814              		.loc 7 294 0
 4815 002c 9847     		blx	r3
 4816              	.LVL365:
 4817              	.LBE1507:
 4818              	.LBE1506:
 4819              	.LBB1511:
 4820              	.LBB1512:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 4821              		.loc 7 122 0
 4822 002e 6368     		ldr	r3, [r4, #4]
 4823 0030 1248     		ldr	r0, .L362+4
 4824 0032 CBB1     		cbz	r3, .L361
 4825              	.L356:
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 4826              		.loc 7 126 0
 4827 0034 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 4828              		.loc 7 125 0
 4829 0036 022B     		cmp	r3, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 4830              		.loc 7 126 0
 4831 0038 0CBF     		ite	eq
 4832 003a 144B     		ldreq	r3, .L362+20
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 4833              		.loc 7 129 0
 4834 003c 144B     		ldrne	r3, .L362+24
 4835 003e 9847     		blx	r3
 4836              	.LVL366:
 4837              	.LBE1512:
 4838              	.LBE1511:
 4839              	.LBE1496:
 187:commandHandlers.h **** }
 4840              		.loc 1 187 0
 4841 0040 0020     		movs	r0, #0
 4842 0042 38BD     		pop	{r3, r4, r5, pc}
 4843              	.LVL367:
 4844              	.L359:
 4845              	.LBB1519:
 4846              	.LBB1516:
 4847              	.LBB1503:
 4848              	.LBB1499:
 4849              	.LBB1500:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 4850              		.loc 7 288 0
 4851 0044 2068     		ldr	r0, [r4, #0]
 4852              	.LVL368:
 4853 0046 1049     		ldr	r1, .L362+16
 4854 0048 0368     		ldr	r3, [r0, #0]
 4855 004a DB68     		ldr	r3, [r3, #12]
 4856 004c 9847     		blx	r3
 4857              	.LVL369:
 4858              	.LBE1500:
 4859              	.LBE1499:
 4860              	.LBE1503:
 4861              	.LBE1516:
 4862              	.LBB1517:
 4863              	.LBB1510:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 4864              		.loc 7 287 0
 4865 004e 6368     		ldr	r3, [r4, #4]
 4866 0050 0A48     		ldr	r0, .L362+4
 4867 0052 002B     		cmp	r3, #0
 4868 0054 E5D1     		bne	.L353
 4869              	.LVL370:
 4870              	.L360:
 4871              	.LBB1508:
 4872              	.LBB1509:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 4873              		.loc 7 288 0
 4874 0056 0068     		ldr	r0, [r0, #0]
 4875 0058 0368     		ldr	r3, [r0, #0]
 4876 005a 2946     		mov	r1, r5
 4877 005c DB68     		ldr	r3, [r3, #12]
 4878 005e 9847     		blx	r3
 4879              	.LVL371:
 4880              	.LBE1509:
 4881              	.LBE1508:
 4882              	.LBE1510:
 4883              	.LBE1517:
 4884              	.LBB1518:
 4885              	.LBB1515:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 4886              		.loc 7 122 0
 4887 0060 6368     		ldr	r3, [r4, #4]
 4888 0062 0648     		ldr	r0, .L362+4
 4889 0064 002B     		cmp	r3, #0
 4890 0066 E5D1     		bne	.L356
 4891              	.LVL372:
 4892              	.L361:
 4893              	.LBB1513:
 4894              	.LBB1514:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 4895              		.loc 7 123 0
 4896 0068 0068     		ldr	r0, [r0, #0]
 4897 006a 0368     		ldr	r3, [r0, #0]
 4898 006c 0A21     		movs	r1, #10
 4899 006e 9B68     		ldr	r3, [r3, #8]
 4900 0070 9847     		blx	r3
 4901              	.LVL373:
 4902              	.LBE1514:
 4903              	.LBE1513:
 4904              	.LBE1515:
 4905              	.LBE1518:
 4906              	.LBE1519:
 187:commandHandlers.h **** }
 4907              		.loc 1 187 0
 4908 0072 0020     		movs	r0, #0
 4909 0074 38BD     		pop	{r3, r4, r5, pc}
 4910              	.L363:
 4911 0076 00BF     		.align	2
 4912              	.L362:
 4913 0078 00000000 		.word	_ZN5Laser4execEPKc
 4914 007c 00000000 		.word	.LANCHOR0
 4915 0080 00000000 		.word	_ZN4xpcc8IOStream8writeBinEPKc
 4916 0084 00000000 		.word	_ZN4xpcc8IOStream8writeHexEPKc
 4917 0088 0C010000 		.word	.LC15
 4918 008c 00000000 		.word	_ZN4xpcc8IOStream8writeBinEh
 4919 0090 00000000 		.word	_ZN4xpcc8IOStream8writeHexEh
 4920              		.cfi_endproc
 4921              	.LFE1046:
 4923              		.section	.text._ZN8Handlers11gotoHandlerIL4Axis2EEEbPKci,"axG",%progbits,_ZN8Handlers11gotoHandler
 4924              		.align	2
 4925              		.weak	_ZN8Handlers11gotoHandlerIL4Axis2EEEbPKci
 4926              		.thumb
 4927              		.thumb_func
 4929              	_ZN8Handlers11gotoHandlerIL4Axis2EEEbPKci:
 4930              	.LFB1121:
  33:commandHandlers.h **** static bool gotoHandler(const char* cmd, int length){
 4931              		.loc 1 33 0
 4932              		.cfi_startproc
 4933              		@ args = 0, pretend = 0, frame = 8
 4934              		@ frame_needed = 0, uses_anonymous_args = 0
 4935              	.LVL374:
 4936 0000 30B5     		push	{r4, r5, lr}
 4937              	.LCFI26:
 4938              		.cfi_def_cfa_offset 12
 4939              		.cfi_offset 4, -12
 4940              		.cfi_offset 5, -8
 4941              		.cfi_offset 14, -4
 4942 0002 2DED028B 		fstmfdd	sp!, {d8}
 4943              	.LCFI27:
 4944              		.cfi_def_cfa_offset 20
 4945              		.cfi_offset 80, -20
 4946              	.LBB1537:
  34:commandHandlers.h **** 	float pos = atof2(cmd, length, 99999.0f);
 4947              		.loc 1 34 0
 4948 0006 9FED2E8A 		flds	s16, .L375
 4949              	.LBE1537:
  33:commandHandlers.h **** static bool gotoHandler(const char* cmd, int length){
 4950              		.loc 1 33 0
 4951 000a 83B0     		sub	sp, sp, #12
 4952              	.LCFI28:
 4953              		.cfi_def_cfa_offset 32
 4954              	.LBB1568:
  34:commandHandlers.h **** 	float pos = atof2(cmd, length, 99999.0f);
 4955              		.loc 1 34 0
 4956 000c 18EE102A 		fmrs	r2, s16
 4957 0010 2C4B     		ldr	r3, .L375+4
 4958 0012 9847     		blx	r3
 4959              	.LVL375:
 4960 0014 07EE900A 		fmsr	s15, r0
 4961              	.LVL376:
  35:commandHandlers.h **** 	if(pos == 99999.0f){
 4962              		.loc 1 35 0
 4963 0018 F4EE487A 		fcmps	s15, s16
 4964              	.LVL377:
 4965 001c F1EE10FA 		fmstat
  34:commandHandlers.h **** 	float pos = atof2(cmd, length, 99999.0f);
 4966              		.loc 1 34 0
 4967 0020 0190     		str	r0, [sp, #4]	@ float
  35:commandHandlers.h **** 	if(pos == 99999.0f){
 4968              		.loc 1 35 0
 4969 0022 04D1     		bne	.L372
  36:commandHandlers.h **** 		return false;
 4970              		.loc 1 36 0
 4971 0024 0020     		movs	r0, #0
 4972              	.L365:
 4973              	.LBE1568:
  44:commandHandlers.h **** }
 4974              		.loc 1 44 0
 4975 0026 03B0     		add	sp, sp, #12
 4976 0028 BDEC028B 		fldmfdd	sp!, {d8}
 4977 002c 30BD     		pop	{r4, r5, pc}
 4978              	.LVL378:
 4979              	.L372:
 4980              	.LBB1569:
  38:commandHandlers.h **** 	Utils::startLoggingControl();
 4981              		.loc 1 38 0
 4982 002e 264B     		ldr	r3, .L375+8
 4983              	.LBB1538:
 4984              	.LBB1539:
  42:commandHandlers.h **** 	dout << axis << " going to " << pos << endl;
 4985              		.loc 1 42 0
 4986 0030 264C     		ldr	r4, .L375+12
 4987              	.LBE1539:
 4988              	.LBE1538:
  38:commandHandlers.h **** 	Utils::startLoggingControl();
 4989              		.loc 1 38 0
 4990 0032 9847     		blx	r3
 4991              	.LVL379:
 4992              	.LBB1542:
 4993              	.LBB1543:
  15:transform.h   **** 		return int(MOTOR_ENC_PER_REV*MOTOR_GEAR_RATIO*mm + 0.5f);
 4994              		.loc 11 15 0
 4995 0034 DDED016A 		flds	s13, [sp, #4]
 4996 0038 9FED257A 		flds	s14, .L375+16
 4997 003c F6EE007A 		fconsts	s15, #96
 4998 0040 46EE877A 		fmacs	s15, s13, s14
 4999              	.LBE1543:
 5000              	.LBE1542:
  40:commandHandlers.h **** 	Control<ALL>::enablePositionControl(true);
 5001              		.loc 1 40 0
 5002 0044 0120     		movs	r0, #1
 5003              	.LBB1545:
 5004              	.LBB1544:
  15:transform.h   **** 		return int(MOTOR_ENC_PER_REV*MOTOR_GEAR_RATIO*mm + 0.5f);
 5005              		.loc 11 15 0
 5006 0046 FDEEE77A 		ftosizs	s15, s15
 5007              	.LBE1544:
 5008              	.LBE1545:
  40:commandHandlers.h **** 	Control<ALL>::enablePositionControl(true);
 5009              		.loc 1 40 0
 5010 004a 224B     		ldr	r3, .L375+20
  39:commandHandlers.h **** 	pos = Transform::mmToEncoder(pos);
 5011              		.loc 1 39 0
 5012 004c F8EEE77A 		fsitos	s15, s15
 5013 0050 CDED017A 		fsts	s15, [sp, #4]
  40:commandHandlers.h **** 	Control<ALL>::enablePositionControl(true);
 5014              		.loc 1 40 0
 5015 0054 9847     		blx	r3
 5016              	.LVL380:
  41:commandHandlers.h **** 	Control<axis>::setShallPosition(pos);
 5017              		.loc 1 41 0
 5018 0056 9DED018A 		flds	s16, [sp, #4]
 5019              	.LBB1546:
 5020              	.LBB1547:
  67:control_impl.h **** 	Control<ALL>::resetPosPid();
 5021              		.loc 9 67 0
 5022 005a 1F4B     		ldr	r3, .L375+24
 5023 005c 9847     		blx	r3
 5024              	.LVL381:
  68:control_impl.h **** 	Control<ALL>::resetVPid();
 5025              		.loc 9 68 0
 5026 005e 1F4B     		ldr	r3, .L375+28
 5027 0060 9847     		blx	r3
 5028              	.LVL382:
 5029              	.LBE1547:
 5030              	.LBE1546:
  41:commandHandlers.h **** 	Control<axis>::setShallPosition(pos);
 5031              		.loc 1 41 0
 5032 0062 BDEEC88A 		ftosizs	s16, s16
 5033              	.LVL383:
 5034              	.LBB1550:
 5035              	.LBB1548:
  69:control_impl.h **** 	pos_shall = position;
 5036              		.loc 9 69 0
 5037 0066 1E4B     		ldr	r3, .L375+32
 5038              	.LBE1548:
 5039              	.LBE1550:
 5040              	.LBB1551:
 5041              	.LBB1540:
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 5042              		.loc 7 236 0
 5043 0068 2046     		mov	r0, r4
 5044              	.LBE1540:
 5045              	.LBE1551:
 5046              	.LBB1552:
 5047              	.LBB1549:
  69:control_impl.h **** 	pos_shall = position;
 5048              		.loc 9 69 0
 5049 006a 83ED008A 		fsts	s16, [r3, #0]	@ int
 5050              	.LVL384:
 5051              	.LBE1549:
 5052              	.LBE1552:
 5053              	.LBB1553:
 5054              	.LBB1541:
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 5055              		.loc 7 236 0
 5056 006e 0221     		movs	r1, #2
 5057 0070 1C4B     		ldr	r3, .L375+36
 5058 0072 9847     		blx	r3
 5059              	.LVL385:
 5060              	.LBE1541:
 5061              	.LBE1553:
 5062              	.LBB1554:
 5063              	.LBB1555:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 5064              		.loc 7 287 0
 5065 0074 6368     		ldr	r3, [r4, #4]
 5066 0076 B3B1     		cbz	r3, .L373
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 5067              		.loc 7 290 0
 5068 0078 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 5069              		.loc 7 291 0
 5070 007a 2046     		mov	r0, r4
 5071 007c 1A49     		ldr	r1, .L375+40
 5072 007e 0CBF     		ite	eq
 5073 0080 1A4B     		ldreq	r3, .L375+44
 5074              		.loc 7 294 0
 5075 0082 1B4B     		ldrne	r3, .L375+48
 5076 0084 9847     		blx	r3
 5077              	.LVL386:
 5078              	.L367:
 5079              	.LBE1555:
 5080              	.LBE1554:
 5081              	.LBB1559:
 5082              	.LBB1560:
 103:commandHandlers.h **** 	dout << axis << " set pwm to " << speed << endl;
 5083              		.loc 1 103 0
 5084 0086 114D     		ldr	r5, .L375+12
 269:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeFloat(v);
 5085              		.loc 7 269 0
 5086 0088 1A4B     		ldr	r3, .L375+52
 5087 008a 2846     		mov	r0, r5
 5088 008c 01A9     		add	r1, sp, #4
 5089              	.LVL387:
 5090 008e 9847     		blx	r3
 5091              	.LVL388:
 5092              	.LBE1560:
 5093              	.LBE1559:
 5094              	.LBB1561:
 5095              	.LBB1562:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 5096              		.loc 7 122 0
 5097 0090 6368     		ldr	r3, [r4, #4]
 5098 0092 73B1     		cbz	r3, .L374
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 5099              		.loc 7 126 0
 5100 0094 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 5101              		.loc 7 125 0
 5102 0096 022B     		cmp	r3, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 5103              		.loc 7 126 0
 5104 0098 2846     		mov	r0, r5
 5105 009a 0CBF     		ite	eq
 5106 009c 164B     		ldreq	r3, .L375+56
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 5107              		.loc 7 129 0
 5108 009e 174B     		ldrne	r3, .L375+60
 5109 00a0 9847     		blx	r3
 5110              	.LVL389:
  43:commandHandlers.h **** 	return true;
 5111              		.loc 1 43 0
 5112 00a2 0120     		movs	r0, #1
 5113 00a4 BFE7     		b	.L365
 5114              	.LVL390:
 5115              	.L373:
 5116              	.LBE1562:
 5117              	.LBE1561:
 5118              	.LBB1566:
 5119              	.LBB1558:
 5120              	.LBB1556:
 5121              	.LBB1557:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 5122              		.loc 7 288 0
 5123 00a6 2068     		ldr	r0, [r4, #0]
 5124 00a8 0F49     		ldr	r1, .L375+40
 5125 00aa 0368     		ldr	r3, [r0, #0]
 5126 00ac DB68     		ldr	r3, [r3, #12]
 5127 00ae 9847     		blx	r3
 5128              	.LVL391:
 5129 00b0 E9E7     		b	.L367
 5130              	.LVL392:
 5131              	.L374:
 5132              	.LBE1557:
 5133              	.LBE1556:
 5134              	.LBE1558:
 5135              	.LBE1566:
 5136              	.LBB1567:
 5137              	.LBB1565:
 5138              	.LBB1563:
 5139              	.LBB1564:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 5140              		.loc 7 123 0
 5141 00b2 2868     		ldr	r0, [r5, #0]
 5142 00b4 0368     		ldr	r3, [r0, #0]
 5143 00b6 0A21     		movs	r1, #10
 5144 00b8 9B68     		ldr	r3, [r3, #8]
 5145 00ba 9847     		blx	r3
 5146              	.LVL393:
  43:commandHandlers.h **** 	return true;
 5147              		.loc 1 43 0
 5148 00bc 0120     		movs	r0, #1
 5149 00be B2E7     		b	.L365
 5150              	.L376:
 5151              		.align	2
 5152              	.L375:
 5153 00c0 804FC347 		.word	1203982208
 5154 00c4 00000000 		.word	_Z5atof2PKcif
 5155 00c8 00000000 		.word	_ZN5Utils19startLoggingControlEv
 5156 00cc 00000000 		.word	.LANCHOR2
 5157 00d0 0000FA44 		.word	1157234688
 5158 00d4 00000000 		.word	_ZN7ControlIL4Axis5EE21enablePositionControlEb
 5159 00d8 00000000 		.word	_ZN7ControlIL4Axis5EE11resetPosPidEv
 5160 00dc 00000000 		.word	_ZN7ControlIL4Axis5EE9resetVPidEv
 5161 00e0 00000000 		.word	_ZN7ControlIL4Axis2EE9pos_shallE
 5162 00e4 00000000 		.word	_ZN4xpcc8IOStream12writeIntegerEl
 5163 00e8 14010000 		.word	.LC16
 5164 00ec 00000000 		.word	_ZN4xpcc8IOStream8writeBinEPKc
 5165 00f0 00000000 		.word	_ZN4xpcc8IOStream8writeHexEPKc
 5166 00f4 00000000 		.word	_ZN4xpcc8IOStream10writeFloatERKf
 5167 00f8 00000000 		.word	_ZN4xpcc8IOStream8writeBinEh
 5168 00fc 00000000 		.word	_ZN4xpcc8IOStream8writeHexEh
 5169              	.LBE1564:
 5170              	.LBE1563:
 5171              	.LBE1565:
 5172              	.LBE1567:
 5173              	.LBE1569:
 5174              		.cfi_endproc
 5175              	.LFE1121:
 5177              		.section	.text._ZN8Handlers11moveHandlerIL4Axis2EEEbPKci,"axG",%progbits,_ZN8Handlers11moveHandler
 5178              		.align	2
 5179              		.weak	_ZN8Handlers11moveHandlerIL4Axis2EEEbPKci
 5180              		.thumb
 5181              		.thumb_func
 5183              	_ZN8Handlers11moveHandlerIL4Axis2EEEbPKci:
 5184              	.LFB1123:
  47:commandHandlers.h **** static bool moveHandler(const char* cmd, int length){
 5185              		.loc 1 47 0
 5186              		.cfi_startproc
 5187              		@ args = 0, pretend = 0, frame = 8
 5188              		@ frame_needed = 0, uses_anonymous_args = 0
 5189              	.LVL394:
 5190 0000 30B5     		push	{r4, r5, lr}
 5191              	.LCFI29:
 5192              		.cfi_def_cfa_offset 12
 5193              		.cfi_offset 4, -12
 5194              		.cfi_offset 5, -8
 5195              		.cfi_offset 14, -4
 5196 0002 2DED028B 		fstmfdd	sp!, {d8}
 5197              	.LCFI30:
 5198              		.cfi_def_cfa_offset 20
 5199              		.cfi_offset 80, -20
 5200              	.LBB1587:
  48:commandHandlers.h **** 	float pos = atof2(cmd, length, 99999.0f);
 5201              		.loc 1 48 0
 5202 0006 9FED338A 		flds	s16, .L388
 5203              	.LBE1587:
  47:commandHandlers.h **** static bool moveHandler(const char* cmd, int length){
 5204              		.loc 1 47 0
 5205 000a 83B0     		sub	sp, sp, #12
 5206              	.LCFI31:
 5207              		.cfi_def_cfa_offset 32
 5208              	.LBB1618:
  48:commandHandlers.h **** 	float pos = atof2(cmd, length, 99999.0f);
 5209              		.loc 1 48 0
 5210 000c 18EE102A 		fmrs	r2, s16
 5211 0010 314B     		ldr	r3, .L388+4
 5212 0012 9847     		blx	r3
 5213              	.LVL395:
 5214 0014 07EE900A 		fmsr	s15, r0
 5215              	.LVL396:
  49:commandHandlers.h **** 	if(pos == 99999.0f){
 5216              		.loc 1 49 0
 5217 0018 F4EE487A 		fcmps	s15, s16
 5218              	.LVL397:
 5219 001c F1EE10FA 		fmstat
  48:commandHandlers.h **** 	float pos = atof2(cmd, length, 99999.0f);
 5220              		.loc 1 48 0
 5221 0020 0190     		str	r0, [sp, #4]	@ float
  49:commandHandlers.h **** 	if(pos == 99999.0f){
 5222              		.loc 1 49 0
 5223 0022 04D1     		bne	.L385
  50:commandHandlers.h **** 		return false;
 5224              		.loc 1 50 0
 5225 0024 0020     		movs	r0, #0
 5226              	.L378:
 5227              	.LBE1618:
  59:commandHandlers.h **** }
 5228              		.loc 1 59 0
 5229 0026 03B0     		add	sp, sp, #12
 5230 0028 BDEC028B 		fldmfdd	sp!, {d8}
 5231 002c 30BD     		pop	{r4, r5, pc}
 5232              	.LVL398:
 5233              	.L385:
 5234              	.LBB1619:
  52:commandHandlers.h **** 	Utils::startLoggingControl();
 5235              		.loc 1 52 0
 5236 002e 2B4B     		ldr	r3, .L388+8
 5237              	.LBB1588:
 5238              	.LBB1589:
  57:commandHandlers.h **** 	dout << axis << " going to " << pos << endl;
 5239              		.loc 1 57 0
 5240 0030 2B4C     		ldr	r4, .L388+12
 5241              	.LBE1589:
 5242              	.LBE1588:
  52:commandHandlers.h **** 	Utils::startLoggingControl();
 5243              		.loc 1 52 0
 5244 0032 9847     		blx	r3
 5245              	.LVL399:
 5246              	.LBB1592:
 5247              	.LBB1593:
  15:transform.h   **** 		return int(MOTOR_ENC_PER_REV*MOTOR_GEAR_RATIO*mm + 0.5f);
 5248              		.loc 11 15 0
 5249 0034 DDED016A 		flds	s13, [sp, #4]
 5250 0038 9FED2A7A 		flds	s14, .L388+16
 5251 003c F6EE007A 		fconsts	s15, #96
 5252 0040 46EE877A 		fmacs	s15, s13, s14
 5253              	.LBE1593:
 5254              	.LBE1592:
  54:commandHandlers.h **** 	Control<ALL>::enablePositionControl(true);
 5255              		.loc 1 54 0
 5256 0044 0120     		movs	r0, #1
 5257              	.LBB1595:
 5258              	.LBB1594:
  15:transform.h   **** 		return int(MOTOR_ENC_PER_REV*MOTOR_GEAR_RATIO*mm + 0.5f);
 5259              		.loc 11 15 0
 5260 0046 FDEEE77A 		ftosizs	s15, s15
 5261              	.LBE1594:
 5262              	.LBE1595:
  54:commandHandlers.h **** 	Control<ALL>::enablePositionControl(true);
 5263              		.loc 1 54 0
 5264 004a 274B     		ldr	r3, .L388+20
  53:commandHandlers.h **** 	pos = Transform::mmToEncoder(pos);
 5265              		.loc 1 53 0
 5266 004c F8EEE77A 		fsitos	s15, s15
 5267 0050 CDED017A 		fsts	s15, [sp, #4]
  54:commandHandlers.h **** 	Control<ALL>::enablePositionControl(true);
 5268              		.loc 1 54 0
 5269 0054 9847     		blx	r3
 5270              	.LVL400:
  55:commandHandlers.h **** 	pos = Control<axis>::getIsPosition() + pos;
 5271              		.loc 1 55 0
 5272 0056 254B     		ldr	r3, .L388+24
 5273 0058 9847     		blx	r3
 5274              	.LVL401:
 5275 005a 07EE900A 		fmsr	s15, r0	@ int
 5276 005e B8EEE77A 		fsitos	s14, s15
 5277 0062 DDED017A 		flds	s15, [sp, #4]
 5278 0066 77EE277A 		fadds	s15, s14, s15
 5279              	.LVL402:
 5280              	.LBB1596:
 5281              	.LBB1597:
  67:control_impl.h **** 	Control<ALL>::resetPosPid();
 5282              		.loc 9 67 0
 5283 006a 214B     		ldr	r3, .L388+28
 5284              	.LBE1597:
 5285              	.LBE1596:
  56:commandHandlers.h **** 	Control<axis>::setShallPosition(pos);
 5286              		.loc 1 56 0
 5287 006c BDEEE78A 		ftosizs	s16, s15
 5288              	.LVL403:
  55:commandHandlers.h **** 	pos = Control<axis>::getIsPosition() + pos;
 5289              		.loc 1 55 0
 5290 0070 CDED017A 		fsts	s15, [sp, #4]
 5291              	.LBB1600:
 5292              	.LBB1598:
  67:control_impl.h **** 	Control<ALL>::resetPosPid();
 5293              		.loc 9 67 0
 5294 0074 9847     		blx	r3
 5295              	.LVL404:
  68:control_impl.h **** 	Control<ALL>::resetVPid();
 5296              		.loc 9 68 0
 5297 0076 1F4B     		ldr	r3, .L388+32
 5298 0078 9847     		blx	r3
 5299              	.LVL405:
  69:control_impl.h **** 	pos_shall = position;
 5300              		.loc 9 69 0
 5301 007a 1F4B     		ldr	r3, .L388+36
 5302              	.LBE1598:
 5303              	.LBE1600:
 5304              	.LBB1601:
 5305              	.LBB1590:
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 5306              		.loc 7 236 0
 5307 007c 2046     		mov	r0, r4
 5308              	.LBE1590:
 5309              	.LBE1601:
 5310              	.LBB1602:
 5311              	.LBB1599:
  69:control_impl.h **** 	pos_shall = position;
 5312              		.loc 9 69 0
 5313 007e 83ED008A 		fsts	s16, [r3, #0]	@ int
 5314              	.LVL406:
 5315              	.LBE1599:
 5316              	.LBE1602:
 5317              	.LBB1603:
 5318              	.LBB1591:
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 5319              		.loc 7 236 0
 5320 0082 0221     		movs	r1, #2
 5321 0084 1D4B     		ldr	r3, .L388+40
 5322 0086 9847     		blx	r3
 5323              	.LVL407:
 5324              	.LBE1591:
 5325              	.LBE1603:
 5326              	.LBB1604:
 5327              	.LBB1605:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 5328              		.loc 7 287 0
 5329 0088 6368     		ldr	r3, [r4, #4]
 5330 008a B3B1     		cbz	r3, .L386
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 5331              		.loc 7 290 0
 5332 008c 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 5333              		.loc 7 291 0
 5334 008e 2046     		mov	r0, r4
 5335 0090 1B49     		ldr	r1, .L388+44
 5336 0092 0CBF     		ite	eq
 5337 0094 1B4B     		ldreq	r3, .L388+48
 5338              		.loc 7 294 0
 5339 0096 1C4B     		ldrne	r3, .L388+52
 5340 0098 9847     		blx	r3
 5341              	.LVL408:
 5342              	.L380:
 5343              	.LBE1605:
 5344              	.LBE1604:
 5345              	.LBB1609:
 5346              	.LBB1610:
 103:commandHandlers.h **** 	dout << axis << " set pwm to " << speed << endl;
 5347              		.loc 1 103 0
 5348 009a 114D     		ldr	r5, .L388+12
 269:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeFloat(v);
 5349              		.loc 7 269 0
 5350 009c 1B4B     		ldr	r3, .L388+56
 5351 009e 2846     		mov	r0, r5
 5352 00a0 01A9     		add	r1, sp, #4
 5353              	.LVL409:
 5354 00a2 9847     		blx	r3
 5355              	.LVL410:
 5356              	.LBE1610:
 5357              	.LBE1609:
 5358              	.LBB1611:
 5359              	.LBB1612:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 5360              		.loc 7 122 0
 5361 00a4 6368     		ldr	r3, [r4, #4]
 5362 00a6 73B1     		cbz	r3, .L387
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 5363              		.loc 7 126 0
 5364 00a8 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 5365              		.loc 7 125 0
 5366 00aa 022B     		cmp	r3, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 5367              		.loc 7 126 0
 5368 00ac 2846     		mov	r0, r5
 5369 00ae 0CBF     		ite	eq
 5370 00b0 174B     		ldreq	r3, .L388+60
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 5371              		.loc 7 129 0
 5372 00b2 184B     		ldrne	r3, .L388+64
 5373 00b4 9847     		blx	r3
 5374              	.LVL411:
  58:commandHandlers.h **** 	return true;
 5375              		.loc 1 58 0
 5376 00b6 0120     		movs	r0, #1
 5377 00b8 B5E7     		b	.L378
 5378              	.LVL412:
 5379              	.L386:
 5380              	.LBE1612:
 5381              	.LBE1611:
 5382              	.LBB1616:
 5383              	.LBB1608:
 5384              	.LBB1606:
 5385              	.LBB1607:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 5386              		.loc 7 288 0
 5387 00ba 2068     		ldr	r0, [r4, #0]
 5388 00bc 1049     		ldr	r1, .L388+44
 5389 00be 0368     		ldr	r3, [r0, #0]
 5390 00c0 DB68     		ldr	r3, [r3, #12]
 5391 00c2 9847     		blx	r3
 5392              	.LVL413:
 5393 00c4 E9E7     		b	.L380
 5394              	.LVL414:
 5395              	.L387:
 5396              	.LBE1607:
 5397              	.LBE1606:
 5398              	.LBE1608:
 5399              	.LBE1616:
 5400              	.LBB1617:
 5401              	.LBB1615:
 5402              	.LBB1613:
 5403              	.LBB1614:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 5404              		.loc 7 123 0
 5405 00c6 2868     		ldr	r0, [r5, #0]
 5406 00c8 0368     		ldr	r3, [r0, #0]
 5407 00ca 0A21     		movs	r1, #10
 5408 00cc 9B68     		ldr	r3, [r3, #8]
 5409 00ce 9847     		blx	r3
 5410              	.LVL415:
  58:commandHandlers.h **** 	return true;
 5411              		.loc 1 58 0
 5412 00d0 0120     		movs	r0, #1
 5413 00d2 A8E7     		b	.L378
 5414              	.L389:
 5415              		.align	2
 5416              	.L388:
 5417 00d4 804FC347 		.word	1203982208
 5418 00d8 00000000 		.word	_Z5atof2PKcif
 5419 00dc 00000000 		.word	_ZN5Utils19startLoggingControlEv
 5420 00e0 00000000 		.word	.LANCHOR2
 5421 00e4 0000FA44 		.word	1157234688
 5422 00e8 00000000 		.word	_ZN7ControlIL4Axis5EE21enablePositionControlEb
 5423 00ec 00000000 		.word	_ZN7ControlIL4Axis2EE13getIsPositionEv
 5424 00f0 00000000 		.word	_ZN7ControlIL4Axis5EE11resetPosPidEv
 5425 00f4 00000000 		.word	_ZN7ControlIL4Axis5EE9resetVPidEv
 5426 00f8 00000000 		.word	_ZN7ControlIL4Axis2EE9pos_shallE
 5427 00fc 00000000 		.word	_ZN4xpcc8IOStream12writeIntegerEl
 5428 0100 14010000 		.word	.LC16
 5429 0104 00000000 		.word	_ZN4xpcc8IOStream8writeBinEPKc
 5430 0108 00000000 		.word	_ZN4xpcc8IOStream8writeHexEPKc
 5431 010c 00000000 		.word	_ZN4xpcc8IOStream10writeFloatERKf
 5432 0110 00000000 		.word	_ZN4xpcc8IOStream8writeBinEh
 5433 0114 00000000 		.word	_ZN4xpcc8IOStream8writeHexEh
 5434              	.LBE1614:
 5435              	.LBE1613:
 5436              	.LBE1615:
 5437              	.LBE1617:
 5438              	.LBE1619:
 5439              		.cfi_endproc
 5440              	.LFE1123:
 5442              		.section	.text._ZN8Handlers11gotoHandlerIL4Axis0EEEbPKci,"axG",%progbits,_ZN8Handlers11gotoHandler
 5443              		.align	2
 5444              		.weak	_ZN8Handlers11gotoHandlerIL4Axis0EEEbPKci
 5445              		.thumb
 5446              		.thumb_func
 5448              	_ZN8Handlers11gotoHandlerIL4Axis0EEEbPKci:
 5449              	.LFB1120:
  33:commandHandlers.h **** static bool gotoHandler(const char* cmd, int length){
 5450              		.loc 1 33 0
 5451              		.cfi_startproc
 5452              		@ args = 0, pretend = 0, frame = 8
 5453              		@ frame_needed = 0, uses_anonymous_args = 0
 5454              	.LVL416:
 5455 0000 30B5     		push	{r4, r5, lr}
 5456              	.LCFI32:
 5457              		.cfi_def_cfa_offset 12
 5458              		.cfi_offset 4, -12
 5459              		.cfi_offset 5, -8
 5460              		.cfi_offset 14, -4
 5461 0002 2DED028B 		fstmfdd	sp!, {d8}
 5462              	.LCFI33:
 5463              		.cfi_def_cfa_offset 20
 5464              		.cfi_offset 80, -20
 5465              	.LBB1637:
  34:commandHandlers.h **** 	float pos = atof2(cmd, length, 99999.0f);
 5466              		.loc 1 34 0
 5467 0006 9FED2E8A 		flds	s16, .L401
 5468              	.LBE1637:
  33:commandHandlers.h **** static bool gotoHandler(const char* cmd, int length){
 5469              		.loc 1 33 0
 5470 000a 83B0     		sub	sp, sp, #12
 5471              	.LCFI34:
 5472              		.cfi_def_cfa_offset 32
 5473              	.LBB1668:
  34:commandHandlers.h **** 	float pos = atof2(cmd, length, 99999.0f);
 5474              		.loc 1 34 0
 5475 000c 18EE102A 		fmrs	r2, s16
 5476 0010 2C4B     		ldr	r3, .L401+4
 5477 0012 9847     		blx	r3
 5478              	.LVL417:
 5479 0014 07EE900A 		fmsr	s15, r0
 5480              	.LVL418:
  35:commandHandlers.h **** 	if(pos == 99999.0f){
 5481              		.loc 1 35 0
 5482 0018 F4EE487A 		fcmps	s15, s16
 5483              	.LVL419:
 5484 001c F1EE10FA 		fmstat
  34:commandHandlers.h **** 	float pos = atof2(cmd, length, 99999.0f);
 5485              		.loc 1 34 0
 5486 0020 0190     		str	r0, [sp, #4]	@ float
  35:commandHandlers.h **** 	if(pos == 99999.0f){
 5487              		.loc 1 35 0
 5488 0022 04D1     		bne	.L398
  36:commandHandlers.h **** 		return false;
 5489              		.loc 1 36 0
 5490 0024 0020     		movs	r0, #0
 5491              	.L391:
 5492              	.LBE1668:
  44:commandHandlers.h **** }
 5493              		.loc 1 44 0
 5494 0026 03B0     		add	sp, sp, #12
 5495 0028 BDEC028B 		fldmfdd	sp!, {d8}
 5496 002c 30BD     		pop	{r4, r5, pc}
 5497              	.LVL420:
 5498              	.L398:
 5499              	.LBB1669:
  38:commandHandlers.h **** 	Utils::startLoggingControl();
 5500              		.loc 1 38 0
 5501 002e 264B     		ldr	r3, .L401+8
 5502              	.LBB1638:
 5503              	.LBB1639:
  42:commandHandlers.h **** 	dout << axis << " going to " << pos << endl;
 5504              		.loc 1 42 0
 5505 0030 264C     		ldr	r4, .L401+12
 5506              	.LBE1639:
 5507              	.LBE1638:
  38:commandHandlers.h **** 	Utils::startLoggingControl();
 5508              		.loc 1 38 0
 5509 0032 9847     		blx	r3
 5510              	.LVL421:
 5511              	.LBB1642:
 5512              	.LBB1643:
  15:transform.h   **** 		return int(MOTOR_ENC_PER_REV*MOTOR_GEAR_RATIO*mm + 0.5f);
 5513              		.loc 11 15 0
 5514 0034 DDED016A 		flds	s13, [sp, #4]
 5515 0038 9FED257A 		flds	s14, .L401+16
 5516 003c F6EE007A 		fconsts	s15, #96
 5517 0040 46EE877A 		fmacs	s15, s13, s14
 5518              	.LBE1643:
 5519              	.LBE1642:
  40:commandHandlers.h **** 	Control<ALL>::enablePositionControl(true);
 5520              		.loc 1 40 0
 5521 0044 0120     		movs	r0, #1
 5522              	.LBB1645:
 5523              	.LBB1644:
  15:transform.h   **** 		return int(MOTOR_ENC_PER_REV*MOTOR_GEAR_RATIO*mm + 0.5f);
 5524              		.loc 11 15 0
 5525 0046 FDEEE77A 		ftosizs	s15, s15
 5526              	.LBE1644:
 5527              	.LBE1645:
  40:commandHandlers.h **** 	Control<ALL>::enablePositionControl(true);
 5528              		.loc 1 40 0
 5529 004a 224B     		ldr	r3, .L401+20
  39:commandHandlers.h **** 	pos = Transform::mmToEncoder(pos);
 5530              		.loc 1 39 0
 5531 004c F8EEE77A 		fsitos	s15, s15
 5532 0050 CDED017A 		fsts	s15, [sp, #4]
  40:commandHandlers.h **** 	Control<ALL>::enablePositionControl(true);
 5533              		.loc 1 40 0
 5534 0054 9847     		blx	r3
 5535              	.LVL422:
  41:commandHandlers.h **** 	Control<axis>::setShallPosition(pos);
 5536              		.loc 1 41 0
 5537 0056 9DED018A 		flds	s16, [sp, #4]
 5538              	.LBB1646:
 5539              	.LBB1647:
  67:control_impl.h **** 	Control<ALL>::resetPosPid();
 5540              		.loc 9 67 0
 5541 005a 1F4B     		ldr	r3, .L401+24
 5542 005c 9847     		blx	r3
 5543              	.LVL423:
  68:control_impl.h **** 	Control<ALL>::resetVPid();
 5544              		.loc 9 68 0
 5545 005e 1F4B     		ldr	r3, .L401+28
 5546 0060 9847     		blx	r3
 5547              	.LVL424:
 5548              	.LBE1647:
 5549              	.LBE1646:
  41:commandHandlers.h **** 	Control<axis>::setShallPosition(pos);
 5550              		.loc 1 41 0
 5551 0062 BDEEC88A 		ftosizs	s16, s16
 5552              	.LVL425:
 5553              	.LBB1650:
 5554              	.LBB1648:
  69:control_impl.h **** 	pos_shall = position;
 5555              		.loc 9 69 0
 5556 0066 1E4B     		ldr	r3, .L401+32
 5557              	.LBE1648:
 5558              	.LBE1650:
 5559              	.LBB1651:
 5560              	.LBB1640:
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 5561              		.loc 7 236 0
 5562 0068 2046     		mov	r0, r4
 5563              	.LBE1640:
 5564              	.LBE1651:
 5565              	.LBB1652:
 5566              	.LBB1649:
  69:control_impl.h **** 	pos_shall = position;
 5567              		.loc 9 69 0
 5568 006a 83ED008A 		fsts	s16, [r3, #0]	@ int
 5569              	.LVL426:
 5570              	.LBE1649:
 5571              	.LBE1652:
 5572              	.LBB1653:
 5573              	.LBB1641:
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 5574              		.loc 7 236 0
 5575 006e 0021     		movs	r1, #0
 5576 0070 1C4B     		ldr	r3, .L401+36
 5577 0072 9847     		blx	r3
 5578              	.LVL427:
 5579              	.LBE1641:
 5580              	.LBE1653:
 5581              	.LBB1654:
 5582              	.LBB1655:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 5583              		.loc 7 287 0
 5584 0074 6368     		ldr	r3, [r4, #4]
 5585 0076 B3B1     		cbz	r3, .L399
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 5586              		.loc 7 290 0
 5587 0078 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 5588              		.loc 7 291 0
 5589 007a 2046     		mov	r0, r4
 5590 007c 1A49     		ldr	r1, .L401+40
 5591 007e 0CBF     		ite	eq
 5592 0080 1A4B     		ldreq	r3, .L401+44
 5593              		.loc 7 294 0
 5594 0082 1B4B     		ldrne	r3, .L401+48
 5595 0084 9847     		blx	r3
 5596              	.LVL428:
 5597              	.L393:
 5598              	.LBE1655:
 5599              	.LBE1654:
 5600              	.LBB1659:
 5601              	.LBB1660:
 103:commandHandlers.h **** 	dout << axis << " set pwm to " << speed << endl;
 5602              		.loc 1 103 0
 5603 0086 114D     		ldr	r5, .L401+12
 269:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeFloat(v);
 5604              		.loc 7 269 0
 5605 0088 1A4B     		ldr	r3, .L401+52
 5606 008a 2846     		mov	r0, r5
 5607 008c 01A9     		add	r1, sp, #4
 5608              	.LVL429:
 5609 008e 9847     		blx	r3
 5610              	.LVL430:
 5611              	.LBE1660:
 5612              	.LBE1659:
 5613              	.LBB1661:
 5614              	.LBB1662:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 5615              		.loc 7 122 0
 5616 0090 6368     		ldr	r3, [r4, #4]
 5617 0092 73B1     		cbz	r3, .L400
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 5618              		.loc 7 126 0
 5619 0094 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 5620              		.loc 7 125 0
 5621 0096 022B     		cmp	r3, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 5622              		.loc 7 126 0
 5623 0098 2846     		mov	r0, r5
 5624 009a 0CBF     		ite	eq
 5625 009c 164B     		ldreq	r3, .L401+56
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 5626              		.loc 7 129 0
 5627 009e 174B     		ldrne	r3, .L401+60
 5628 00a0 9847     		blx	r3
 5629              	.LVL431:
  43:commandHandlers.h **** 	return true;
 5630              		.loc 1 43 0
 5631 00a2 0120     		movs	r0, #1
 5632 00a4 BFE7     		b	.L391
 5633              	.LVL432:
 5634              	.L399:
 5635              	.LBE1662:
 5636              	.LBE1661:
 5637              	.LBB1666:
 5638              	.LBB1658:
 5639              	.LBB1656:
 5640              	.LBB1657:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 5641              		.loc 7 288 0
 5642 00a6 2068     		ldr	r0, [r4, #0]
 5643 00a8 0F49     		ldr	r1, .L401+40
 5644 00aa 0368     		ldr	r3, [r0, #0]
 5645 00ac DB68     		ldr	r3, [r3, #12]
 5646 00ae 9847     		blx	r3
 5647              	.LVL433:
 5648 00b0 E9E7     		b	.L393
 5649              	.LVL434:
 5650              	.L400:
 5651              	.LBE1657:
 5652              	.LBE1656:
 5653              	.LBE1658:
 5654              	.LBE1666:
 5655              	.LBB1667:
 5656              	.LBB1665:
 5657              	.LBB1663:
 5658              	.LBB1664:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 5659              		.loc 7 123 0
 5660 00b2 2868     		ldr	r0, [r5, #0]
 5661 00b4 0368     		ldr	r3, [r0, #0]
 5662 00b6 0A21     		movs	r1, #10
 5663 00b8 9B68     		ldr	r3, [r3, #8]
 5664 00ba 9847     		blx	r3
 5665              	.LVL435:
  43:commandHandlers.h **** 	return true;
 5666              		.loc 1 43 0
 5667 00bc 0120     		movs	r0, #1
 5668 00be B2E7     		b	.L391
 5669              	.L402:
 5670              		.align	2
 5671              	.L401:
 5672 00c0 804FC347 		.word	1203982208
 5673 00c4 00000000 		.word	_Z5atof2PKcif
 5674 00c8 00000000 		.word	_ZN5Utils19startLoggingControlEv
 5675 00cc 00000000 		.word	.LANCHOR2
 5676 00d0 0000FA44 		.word	1157234688
 5677 00d4 00000000 		.word	_ZN7ControlIL4Axis5EE21enablePositionControlEb
 5678 00d8 00000000 		.word	_ZN7ControlIL4Axis5EE11resetPosPidEv
 5679 00dc 00000000 		.word	_ZN7ControlIL4Axis5EE9resetVPidEv
 5680 00e0 00000000 		.word	_ZN7ControlIL4Axis0EE9pos_shallE
 5681 00e4 00000000 		.word	_ZN4xpcc8IOStream12writeIntegerEl
 5682 00e8 14010000 		.word	.LC16
 5683 00ec 00000000 		.word	_ZN4xpcc8IOStream8writeBinEPKc
 5684 00f0 00000000 		.word	_ZN4xpcc8IOStream8writeHexEPKc
 5685 00f4 00000000 		.word	_ZN4xpcc8IOStream10writeFloatERKf
 5686 00f8 00000000 		.word	_ZN4xpcc8IOStream8writeBinEh
 5687 00fc 00000000 		.word	_ZN4xpcc8IOStream8writeHexEh
 5688              	.LBE1664:
 5689              	.LBE1663:
 5690              	.LBE1665:
 5691              	.LBE1667:
 5692              	.LBE1669:
 5693              		.cfi_endproc
 5694              	.LFE1120:
 5696              		.section	.text._ZN8Handlers13mirrorCommandEPKci,"axG",%progbits,_ZN8Handlers13mirrorCommandEPKci,c
 5697              		.align	2
 5698              		.weak	_ZN8Handlers13mirrorCommandEPKci
 5699              		.thumb
 5700              		.thumb_func
 5702              	_ZN8Handlers13mirrorCommandEPKci:
 5703              	.LFB1047:
 189:commandHandlers.h **** static bool mirrorCommand(const char* cmd, int length){
 5704              		.loc 1 189 0
 5705              		.cfi_startproc
 5706              		@ args = 0, pretend = 0, frame = 0
 5707              		@ frame_needed = 0, uses_anonymous_args = 0
 5708              	.LVL436:
 193:commandHandlers.h **** 	if(length < 1){
 5709              		.loc 1 193 0
 5710 0000 0029     		cmp	r1, #0
 189:commandHandlers.h **** static bool mirrorCommand(const char* cmd, int length){
 5711              		.loc 1 189 0
 5712 0002 10B5     		push	{r4, lr}
 5713              	.LCFI35:
 5714              		.cfi_def_cfa_offset 8
 5715              		.cfi_offset 4, -8
 5716              		.cfi_offset 14, -4
 189:commandHandlers.h **** static bool mirrorCommand(const char* cmd, int length){
 5717              		.loc 1 189 0
 5718 0004 0246     		mov	r2, r0
 193:commandHandlers.h **** 	if(length < 1){
 5719              		.loc 1 193 0
 5720 0006 15DD     		ble	.L419
 5721              	.LVL437:
 5722              	.LBB1688:
 5723              	.LBB1689:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 5724              		.loc 7 287 0
 5725 0008 1B4C     		ldr	r4, .L422
 5726 000a 6368     		ldr	r3, [r4, #4]
 5727 000c 002B     		cmp	r3, #0
 5728 000e 26D0     		beq	.L420
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 5729              		.loc 7 290 0
 5730 0010 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 5731              		.loc 7 291 0
 5732 0012 2046     		mov	r0, r4
 5733              	.LVL438:
 5734 0014 1146     		mov	r1, r2
 5735              	.LVL439:
 5736 0016 0CBF     		ite	eq
 5737 0018 184B     		ldreq	r3, .L422+4
 5738              		.loc 7 294 0
 5739 001a 194B     		ldrne	r3, .L422+8
 5740 001c 9847     		blx	r3
 5741              	.LVL440:
 5742              	.L412:
 5743              	.LBE1689:
 5744              	.LBE1688:
 5745              	.LBB1693:
 5746              	.LBB1694:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 5747              		.loc 7 122 0
 5748 001e 6368     		ldr	r3, [r4, #4]
 5749 0020 1548     		ldr	r0, .L422
 5750 0022 ABB1     		cbz	r3, .L416
 5751              	.LVL441:
 5752              	.L414:
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 5753              		.loc 7 126 0
 5754 0024 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 5755              		.loc 7 125 0
 5756 0026 022B     		cmp	r3, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 5757              		.loc 7 126 0
 5758 0028 0CBF     		ite	eq
 5759 002a 164B     		ldreq	r3, .L422+12
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 5760              		.loc 7 129 0
 5761 002c 164B     		ldrne	r3, .L422+16
 5762 002e 9847     		blx	r3
 5763              	.LVL442:
 5764              	.LBE1694:
 5765              	.LBE1693:
 199:commandHandlers.h **** }
 5766              		.loc 1 199 0
 5767 0030 0020     		movs	r0, #0
 5768 0032 10BD     		pop	{r4, pc}
 5769              	.LVL443:
 5770              	.L419:
 5771              	.LBB1698:
 5772              	.LBB1699:
 5773              	.LBB1700:
 5774              	.LBB1701:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 5775              		.loc 7 287 0
 5776 0034 154C     		ldr	r4, .L422+20
 5777 0036 6368     		ldr	r3, [r4, #4]
 5778 0038 BBB1     		cbz	r3, .L421
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 5779              		.loc 7 290 0
 5780 003a 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 5781              		.loc 7 291 0
 5782 003c 2046     		mov	r0, r4
 5783              	.LVL444:
 5784 003e 1449     		ldr	r1, .L422+24
 5785              	.LVL445:
 5786 0040 0CBF     		ite	eq
 5787 0042 0E4B     		ldreq	r3, .L422+4
 5788              		.loc 7 294 0
 5789 0044 0E4B     		ldrne	r3, .L422+8
 5790 0046 9847     		blx	r3
 5791              	.LVL446:
 5792              	.L406:
 5793              	.LBE1701:
 5794              	.LBE1700:
 5795              	.LBB1705:
 5796              	.LBB1706:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 5797              		.loc 7 122 0
 5798 0048 6368     		ldr	r3, [r4, #4]
 5799 004a 1048     		ldr	r0, .L422+20
 5800 004c 002B     		cmp	r3, #0
 5801 004e E9D1     		bne	.L414
 5802              	.LVL447:
 5803              	.L416:
 5804              	.LBE1706:
 5805              	.LBE1705:
 5806              	.LBE1699:
 5807              	.LBE1698:
 5808              	.LBB1709:
 5809              	.LBB1697:
 5810              	.LBB1695:
 5811              	.LBB1696:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 5812              		.loc 7 123 0
 5813 0050 0068     		ldr	r0, [r0, #0]
 5814 0052 0368     		ldr	r3, [r0, #0]
 5815 0054 0A21     		movs	r1, #10
 5816 0056 9B68     		ldr	r3, [r3, #8]
 5817 0058 9847     		blx	r3
 5818              	.LVL448:
 5819              	.LBE1696:
 5820              	.LBE1695:
 5821              	.LBE1697:
 5822              	.LBE1709:
 199:commandHandlers.h **** }
 5823              		.loc 1 199 0
 5824 005a 0020     		movs	r0, #0
 5825 005c 10BD     		pop	{r4, pc}
 5826              	.LVL449:
 5827              	.L420:
 5828              	.LBB1710:
 5829              	.LBB1692:
 5830              	.LBB1690:
 5831              	.LBB1691:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 5832              		.loc 7 288 0
 5833 005e 2068     		ldr	r0, [r4, #0]
 5834              	.LVL450:
 5835 0060 0368     		ldr	r3, [r0, #0]
 5836 0062 1146     		mov	r1, r2
 5837              	.LVL451:
 5838 0064 DB68     		ldr	r3, [r3, #12]
 5839 0066 9847     		blx	r3
 5840              	.LVL452:
 5841 0068 D9E7     		b	.L412
 5842              	.LVL453:
 5843              	.L421:
 5844              	.LBE1691:
 5845              	.LBE1690:
 5846              	.LBE1692:
 5847              	.LBE1710:
 5848              	.LBB1711:
 5849              	.LBB1708:
 5850              	.LBB1707:
 5851              	.LBB1704:
 5852              	.LBB1702:
 5853              	.LBB1703:
 5854 006a 2068     		ldr	r0, [r4, #0]
 5855              	.LVL454:
 5856 006c 0849     		ldr	r1, .L422+24
 5857              	.LVL455:
 5858 006e 0368     		ldr	r3, [r0, #0]
 5859 0070 DB68     		ldr	r3, [r3, #12]
 5860 0072 9847     		blx	r3
 5861              	.LVL456:
 5862 0074 E8E7     		b	.L406
 5863              	.L423:
 5864 0076 00BF     		.align	2
 5865              	.L422:
 5866 0078 00000000 		.word	.LANCHOR3
 5867 007c 00000000 		.word	_ZN4xpcc8IOStream8writeBinEPKc
 5868 0080 00000000 		.word	_ZN4xpcc8IOStream8writeHexEPKc
 5869 0084 00000000 		.word	_ZN4xpcc8IOStream8writeBinEh
 5870 0088 00000000 		.word	_ZN4xpcc8IOStream8writeHexEh
 5871 008c 00000000 		.word	.LANCHOR0
 5872 0090 20010000 		.word	.LC17
 5873              	.LBE1703:
 5874              	.LBE1702:
 5875              	.LBE1704:
 5876              	.LBE1707:
 5877              	.LBE1708:
 5878              	.LBE1711:
 5879              		.cfi_endproc
 5880              	.LFE1047:
 5882              		.section	.text._ZN8Handlers11moveHandlerIL4Axis0EEEbPKci,"axG",%progbits,_ZN8Handlers11moveHandler
 5883              		.align	2
 5884              		.weak	_ZN8Handlers11moveHandlerIL4Axis0EEEbPKci
 5885              		.thumb
 5886              		.thumb_func
 5888              	_ZN8Handlers11moveHandlerIL4Axis0EEEbPKci:
 5889              	.LFB1122:
  47:commandHandlers.h **** static bool moveHandler(const char* cmd, int length){
 5890              		.loc 1 47 0
 5891              		.cfi_startproc
 5892              		@ args = 0, pretend = 0, frame = 8
 5893              		@ frame_needed = 0, uses_anonymous_args = 0
 5894              	.LVL457:
 5895 0000 30B5     		push	{r4, r5, lr}
 5896              	.LCFI36:
 5897              		.cfi_def_cfa_offset 12
 5898              		.cfi_offset 4, -12
 5899              		.cfi_offset 5, -8
 5900              		.cfi_offset 14, -4
 5901 0002 2DED028B 		fstmfdd	sp!, {d8}
 5902              	.LCFI37:
 5903              		.cfi_def_cfa_offset 20
 5904              		.cfi_offset 80, -20
 5905              	.LBB1729:
  48:commandHandlers.h **** 	float pos = atof2(cmd, length, 99999.0f);
 5906              		.loc 1 48 0
 5907 0006 9FED338A 		flds	s16, .L435
 5908              	.LBE1729:
  47:commandHandlers.h **** static bool moveHandler(const char* cmd, int length){
 5909              		.loc 1 47 0
 5910 000a 83B0     		sub	sp, sp, #12
 5911              	.LCFI38:
 5912              		.cfi_def_cfa_offset 32
 5913              	.LBB1760:
  48:commandHandlers.h **** 	float pos = atof2(cmd, length, 99999.0f);
 5914              		.loc 1 48 0
 5915 000c 18EE102A 		fmrs	r2, s16
 5916 0010 314B     		ldr	r3, .L435+4
 5917 0012 9847     		blx	r3
 5918              	.LVL458:
 5919 0014 07EE900A 		fmsr	s15, r0
 5920              	.LVL459:
  49:commandHandlers.h **** 	if(pos == 99999.0f){
 5921              		.loc 1 49 0
 5922 0018 F4EE487A 		fcmps	s15, s16
 5923              	.LVL460:
 5924 001c F1EE10FA 		fmstat
  48:commandHandlers.h **** 	float pos = atof2(cmd, length, 99999.0f);
 5925              		.loc 1 48 0
 5926 0020 0190     		str	r0, [sp, #4]	@ float
  49:commandHandlers.h **** 	if(pos == 99999.0f){
 5927              		.loc 1 49 0
 5928 0022 04D1     		bne	.L432
  50:commandHandlers.h **** 		return false;
 5929              		.loc 1 50 0
 5930 0024 0020     		movs	r0, #0
 5931              	.L425:
 5932              	.LBE1760:
  59:commandHandlers.h **** }
 5933              		.loc 1 59 0
 5934 0026 03B0     		add	sp, sp, #12
 5935 0028 BDEC028B 		fldmfdd	sp!, {d8}
 5936 002c 30BD     		pop	{r4, r5, pc}
 5937              	.LVL461:
 5938              	.L432:
 5939              	.LBB1761:
  52:commandHandlers.h **** 	Utils::startLoggingControl();
 5940              		.loc 1 52 0
 5941 002e 2B4B     		ldr	r3, .L435+8
 5942              	.LBB1730:
 5943              	.LBB1731:
  57:commandHandlers.h **** 	dout << axis << " going to " << pos << endl;
 5944              		.loc 1 57 0
 5945 0030 2B4C     		ldr	r4, .L435+12
 5946              	.LBE1731:
 5947              	.LBE1730:
  52:commandHandlers.h **** 	Utils::startLoggingControl();
 5948              		.loc 1 52 0
 5949 0032 9847     		blx	r3
 5950              	.LVL462:
 5951              	.LBB1734:
 5952              	.LBB1735:
  15:transform.h   **** 		return int(MOTOR_ENC_PER_REV*MOTOR_GEAR_RATIO*mm + 0.5f);
 5953              		.loc 11 15 0
 5954 0034 DDED016A 		flds	s13, [sp, #4]
 5955 0038 9FED2A7A 		flds	s14, .L435+16
 5956 003c F6EE007A 		fconsts	s15, #96
 5957 0040 46EE877A 		fmacs	s15, s13, s14
 5958              	.LBE1735:
 5959              	.LBE1734:
  54:commandHandlers.h **** 	Control<ALL>::enablePositionControl(true);
 5960              		.loc 1 54 0
 5961 0044 0120     		movs	r0, #1
 5962              	.LBB1737:
 5963              	.LBB1736:
  15:transform.h   **** 		return int(MOTOR_ENC_PER_REV*MOTOR_GEAR_RATIO*mm + 0.5f);
 5964              		.loc 11 15 0
 5965 0046 FDEEE77A 		ftosizs	s15, s15
 5966              	.LBE1736:
 5967              	.LBE1737:
  54:commandHandlers.h **** 	Control<ALL>::enablePositionControl(true);
 5968              		.loc 1 54 0
 5969 004a 274B     		ldr	r3, .L435+20
  53:commandHandlers.h **** 	pos = Transform::mmToEncoder(pos);
 5970              		.loc 1 53 0
 5971 004c F8EEE77A 		fsitos	s15, s15
 5972 0050 CDED017A 		fsts	s15, [sp, #4]
  54:commandHandlers.h **** 	Control<ALL>::enablePositionControl(true);
 5973              		.loc 1 54 0
 5974 0054 9847     		blx	r3
 5975              	.LVL463:
  55:commandHandlers.h **** 	pos = Control<axis>::getIsPosition() + pos;
 5976              		.loc 1 55 0
 5977 0056 254B     		ldr	r3, .L435+24
 5978 0058 9847     		blx	r3
 5979              	.LVL464:
 5980 005a 07EE900A 		fmsr	s15, r0	@ int
 5981 005e B8EEE77A 		fsitos	s14, s15
 5982 0062 DDED017A 		flds	s15, [sp, #4]
 5983 0066 77EE277A 		fadds	s15, s14, s15
 5984              	.LVL465:
 5985              	.LBB1738:
 5986              	.LBB1739:
  67:control_impl.h **** 	Control<ALL>::resetPosPid();
 5987              		.loc 9 67 0
 5988 006a 214B     		ldr	r3, .L435+28
 5989              	.LBE1739:
 5990              	.LBE1738:
  56:commandHandlers.h **** 	Control<axis>::setShallPosition(pos);
 5991              		.loc 1 56 0
 5992 006c BDEEE78A 		ftosizs	s16, s15
 5993              	.LVL466:
  55:commandHandlers.h **** 	pos = Control<axis>::getIsPosition() + pos;
 5994              		.loc 1 55 0
 5995 0070 CDED017A 		fsts	s15, [sp, #4]
 5996              	.LBB1742:
 5997              	.LBB1740:
  67:control_impl.h **** 	Control<ALL>::resetPosPid();
 5998              		.loc 9 67 0
 5999 0074 9847     		blx	r3
 6000              	.LVL467:
  68:control_impl.h **** 	Control<ALL>::resetVPid();
 6001              		.loc 9 68 0
 6002 0076 1F4B     		ldr	r3, .L435+32
 6003 0078 9847     		blx	r3
 6004              	.LVL468:
  69:control_impl.h **** 	pos_shall = position;
 6005              		.loc 9 69 0
 6006 007a 1F4B     		ldr	r3, .L435+36
 6007              	.LBE1740:
 6008              	.LBE1742:
 6009              	.LBB1743:
 6010              	.LBB1732:
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 6011              		.loc 7 236 0
 6012 007c 2046     		mov	r0, r4
 6013              	.LBE1732:
 6014              	.LBE1743:
 6015              	.LBB1744:
 6016              	.LBB1741:
  69:control_impl.h **** 	pos_shall = position;
 6017              		.loc 9 69 0
 6018 007e 83ED008A 		fsts	s16, [r3, #0]	@ int
 6019              	.LVL469:
 6020              	.LBE1741:
 6021              	.LBE1744:
 6022              	.LBB1745:
 6023              	.LBB1733:
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 6024              		.loc 7 236 0
 6025 0082 0021     		movs	r1, #0
 6026 0084 1D4B     		ldr	r3, .L435+40
 6027 0086 9847     		blx	r3
 6028              	.LVL470:
 6029              	.LBE1733:
 6030              	.LBE1745:
 6031              	.LBB1746:
 6032              	.LBB1747:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 6033              		.loc 7 287 0
 6034 0088 6368     		ldr	r3, [r4, #4]
 6035 008a B3B1     		cbz	r3, .L433
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 6036              		.loc 7 290 0
 6037 008c 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 6038              		.loc 7 291 0
 6039 008e 2046     		mov	r0, r4
 6040 0090 1B49     		ldr	r1, .L435+44
 6041 0092 0CBF     		ite	eq
 6042 0094 1B4B     		ldreq	r3, .L435+48
 6043              		.loc 7 294 0
 6044 0096 1C4B     		ldrne	r3, .L435+52
 6045 0098 9847     		blx	r3
 6046              	.LVL471:
 6047              	.L427:
 6048              	.LBE1747:
 6049              	.LBE1746:
 6050              	.LBB1751:
 6051              	.LBB1752:
 103:commandHandlers.h **** 	dout << axis << " set pwm to " << speed << endl;
 6052              		.loc 1 103 0
 6053 009a 114D     		ldr	r5, .L435+12
 269:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeFloat(v);
 6054              		.loc 7 269 0
 6055 009c 1B4B     		ldr	r3, .L435+56
 6056 009e 2846     		mov	r0, r5
 6057 00a0 01A9     		add	r1, sp, #4
 6058              	.LVL472:
 6059 00a2 9847     		blx	r3
 6060              	.LVL473:
 6061              	.LBE1752:
 6062              	.LBE1751:
 6063              	.LBB1753:
 6064              	.LBB1754:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 6065              		.loc 7 122 0
 6066 00a4 6368     		ldr	r3, [r4, #4]
 6067 00a6 73B1     		cbz	r3, .L434
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 6068              		.loc 7 126 0
 6069 00a8 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 6070              		.loc 7 125 0
 6071 00aa 022B     		cmp	r3, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 6072              		.loc 7 126 0
 6073 00ac 2846     		mov	r0, r5
 6074 00ae 0CBF     		ite	eq
 6075 00b0 174B     		ldreq	r3, .L435+60
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 6076              		.loc 7 129 0
 6077 00b2 184B     		ldrne	r3, .L435+64
 6078 00b4 9847     		blx	r3
 6079              	.LVL474:
  58:commandHandlers.h **** 	return true;
 6080              		.loc 1 58 0
 6081 00b6 0120     		movs	r0, #1
 6082 00b8 B5E7     		b	.L425
 6083              	.LVL475:
 6084              	.L433:
 6085              	.LBE1754:
 6086              	.LBE1753:
 6087              	.LBB1758:
 6088              	.LBB1750:
 6089              	.LBB1748:
 6090              	.LBB1749:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 6091              		.loc 7 288 0
 6092 00ba 2068     		ldr	r0, [r4, #0]
 6093 00bc 1049     		ldr	r1, .L435+44
 6094 00be 0368     		ldr	r3, [r0, #0]
 6095 00c0 DB68     		ldr	r3, [r3, #12]
 6096 00c2 9847     		blx	r3
 6097              	.LVL476:
 6098 00c4 E9E7     		b	.L427
 6099              	.LVL477:
 6100              	.L434:
 6101              	.LBE1749:
 6102              	.LBE1748:
 6103              	.LBE1750:
 6104              	.LBE1758:
 6105              	.LBB1759:
 6106              	.LBB1757:
 6107              	.LBB1755:
 6108              	.LBB1756:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 6109              		.loc 7 123 0
 6110 00c6 2868     		ldr	r0, [r5, #0]
 6111 00c8 0368     		ldr	r3, [r0, #0]
 6112 00ca 0A21     		movs	r1, #10
 6113 00cc 9B68     		ldr	r3, [r3, #8]
 6114 00ce 9847     		blx	r3
 6115              	.LVL478:
  58:commandHandlers.h **** 	return true;
 6116              		.loc 1 58 0
 6117 00d0 0120     		movs	r0, #1
 6118 00d2 A8E7     		b	.L425
 6119              	.L436:
 6120              		.align	2
 6121              	.L435:
 6122 00d4 804FC347 		.word	1203982208
 6123 00d8 00000000 		.word	_Z5atof2PKcif
 6124 00dc 00000000 		.word	_ZN5Utils19startLoggingControlEv
 6125 00e0 00000000 		.word	.LANCHOR2
 6126 00e4 0000FA44 		.word	1157234688
 6127 00e8 00000000 		.word	_ZN7ControlIL4Axis5EE21enablePositionControlEb
 6128 00ec 00000000 		.word	_ZN7ControlIL4Axis0EE13getIsPositionEv
 6129 00f0 00000000 		.word	_ZN7ControlIL4Axis5EE11resetPosPidEv
 6130 00f4 00000000 		.word	_ZN7ControlIL4Axis5EE9resetVPidEv
 6131 00f8 00000000 		.word	_ZN7ControlIL4Axis0EE9pos_shallE
 6132 00fc 00000000 		.word	_ZN4xpcc8IOStream12writeIntegerEl
 6133 0100 14010000 		.word	.LC16
 6134 0104 00000000 		.word	_ZN4xpcc8IOStream8writeBinEPKc
 6135 0108 00000000 		.word	_ZN4xpcc8IOStream8writeHexEPKc
 6136 010c 00000000 		.word	_ZN4xpcc8IOStream10writeFloatERKf
 6137 0110 00000000 		.word	_ZN4xpcc8IOStream8writeBinEh
 6138 0114 00000000 		.word	_ZN4xpcc8IOStream8writeHexEh
 6139              	.LBE1756:
 6140              	.LBE1755:
 6141              	.LBE1757:
 6142              	.LBE1759:
 6143              	.LBE1761:
 6144              		.cfi_endproc
 6145              	.LFE1122:
 6147              		.section	.text._ZN8Handlers18setMaxSpeedHandlerEPKci,"axG",%progbits,_ZN8Handlers18setMaxSpeedHand
 6148              		.align	2
 6149              		.weak	_ZN8Handlers18setMaxSpeedHandlerEPKci
 6150              		.thumb
 6151              		.thumb_func
 6153              	_ZN8Handlers18setMaxSpeedHandlerEPKci:
 6154              	.LFB1035:
  76:commandHandlers.h **** static bool setMaxSpeedHandler(const char* cmd, int length){
 6155              		.loc 1 76 0
 6156              		.cfi_startproc
 6157              		@ args = 0, pretend = 0, frame = 8
 6158              		@ frame_needed = 0, uses_anonymous_args = 0
 6159              	.LVL479:
 6160 0000 30B5     		push	{r4, r5, lr}
 6161              	.LCFI39:
 6162              		.cfi_def_cfa_offset 12
 6163              		.cfi_offset 4, -12
 6164              		.cfi_offset 5, -8
 6165              		.cfi_offset 14, -4
 6166              	.LBB1786:
  77:commandHandlers.h **** 	float speed = atof2(cmd, length, 2.f);
 6167              		.loc 1 77 0
 6168 0002 4FF08042 		mov	r2, #1073741824
 6169              	.LBE1786:
  76:commandHandlers.h **** static bool setMaxSpeedHandler(const char* cmd, int length){
 6170              		.loc 1 76 0
 6171 0006 83B0     		sub	sp, sp, #12
 6172              	.LCFI40:
 6173              		.cfi_def_cfa_offset 24
 6174              	.LBB1803:
  77:commandHandlers.h **** 	float speed = atof2(cmd, length, 2.f);
 6175              		.loc 1 77 0
 6176 0008 2C4B     		ldr	r3, .L455
 6177 000a 9847     		blx	r3
 6178              	.LVL480:
 6179 000c 07EE900A 		fmsr	s15, r0
 6180              	.LVL481:
  78:commandHandlers.h **** 	if(speed == 2.f){
 6181              		.loc 1 78 0
 6182 0010 B0EE007A 		fconsts	s14, #0
 6183 0014 F4EE477A 		fcmps	s15, s14
 6184              	.LVL482:
 6185 0018 F1EE10FA 		fmstat
  77:commandHandlers.h **** 	float speed = atof2(cmd, length, 2.f);
 6186              		.loc 1 77 0
 6187 001c 0190     		str	r0, [sp, #4]	@ float
  78:commandHandlers.h **** 	if(speed == 2.f){
 6188              		.loc 1 78 0
 6189 001e 1ED0     		beq	.L450
 6190              	.LBB1787:
 6191              	.LBB1788:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 6192              		.loc 7 287 0
 6193 0020 274C     		ldr	r4, .L455+4
 6194              	.LBE1788:
 6195              	.LBE1787:
  82:commandHandlers.h **** 	Control<ALL>::setMaxSpeed(speed);
 6196              		.loc 1 82 0
 6197 0022 284B     		ldr	r3, .L455+8
 6198 0024 9847     		blx	r3
 6199              	.LVL483:
 6200              	.LBB1793:
 6201              	.LBB1791:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 6202              		.loc 7 287 0
 6203 0026 6368     		ldr	r3, [r4, #4]
 6204 0028 002B     		cmp	r3, #0
 6205 002a 2DD0     		beq	.L451
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 6206              		.loc 7 290 0
 6207 002c 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 6208              		.loc 7 291 0
 6209 002e 2046     		mov	r0, r4
 6210 0030 2549     		ldr	r1, .L455+12
 6211 0032 0CBF     		ite	eq
 6212 0034 254B     		ldreq	r3, .L455+16
 6213              		.loc 7 294 0
 6214 0036 264B     		ldrne	r3, .L455+20
 6215 0038 9847     		blx	r3
 6216              	.LVL484:
 6217              	.L446:
 6218              	.LBE1791:
 6219              	.LBE1793:
 6220              	.LBB1794:
 6221              	.LBB1795:
 103:commandHandlers.h **** 	dout << axis << " set pwm to " << speed << endl;
 6222              		.loc 1 103 0
 6223 003a 214D     		ldr	r5, .L455+4
 269:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeFloat(v);
 6224              		.loc 7 269 0
 6225 003c 254B     		ldr	r3, .L455+24
 6226 003e 2846     		mov	r0, r5
 6227 0040 01A9     		add	r1, sp, #4
 6228              	.LVL485:
 6229 0042 9847     		blx	r3
 6230              	.LVL486:
 6231              	.LBE1795:
 6232              	.LBE1794:
 6233              	.LBB1796:
 6234              	.LBB1797:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 6235              		.loc 7 122 0
 6236 0044 6368     		ldr	r3, [r4, #4]
 6237 0046 002B     		cmp	r3, #0
 6238 0048 24D0     		beq	.L452
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 6239              		.loc 7 126 0
 6240 004a 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 6241              		.loc 7 125 0
 6242 004c 022B     		cmp	r3, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 6243              		.loc 7 126 0
 6244 004e 2846     		mov	r0, r5
 6245 0050 0CBF     		ite	eq
 6246 0052 214B     		ldreq	r3, .L455+28
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 6247              		.loc 7 129 0
 6248 0054 214B     		ldrne	r3, .L455+32
 6249 0056 9847     		blx	r3
 6250              	.LVL487:
  84:commandHandlers.h **** 	return true;
 6251              		.loc 1 84 0
 6252 0058 0120     		movs	r0, #1
 6253              	.LVL488:
 6254              	.L443:
 6255              	.LBE1797:
 6256              	.LBE1796:
 6257              	.LBE1803:
  85:commandHandlers.h **** }
 6258              		.loc 1 85 0
 6259 005a 03B0     		add	sp, sp, #12
 6260 005c 30BD     		pop	{r4, r5, pc}
 6261              	.LVL489:
 6262              	.L450:
 6263              	.LBB1804:
 6264              	.LBB1805:
 6265              	.LBB1806:
 6266              	.LBB1807:
 6267              	.LBB1808:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 6268              		.loc 7 287 0
 6269 005e 204C     		ldr	r4, .L455+36
 6270 0060 6368     		ldr	r3, [r4, #4]
 6271 0062 2BB3     		cbz	r3, .L453
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 6272              		.loc 7 290 0
 6273 0064 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 6274              		.loc 7 291 0
 6275 0066 2046     		mov	r0, r4
 6276 0068 1E49     		ldr	r1, .L455+40
 6277 006a 0CBF     		ite	eq
 6278 006c 174B     		ldreq	r3, .L455+16
 6279              		.loc 7 294 0
 6280 006e 184B     		ldrne	r3, .L455+20
 6281 0070 9847     		blx	r3
 6282              	.LVL490:
 6283              	.L440:
 6284              	.LBE1808:
 6285              	.LBE1807:
 6286              	.LBB1812:
 6287              	.LBB1813:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 6288              		.loc 7 122 0
 6289 0072 6468     		ldr	r4, [r4, #4]
 6290 0074 1A48     		ldr	r0, .L455+36
 6291 0076 A4B1     		cbz	r4, .L454
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 6292              		.loc 7 126 0
 6293 0078 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 6294              		.loc 7 125 0
 6295 007a 022C     		cmp	r4, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 6296              		.loc 7 126 0
 6297 007c 0CBF     		ite	eq
 6298 007e 164B     		ldreq	r3, .L455+28
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 6299              		.loc 7 129 0
 6300 0080 164B     		ldrne	r3, .L455+32
 6301 0082 9847     		blx	r3
 6302              	.LVL491:
 6303 0084 0020     		movs	r0, #0
 6304 0086 E8E7     		b	.L443
 6305              	.LVL492:
 6306              	.L451:
 6307              	.LBE1813:
 6308              	.LBE1812:
 6309              	.LBE1806:
 6310              	.LBE1805:
 6311              	.LBE1804:
 6312              	.LBB1821:
 6313              	.LBB1801:
 6314              	.LBB1792:
 6315              	.LBB1789:
 6316              	.LBB1790:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 6317              		.loc 7 288 0
 6318 0088 2068     		ldr	r0, [r4, #0]
 6319 008a 0F49     		ldr	r1, .L455+12
 6320 008c 0368     		ldr	r3, [r0, #0]
 6321 008e DB68     		ldr	r3, [r3, #12]
 6322 0090 9847     		blx	r3
 6323              	.LVL493:
 6324 0092 D2E7     		b	.L446
 6325              	.LVL494:
 6326              	.L452:
 6327              	.LBE1790:
 6328              	.LBE1789:
 6329              	.LBE1792:
 6330              	.LBE1801:
 6331              	.LBB1802:
 6332              	.LBB1800:
 6333              	.LBB1798:
 6334              	.LBB1799:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 6335              		.loc 7 123 0
 6336 0094 2868     		ldr	r0, [r5, #0]
 6337 0096 0368     		ldr	r3, [r0, #0]
 6338 0098 0A21     		movs	r1, #10
 6339 009a 9B68     		ldr	r3, [r3, #8]
 6340 009c 9847     		blx	r3
 6341              	.LVL495:
  84:commandHandlers.h **** 	return true;
 6342              		.loc 1 84 0
 6343 009e 0120     		movs	r0, #1
 6344 00a0 DBE7     		b	.L443
 6345              	.LVL496:
 6346              	.L454:
 6347              	.LBE1799:
 6348              	.LBE1798:
 6349              	.LBE1800:
 6350              	.LBE1802:
 6351              	.LBE1821:
 6352              	.LBB1822:
 6353              	.LBB1820:
 6354              	.LBB1819:
 6355              	.LBB1817:
 6356              	.LBB1816:
 6357              	.LBB1814:
 6358              	.LBB1815:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 6359              		.loc 7 123 0
 6360 00a2 0068     		ldr	r0, [r0, #0]
 6361 00a4 0368     		ldr	r3, [r0, #0]
 6362 00a6 0A21     		movs	r1, #10
 6363 00a8 9B68     		ldr	r3, [r3, #8]
 6364 00aa 9847     		blx	r3
 6365              	.LVL497:
 6366 00ac 2046     		mov	r0, r4
 6367 00ae D4E7     		b	.L443
 6368              	.LVL498:
 6369              	.L453:
 6370              	.LBE1815:
 6371              	.LBE1814:
 6372              	.LBE1816:
 6373              	.LBE1817:
 6374              	.LBB1818:
 6375              	.LBB1811:
 6376              	.LBB1809:
 6377              	.LBB1810:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 6378              		.loc 7 288 0
 6379 00b0 2068     		ldr	r0, [r4, #0]
 6380 00b2 0C49     		ldr	r1, .L455+40
 6381 00b4 0368     		ldr	r3, [r0, #0]
 6382 00b6 DB68     		ldr	r3, [r3, #12]
 6383 00b8 9847     		blx	r3
 6384              	.LVL499:
 6385 00ba DAE7     		b	.L440
 6386              	.L456:
 6387              		.align	2
 6388              	.L455:
 6389 00bc 00000000 		.word	_Z5atof2PKcif
 6390 00c0 00000000 		.word	.LANCHOR2
 6391 00c4 00000000 		.word	_ZN7ControlIL4Axis5EE11setMaxSpeedEf
 6392 00c8 60010000 		.word	.LC19
 6393 00cc 00000000 		.word	_ZN4xpcc8IOStream8writeBinEPKc
 6394 00d0 00000000 		.word	_ZN4xpcc8IOStream8writeHexEPKc
 6395 00d4 00000000 		.word	_ZN4xpcc8IOStream10writeFloatERKf
 6396 00d8 00000000 		.word	_ZN4xpcc8IOStream8writeBinEh
 6397 00dc 00000000 		.word	_ZN4xpcc8IOStream8writeHexEh
 6398 00e0 00000000 		.word	.LANCHOR1
 6399 00e4 3C010000 		.word	.LC18
 6400              	.LBE1810:
 6401              	.LBE1809:
 6402              	.LBE1811:
 6403              	.LBE1818:
 6404              	.LBE1819:
 6405              	.LBE1820:
 6406              	.LBE1822:
 6407              		.cfi_endproc
 6408              	.LFE1035:
 6410              		.section	.text._ZN8Handlers13setPwmHandlerIL4Axis2EEEbPKci,"axG",%progbits,_ZN8Handlers13setPwmHan
 6411              		.align	2
 6412              		.weak	_ZN8Handlers13setPwmHandlerIL4Axis2EEEbPKci
 6413              		.thumb
 6414              		.thumb_func
 6416              	_ZN8Handlers13setPwmHandlerIL4Axis2EEEbPKci:
 6417              	.LFB1127:
  88:commandHandlers.h **** static bool setPwmHandler(const char* cmd, int length){
 6418              		.loc 1 88 0
 6419              		.cfi_startproc
 6420              		@ args = 0, pretend = 0, frame = 0
 6421              		@ frame_needed = 0, uses_anonymous_args = 0
 6422              	.LVL500:
 6423 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 6424              	.LCFI41:
 6425              		.cfi_def_cfa_offset 24
 6426              		.cfi_offset 3, -24
 6427              		.cfi_offset 4, -20
 6428              		.cfi_offset 5, -16
 6429              		.cfi_offset 6, -12
 6430              		.cfi_offset 7, -8
 6431              		.cfi_offset 14, -4
 6432              	.LBB1838:
  89:commandHandlers.h **** 	int speed = atoi2(cmd, length, INT_MAX);
 6433              		.loc 1 89 0
 6434 0002 6FF00042 		mvn	r2, #-2147483648
 6435 0006 254B     		ldr	r3, .L467
 6436 0008 9847     		blx	r3
 6437              	.LVL501:
  90:commandHandlers.h **** 	if(speed == INT_MAX){
 6438              		.loc 1 90 0
 6439 000a 6FF00043 		mvn	r3, #-2147483648
 6440 000e 9842     		cmp	r0, r3
  89:commandHandlers.h **** 	int speed = atoi2(cmd, length, INT_MAX);
 6441              		.loc 1 89 0
 6442 0010 0546     		mov	r5, r0
 6443              	.LVL502:
  90:commandHandlers.h **** 	if(speed == INT_MAX){
 6444              		.loc 1 90 0
 6445 0012 34D0     		beq	.L464
  93:commandHandlers.h **** 	xpcc::stm32::SysTickTimer::enable();
 6446              		.loc 1 93 0
 6447 0014 2248     		ldr	r0, .L467+4
 6448              	.LVL503:
 6449 0016 234B     		ldr	r3, .L467+8
 6450              	.LBB1839:
 6451              	.LBB1840:
 103:commandHandlers.h **** 	dout << axis << " set pwm to " << speed << endl;
 6452              		.loc 1 103 0
 6453 0018 234C     		ldr	r4, .L467+12
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 6454              		.loc 7 236 0
 6455 001a 244E     		ldr	r6, .L467+16
 6456              	.LBE1840:
 6457              	.LBE1839:
  93:commandHandlers.h **** 	xpcc::stm32::SysTickTimer::enable();
 6458              		.loc 1 93 0
 6459 001c 9847     		blx	r3
 6460              	.LVL504:
 6461              	.LBB1842:
 6462              	.LBB1843:
 6463              		.file 12 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp"
   1:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** // coding: utf-8
   2:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** // ----------------------------------------------------------------------------
   3:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** /* Copyright (c) 2009, Roboterclub Aachen e.V.
   4:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp ****  * All rights reserved.
   5:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp ****  *
   6:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp ****  * Redistribution and use in source and binary forms, with or without
   7:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp ****  * modification, are permitted provided that the following conditions are met:
   8:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp ****  * 
   9:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp ****  *     * Redistributions of source code must retain the above copyright
  10:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp ****  *       notice, this list of conditions and the following disclaimer.
  11:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp ****  *     * Redistributions in binary form must reproduce the above copyright
  12:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp ****  *       notice, this list of conditions and the following disclaimer in the
  13:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp ****  *       documentation and/or other materials provided with the distribution.
  14:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp ****  *     * Neither the name of the Roboterclub Aachen e.V. nor the
  15:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp ****  *       names of its contributors may be used to endorse or promote products
  16:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp ****  *       derived from this software without specific prior written permission.
  17:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp ****  *
  18:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp ****  * THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
  19:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp ****  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  20:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  21:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp ****  * DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
  22:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  23:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  24:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  25:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  26:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  27:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  28:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp ****  */
  29:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** // ----------------------------------------------------------------------------
  30:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 
  31:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** #ifndef	XPCC__DELAY_HPP
  32:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** #define	XPCC__DELAY_HPP
  33:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** #ifdef __DOXYGEN__
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 
  36:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** namespace xpcc
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** {
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 	/**
  39:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 	 * \brief	Delay us microseconds
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 	 * \ingroup	architecture
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 	 */
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 	void
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 	delay_us(float us);
  44:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 	
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 	/**
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 	 * \brief	Delay ms milliseconds
  47:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 	 * \ingroup	architecture
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 	 */
  49:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 	void
  50:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 	delay_ms(float ms);
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** }
  52:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** #else // !__DOXYGEN__
  54:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 
  55:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** #include <xpcc/architecture/detect.hpp>
  56:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** #include <xpcc/architecture/utils.hpp>
  57:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 
  58:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** #if defined(XPCC__CPU_AVR)
  59:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 	
  60:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 	#include <util/delay.h>
  61:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 	
  62:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 	namespace xpcc
  63:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 	{
  64:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 		ALWAYS_INLINE void
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 		delay_us(float us)
  66:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 		{
  67:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 			_delay_us(us);
  68:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 		}
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 		
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 		ALWAYS_INLINE void
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 		delay_ms(float ms)
  72:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 		{
  73:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 			_delay_ms(ms);
  74:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 		}
  75:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 	}
  76:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 
  77:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** #elif defined(XPCC__OS_UNIX) || defined(XPCC__OS_OSX)
  78:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 	#include <unistd.h>
  80:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 	
  81:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 	namespace xpcc
  82:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 	{
  83:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 		ALWAYS_INLINE void
  84:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 		delay_us(int us)
  85:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 		{
  86:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 			usleep(us);
  87:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 		}
  88:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 		
  89:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 		ALWAYS_INLINE void
  90:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 		delay_ms(int ms)
  91:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 		{
  92:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 			usleep(ms*1000);
  93:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 		}
  94:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 	}
  95:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 	
  96:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** #elif defined(XPCC__OS_WIN32)
  97:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 	
  98:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 	namespace xpcc
  99:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 	{
 100:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 		/*inline void
 101:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 		delay_us(int us)
 102:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 		{
 103:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 			int ms = us / 1000;
 104:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 			if (ms <= 0) {
 105:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 				ms = 1;
 106:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 			}
 107:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 			Sleep(ms);
 108:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 		}
 109:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 		
 110:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 		inline void
 111:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 		delay_ms(int ms)
 112:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 		{
 113:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 			Sleep(ms);
 114:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 		}*/
 115:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 		
 116:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 		inline void
 117:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 		delay_us(int)
 118:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 		{
 119:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 			// TODO
 120:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 		}
 121:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 		
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 		inline void
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 		delay_ms(int)
 124:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 		{
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 			// TODO
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 		}
 127:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 	}
 128:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 	
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** #elif defined(XPCC__CPU_ARM)
 130:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 	
 131:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 	extern "C" void _delay_us(uint32_t us);
 132:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 	extern "C" void _delay_ms(uint32_t ms);
 133:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 	
 134:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 	namespace xpcc
 135:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 	{
 136:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 		static inline void
 137:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 		delay_us(uint32_t us)
 138:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 		{
 139:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 			::_delay_us(us);
 140:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 		}
 141:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 		
 142:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 		static inline void
 143:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 		delay_ms(uint32_t ms)
 144:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 		{
 145:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/delay.hpp **** 			::_delay_ms(ms);
 6464              		.loc 12 145 0
 6465 001e 0520     		movs	r0, #5
 6466 0020 234B     		ldr	r3, .L467+20
 6467 0022 9847     		blx	r3
 6468              	.LVL505:
 6469 0024 234B     		ldr	r3, .L467+24
 6470              	.LBE1843:
 6471              	.LBE1842:
 100:commandHandlers.h **** 	Control<ALL>::enablePositionControl(false);
 6472              		.loc 1 100 0
 6473 0026 0020     		movs	r0, #0
 6474 0028 9D42     		cmp	r5, r3
 6475 002a B8BF     		it	lt
 6476 002c 1D46     		movlt	r5, r3
 6477              	.LVL506:
 6478 002e 224B     		ldr	r3, .L467+28
 6479 0030 9847     		blx	r3
 6480              	.LVL507:
 6481 0032 B5F5966F 		cmp	r5, #1200
 6482 0036 A8BF     		it	ge
 6483 0038 4FF49665 		movge	r5, #1200
 6484              	.LVL508:
 101:commandHandlers.h **** 	Control<ALL>::enableSpeedControl(false);
 6485              		.loc 1 101 0
 6486 003c 0020     		movs	r0, #0
 6487 003e 1F4B     		ldr	r3, .L467+32
 6488 0040 9847     		blx	r3
 6489              	.LVL509:
 102:commandHandlers.h **** 	Motor<axis>::setSpeed(speed);
 6490              		.loc 1 102 0
 6491 0042 1F4B     		ldr	r3, .L467+36
 6492 0044 2846     		mov	r0, r5
 6493 0046 9847     		blx	r3
 6494              	.LVL510:
 6495              	.LBB1844:
 6496              	.LBB1841:
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 6497              		.loc 7 236 0
 6498 0048 2046     		mov	r0, r4
 6499 004a 0221     		movs	r1, #2
 6500 004c B047     		blx	r6
 6501              	.LVL511:
 6502              	.LBE1841:
 6503              	.LBE1844:
 6504              	.LBB1845:
 6505              	.LBB1846:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 6506              		.loc 7 287 0
 6507 004e 6368     		ldr	r3, [r4, #4]
 6508 0050 BBB1     		cbz	r3, .L465
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 6509              		.loc 7 290 0
 6510 0052 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 6511              		.loc 7 291 0
 6512 0054 2046     		mov	r0, r4
 6513 0056 1B49     		ldr	r1, .L467+40
 6514 0058 0CBF     		ite	eq
 6515 005a 1B4B     		ldreq	r3, .L467+44
 6516              		.loc 7 294 0
 6517 005c 1B4B     		ldrne	r3, .L467+48
 6518 005e 9847     		blx	r3
 6519              	.LVL512:
 6520              	.L460:
 6521              	.LBE1846:
 6522              	.LBE1845:
 6523              	.LBB1850:
 6524              	.LBB1851:
 103:commandHandlers.h **** 	dout << axis << " set pwm to " << speed << endl;
 6525              		.loc 1 103 0
 6526 0060 114F     		ldr	r7, .L467+12
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 6527              		.loc 7 236 0
 6528 0062 2946     		mov	r1, r5
 6529 0064 3846     		mov	r0, r7
 6530 0066 B047     		blx	r6
 6531              	.LVL513:
 6532              	.LBE1851:
 6533              	.LBE1850:
 6534              	.LBB1852:
 6535              	.LBB1853:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 6536              		.loc 7 122 0
 6537 0068 6368     		ldr	r3, [r4, #4]
 6538 006a 83B1     		cbz	r3, .L466
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 6539              		.loc 7 126 0
 6540 006c 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 6541              		.loc 7 125 0
 6542 006e 022B     		cmp	r3, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 6543              		.loc 7 126 0
 6544 0070 3846     		mov	r0, r7
 6545 0072 0CBF     		ite	eq
 6546 0074 164B     		ldreq	r3, .L467+52
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 6547              		.loc 7 129 0
 6548 0076 174B     		ldrne	r3, .L467+56
 6549 0078 9847     		blx	r3
 6550              	.LVL514:
 104:commandHandlers.h **** 	return true;
 6551              		.loc 1 104 0
 6552 007a 0120     		movs	r0, #1
 6553 007c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6554              	.LVL515:
 6555              	.L464:
 6556              	.LBE1853:
 6557              	.LBE1852:
  91:commandHandlers.h **** 		return false;
 6558              		.loc 1 91 0
 6559 007e 0020     		movs	r0, #0
 6560              	.LVL516:
 6561              	.LBE1838:
 105:commandHandlers.h **** }
 6562              		.loc 1 105 0
 6563 0080 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6564              	.LVL517:
 6565              	.L465:
 6566              	.LBB1859:
 6567              	.LBB1857:
 6568              	.LBB1849:
 6569              	.LBB1847:
 6570              	.LBB1848:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 6571              		.loc 7 288 0
 6572 0082 2068     		ldr	r0, [r4, #0]
 6573 0084 0F49     		ldr	r1, .L467+40
 6574 0086 0368     		ldr	r3, [r0, #0]
 6575 0088 DB68     		ldr	r3, [r3, #12]
 6576 008a 9847     		blx	r3
 6577              	.LVL518:
 6578 008c E8E7     		b	.L460
 6579              	.LVL519:
 6580              	.L466:
 6581              	.LBE1848:
 6582              	.LBE1847:
 6583              	.LBE1849:
 6584              	.LBE1857:
 6585              	.LBB1858:
 6586              	.LBB1856:
 6587              	.LBB1854:
 6588              	.LBB1855:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 6589              		.loc 7 123 0
 6590 008e 3868     		ldr	r0, [r7, #0]
 6591 0090 0368     		ldr	r3, [r0, #0]
 6592 0092 0A21     		movs	r1, #10
 6593 0094 9B68     		ldr	r3, [r3, #8]
 6594 0096 9847     		blx	r3
 6595              	.LVL520:
 104:commandHandlers.h **** 	return true;
 6596              		.loc 1 104 0
 6597 0098 0120     		movs	r0, #1
 6598 009a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6599              	.L468:
 6600              		.align	2
 6601              	.L467:
 6602 009c 00000000 		.word	_Z5atoi2PKcii
 6603 00a0 3F900200 		.word	167999
 6604 00a4 00000000 		.word	_ZN4xpcc5stm3212SysTickTimer6enableEm
 6605 00a8 00000000 		.word	.LANCHOR2
 6606 00ac 00000000 		.word	_ZN4xpcc8IOStream12writeIntegerEl
 6607 00b0 00000000 		.word	_delay_ms
 6608 00b4 50FBFFFF 		.word	-1200
 6609 00b8 00000000 		.word	_ZN7ControlIL4Axis5EE21enablePositionControlEb
 6610 00bc 00000000 		.word	_ZN7ControlIL4Axis5EE18enableSpeedControlEb
 6611 00c0 00000000 		.word	_ZN5MotorIL4Axis2EE8setSpeedEi
 6612 00c4 70010000 		.word	.LC20
 6613 00c8 00000000 		.word	_ZN4xpcc8IOStream8writeBinEPKc
 6614 00cc 00000000 		.word	_ZN4xpcc8IOStream8writeHexEPKc
 6615 00d0 00000000 		.word	_ZN4xpcc8IOStream8writeBinEh
 6616 00d4 00000000 		.word	_ZN4xpcc8IOStream8writeHexEh
 6617              	.LBE1855:
 6618              	.LBE1854:
 6619              	.LBE1856:
 6620              	.LBE1858:
 6621              	.LBE1859:
 6622              		.cfi_endproc
 6623              	.LFE1127:
 6625              		.section	.text._ZN8Handlers13setPwmHandlerIL4Axis0EEEbPKci,"axG",%progbits,_ZN8Handlers13setPwmHan
 6626              		.align	2
 6627              		.weak	_ZN8Handlers13setPwmHandlerIL4Axis0EEEbPKci
 6628              		.thumb
 6629              		.thumb_func
 6631              	_ZN8Handlers13setPwmHandlerIL4Axis0EEEbPKci:
 6632              	.LFB1126:
  88:commandHandlers.h **** static bool setPwmHandler(const char* cmd, int length){
 6633              		.loc 1 88 0
 6634              		.cfi_startproc
 6635              		@ args = 0, pretend = 0, frame = 0
 6636              		@ frame_needed = 0, uses_anonymous_args = 0
 6637              	.LVL521:
 6638 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 6639              	.LCFI42:
 6640              		.cfi_def_cfa_offset 24
 6641              		.cfi_offset 3, -24
 6642              		.cfi_offset 4, -20
 6643              		.cfi_offset 5, -16
 6644              		.cfi_offset 6, -12
 6645              		.cfi_offset 7, -8
 6646              		.cfi_offset 14, -4
 6647              	.LBB1875:
  89:commandHandlers.h **** 	int speed = atoi2(cmd, length, INT_MAX);
 6648              		.loc 1 89 0
 6649 0002 6FF00042 		mvn	r2, #-2147483648
 6650 0006 254B     		ldr	r3, .L479
 6651 0008 9847     		blx	r3
 6652              	.LVL522:
  90:commandHandlers.h **** 	if(speed == INT_MAX){
 6653              		.loc 1 90 0
 6654 000a 6FF00043 		mvn	r3, #-2147483648
 6655 000e 9842     		cmp	r0, r3
  89:commandHandlers.h **** 	int speed = atoi2(cmd, length, INT_MAX);
 6656              		.loc 1 89 0
 6657 0010 0546     		mov	r5, r0
 6658              	.LVL523:
  90:commandHandlers.h **** 	if(speed == INT_MAX){
 6659              		.loc 1 90 0
 6660 0012 34D0     		beq	.L476
  93:commandHandlers.h **** 	xpcc::stm32::SysTickTimer::enable();
 6661              		.loc 1 93 0
 6662 0014 2248     		ldr	r0, .L479+4
 6663              	.LVL524:
 6664 0016 234B     		ldr	r3, .L479+8
 6665              	.LBB1876:
 6666              	.LBB1877:
 103:commandHandlers.h **** 	dout << axis << " set pwm to " << speed << endl;
 6667              		.loc 1 103 0
 6668 0018 234C     		ldr	r4, .L479+12
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 6669              		.loc 7 236 0
 6670 001a 244E     		ldr	r6, .L479+16
 6671              	.LBE1877:
 6672              	.LBE1876:
  93:commandHandlers.h **** 	xpcc::stm32::SysTickTimer::enable();
 6673              		.loc 1 93 0
 6674 001c 9847     		blx	r3
 6675              	.LVL525:
 6676              	.LBB1879:
 6677              	.LBB1880:
 6678              		.loc 12 145 0
 6679 001e 0520     		movs	r0, #5
 6680 0020 234B     		ldr	r3, .L479+20
 6681 0022 9847     		blx	r3
 6682              	.LVL526:
 6683 0024 234B     		ldr	r3, .L479+24
 6684              	.LBE1880:
 6685              	.LBE1879:
 100:commandHandlers.h **** 	Control<ALL>::enablePositionControl(false);
 6686              		.loc 1 100 0
 6687 0026 0020     		movs	r0, #0
 6688 0028 9D42     		cmp	r5, r3
 6689 002a B8BF     		it	lt
 6690 002c 1D46     		movlt	r5, r3
 6691              	.LVL527:
 6692 002e 224B     		ldr	r3, .L479+28
 6693 0030 9847     		blx	r3
 6694              	.LVL528:
 6695 0032 B5F5966F 		cmp	r5, #1200
 6696 0036 A8BF     		it	ge
 6697 0038 4FF49665 		movge	r5, #1200
 6698              	.LVL529:
 101:commandHandlers.h **** 	Control<ALL>::enableSpeedControl(false);
 6699              		.loc 1 101 0
 6700 003c 0020     		movs	r0, #0
 6701 003e 1F4B     		ldr	r3, .L479+32
 6702 0040 9847     		blx	r3
 6703              	.LVL530:
 102:commandHandlers.h **** 	Motor<axis>::setSpeed(speed);
 6704              		.loc 1 102 0
 6705 0042 1F4B     		ldr	r3, .L479+36
 6706 0044 2846     		mov	r0, r5
 6707 0046 9847     		blx	r3
 6708              	.LVL531:
 6709              	.LBB1881:
 6710              	.LBB1878:
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 6711              		.loc 7 236 0
 6712 0048 2046     		mov	r0, r4
 6713 004a 0021     		movs	r1, #0
 6714 004c B047     		blx	r6
 6715              	.LVL532:
 6716              	.LBE1878:
 6717              	.LBE1881:
 6718              	.LBB1882:
 6719              	.LBB1883:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 6720              		.loc 7 287 0
 6721 004e 6368     		ldr	r3, [r4, #4]
 6722 0050 BBB1     		cbz	r3, .L477
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 6723              		.loc 7 290 0
 6724 0052 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 6725              		.loc 7 291 0
 6726 0054 2046     		mov	r0, r4
 6727 0056 1B49     		ldr	r1, .L479+40
 6728 0058 0CBF     		ite	eq
 6729 005a 1B4B     		ldreq	r3, .L479+44
 6730              		.loc 7 294 0
 6731 005c 1B4B     		ldrne	r3, .L479+48
 6732 005e 9847     		blx	r3
 6733              	.LVL533:
 6734              	.L472:
 6735              	.LBE1883:
 6736              	.LBE1882:
 6737              	.LBB1887:
 6738              	.LBB1888:
 103:commandHandlers.h **** 	dout << axis << " set pwm to " << speed << endl;
 6739              		.loc 1 103 0
 6740 0060 114F     		ldr	r7, .L479+12
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 6741              		.loc 7 236 0
 6742 0062 2946     		mov	r1, r5
 6743 0064 3846     		mov	r0, r7
 6744 0066 B047     		blx	r6
 6745              	.LVL534:
 6746              	.LBE1888:
 6747              	.LBE1887:
 6748              	.LBB1889:
 6749              	.LBB1890:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 6750              		.loc 7 122 0
 6751 0068 6368     		ldr	r3, [r4, #4]
 6752 006a 83B1     		cbz	r3, .L478
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 6753              		.loc 7 126 0
 6754 006c 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 6755              		.loc 7 125 0
 6756 006e 022B     		cmp	r3, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 6757              		.loc 7 126 0
 6758 0070 3846     		mov	r0, r7
 6759 0072 0CBF     		ite	eq
 6760 0074 164B     		ldreq	r3, .L479+52
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 6761              		.loc 7 129 0
 6762 0076 174B     		ldrne	r3, .L479+56
 6763 0078 9847     		blx	r3
 6764              	.LVL535:
 104:commandHandlers.h **** 	return true;
 6765              		.loc 1 104 0
 6766 007a 0120     		movs	r0, #1
 6767 007c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6768              	.LVL536:
 6769              	.L476:
 6770              	.LBE1890:
 6771              	.LBE1889:
  91:commandHandlers.h **** 		return false;
 6772              		.loc 1 91 0
 6773 007e 0020     		movs	r0, #0
 6774              	.LVL537:
 6775              	.LBE1875:
 105:commandHandlers.h **** }
 6776              		.loc 1 105 0
 6777 0080 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6778              	.LVL538:
 6779              	.L477:
 6780              	.LBB1896:
 6781              	.LBB1894:
 6782              	.LBB1886:
 6783              	.LBB1884:
 6784              	.LBB1885:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 6785              		.loc 7 288 0
 6786 0082 2068     		ldr	r0, [r4, #0]
 6787 0084 0F49     		ldr	r1, .L479+40
 6788 0086 0368     		ldr	r3, [r0, #0]
 6789 0088 DB68     		ldr	r3, [r3, #12]
 6790 008a 9847     		blx	r3
 6791              	.LVL539:
 6792 008c E8E7     		b	.L472
 6793              	.LVL540:
 6794              	.L478:
 6795              	.LBE1885:
 6796              	.LBE1884:
 6797              	.LBE1886:
 6798              	.LBE1894:
 6799              	.LBB1895:
 6800              	.LBB1893:
 6801              	.LBB1891:
 6802              	.LBB1892:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 6803              		.loc 7 123 0
 6804 008e 3868     		ldr	r0, [r7, #0]
 6805 0090 0368     		ldr	r3, [r0, #0]
 6806 0092 0A21     		movs	r1, #10
 6807 0094 9B68     		ldr	r3, [r3, #8]
 6808 0096 9847     		blx	r3
 6809              	.LVL541:
 104:commandHandlers.h **** 	return true;
 6810              		.loc 1 104 0
 6811 0098 0120     		movs	r0, #1
 6812 009a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6813              	.L480:
 6814              		.align	2
 6815              	.L479:
 6816 009c 00000000 		.word	_Z5atoi2PKcii
 6817 00a0 3F900200 		.word	167999
 6818 00a4 00000000 		.word	_ZN4xpcc5stm3212SysTickTimer6enableEm
 6819 00a8 00000000 		.word	.LANCHOR2
 6820 00ac 00000000 		.word	_ZN4xpcc8IOStream12writeIntegerEl
 6821 00b0 00000000 		.word	_delay_ms
 6822 00b4 50FBFFFF 		.word	-1200
 6823 00b8 00000000 		.word	_ZN7ControlIL4Axis5EE21enablePositionControlEb
 6824 00bc 00000000 		.word	_ZN7ControlIL4Axis5EE18enableSpeedControlEb
 6825 00c0 00000000 		.word	_ZN5MotorIL4Axis0EE8setSpeedEi
 6826 00c4 70010000 		.word	.LC20
 6827 00c8 00000000 		.word	_ZN4xpcc8IOStream8writeBinEPKc
 6828 00cc 00000000 		.word	_ZN4xpcc8IOStream8writeHexEPKc
 6829 00d0 00000000 		.word	_ZN4xpcc8IOStream8writeBinEh
 6830 00d4 00000000 		.word	_ZN4xpcc8IOStream8writeHexEh
 6831              	.LBE1892:
 6832              	.LBE1891:
 6833              	.LBE1893:
 6834              	.LBE1895:
 6835              	.LBE1896:
 6836              		.cfi_endproc
 6837              	.LFE1126:
 6839              		.section	.text._ZN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEE5writeEPKc,"axG",%progbits,_
 6840              		.align	2
 6841              		.weak	_ZN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEE5writeEPKc
 6842              		.thumb
 6843              		.thumb_func
 6845              	_ZN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEE5writeEPKc:
 6846              	.LFB1210:
  89:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		write(const char *s)
 6847              		.loc 5 89 0
 6848              		.cfi_startproc
 6849              		@ args = 0, pretend = 0, frame = 0
 6850              		@ frame_needed = 0, uses_anonymous_args = 0
 6851              	.LVL542:
 6852 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 6853              	.LCFI43:
 6854              		.cfi_def_cfa_offset 24
 6855              		.cfi_offset 4, -24
 6856              		.cfi_offset 5, -20
 6857              		.cfi_offset 6, -16
 6858              		.cfi_offset 7, -12
 6859              		.cfi_offset 8, -8
 6860              		.cfi_offset 14, -4
  89:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		write(const char *s)
 6861              		.loc 5 89 0
 6862 0004 0F46     		mov	r7, r1
 6863              	.LVL543:
 6864              	.L503:
 6865              	.LBB1916:
  92:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 			while ((c = *s++)) {
 6866              		.loc 5 92 0 discriminator 1
 6867 0006 17F8013B 		ldrb	r3, [r7], #1	@ zero_extendqisi2
 6868              	.LVL544:
 6869 000a 7BB1     		cbz	r3, .L504
 6870              	.LVL545:
 6871              	.L494:
 6872              	.LBB1917:
 6873              	.LBB1918:
 6874              		.file 13 "pcInterface.h"
   1:pcInterface.h **** /*
   2:pcInterface.h ****  * pcInterface.h
   3:pcInterface.h ****  *
   4:pcInterface.h ****  *  Created on: Dec 30, 2013
   5:pcInterface.h ****  *      Author: jonas
   6:pcInterface.h ****  */
   7:pcInterface.h **** 
   8:pcInterface.h **** #ifndef PCINTERFACE_H_
   9:pcInterface.h **** #define PCINTERFACE_H_
  10:pcInterface.h **** 
  11:pcInterface.h **** #include "project.h"
  12:pcInterface.h **** #include "checksum.h"
  13:pcInterface.h **** #ifdef __arm__
  14:pcInterface.h **** #include <xpcc/architecture.hpp>
  15:pcInterface.h **** 
  16:pcInterface.h **** extern xpcc::stm32::BufferedUsart2 uart;
  17:pcInterface.h **** #endif
  18:pcInterface.h **** 
  19:pcInterface.h **** static const bool ENABLE_STREAMS = true;
  20:pcInterface.h **** 
  21:pcInterface.h **** struct Prefix{
  22:pcInterface.h **** 	static const char DEBUG = 'D';
  23:pcInterface.h **** 	static const char POSITION = 'P';
  24:pcInterface.h **** 	static const char MEASUREMENT = 'M';
  25:pcInterface.h **** 	static const char INFO = 'I';
  26:pcInterface.h **** 	static const char ERROR = 'E';
  27:pcInterface.h **** 	static const char COMMAND = 'C';
  28:pcInterface.h **** 	static const char CONTROL = 'K';
  29:pcInterface.h **** };
  30:pcInterface.h **** 
  31:pcInterface.h **** class PC{
  32:pcInterface.h **** public:
  33:pcInterface.h **** 	struct ucCommand{
  34:pcInterface.h **** 		constexpr static const char* FLUSH_DATA = "flush data";
  35:pcInterface.h **** 	};
  36:pcInterface.h **** 
  37:pcInterface.h **** 	/**
  38:pcInterface.h **** 	 * Setup UART for communication
  39:pcInterface.h **** 	 * Should be the first init function to call
  40:pcInterface.h **** 	 * @return
  41:pcInterface.h **** 	 */
  42:pcInterface.h **** 	static bool init();
  43:pcInterface.h **** 	static void scanForCommands();
  44:pcInterface.h **** 	static void registerCommandHandler(const char* command, bool (*handler)(const char*, int));
  45:pcInterface.h **** 
  46:pcInterface.h **** 	struct Command {
  47:pcInterface.h **** 	    const char* name;
  48:pcInterface.h **** 	    bool (*handler)(const char*, int); //if true is returned, "ok - command" is printed on uart
  49:pcInterface.h **** 	};
  50:pcInterface.h **** 
  51:pcInterface.h **** 	static bool defaultHandler(const char*, int);
  52:pcInterface.h **** 	static Command* getCommand(const char* command);
  53:pcInterface.h **** };
  54:pcInterface.h **** 
  55:pcInterface.h **** #ifdef __arm__
  56:pcInterface.h **** 
  57:pcInterface.h **** /**
  58:pcInterface.h ****  * Wrapper class to provide various streams
  59:pcInterface.h ****  */
  60:pcInterface.h **** template<char prefix, bool useChecksum, bool enable = ENABLE_STREAMS, int TEXT_BUFFER_SIZE = 300>
  61:pcInterface.h **** class Stream{
  62:pcInterface.h **** private:
  63:pcInterface.h **** 	static char text[TEXT_BUFFER_SIZE];
  64:pcInterface.h **** 	static int pos;
  65:pcInterface.h **** public:
  66:pcInterface.h **** 	static void flush();
  67:pcInterface.h **** 	static void writeMeasurement(char* measurement, int length);
  68:pcInterface.h **** 	static void write(char c);
  69:pcInterface.h **** 	static bool read(char &c){ (void)c; return false;}
  70:pcInterface.h **** 	static bool read(uint8_t &c){ (void)c; return false;}
  71:pcInterface.h **** private:
  72:pcInterface.h **** 	static void calcChecksum();
  73:pcInterface.h **** };
  74:pcInterface.h **** 
  75:pcInterface.h **** template<char prefix, bool useChecksum, bool enable, int TEXT_BUFFER_SIZE>
  76:pcInterface.h **** char Stream<prefix, useChecksum, enable, TEXT_BUFFER_SIZE>::text[TEXT_BUFFER_SIZE];
  77:pcInterface.h **** 
  78:pcInterface.h **** template<char prefix, bool useChecksum, bool enable, int TEXT_BUFFER_SIZE>
  79:pcInterface.h **** int Stream<prefix, useChecksum, enable, TEXT_BUFFER_SIZE>::pos;
  80:pcInterface.h **** 
  81:pcInterface.h **** 
  82:pcInterface.h **** 
  83:pcInterface.h **** template<char prefix, bool useChecksum, bool enable, int TEXT_BUFFER_SIZE>
  84:pcInterface.h **** void Stream<prefix, useChecksum, enable, TEXT_BUFFER_SIZE>::write(char c){
  85:pcInterface.h **** 	if(!enable){
  86:pcInterface.h **** 		return;
  87:pcInterface.h **** 	}
  88:pcInterface.h **** 	//if(prefix != 'M'){
  89:pcInterface.h **** 		if(pos == TEXT_BUFFER_SIZE-3){
 6875              		.loc 13 89 0
 6876 000c 334C     		ldr	r4, .L507
 6877 000e 2268     		ldr	r2, [r4, #0]
 6878 0010 40F22911 		movw	r1, #297
 6879 0014 8A42     		cmp	r2, r1
 6880 0016 0BD0     		beq	.L505
  90:pcInterface.h **** 			text[pos++] = c;
  91:pcInterface.h **** 			//text[pos+1] = '\n';
  92:pcInterface.h **** 			//text[pos+2] = '\0';
  93:pcInterface.h **** 			flush();
  94:pcInterface.h **** 			return;
  95:pcInterface.h **** 		}
  96:pcInterface.h **** 		if(c == '\n'){
 6881              		.loc 13 96 0
 6882 0018 0A2B     		cmp	r3, #10
 6883 001a 34D0     		beq	.L506
  97:pcInterface.h **** 			flush();
  98:pcInterface.h **** 			return;
  99:pcInterface.h **** 		}
 100:pcInterface.h **** 
 101:pcInterface.h **** 		text[pos++] = c;
 6884              		.loc 13 101 0
 6885 001c 3048     		ldr	r0, .L507+4
 6886 001e 511C     		adds	r1, r2, #1
 6887 0020 8354     		strb	r3, [r0, r2]
 6888 0022 2160     		str	r1, [r4, #0]
 6889              	.LBE1918:
 6890              	.LBE1917:
  92:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 			while ((c = *s++)) {
 6891              		.loc 5 92 0
 6892 0024 17F8013B 		ldrb	r3, [r7], #1	@ zero_extendqisi2
 6893              	.LVL546:
 6894 0028 002B     		cmp	r3, #0
 6895 002a EFD1     		bne	.L494
 6896              	.LVL547:
 6897              	.L504:
 6898              	.LBE1916:
  95:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		}
 6899              		.loc 5 95 0
 6900 002c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 6901              	.LVL548:
 6902              	.L505:
 6903              	.LBB1953:
 6904              	.LBB1952:
 6905              	.LBB1951:
  90:pcInterface.h **** 			text[pos++] = c;
 6906              		.loc 13 90 0
 6907 0030 2B4D     		ldr	r5, .L507+4
 6908              	.LBB1919:
 6909              	.LBB1920:
 102:pcInterface.h **** 	/*}else{ //zero overhead version for measurement
 103:pcInterface.h **** 		//text[pos++] = c;
 104:pcInterface.h **** 		uart.write(c);
 105:pcInterface.h **** 	}*/
 106:pcInterface.h **** }
 107:pcInterface.h **** 
 108:pcInterface.h **** template<char prefix, bool useChecksum, bool enable, int TEXT_BUFFER_SIZE>
 109:pcInterface.h **** void Stream<prefix, useChecksum, enable, TEXT_BUFFER_SIZE>::flush(){
 110:pcInterface.h **** 	if(!enable){
 111:pcInterface.h **** 		return;
 112:pcInterface.h **** 	}
 113:pcInterface.h **** 
 114:pcInterface.h **** 	uart.write(prefix);
 6910              		.loc 13 114 0
 6911 0032 2C4E     		ldr	r6, .L507+8
 6912              	.LBE1920:
 6913              	.LBE1919:
  90:pcInterface.h **** 			text[pos++] = c;
 6914              		.loc 13 90 0
 6915 0034 85F82931 		strb	r3, [r5, #297]
 6916              	.LBB1932:
 6917              	.LBB1929:
 6918              		.loc 13 114 0
 6919 0038 4D20     		movs	r0, #77
 6920              	.LBE1929:
 6921              	.LBE1932:
  90:pcInterface.h **** 			text[pos++] = c;
 6922              		.loc 13 90 0
 6923 003a 4FF49573 		mov	r3, #298
 6924              	.LVL549:
 6925 003e 2360     		str	r3, [r4, #0]
 6926              	.LBB1933:
 6927              	.LBB1930:
 6928              		.loc 13 114 0
 6929 0040 B047     		blx	r6
 6930              	.LVL550:
 6931              	.LBB1921:
 6932              	.LBB1922:
 6933              	.LBB1923:
 6934              	.LBB1924:
 6935              		.file 14 "checksum.h"
   1:checksum.h    **** /*
   2:checksum.h    ****  * checksum.cpp
   3:checksum.h    ****  *
   4:checksum.h    ****  *  Created on: Feb 11, 2014
   5:checksum.h    ****  *      Author: jonas
   6:checksum.h    ****  */
   7:checksum.h    **** 
   8:checksum.h    **** #pragma once
   9:checksum.h    **** 
  10:checksum.h    **** struct Checksum{
  11:checksum.h    ****     /**
  12:checksum.h    ****      * @brief getFor: Returns the checksum for a message
  13:checksum.h    ****      * @param data message the checksum shall be calculated for
  14:checksum.h    ****      * @param length number of characters, the newline character shall not be included
  15:checksum.h    ****      * @param specifier the specifier of the message
  16:checksum.h    ****      * @return computed checksum
  17:checksum.h    ****      */
  18:checksum.h    ****     static char getFor(const char* data, int length, char specifier){
  19:checksum.h    **** 		char checksum = 0x0;
  20:checksum.h    **** 		const char* const pEnd = data+length;
 6936              		.loc 14 20 0
 6937 0042 2168     		ldr	r1, [r4, #0]
 6938 0044 6918     		adds	r1, r5, r1
 6939              	.LVL551:
  21:checksum.h    **** 		while(data != pEnd){
 6940              		.loc 14 21 0
 6941 0046 A942     		cmp	r1, r5
 6942 0048 43D0     		beq	.L495
 6943 004a 0020     		movs	r0, #0
 6944 004c 2B46     		mov	r3, r5
 6945              	.LVL552:
 6946              	.L485:
  22:checksum.h    **** 			checksum ^= *data;
 6947              		.loc 14 22 0
 6948 004e 13F8012B 		ldrb	r2, [r3], #1	@ zero_extendqisi2
  21:checksum.h    **** 		while(data != pEnd){
 6949              		.loc 14 21 0
 6950 0052 9942     		cmp	r1, r3
 6951              		.loc 14 22 0
 6952 0054 80EA0200 		eor	r0, r0, r2
 6953              	.LVL553:
  21:checksum.h    **** 		while(data != pEnd){
 6954              		.loc 14 21 0
 6955 0058 F9D1     		bne	.L485
 6956 005a 80F04D00 		eor	r0, r0, #77
 6957              	.LVL554:
 6958 005e C0B2     		uxtb	r0, r0
 6959              	.LVL555:
 6960              	.L484:
 6961              	.LBE1924:
 6962              	.LBE1923:
 115:pcInterface.h **** 	if(useChecksum){
 116:pcInterface.h **** 		calcChecksum();
 117:pcInterface.h **** 	}
 118:pcInterface.h **** 	uart.write(',');
 119:pcInterface.h **** 
 120:pcInterface.h **** 	const char* ptr = &text[0];
 121:pcInterface.h **** 	const char* end = &text[pos];
 122:pcInterface.h **** 
 123:pcInterface.h **** 	while(ptr != end){
 124:pcInterface.h **** 		uart.write(*ptr);
 125:pcInterface.h **** 		ptr++;
 126:pcInterface.h **** 	}
 127:pcInterface.h **** 
 128:pcInterface.h **** 	//coutRaw << " l: " << pos;
 129:pcInterface.h **** 
 130:pcInterface.h **** 	uart.write('\n');
 131:pcInterface.h **** 
 132:pcInterface.h **** 	pos = 0;
 133:pcInterface.h **** }
 134:pcInterface.h **** 
 135:pcInterface.h **** template<char prefix, bool useChecksum, bool enable, int TEXT_BUFFER_SIZE>
 136:pcInterface.h **** void Stream<prefix, useChecksum, enable, TEXT_BUFFER_SIZE>::calcChecksum(){
 137:pcInterface.h **** 	char check = Checksum::getFor(text, pos, prefix);
 138:pcInterface.h **** 	uart.write(check);
 6963              		.loc 13 138 0
 6964 0060 B047     		blx	r6
 6965              	.LVL556:
 6966              	.LBE1922:
 6967              	.LBE1921:
 118:pcInterface.h **** 	uart.write(',');
 6968              		.loc 13 118 0
 6969 0062 2C20     		movs	r0, #44
 6970 0064 B047     		blx	r6
 6971              	.LVL557:
 121:pcInterface.h **** 	const char* end = &text[pos];
 6972              		.loc 13 121 0
 6973 0066 2368     		ldr	r3, [r4, #0]
 6974 0068 05EB0308 		add	r8, r5, r3
 6975              	.LVL558:
 123:pcInterface.h **** 	while(ptr != end){
 6976              		.loc 13 123 0
 6977 006c A845     		cmp	r8, r5
 6978 006e 05D0     		beq	.L493
 6979 0070 1B4D     		ldr	r5, .L507+4
 6980              	.LVL559:
 6981              	.L486:
 124:pcInterface.h **** 		uart.write(*ptr);
 6982              		.loc 13 124 0
 6983 0072 15F8010B 		ldrb	r0, [r5], #1	@ zero_extendqisi2
 6984 0076 B047     		blx	r6
 6985              	.LVL560:
 123:pcInterface.h **** 	while(ptr != end){
 6986              		.loc 13 123 0
 6987 0078 A845     		cmp	r8, r5
 6988 007a FAD1     		bne	.L486
 6989              	.LVL561:
 6990              	.L493:
 6991              	.LBE1930:
 6992              	.LBE1933:
 6993              	.LBB1934:
 6994              	.LBB1935:
 130:pcInterface.h **** 	uart.write('\n');
 6995              		.loc 13 130 0
 6996 007c 0A20     		movs	r0, #10
 6997 007e B047     		blx	r6
 6998              	.LVL562:
 132:pcInterface.h **** 	pos = 0;
 6999              		.loc 13 132 0
 7000 0080 0023     		movs	r3, #0
 7001 0082 2360     		str	r3, [r4, #0]
 7002 0084 BFE7     		b	.L503
 7003              	.LVL563:
 7004              	.L506:
 114:pcInterface.h **** 	uart.write(prefix);
 7005              		.loc 13 114 0
 7006 0086 4D20     		movs	r0, #77
 7007 0088 164E     		ldr	r6, .L507+8
 7008              	.LBB1936:
 7009              	.LBB1937:
 7010              	.LBB1938:
 7011              	.LBB1939:
  20:checksum.h    **** 		const char* const pEnd = data+length;
 7012              		.loc 14 20 0
 7013 008a 154D     		ldr	r5, .L507+4
 7014              	.LBE1939:
 7015              	.LBE1938:
 7016              	.LBE1937:
 7017              	.LBE1936:
 114:pcInterface.h **** 	uart.write(prefix);
 7018              		.loc 13 114 0
 7019 008c B047     		blx	r6
 7020              	.LVL564:
 7021              	.LBB1946:
 7022              	.LBB1944:
 7023              	.LBB1942:
 7024              	.LBB1940:
  20:checksum.h    **** 		const char* const pEnd = data+length;
 7025              		.loc 14 20 0
 7026 008e 2168     		ldr	r1, [r4, #0]
 7027 0090 6918     		adds	r1, r5, r1
 7028              	.LVL565:
  21:checksum.h    **** 		while(data != pEnd){
 7029              		.loc 14 21 0
 7030 0092 A942     		cmp	r1, r5
 7031 0094 1FD0     		beq	.L497
 7032 0096 0020     		movs	r0, #0
 7033 0098 2B46     		mov	r3, r5
 7034              	.LVL566:
 7035              	.L491:
 7036              		.loc 14 22 0
 7037 009a 13F8012B 		ldrb	r2, [r3], #1	@ zero_extendqisi2
  21:checksum.h    **** 		while(data != pEnd){
 7038              		.loc 14 21 0
 7039 009e 9942     		cmp	r1, r3
 7040              		.loc 14 22 0
 7041 00a0 80EA0200 		eor	r0, r0, r2
 7042              	.LVL567:
  21:checksum.h    **** 		while(data != pEnd){
 7043              		.loc 14 21 0
 7044 00a4 F9D1     		bne	.L491
 7045 00a6 80F04D00 		eor	r0, r0, #77
 7046              	.LVL568:
 7047 00aa C0B2     		uxtb	r0, r0
 7048              	.LVL569:
 7049              	.L490:
 7050              	.LBE1940:
 7051              	.LBE1942:
 7052              		.loc 13 138 0
 7053 00ac B047     		blx	r6
 7054              	.LVL570:
 7055              	.LBE1944:
 7056              	.LBE1946:
 118:pcInterface.h **** 	uart.write(',');
 7057              		.loc 13 118 0
 7058 00ae 2C20     		movs	r0, #44
 7059 00b0 B047     		blx	r6
 7060              	.LVL571:
 121:pcInterface.h **** 	const char* end = &text[pos];
 7061              		.loc 13 121 0
 7062 00b2 2368     		ldr	r3, [r4, #0]
 7063 00b4 05EB0308 		add	r8, r5, r3
 7064              	.LVL572:
 123:pcInterface.h **** 	while(ptr != end){
 7065              		.loc 13 123 0
 7066 00b8 A845     		cmp	r8, r5
 7067 00ba DFD0     		beq	.L493
 7068 00bc 084D     		ldr	r5, .L507+4
 7069              	.LVL573:
 7070              	.L492:
 124:pcInterface.h **** 		uart.write(*ptr);
 7071              		.loc 13 124 0
 7072 00be 15F8010B 		ldrb	r0, [r5], #1	@ zero_extendqisi2
 7073 00c2 B047     		blx	r6
 7074              	.LVL574:
 123:pcInterface.h **** 	while(ptr != end){
 7075              		.loc 13 123 0
 7076 00c4 A845     		cmp	r8, r5
 7077 00c6 FAD1     		bne	.L492
 130:pcInterface.h **** 	uart.write('\n');
 7078              		.loc 13 130 0
 7079 00c8 0A20     		movs	r0, #10
 7080 00ca B047     		blx	r6
 7081              	.LVL575:
 132:pcInterface.h **** 	pos = 0;
 7082              		.loc 13 132 0
 7083 00cc 0023     		movs	r3, #0
 7084 00ce 2360     		str	r3, [r4, #0]
 7085 00d0 99E7     		b	.L503
 7086              	.LVL576:
 7087              	.L495:
 7088              	.LBE1935:
 7089              	.LBE1934:
 7090              	.LBB1949:
 7091              	.LBB1931:
 7092              	.LBB1928:
 7093              	.LBB1927:
 7094              	.LBB1926:
 7095              	.LBB1925:
  21:checksum.h    **** 		while(data != pEnd){
 7096              		.loc 14 21 0
 7097 00d2 4D20     		movs	r0, #77
 7098 00d4 C4E7     		b	.L484
 7099              	.LVL577:
 7100              	.L497:
 7101              	.LBE1925:
 7102              	.LBE1926:
 7103              	.LBE1927:
 7104              	.LBE1928:
 7105              	.LBE1931:
 7106              	.LBE1949:
 7107              	.LBB1950:
 7108              	.LBB1948:
 7109              	.LBB1947:
 7110              	.LBB1945:
 7111              	.LBB1943:
 7112              	.LBB1941:
 7113 00d6 4D20     		movs	r0, #77
 7114 00d8 E8E7     		b	.L490
 7115              	.L508:
 7116 00da 00BF     		.align	2
 7117              	.L507:
 7118 00dc 00000000 		.word	_ZN6StreamILc77ELb1ELb1ELi300EE3posE
 7119 00e0 00000000 		.word	_ZN6StreamILc77ELb1ELb1ELi300EE4textE
 7120 00e4 00000000 		.word	_ZN4xpcc5stm3214BufferedUsart25writeEh
 7121              	.LBE1941:
 7122              	.LBE1943:
 7123              	.LBE1945:
 7124              	.LBE1947:
 7125              	.LBE1948:
 7126              	.LBE1950:
 7127              	.LBE1951:
 7128              	.LBE1952:
 7129              	.LBE1953:
 7130              		.cfi_endproc
 7131              	.LFE1210:
 7133              		.section	.text._ZN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEE5writeEc,"axG",%progbits,_ZN
 7134              		.align	2
 7135              		.weak	_ZN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEE5writeEc
 7136              		.thumb
 7137              		.thumb_func
 7139              	_ZN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEE5writeEc:
 7140              	.LFB1189:
  83:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		write(char c)
 7141              		.loc 5 83 0
 7142              		.cfi_startproc
 7143              		@ args = 0, pretend = 0, frame = 0
 7144              		@ frame_needed = 0, uses_anonymous_args = 0
 7145              	.LVL578:
 7146 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 7147              	.LCFI44:
 7148              		.cfi_def_cfa_offset 24
 7149              		.cfi_offset 3, -24
 7150              		.cfi_offset 4, -20
 7151              		.cfi_offset 5, -16
 7152              		.cfi_offset 6, -12
 7153              		.cfi_offset 7, -8
 7154              		.cfi_offset 14, -4
 7155              	.LBB1962:
 7156              	.LBB1963:
  89:pcInterface.h **** 		if(pos == TEXT_BUFFER_SIZE-3){
 7157              		.loc 13 89 0
 7158 0002 1B4C     		ldr	r4, .L523
 7159 0004 2368     		ldr	r3, [r4, #0]
 7160              	.LVL579:
 7161 0006 40F22912 		movw	r2, #297
 7162 000a 9342     		cmp	r3, r2
 7163 000c 06D0     		beq	.L521
  96:pcInterface.h **** 		if(c == '\n'){
 7164              		.loc 13 96 0
 7165 000e 0A29     		cmp	r1, #10
 7166 0010 1DD0     		beq	.L522
 101:pcInterface.h **** 		text[pos++] = c;
 7167              		.loc 13 101 0
 7168 0012 1848     		ldr	r0, .L523+4
 7169              	.LVL580:
 7170 0014 5A1C     		adds	r2, r3, #1
 7171 0016 C154     		strb	r1, [r0, r3]
 7172 0018 2260     		str	r2, [r4, #0]
 7173 001a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 7174              	.LVL581:
 7175              	.L521:
  90:pcInterface.h **** 			text[pos++] = c;
 7176              		.loc 13 90 0
 7177 001c 154D     		ldr	r5, .L523+4
 7178              	.LBB1964:
 7179              	.LBB1965:
 114:pcInterface.h **** 	uart.write(prefix);
 7180              		.loc 13 114 0
 7181 001e 164E     		ldr	r6, .L523+8
 7182              	.LBE1965:
 7183              	.LBE1964:
  90:pcInterface.h **** 			text[pos++] = c;
 7184              		.loc 13 90 0
 7185 0020 85F82911 		strb	r1, [r5, #297]
 7186              	.LBB1968:
 7187              	.LBB1966:
 114:pcInterface.h **** 	uart.write(prefix);
 7188              		.loc 13 114 0
 7189 0024 4B20     		movs	r0, #75
 7190              	.LVL582:
 7191              	.LBE1966:
 7192              	.LBE1968:
  90:pcInterface.h **** 			text[pos++] = c;
 7193              		.loc 13 90 0
 7194 0026 4FF49573 		mov	r3, #298
 7195 002a 2360     		str	r3, [r4, #0]
 7196              	.LBB1969:
 7197              	.LBB1967:
 114:pcInterface.h **** 	uart.write(prefix);
 7198              		.loc 13 114 0
 7199 002c B047     		blx	r6
 7200              	.LVL583:
 118:pcInterface.h **** 	uart.write(',');
 7201              		.loc 13 118 0
 7202 002e 2C20     		movs	r0, #44
 7203 0030 B047     		blx	r6
 7204              	.LVL584:
 121:pcInterface.h **** 	const char* end = &text[pos];
 7205              		.loc 13 121 0
 7206 0032 2768     		ldr	r7, [r4, #0]
 7207 0034 EF19     		adds	r7, r5, r7
 7208              	.LVL585:
 123:pcInterface.h **** 	while(ptr != end){
 7209              		.loc 13 123 0
 7210 0036 AF42     		cmp	r7, r5
 7211 0038 04D0     		beq	.L516
 7212              	.LVL586:
 7213              	.L511:
 124:pcInterface.h **** 		uart.write(*ptr);
 7214              		.loc 13 124 0
 7215 003a 15F8010B 		ldrb	r0, [r5], #1	@ zero_extendqisi2
 7216 003e B047     		blx	r6
 7217              	.LVL587:
 123:pcInterface.h **** 	while(ptr != end){
 7218              		.loc 13 123 0
 7219 0040 AF42     		cmp	r7, r5
 7220 0042 FAD1     		bne	.L511
 7221              	.LVL588:
 7222              	.L516:
 7223              	.LBE1967:
 7224              	.LBE1969:
 7225              	.LBB1970:
 7226              	.LBB1971:
 130:pcInterface.h **** 	uart.write('\n');
 7227              		.loc 13 130 0
 7228 0044 0A20     		movs	r0, #10
 7229 0046 B047     		blx	r6
 7230              	.LVL589:
 132:pcInterface.h **** 	pos = 0;
 7231              		.loc 13 132 0
 7232 0048 0023     		movs	r3, #0
 7233 004a 2360     		str	r3, [r4, #0]
 7234 004c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 7235              	.LVL590:
 7236              	.L522:
 114:pcInterface.h **** 	uart.write(prefix);
 7237              		.loc 13 114 0
 7238 004e 4B20     		movs	r0, #75
 7239              	.LVL591:
 7240 0050 094E     		ldr	r6, .L523+8
 121:pcInterface.h **** 	const char* end = &text[pos];
 7241              		.loc 13 121 0
 7242 0052 084D     		ldr	r5, .L523+4
 114:pcInterface.h **** 	uart.write(prefix);
 7243              		.loc 13 114 0
 7244 0054 B047     		blx	r6
 7245              	.LVL592:
 118:pcInterface.h **** 	uart.write(',');
 7246              		.loc 13 118 0
 7247 0056 2C20     		movs	r0, #44
 7248 0058 B047     		blx	r6
 7249              	.LVL593:
 121:pcInterface.h **** 	const char* end = &text[pos];
 7250              		.loc 13 121 0
 7251 005a 2768     		ldr	r7, [r4, #0]
 7252 005c EF19     		adds	r7, r5, r7
 7253              	.LVL594:
 123:pcInterface.h **** 	while(ptr != end){
 7254              		.loc 13 123 0
 7255 005e AF42     		cmp	r7, r5
 7256 0060 F0D0     		beq	.L516
 7257              	.LVL595:
 7258              	.L515:
 124:pcInterface.h **** 		uart.write(*ptr);
 7259              		.loc 13 124 0
 7260 0062 15F8010B 		ldrb	r0, [r5], #1	@ zero_extendqisi2
 7261 0066 B047     		blx	r6
 7262              	.LVL596:
 123:pcInterface.h **** 	while(ptr != end){
 7263              		.loc 13 123 0
 7264 0068 AF42     		cmp	r7, r5
 7265 006a FAD1     		bne	.L515
 7266 006c EAE7     		b	.L516
 7267              	.L524:
 7268 006e 00BF     		.align	2
 7269              	.L523:
 7270 0070 00000000 		.word	_ZN6StreamILc75ELb0ELb1ELi300EE3posE
 7271 0074 00000000 		.word	_ZN6StreamILc75ELb0ELb1ELi300EE4textE
 7272 0078 00000000 		.word	_ZN4xpcc5stm3214BufferedUsart25writeEh
 7273              	.LBE1971:
 7274              	.LBE1970:
 7275              	.LBE1963:
 7276              	.LBE1962:
 7277              		.cfi_endproc
 7278              	.LFE1189:
 7280              		.section	.text._ZN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEE5writeEPKc,"axG",%progbits,_
 7281              		.align	2
 7282              		.weak	_ZN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEE5writeEPKc
 7283              		.thumb
 7284              		.thumb_func
 7286              	_ZN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEE5writeEPKc:
 7287              	.LFB1190:
  89:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		write(const char *s)
 7288              		.loc 5 89 0
 7289              		.cfi_startproc
 7290              		@ args = 0, pretend = 0, frame = 0
 7291              		@ frame_needed = 0, uses_anonymous_args = 0
 7292              	.LVL597:
 7293 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 7294              	.LCFI45:
 7295              		.cfi_def_cfa_offset 24
 7296              		.cfi_offset 4, -24
 7297              		.cfi_offset 5, -20
 7298              		.cfi_offset 6, -16
 7299              		.cfi_offset 7, -12
 7300              		.cfi_offset 8, -8
 7301              		.cfi_offset 14, -4
  89:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		write(const char *s)
 7302              		.loc 5 89 0
 7303 0004 0F46     		mov	r7, r1
 7304              	.LVL598:
 7305              	.L539:
 7306              	.LBB1981:
  92:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 			while ((c = *s++)) {
 7307              		.loc 5 92 0 discriminator 1
 7308 0006 17F8013B 		ldrb	r3, [r7], #1	@ zero_extendqisi2
 7309              	.LVL599:
 7310 000a 7BB1     		cbz	r3, .L540
 7311              	.LVL600:
 7312              	.L534:
 7313              	.LBB1982:
 7314              	.LBB1983:
  89:pcInterface.h **** 		if(pos == TEXT_BUFFER_SIZE-3){
 7315              		.loc 13 89 0
 7316 000c 204C     		ldr	r4, .L543
 7317 000e 2268     		ldr	r2, [r4, #0]
 7318 0010 40F22911 		movw	r1, #297
 7319 0014 8A42     		cmp	r2, r1
 7320 0016 0BD0     		beq	.L541
  96:pcInterface.h **** 		if(c == '\n'){
 7321              		.loc 13 96 0
 7322 0018 0A2B     		cmp	r3, #10
 7323 001a 23D0     		beq	.L542
 101:pcInterface.h **** 		text[pos++] = c;
 7324              		.loc 13 101 0
 7325 001c 1D48     		ldr	r0, .L543+4
 7326 001e 511C     		adds	r1, r2, #1
 7327 0020 8354     		strb	r3, [r0, r2]
 7328 0022 2160     		str	r1, [r4, #0]
 7329              	.LBE1983:
 7330              	.LBE1982:
  92:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 			while ((c = *s++)) {
 7331              		.loc 5 92 0
 7332 0024 17F8013B 		ldrb	r3, [r7], #1	@ zero_extendqisi2
 7333              	.LVL601:
 7334 0028 002B     		cmp	r3, #0
 7335 002a EFD1     		bne	.L534
 7336              	.LVL602:
 7337              	.L540:
 7338              	.LBE1981:
  95:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		}
 7339              		.loc 5 95 0
 7340 002c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 7341              	.LVL603:
 7342              	.L541:
 7343              	.LBB1994:
 7344              	.LBB1993:
 7345              	.LBB1992:
  90:pcInterface.h **** 			text[pos++] = c;
 7346              		.loc 13 90 0
 7347 0030 184D     		ldr	r5, .L543+4
 7348              	.LBB1984:
 7349              	.LBB1985:
 114:pcInterface.h **** 	uart.write(prefix);
 7350              		.loc 13 114 0
 7351 0032 194E     		ldr	r6, .L543+8
 7352              	.LBE1985:
 7353              	.LBE1984:
  90:pcInterface.h **** 			text[pos++] = c;
 7354              		.loc 13 90 0
 7355 0034 85F82931 		strb	r3, [r5, #297]
 7356              	.LBB1988:
 7357              	.LBB1986:
 114:pcInterface.h **** 	uart.write(prefix);
 7358              		.loc 13 114 0
 7359 0038 4B20     		movs	r0, #75
 7360              	.LBE1986:
 7361              	.LBE1988:
  90:pcInterface.h **** 			text[pos++] = c;
 7362              		.loc 13 90 0
 7363 003a 4FF49573 		mov	r3, #298
 7364              	.LVL604:
 7365 003e 2360     		str	r3, [r4, #0]
 7366              	.LBB1989:
 7367              	.LBB1987:
 114:pcInterface.h **** 	uart.write(prefix);
 7368              		.loc 13 114 0
 7369 0040 B047     		blx	r6
 7370              	.LVL605:
 118:pcInterface.h **** 	uart.write(',');
 7371              		.loc 13 118 0
 7372 0042 2C20     		movs	r0, #44
 7373 0044 B047     		blx	r6
 7374              	.LVL606:
 121:pcInterface.h **** 	const char* end = &text[pos];
 7375              		.loc 13 121 0
 7376 0046 2368     		ldr	r3, [r4, #0]
 7377 0048 05EB0308 		add	r8, r5, r3
 7378              	.LVL607:
 123:pcInterface.h **** 	while(ptr != end){
 7379              		.loc 13 123 0
 7380 004c A845     		cmp	r8, r5
 7381 004e 04D0     		beq	.L533
 7382              	.LVL608:
 7383              	.L528:
 124:pcInterface.h **** 		uart.write(*ptr);
 7384              		.loc 13 124 0
 7385 0050 15F8010B 		ldrb	r0, [r5], #1	@ zero_extendqisi2
 7386 0054 B047     		blx	r6
 7387              	.LVL609:
 123:pcInterface.h **** 	while(ptr != end){
 7388              		.loc 13 123 0
 7389 0056 A845     		cmp	r8, r5
 7390 0058 FAD1     		bne	.L528
 7391              	.LVL610:
 7392              	.L533:
 7393              	.LBE1987:
 7394              	.LBE1989:
 7395              	.LBB1990:
 7396              	.LBB1991:
 130:pcInterface.h **** 	uart.write('\n');
 7397              		.loc 13 130 0
 7398 005a 0A20     		movs	r0, #10
 7399 005c B047     		blx	r6
 7400              	.LVL611:
 132:pcInterface.h **** 	pos = 0;
 7401              		.loc 13 132 0
 7402 005e 0023     		movs	r3, #0
 7403 0060 2360     		str	r3, [r4, #0]
 7404 0062 D0E7     		b	.L539
 7405              	.LVL612:
 7406              	.L542:
 114:pcInterface.h **** 	uart.write(prefix);
 7407              		.loc 13 114 0
 7408 0064 4B20     		movs	r0, #75
 7409 0066 0C4E     		ldr	r6, .L543+8
 121:pcInterface.h **** 	const char* end = &text[pos];
 7410              		.loc 13 121 0
 7411 0068 0A4D     		ldr	r5, .L543+4
 114:pcInterface.h **** 	uart.write(prefix);
 7412              		.loc 13 114 0
 7413 006a B047     		blx	r6
 7414              	.LVL613:
 118:pcInterface.h **** 	uart.write(',');
 7415              		.loc 13 118 0
 7416 006c 2C20     		movs	r0, #44
 7417 006e B047     		blx	r6
 7418              	.LVL614:
 121:pcInterface.h **** 	const char* end = &text[pos];
 7419              		.loc 13 121 0
 7420 0070 2368     		ldr	r3, [r4, #0]
 7421 0072 05EB0308 		add	r8, r5, r3
 7422              	.LVL615:
 123:pcInterface.h **** 	while(ptr != end){
 7423              		.loc 13 123 0
 7424 0076 A845     		cmp	r8, r5
 7425 0078 EFD0     		beq	.L533
 7426              	.LVL616:
 7427              	.L532:
 124:pcInterface.h **** 		uart.write(*ptr);
 7428              		.loc 13 124 0
 7429 007a 15F8010B 		ldrb	r0, [r5], #1	@ zero_extendqisi2
 7430 007e B047     		blx	r6
 7431              	.LVL617:
 123:pcInterface.h **** 	while(ptr != end){
 7432              		.loc 13 123 0
 7433 0080 A845     		cmp	r8, r5
 7434 0082 FAD1     		bne	.L532
 130:pcInterface.h **** 	uart.write('\n');
 7435              		.loc 13 130 0
 7436 0084 0A20     		movs	r0, #10
 7437 0086 B047     		blx	r6
 7438              	.LVL618:
 132:pcInterface.h **** 	pos = 0;
 7439              		.loc 13 132 0
 7440 0088 0023     		movs	r3, #0
 7441 008a 2360     		str	r3, [r4, #0]
 7442 008c BBE7     		b	.L539
 7443              	.L544:
 7444 008e 00BF     		.align	2
 7445              	.L543:
 7446 0090 00000000 		.word	_ZN6StreamILc75ELb0ELb1ELi300EE3posE
 7447 0094 00000000 		.word	_ZN6StreamILc75ELb0ELb1ELi300EE4textE
 7448 0098 00000000 		.word	_ZN4xpcc5stm3214BufferedUsart25writeEh
 7449              	.LBE1991:
 7450              	.LBE1990:
 7451              	.LBE1992:
 7452              	.LBE1993:
 7453              	.LBE1994:
 7454              		.cfi_endproc
 7455              	.LFE1190:
 7457              		.section	.text._ZN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEE5writeEc,"axG",%progbits,_ZN
 7458              		.align	2
 7459              		.weak	_ZN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEE5writeEc
 7460              		.thumb
 7461              		.thumb_func
 7463              	_ZN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEE5writeEc:
 7464              	.LFB1205:
  83:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		write(char c)
 7465              		.loc 5 83 0
 7466              		.cfi_startproc
 7467              		@ args = 0, pretend = 0, frame = 0
 7468              		@ frame_needed = 0, uses_anonymous_args = 0
 7469              	.LVL619:
 7470 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 7471              	.LCFI46:
 7472              		.cfi_def_cfa_offset 24
 7473              		.cfi_offset 3, -24
 7474              		.cfi_offset 4, -20
 7475              		.cfi_offset 5, -16
 7476              		.cfi_offset 6, -12
 7477              		.cfi_offset 7, -8
 7478              		.cfi_offset 14, -4
 7479              	.LBB2003:
 7480              	.LBB2004:
  89:pcInterface.h **** 		if(pos == TEXT_BUFFER_SIZE-3){
 7481              		.loc 13 89 0
 7482 0002 1B4C     		ldr	r4, .L559
 7483 0004 2368     		ldr	r3, [r4, #0]
 7484              	.LVL620:
 7485 0006 40F22912 		movw	r2, #297
 7486 000a 9342     		cmp	r3, r2
 7487 000c 06D0     		beq	.L557
  96:pcInterface.h **** 		if(c == '\n'){
 7488              		.loc 13 96 0
 7489 000e 0A29     		cmp	r1, #10
 7490 0010 1DD0     		beq	.L558
 101:pcInterface.h **** 		text[pos++] = c;
 7491              		.loc 13 101 0
 7492 0012 1848     		ldr	r0, .L559+4
 7493              	.LVL621:
 7494 0014 5A1C     		adds	r2, r3, #1
 7495 0016 C154     		strb	r1, [r0, r3]
 7496 0018 2260     		str	r2, [r4, #0]
 7497 001a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 7498              	.LVL622:
 7499              	.L557:
  90:pcInterface.h **** 			text[pos++] = c;
 7500              		.loc 13 90 0
 7501 001c 154D     		ldr	r5, .L559+4
 7502              	.LBB2005:
 7503              	.LBB2006:
 114:pcInterface.h **** 	uart.write(prefix);
 7504              		.loc 13 114 0
 7505 001e 164E     		ldr	r6, .L559+8
 7506              	.LBE2006:
 7507              	.LBE2005:
  90:pcInterface.h **** 			text[pos++] = c;
 7508              		.loc 13 90 0
 7509 0020 85F82911 		strb	r1, [r5, #297]
 7510              	.LBB2009:
 7511              	.LBB2007:
 114:pcInterface.h **** 	uart.write(prefix);
 7512              		.loc 13 114 0
 7513 0024 4420     		movs	r0, #68
 7514              	.LVL623:
 7515              	.LBE2007:
 7516              	.LBE2009:
  90:pcInterface.h **** 			text[pos++] = c;
 7517              		.loc 13 90 0
 7518 0026 4FF49573 		mov	r3, #298
 7519 002a 2360     		str	r3, [r4, #0]
 7520              	.LBB2010:
 7521              	.LBB2008:
 114:pcInterface.h **** 	uart.write(prefix);
 7522              		.loc 13 114 0
 7523 002c B047     		blx	r6
 7524              	.LVL624:
 118:pcInterface.h **** 	uart.write(',');
 7525              		.loc 13 118 0
 7526 002e 2C20     		movs	r0, #44
 7527 0030 B047     		blx	r6
 7528              	.LVL625:
 121:pcInterface.h **** 	const char* end = &text[pos];
 7529              		.loc 13 121 0
 7530 0032 2768     		ldr	r7, [r4, #0]
 7531 0034 EF19     		adds	r7, r5, r7
 7532              	.LVL626:
 123:pcInterface.h **** 	while(ptr != end){
 7533              		.loc 13 123 0
 7534 0036 AF42     		cmp	r7, r5
 7535 0038 04D0     		beq	.L552
 7536              	.LVL627:
 7537              	.L547:
 124:pcInterface.h **** 		uart.write(*ptr);
 7538              		.loc 13 124 0
 7539 003a 15F8010B 		ldrb	r0, [r5], #1	@ zero_extendqisi2
 7540 003e B047     		blx	r6
 7541              	.LVL628:
 123:pcInterface.h **** 	while(ptr != end){
 7542              		.loc 13 123 0
 7543 0040 AF42     		cmp	r7, r5
 7544 0042 FAD1     		bne	.L547
 7545              	.LVL629:
 7546              	.L552:
 7547              	.LBE2008:
 7548              	.LBE2010:
 7549              	.LBB2011:
 7550              	.LBB2012:
 130:pcInterface.h **** 	uart.write('\n');
 7551              		.loc 13 130 0
 7552 0044 0A20     		movs	r0, #10
 7553 0046 B047     		blx	r6
 7554              	.LVL630:
 132:pcInterface.h **** 	pos = 0;
 7555              		.loc 13 132 0
 7556 0048 0023     		movs	r3, #0
 7557 004a 2360     		str	r3, [r4, #0]
 7558 004c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 7559              	.LVL631:
 7560              	.L558:
 114:pcInterface.h **** 	uart.write(prefix);
 7561              		.loc 13 114 0
 7562 004e 4420     		movs	r0, #68
 7563              	.LVL632:
 7564 0050 094E     		ldr	r6, .L559+8
 121:pcInterface.h **** 	const char* end = &text[pos];
 7565              		.loc 13 121 0
 7566 0052 084D     		ldr	r5, .L559+4
 114:pcInterface.h **** 	uart.write(prefix);
 7567              		.loc 13 114 0
 7568 0054 B047     		blx	r6
 7569              	.LVL633:
 118:pcInterface.h **** 	uart.write(',');
 7570              		.loc 13 118 0
 7571 0056 2C20     		movs	r0, #44
 7572 0058 B047     		blx	r6
 7573              	.LVL634:
 121:pcInterface.h **** 	const char* end = &text[pos];
 7574              		.loc 13 121 0
 7575 005a 2768     		ldr	r7, [r4, #0]
 7576 005c EF19     		adds	r7, r5, r7
 7577              	.LVL635:
 123:pcInterface.h **** 	while(ptr != end){
 7578              		.loc 13 123 0
 7579 005e AF42     		cmp	r7, r5
 7580 0060 F0D0     		beq	.L552
 7581              	.LVL636:
 7582              	.L551:
 124:pcInterface.h **** 		uart.write(*ptr);
 7583              		.loc 13 124 0
 7584 0062 15F8010B 		ldrb	r0, [r5], #1	@ zero_extendqisi2
 7585 0066 B047     		blx	r6
 7586              	.LVL637:
 123:pcInterface.h **** 	while(ptr != end){
 7587              		.loc 13 123 0
 7588 0068 AF42     		cmp	r7, r5
 7589 006a FAD1     		bne	.L551
 7590 006c EAE7     		b	.L552
 7591              	.L560:
 7592 006e 00BF     		.align	2
 7593              	.L559:
 7594 0070 00000000 		.word	_ZN6StreamILc68ELb0ELb1ELi300EE3posE
 7595 0074 00000000 		.word	_ZN6StreamILc68ELb0ELb1ELi300EE4textE
 7596 0078 00000000 		.word	_ZN4xpcc5stm3214BufferedUsart25writeEh
 7597              	.LBE2012:
 7598              	.LBE2011:
 7599              	.LBE2004:
 7600              	.LBE2003:
 7601              		.cfi_endproc
 7602              	.LFE1205:
 7604              		.section	.text._ZN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEE5writeEPKc,"axG",%progbits,_
 7605              		.align	2
 7606              		.weak	_ZN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEE5writeEPKc
 7607              		.thumb
 7608              		.thumb_func
 7610              	_ZN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEE5writeEPKc:
 7611              	.LFB1206:
  89:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		write(const char *s)
 7612              		.loc 5 89 0
 7613              		.cfi_startproc
 7614              		@ args = 0, pretend = 0, frame = 0
 7615              		@ frame_needed = 0, uses_anonymous_args = 0
 7616              	.LVL638:
 7617 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 7618              	.LCFI47:
 7619              		.cfi_def_cfa_offset 24
 7620              		.cfi_offset 4, -24
 7621              		.cfi_offset 5, -20
 7622              		.cfi_offset 6, -16
 7623              		.cfi_offset 7, -12
 7624              		.cfi_offset 8, -8
 7625              		.cfi_offset 14, -4
  89:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		write(const char *s)
 7626              		.loc 5 89 0
 7627 0004 0F46     		mov	r7, r1
 7628              	.LVL639:
 7629              	.L575:
 7630              	.LBB2022:
  92:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 			while ((c = *s++)) {
 7631              		.loc 5 92 0 discriminator 1
 7632 0006 17F8013B 		ldrb	r3, [r7], #1	@ zero_extendqisi2
 7633              	.LVL640:
 7634 000a 7BB1     		cbz	r3, .L576
 7635              	.LVL641:
 7636              	.L570:
 7637              	.LBB2023:
 7638              	.LBB2024:
  89:pcInterface.h **** 		if(pos == TEXT_BUFFER_SIZE-3){
 7639              		.loc 13 89 0
 7640 000c 204C     		ldr	r4, .L579
 7641 000e 2268     		ldr	r2, [r4, #0]
 7642 0010 40F22911 		movw	r1, #297
 7643 0014 8A42     		cmp	r2, r1
 7644 0016 0BD0     		beq	.L577
  96:pcInterface.h **** 		if(c == '\n'){
 7645              		.loc 13 96 0
 7646 0018 0A2B     		cmp	r3, #10
 7647 001a 23D0     		beq	.L578
 101:pcInterface.h **** 		text[pos++] = c;
 7648              		.loc 13 101 0
 7649 001c 1D48     		ldr	r0, .L579+4
 7650 001e 511C     		adds	r1, r2, #1
 7651 0020 8354     		strb	r3, [r0, r2]
 7652 0022 2160     		str	r1, [r4, #0]
 7653              	.LBE2024:
 7654              	.LBE2023:
  92:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 			while ((c = *s++)) {
 7655              		.loc 5 92 0
 7656 0024 17F8013B 		ldrb	r3, [r7], #1	@ zero_extendqisi2
 7657              	.LVL642:
 7658 0028 002B     		cmp	r3, #0
 7659 002a EFD1     		bne	.L570
 7660              	.LVL643:
 7661              	.L576:
 7662              	.LBE2022:
  95:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		}
 7663              		.loc 5 95 0
 7664 002c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 7665              	.LVL644:
 7666              	.L577:
 7667              	.LBB2035:
 7668              	.LBB2034:
 7669              	.LBB2033:
  90:pcInterface.h **** 			text[pos++] = c;
 7670              		.loc 13 90 0
 7671 0030 184D     		ldr	r5, .L579+4
 7672              	.LBB2025:
 7673              	.LBB2026:
 114:pcInterface.h **** 	uart.write(prefix);
 7674              		.loc 13 114 0
 7675 0032 194E     		ldr	r6, .L579+8
 7676              	.LBE2026:
 7677              	.LBE2025:
  90:pcInterface.h **** 			text[pos++] = c;
 7678              		.loc 13 90 0
 7679 0034 85F82931 		strb	r3, [r5, #297]
 7680              	.LBB2029:
 7681              	.LBB2027:
 114:pcInterface.h **** 	uart.write(prefix);
 7682              		.loc 13 114 0
 7683 0038 4420     		movs	r0, #68
 7684              	.LBE2027:
 7685              	.LBE2029:
  90:pcInterface.h **** 			text[pos++] = c;
 7686              		.loc 13 90 0
 7687 003a 4FF49573 		mov	r3, #298
 7688              	.LVL645:
 7689 003e 2360     		str	r3, [r4, #0]
 7690              	.LBB2030:
 7691              	.LBB2028:
 114:pcInterface.h **** 	uart.write(prefix);
 7692              		.loc 13 114 0
 7693 0040 B047     		blx	r6
 7694              	.LVL646:
 118:pcInterface.h **** 	uart.write(',');
 7695              		.loc 13 118 0
 7696 0042 2C20     		movs	r0, #44
 7697 0044 B047     		blx	r6
 7698              	.LVL647:
 121:pcInterface.h **** 	const char* end = &text[pos];
 7699              		.loc 13 121 0
 7700 0046 2368     		ldr	r3, [r4, #0]
 7701 0048 05EB0308 		add	r8, r5, r3
 7702              	.LVL648:
 123:pcInterface.h **** 	while(ptr != end){
 7703              		.loc 13 123 0
 7704 004c A845     		cmp	r8, r5
 7705 004e 04D0     		beq	.L569
 7706              	.LVL649:
 7707              	.L564:
 124:pcInterface.h **** 		uart.write(*ptr);
 7708              		.loc 13 124 0
 7709 0050 15F8010B 		ldrb	r0, [r5], #1	@ zero_extendqisi2
 7710 0054 B047     		blx	r6
 7711              	.LVL650:
 123:pcInterface.h **** 	while(ptr != end){
 7712              		.loc 13 123 0
 7713 0056 A845     		cmp	r8, r5
 7714 0058 FAD1     		bne	.L564
 7715              	.LVL651:
 7716              	.L569:
 7717              	.LBE2028:
 7718              	.LBE2030:
 7719              	.LBB2031:
 7720              	.LBB2032:
 130:pcInterface.h **** 	uart.write('\n');
 7721              		.loc 13 130 0
 7722 005a 0A20     		movs	r0, #10
 7723 005c B047     		blx	r6
 7724              	.LVL652:
 132:pcInterface.h **** 	pos = 0;
 7725              		.loc 13 132 0
 7726 005e 0023     		movs	r3, #0
 7727 0060 2360     		str	r3, [r4, #0]
 7728 0062 D0E7     		b	.L575
 7729              	.LVL653:
 7730              	.L578:
 114:pcInterface.h **** 	uart.write(prefix);
 7731              		.loc 13 114 0
 7732 0064 4420     		movs	r0, #68
 7733 0066 0C4E     		ldr	r6, .L579+8
 121:pcInterface.h **** 	const char* end = &text[pos];
 7734              		.loc 13 121 0
 7735 0068 0A4D     		ldr	r5, .L579+4
 114:pcInterface.h **** 	uart.write(prefix);
 7736              		.loc 13 114 0
 7737 006a B047     		blx	r6
 7738              	.LVL654:
 118:pcInterface.h **** 	uart.write(',');
 7739              		.loc 13 118 0
 7740 006c 2C20     		movs	r0, #44
 7741 006e B047     		blx	r6
 7742              	.LVL655:
 121:pcInterface.h **** 	const char* end = &text[pos];
 7743              		.loc 13 121 0
 7744 0070 2368     		ldr	r3, [r4, #0]
 7745 0072 05EB0308 		add	r8, r5, r3
 7746              	.LVL656:
 123:pcInterface.h **** 	while(ptr != end){
 7747              		.loc 13 123 0
 7748 0076 A845     		cmp	r8, r5
 7749 0078 EFD0     		beq	.L569
 7750              	.LVL657:
 7751              	.L568:
 124:pcInterface.h **** 		uart.write(*ptr);
 7752              		.loc 13 124 0
 7753 007a 15F8010B 		ldrb	r0, [r5], #1	@ zero_extendqisi2
 7754 007e B047     		blx	r6
 7755              	.LVL658:
 123:pcInterface.h **** 	while(ptr != end){
 7756              		.loc 13 123 0
 7757 0080 A845     		cmp	r8, r5
 7758 0082 FAD1     		bne	.L568
 130:pcInterface.h **** 	uart.write('\n');
 7759              		.loc 13 130 0
 7760 0084 0A20     		movs	r0, #10
 7761 0086 B047     		blx	r6
 7762              	.LVL659:
 132:pcInterface.h **** 	pos = 0;
 7763              		.loc 13 132 0
 7764 0088 0023     		movs	r3, #0
 7765 008a 2360     		str	r3, [r4, #0]
 7766 008c BBE7     		b	.L575
 7767              	.L580:
 7768 008e 00BF     		.align	2
 7769              	.L579:
 7770 0090 00000000 		.word	_ZN6StreamILc68ELb0ELb1ELi300EE3posE
 7771 0094 00000000 		.word	_ZN6StreamILc68ELb0ELb1ELi300EE4textE
 7772 0098 00000000 		.word	_ZN4xpcc5stm3214BufferedUsart25writeEh
 7773              	.LBE2032:
 7774              	.LBE2031:
 7775              	.LBE2033:
 7776              	.LBE2034:
 7777              	.LBE2035:
 7778              		.cfi_endproc
 7779              	.LFE1206:
 7781              		.section	.text._ZN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEE5writeEc,"axG",%progbits,_ZN
 7782              		.align	2
 7783              		.weak	_ZN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEE5writeEc
 7784              		.thumb
 7785              		.thumb_func
 7787              	_ZN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEE5writeEc:
 7788              	.LFB1201:
  83:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		write(char c)
 7789              		.loc 5 83 0
 7790              		.cfi_startproc
 7791              		@ args = 0, pretend = 0, frame = 0
 7792              		@ frame_needed = 0, uses_anonymous_args = 0
 7793              	.LVL660:
 7794 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 7795              	.LCFI48:
 7796              		.cfi_def_cfa_offset 24
 7797              		.cfi_offset 3, -24
 7798              		.cfi_offset 4, -20
 7799              		.cfi_offset 5, -16
 7800              		.cfi_offset 6, -12
 7801              		.cfi_offset 7, -8
 7802              		.cfi_offset 14, -4
 7803              	.LBB2044:
 7804              	.LBB2045:
  89:pcInterface.h **** 		if(pos == TEXT_BUFFER_SIZE-3){
 7805              		.loc 13 89 0
 7806 0002 1B4C     		ldr	r4, .L595
 7807 0004 2368     		ldr	r3, [r4, #0]
 7808              	.LVL661:
 7809 0006 40F22912 		movw	r2, #297
 7810 000a 9342     		cmp	r3, r2
 7811 000c 06D0     		beq	.L593
  96:pcInterface.h **** 		if(c == '\n'){
 7812              		.loc 13 96 0
 7813 000e 0A29     		cmp	r1, #10
 7814 0010 1DD0     		beq	.L594
 101:pcInterface.h **** 		text[pos++] = c;
 7815              		.loc 13 101 0
 7816 0012 1848     		ldr	r0, .L595+4
 7817              	.LVL662:
 7818 0014 5A1C     		adds	r2, r3, #1
 7819 0016 C154     		strb	r1, [r0, r3]
 7820 0018 2260     		str	r2, [r4, #0]
 7821 001a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 7822              	.LVL663:
 7823              	.L593:
  90:pcInterface.h **** 			text[pos++] = c;
 7824              		.loc 13 90 0
 7825 001c 154D     		ldr	r5, .L595+4
 7826              	.LBB2046:
 7827              	.LBB2047:
 114:pcInterface.h **** 	uart.write(prefix);
 7828              		.loc 13 114 0
 7829 001e 164E     		ldr	r6, .L595+8
 7830              	.LBE2047:
 7831              	.LBE2046:
  90:pcInterface.h **** 			text[pos++] = c;
 7832              		.loc 13 90 0
 7833 0020 85F82911 		strb	r1, [r5, #297]
 7834              	.LBB2050:
 7835              	.LBB2048:
 114:pcInterface.h **** 	uart.write(prefix);
 7836              		.loc 13 114 0
 7837 0024 4520     		movs	r0, #69
 7838              	.LVL664:
 7839              	.LBE2048:
 7840              	.LBE2050:
  90:pcInterface.h **** 			text[pos++] = c;
 7841              		.loc 13 90 0
 7842 0026 4FF49573 		mov	r3, #298
 7843 002a 2360     		str	r3, [r4, #0]
 7844              	.LBB2051:
 7845              	.LBB2049:
 114:pcInterface.h **** 	uart.write(prefix);
 7846              		.loc 13 114 0
 7847 002c B047     		blx	r6
 7848              	.LVL665:
 118:pcInterface.h **** 	uart.write(',');
 7849              		.loc 13 118 0
 7850 002e 2C20     		movs	r0, #44
 7851 0030 B047     		blx	r6
 7852              	.LVL666:
 121:pcInterface.h **** 	const char* end = &text[pos];
 7853              		.loc 13 121 0
 7854 0032 2768     		ldr	r7, [r4, #0]
 7855 0034 EF19     		adds	r7, r5, r7
 7856              	.LVL667:
 123:pcInterface.h **** 	while(ptr != end){
 7857              		.loc 13 123 0
 7858 0036 AF42     		cmp	r7, r5
 7859 0038 04D0     		beq	.L588
 7860              	.LVL668:
 7861              	.L583:
 124:pcInterface.h **** 		uart.write(*ptr);
 7862              		.loc 13 124 0
 7863 003a 15F8010B 		ldrb	r0, [r5], #1	@ zero_extendqisi2
 7864 003e B047     		blx	r6
 7865              	.LVL669:
 123:pcInterface.h **** 	while(ptr != end){
 7866              		.loc 13 123 0
 7867 0040 AF42     		cmp	r7, r5
 7868 0042 FAD1     		bne	.L583
 7869              	.LVL670:
 7870              	.L588:
 7871              	.LBE2049:
 7872              	.LBE2051:
 7873              	.LBB2052:
 7874              	.LBB2053:
 130:pcInterface.h **** 	uart.write('\n');
 7875              		.loc 13 130 0
 7876 0044 0A20     		movs	r0, #10
 7877 0046 B047     		blx	r6
 7878              	.LVL671:
 132:pcInterface.h **** 	pos = 0;
 7879              		.loc 13 132 0
 7880 0048 0023     		movs	r3, #0
 7881 004a 2360     		str	r3, [r4, #0]
 7882 004c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 7883              	.LVL672:
 7884              	.L594:
 114:pcInterface.h **** 	uart.write(prefix);
 7885              		.loc 13 114 0
 7886 004e 4520     		movs	r0, #69
 7887              	.LVL673:
 7888 0050 094E     		ldr	r6, .L595+8
 121:pcInterface.h **** 	const char* end = &text[pos];
 7889              		.loc 13 121 0
 7890 0052 084D     		ldr	r5, .L595+4
 114:pcInterface.h **** 	uart.write(prefix);
 7891              		.loc 13 114 0
 7892 0054 B047     		blx	r6
 7893              	.LVL674:
 118:pcInterface.h **** 	uart.write(',');
 7894              		.loc 13 118 0
 7895 0056 2C20     		movs	r0, #44
 7896 0058 B047     		blx	r6
 7897              	.LVL675:
 121:pcInterface.h **** 	const char* end = &text[pos];
 7898              		.loc 13 121 0
 7899 005a 2768     		ldr	r7, [r4, #0]
 7900 005c EF19     		adds	r7, r5, r7
 7901              	.LVL676:
 123:pcInterface.h **** 	while(ptr != end){
 7902              		.loc 13 123 0
 7903 005e AF42     		cmp	r7, r5
 7904 0060 F0D0     		beq	.L588
 7905              	.LVL677:
 7906              	.L587:
 124:pcInterface.h **** 		uart.write(*ptr);
 7907              		.loc 13 124 0
 7908 0062 15F8010B 		ldrb	r0, [r5], #1	@ zero_extendqisi2
 7909 0066 B047     		blx	r6
 7910              	.LVL678:
 123:pcInterface.h **** 	while(ptr != end){
 7911              		.loc 13 123 0
 7912 0068 AF42     		cmp	r7, r5
 7913 006a FAD1     		bne	.L587
 7914 006c EAE7     		b	.L588
 7915              	.L596:
 7916 006e 00BF     		.align	2
 7917              	.L595:
 7918 0070 00000000 		.word	_ZN6StreamILc69ELb0ELb1ELi300EE3posE
 7919 0074 00000000 		.word	_ZN6StreamILc69ELb0ELb1ELi300EE4textE
 7920 0078 00000000 		.word	_ZN4xpcc5stm3214BufferedUsart25writeEh
 7921              	.LBE2053:
 7922              	.LBE2052:
 7923              	.LBE2045:
 7924              	.LBE2044:
 7925              		.cfi_endproc
 7926              	.LFE1201:
 7928              		.section	.text._ZN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEE5writeEPKc,"axG",%progbits,_
 7929              		.align	2
 7930              		.weak	_ZN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEE5writeEPKc
 7931              		.thumb
 7932              		.thumb_func
 7934              	_ZN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEE5writeEPKc:
 7935              	.LFB1202:
  89:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		write(const char *s)
 7936              		.loc 5 89 0
 7937              		.cfi_startproc
 7938              		@ args = 0, pretend = 0, frame = 0
 7939              		@ frame_needed = 0, uses_anonymous_args = 0
 7940              	.LVL679:
 7941 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 7942              	.LCFI49:
 7943              		.cfi_def_cfa_offset 24
 7944              		.cfi_offset 4, -24
 7945              		.cfi_offset 5, -20
 7946              		.cfi_offset 6, -16
 7947              		.cfi_offset 7, -12
 7948              		.cfi_offset 8, -8
 7949              		.cfi_offset 14, -4
  89:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		write(const char *s)
 7950              		.loc 5 89 0
 7951 0004 0F46     		mov	r7, r1
 7952              	.LVL680:
 7953              	.L611:
 7954              	.LBB2063:
  92:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 			while ((c = *s++)) {
 7955              		.loc 5 92 0 discriminator 1
 7956 0006 17F8013B 		ldrb	r3, [r7], #1	@ zero_extendqisi2
 7957              	.LVL681:
 7958 000a 7BB1     		cbz	r3, .L612
 7959              	.LVL682:
 7960              	.L606:
 7961              	.LBB2064:
 7962              	.LBB2065:
  89:pcInterface.h **** 		if(pos == TEXT_BUFFER_SIZE-3){
 7963              		.loc 13 89 0
 7964 000c 204C     		ldr	r4, .L615
 7965 000e 2268     		ldr	r2, [r4, #0]
 7966 0010 40F22911 		movw	r1, #297
 7967 0014 8A42     		cmp	r2, r1
 7968 0016 0BD0     		beq	.L613
  96:pcInterface.h **** 		if(c == '\n'){
 7969              		.loc 13 96 0
 7970 0018 0A2B     		cmp	r3, #10
 7971 001a 23D0     		beq	.L614
 101:pcInterface.h **** 		text[pos++] = c;
 7972              		.loc 13 101 0
 7973 001c 1D48     		ldr	r0, .L615+4
 7974 001e 511C     		adds	r1, r2, #1
 7975 0020 8354     		strb	r3, [r0, r2]
 7976 0022 2160     		str	r1, [r4, #0]
 7977              	.LBE2065:
 7978              	.LBE2064:
  92:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 			while ((c = *s++)) {
 7979              		.loc 5 92 0
 7980 0024 17F8013B 		ldrb	r3, [r7], #1	@ zero_extendqisi2
 7981              	.LVL683:
 7982 0028 002B     		cmp	r3, #0
 7983 002a EFD1     		bne	.L606
 7984              	.LVL684:
 7985              	.L612:
 7986              	.LBE2063:
  95:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		}
 7987              		.loc 5 95 0
 7988 002c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 7989              	.LVL685:
 7990              	.L613:
 7991              	.LBB2076:
 7992              	.LBB2075:
 7993              	.LBB2074:
  90:pcInterface.h **** 			text[pos++] = c;
 7994              		.loc 13 90 0
 7995 0030 184D     		ldr	r5, .L615+4
 7996              	.LBB2066:
 7997              	.LBB2067:
 114:pcInterface.h **** 	uart.write(prefix);
 7998              		.loc 13 114 0
 7999 0032 194E     		ldr	r6, .L615+8
 8000              	.LBE2067:
 8001              	.LBE2066:
  90:pcInterface.h **** 			text[pos++] = c;
 8002              		.loc 13 90 0
 8003 0034 85F82931 		strb	r3, [r5, #297]
 8004              	.LBB2070:
 8005              	.LBB2068:
 114:pcInterface.h **** 	uart.write(prefix);
 8006              		.loc 13 114 0
 8007 0038 4520     		movs	r0, #69
 8008              	.LBE2068:
 8009              	.LBE2070:
  90:pcInterface.h **** 			text[pos++] = c;
 8010              		.loc 13 90 0
 8011 003a 4FF49573 		mov	r3, #298
 8012              	.LVL686:
 8013 003e 2360     		str	r3, [r4, #0]
 8014              	.LBB2071:
 8015              	.LBB2069:
 114:pcInterface.h **** 	uart.write(prefix);
 8016              		.loc 13 114 0
 8017 0040 B047     		blx	r6
 8018              	.LVL687:
 118:pcInterface.h **** 	uart.write(',');
 8019              		.loc 13 118 0
 8020 0042 2C20     		movs	r0, #44
 8021 0044 B047     		blx	r6
 8022              	.LVL688:
 121:pcInterface.h **** 	const char* end = &text[pos];
 8023              		.loc 13 121 0
 8024 0046 2368     		ldr	r3, [r4, #0]
 8025 0048 05EB0308 		add	r8, r5, r3
 8026              	.LVL689:
 123:pcInterface.h **** 	while(ptr != end){
 8027              		.loc 13 123 0
 8028 004c A845     		cmp	r8, r5
 8029 004e 04D0     		beq	.L605
 8030              	.LVL690:
 8031              	.L600:
 124:pcInterface.h **** 		uart.write(*ptr);
 8032              		.loc 13 124 0
 8033 0050 15F8010B 		ldrb	r0, [r5], #1	@ zero_extendqisi2
 8034 0054 B047     		blx	r6
 8035              	.LVL691:
 123:pcInterface.h **** 	while(ptr != end){
 8036              		.loc 13 123 0
 8037 0056 A845     		cmp	r8, r5
 8038 0058 FAD1     		bne	.L600
 8039              	.LVL692:
 8040              	.L605:
 8041              	.LBE2069:
 8042              	.LBE2071:
 8043              	.LBB2072:
 8044              	.LBB2073:
 130:pcInterface.h **** 	uart.write('\n');
 8045              		.loc 13 130 0
 8046 005a 0A20     		movs	r0, #10
 8047 005c B047     		blx	r6
 8048              	.LVL693:
 132:pcInterface.h **** 	pos = 0;
 8049              		.loc 13 132 0
 8050 005e 0023     		movs	r3, #0
 8051 0060 2360     		str	r3, [r4, #0]
 8052 0062 D0E7     		b	.L611
 8053              	.LVL694:
 8054              	.L614:
 114:pcInterface.h **** 	uart.write(prefix);
 8055              		.loc 13 114 0
 8056 0064 4520     		movs	r0, #69
 8057 0066 0C4E     		ldr	r6, .L615+8
 121:pcInterface.h **** 	const char* end = &text[pos];
 8058              		.loc 13 121 0
 8059 0068 0A4D     		ldr	r5, .L615+4
 114:pcInterface.h **** 	uart.write(prefix);
 8060              		.loc 13 114 0
 8061 006a B047     		blx	r6
 8062              	.LVL695:
 118:pcInterface.h **** 	uart.write(',');
 8063              		.loc 13 118 0
 8064 006c 2C20     		movs	r0, #44
 8065 006e B047     		blx	r6
 8066              	.LVL696:
 121:pcInterface.h **** 	const char* end = &text[pos];
 8067              		.loc 13 121 0
 8068 0070 2368     		ldr	r3, [r4, #0]
 8069 0072 05EB0308 		add	r8, r5, r3
 8070              	.LVL697:
 123:pcInterface.h **** 	while(ptr != end){
 8071              		.loc 13 123 0
 8072 0076 A845     		cmp	r8, r5
 8073 0078 EFD0     		beq	.L605
 8074              	.LVL698:
 8075              	.L604:
 124:pcInterface.h **** 		uart.write(*ptr);
 8076              		.loc 13 124 0
 8077 007a 15F8010B 		ldrb	r0, [r5], #1	@ zero_extendqisi2
 8078 007e B047     		blx	r6
 8079              	.LVL699:
 123:pcInterface.h **** 	while(ptr != end){
 8080              		.loc 13 123 0
 8081 0080 A845     		cmp	r8, r5
 8082 0082 FAD1     		bne	.L604
 130:pcInterface.h **** 	uart.write('\n');
 8083              		.loc 13 130 0
 8084 0084 0A20     		movs	r0, #10
 8085 0086 B047     		blx	r6
 8086              	.LVL700:
 132:pcInterface.h **** 	pos = 0;
 8087              		.loc 13 132 0
 8088 0088 0023     		movs	r3, #0
 8089 008a 2360     		str	r3, [r4, #0]
 8090 008c BBE7     		b	.L611
 8091              	.L616:
 8092 008e 00BF     		.align	2
 8093              	.L615:
 8094 0090 00000000 		.word	_ZN6StreamILc69ELb0ELb1ELi300EE3posE
 8095 0094 00000000 		.word	_ZN6StreamILc69ELb0ELb1ELi300EE4textE
 8096 0098 00000000 		.word	_ZN4xpcc5stm3214BufferedUsart25writeEh
 8097              	.LBE2073:
 8098              	.LBE2072:
 8099              	.LBE2074:
 8100              	.LBE2075:
 8101              	.LBE2076:
 8102              		.cfi_endproc
 8103              	.LFE1202:
 8105              		.section	.text._ZN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEE5writeEc,"axG",%progbits,_ZN
 8106              		.align	2
 8107              		.weak	_ZN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEE5writeEc
 8108              		.thumb
 8109              		.thumb_func
 8111              	_ZN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEE5writeEc:
 8112              	.LFB1213:
  83:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		write(char c)
 8113              		.loc 5 83 0
 8114              		.cfi_startproc
 8115              		@ args = 0, pretend = 0, frame = 0
 8116              		@ frame_needed = 0, uses_anonymous_args = 0
 8117              	.LVL701:
 8118 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 8119              	.LCFI50:
 8120              		.cfi_def_cfa_offset 24
 8121              		.cfi_offset 3, -24
 8122              		.cfi_offset 4, -20
 8123              		.cfi_offset 5, -16
 8124              		.cfi_offset 6, -12
 8125              		.cfi_offset 7, -8
 8126              		.cfi_offset 14, -4
 8127              	.LBB2085:
 8128              	.LBB2086:
  89:pcInterface.h **** 		if(pos == TEXT_BUFFER_SIZE-3){
 8129              		.loc 13 89 0
 8130 0002 1B4C     		ldr	r4, .L631
 8131 0004 2368     		ldr	r3, [r4, #0]
 8132              	.LVL702:
 8133 0006 40F22912 		movw	r2, #297
 8134 000a 9342     		cmp	r3, r2
 8135 000c 06D0     		beq	.L629
  96:pcInterface.h **** 		if(c == '\n'){
 8136              		.loc 13 96 0
 8137 000e 0A29     		cmp	r1, #10
 8138 0010 1DD0     		beq	.L630
 101:pcInterface.h **** 		text[pos++] = c;
 8139              		.loc 13 101 0
 8140 0012 1848     		ldr	r0, .L631+4
 8141              	.LVL703:
 8142 0014 5A1C     		adds	r2, r3, #1
 8143 0016 C154     		strb	r1, [r0, r3]
 8144 0018 2260     		str	r2, [r4, #0]
 8145 001a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 8146              	.LVL704:
 8147              	.L629:
  90:pcInterface.h **** 			text[pos++] = c;
 8148              		.loc 13 90 0
 8149 001c 154D     		ldr	r5, .L631+4
 8150              	.LBB2087:
 8151              	.LBB2088:
 114:pcInterface.h **** 	uart.write(prefix);
 8152              		.loc 13 114 0
 8153 001e 164E     		ldr	r6, .L631+8
 8154              	.LBE2088:
 8155              	.LBE2087:
  90:pcInterface.h **** 			text[pos++] = c;
 8156              		.loc 13 90 0
 8157 0020 85F82911 		strb	r1, [r5, #297]
 8158              	.LBB2091:
 8159              	.LBB2089:
 114:pcInterface.h **** 	uart.write(prefix);
 8160              		.loc 13 114 0
 8161 0024 5020     		movs	r0, #80
 8162              	.LVL705:
 8163              	.LBE2089:
 8164              	.LBE2091:
  90:pcInterface.h **** 			text[pos++] = c;
 8165              		.loc 13 90 0
 8166 0026 4FF49573 		mov	r3, #298
 8167 002a 2360     		str	r3, [r4, #0]
 8168              	.LBB2092:
 8169              	.LBB2090:
 114:pcInterface.h **** 	uart.write(prefix);
 8170              		.loc 13 114 0
 8171 002c B047     		blx	r6
 8172              	.LVL706:
 118:pcInterface.h **** 	uart.write(',');
 8173              		.loc 13 118 0
 8174 002e 2C20     		movs	r0, #44
 8175 0030 B047     		blx	r6
 8176              	.LVL707:
 121:pcInterface.h **** 	const char* end = &text[pos];
 8177              		.loc 13 121 0
 8178 0032 2768     		ldr	r7, [r4, #0]
 8179 0034 EF19     		adds	r7, r5, r7
 8180              	.LVL708:
 123:pcInterface.h **** 	while(ptr != end){
 8181              		.loc 13 123 0
 8182 0036 AF42     		cmp	r7, r5
 8183 0038 04D0     		beq	.L624
 8184              	.LVL709:
 8185              	.L619:
 124:pcInterface.h **** 		uart.write(*ptr);
 8186              		.loc 13 124 0
 8187 003a 15F8010B 		ldrb	r0, [r5], #1	@ zero_extendqisi2
 8188 003e B047     		blx	r6
 8189              	.LVL710:
 123:pcInterface.h **** 	while(ptr != end){
 8190              		.loc 13 123 0
 8191 0040 AF42     		cmp	r7, r5
 8192 0042 FAD1     		bne	.L619
 8193              	.LVL711:
 8194              	.L624:
 8195              	.LBE2090:
 8196              	.LBE2092:
 8197              	.LBB2093:
 8198              	.LBB2094:
 130:pcInterface.h **** 	uart.write('\n');
 8199              		.loc 13 130 0
 8200 0044 0A20     		movs	r0, #10
 8201 0046 B047     		blx	r6
 8202              	.LVL712:
 132:pcInterface.h **** 	pos = 0;
 8203              		.loc 13 132 0
 8204 0048 0023     		movs	r3, #0
 8205 004a 2360     		str	r3, [r4, #0]
 8206 004c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 8207              	.LVL713:
 8208              	.L630:
 114:pcInterface.h **** 	uart.write(prefix);
 8209              		.loc 13 114 0
 8210 004e 5020     		movs	r0, #80
 8211              	.LVL714:
 8212 0050 094E     		ldr	r6, .L631+8
 121:pcInterface.h **** 	const char* end = &text[pos];
 8213              		.loc 13 121 0
 8214 0052 084D     		ldr	r5, .L631+4
 114:pcInterface.h **** 	uart.write(prefix);
 8215              		.loc 13 114 0
 8216 0054 B047     		blx	r6
 8217              	.LVL715:
 118:pcInterface.h **** 	uart.write(',');
 8218              		.loc 13 118 0
 8219 0056 2C20     		movs	r0, #44
 8220 0058 B047     		blx	r6
 8221              	.LVL716:
 121:pcInterface.h **** 	const char* end = &text[pos];
 8222              		.loc 13 121 0
 8223 005a 2768     		ldr	r7, [r4, #0]
 8224 005c EF19     		adds	r7, r5, r7
 8225              	.LVL717:
 123:pcInterface.h **** 	while(ptr != end){
 8226              		.loc 13 123 0
 8227 005e AF42     		cmp	r7, r5
 8228 0060 F0D0     		beq	.L624
 8229              	.LVL718:
 8230              	.L623:
 124:pcInterface.h **** 		uart.write(*ptr);
 8231              		.loc 13 124 0
 8232 0062 15F8010B 		ldrb	r0, [r5], #1	@ zero_extendqisi2
 8233 0066 B047     		blx	r6
 8234              	.LVL719:
 123:pcInterface.h **** 	while(ptr != end){
 8235              		.loc 13 123 0
 8236 0068 AF42     		cmp	r7, r5
 8237 006a FAD1     		bne	.L623
 8238 006c EAE7     		b	.L624
 8239              	.L632:
 8240 006e 00BF     		.align	2
 8241              	.L631:
 8242 0070 00000000 		.word	_ZN6StreamILc80ELb0ELb1ELi300EE3posE
 8243 0074 00000000 		.word	_ZN6StreamILc80ELb0ELb1ELi300EE4textE
 8244 0078 00000000 		.word	_ZN4xpcc5stm3214BufferedUsart25writeEh
 8245              	.LBE2094:
 8246              	.LBE2093:
 8247              	.LBE2086:
 8248              	.LBE2085:
 8249              		.cfi_endproc
 8250              	.LFE1213:
 8252              		.section	.text._ZN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEE5writeEPKc,"axG",%progbits,_
 8253              		.align	2
 8254              		.weak	_ZN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEE5writeEPKc
 8255              		.thumb
 8256              		.thumb_func
 8258              	_ZN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEE5writeEPKc:
 8259              	.LFB1214:
  89:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		write(const char *s)
 8260              		.loc 5 89 0
 8261              		.cfi_startproc
 8262              		@ args = 0, pretend = 0, frame = 0
 8263              		@ frame_needed = 0, uses_anonymous_args = 0
 8264              	.LVL720:
 8265 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 8266              	.LCFI51:
 8267              		.cfi_def_cfa_offset 24
 8268              		.cfi_offset 4, -24
 8269              		.cfi_offset 5, -20
 8270              		.cfi_offset 6, -16
 8271              		.cfi_offset 7, -12
 8272              		.cfi_offset 8, -8
 8273              		.cfi_offset 14, -4
  89:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		write(const char *s)
 8274              		.loc 5 89 0
 8275 0004 0F46     		mov	r7, r1
 8276              	.LVL721:
 8277              	.L647:
 8278              	.LBB2104:
  92:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 			while ((c = *s++)) {
 8279              		.loc 5 92 0 discriminator 1
 8280 0006 17F8013B 		ldrb	r3, [r7], #1	@ zero_extendqisi2
 8281              	.LVL722:
 8282 000a 7BB1     		cbz	r3, .L648
 8283              	.LVL723:
 8284              	.L642:
 8285              	.LBB2105:
 8286              	.LBB2106:
  89:pcInterface.h **** 		if(pos == TEXT_BUFFER_SIZE-3){
 8287              		.loc 13 89 0
 8288 000c 204C     		ldr	r4, .L651
 8289 000e 2268     		ldr	r2, [r4, #0]
 8290 0010 40F22911 		movw	r1, #297
 8291 0014 8A42     		cmp	r2, r1
 8292 0016 0BD0     		beq	.L649
  96:pcInterface.h **** 		if(c == '\n'){
 8293              		.loc 13 96 0
 8294 0018 0A2B     		cmp	r3, #10
 8295 001a 23D0     		beq	.L650
 101:pcInterface.h **** 		text[pos++] = c;
 8296              		.loc 13 101 0
 8297 001c 1D48     		ldr	r0, .L651+4
 8298 001e 511C     		adds	r1, r2, #1
 8299 0020 8354     		strb	r3, [r0, r2]
 8300 0022 2160     		str	r1, [r4, #0]
 8301              	.LBE2106:
 8302              	.LBE2105:
  92:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 			while ((c = *s++)) {
 8303              		.loc 5 92 0
 8304 0024 17F8013B 		ldrb	r3, [r7], #1	@ zero_extendqisi2
 8305              	.LVL724:
 8306 0028 002B     		cmp	r3, #0
 8307 002a EFD1     		bne	.L642
 8308              	.LVL725:
 8309              	.L648:
 8310              	.LBE2104:
  95:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		}
 8311              		.loc 5 95 0
 8312 002c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 8313              	.LVL726:
 8314              	.L649:
 8315              	.LBB2117:
 8316              	.LBB2116:
 8317              	.LBB2115:
  90:pcInterface.h **** 			text[pos++] = c;
 8318              		.loc 13 90 0
 8319 0030 184D     		ldr	r5, .L651+4
 8320              	.LBB2107:
 8321              	.LBB2108:
 114:pcInterface.h **** 	uart.write(prefix);
 8322              		.loc 13 114 0
 8323 0032 194E     		ldr	r6, .L651+8
 8324              	.LBE2108:
 8325              	.LBE2107:
  90:pcInterface.h **** 			text[pos++] = c;
 8326              		.loc 13 90 0
 8327 0034 85F82931 		strb	r3, [r5, #297]
 8328              	.LBB2111:
 8329              	.LBB2109:
 114:pcInterface.h **** 	uart.write(prefix);
 8330              		.loc 13 114 0
 8331 0038 5020     		movs	r0, #80
 8332              	.LBE2109:
 8333              	.LBE2111:
  90:pcInterface.h **** 			text[pos++] = c;
 8334              		.loc 13 90 0
 8335 003a 4FF49573 		mov	r3, #298
 8336              	.LVL727:
 8337 003e 2360     		str	r3, [r4, #0]
 8338              	.LBB2112:
 8339              	.LBB2110:
 114:pcInterface.h **** 	uart.write(prefix);
 8340              		.loc 13 114 0
 8341 0040 B047     		blx	r6
 8342              	.LVL728:
 118:pcInterface.h **** 	uart.write(',');
 8343              		.loc 13 118 0
 8344 0042 2C20     		movs	r0, #44
 8345 0044 B047     		blx	r6
 8346              	.LVL729:
 121:pcInterface.h **** 	const char* end = &text[pos];
 8347              		.loc 13 121 0
 8348 0046 2368     		ldr	r3, [r4, #0]
 8349 0048 05EB0308 		add	r8, r5, r3
 8350              	.LVL730:
 123:pcInterface.h **** 	while(ptr != end){
 8351              		.loc 13 123 0
 8352 004c A845     		cmp	r8, r5
 8353 004e 04D0     		beq	.L641
 8354              	.LVL731:
 8355              	.L636:
 124:pcInterface.h **** 		uart.write(*ptr);
 8356              		.loc 13 124 0
 8357 0050 15F8010B 		ldrb	r0, [r5], #1	@ zero_extendqisi2
 8358 0054 B047     		blx	r6
 8359              	.LVL732:
 123:pcInterface.h **** 	while(ptr != end){
 8360              		.loc 13 123 0
 8361 0056 A845     		cmp	r8, r5
 8362 0058 FAD1     		bne	.L636
 8363              	.LVL733:
 8364              	.L641:
 8365              	.LBE2110:
 8366              	.LBE2112:
 8367              	.LBB2113:
 8368              	.LBB2114:
 130:pcInterface.h **** 	uart.write('\n');
 8369              		.loc 13 130 0
 8370 005a 0A20     		movs	r0, #10
 8371 005c B047     		blx	r6
 8372              	.LVL734:
 132:pcInterface.h **** 	pos = 0;
 8373              		.loc 13 132 0
 8374 005e 0023     		movs	r3, #0
 8375 0060 2360     		str	r3, [r4, #0]
 8376 0062 D0E7     		b	.L647
 8377              	.LVL735:
 8378              	.L650:
 114:pcInterface.h **** 	uart.write(prefix);
 8379              		.loc 13 114 0
 8380 0064 5020     		movs	r0, #80
 8381 0066 0C4E     		ldr	r6, .L651+8
 121:pcInterface.h **** 	const char* end = &text[pos];
 8382              		.loc 13 121 0
 8383 0068 0A4D     		ldr	r5, .L651+4
 114:pcInterface.h **** 	uart.write(prefix);
 8384              		.loc 13 114 0
 8385 006a B047     		blx	r6
 8386              	.LVL736:
 118:pcInterface.h **** 	uart.write(',');
 8387              		.loc 13 118 0
 8388 006c 2C20     		movs	r0, #44
 8389 006e B047     		blx	r6
 8390              	.LVL737:
 121:pcInterface.h **** 	const char* end = &text[pos];
 8391              		.loc 13 121 0
 8392 0070 2368     		ldr	r3, [r4, #0]
 8393 0072 05EB0308 		add	r8, r5, r3
 8394              	.LVL738:
 123:pcInterface.h **** 	while(ptr != end){
 8395              		.loc 13 123 0
 8396 0076 A845     		cmp	r8, r5
 8397 0078 EFD0     		beq	.L641
 8398              	.LVL739:
 8399              	.L640:
 124:pcInterface.h **** 		uart.write(*ptr);
 8400              		.loc 13 124 0
 8401 007a 15F8010B 		ldrb	r0, [r5], #1	@ zero_extendqisi2
 8402 007e B047     		blx	r6
 8403              	.LVL740:
 123:pcInterface.h **** 	while(ptr != end){
 8404              		.loc 13 123 0
 8405 0080 A845     		cmp	r8, r5
 8406 0082 FAD1     		bne	.L640
 130:pcInterface.h **** 	uart.write('\n');
 8407              		.loc 13 130 0
 8408 0084 0A20     		movs	r0, #10
 8409 0086 B047     		blx	r6
 8410              	.LVL741:
 132:pcInterface.h **** 	pos = 0;
 8411              		.loc 13 132 0
 8412 0088 0023     		movs	r3, #0
 8413 008a 2360     		str	r3, [r4, #0]
 8414 008c BBE7     		b	.L647
 8415              	.L652:
 8416 008e 00BF     		.align	2
 8417              	.L651:
 8418 0090 00000000 		.word	_ZN6StreamILc80ELb0ELb1ELi300EE3posE
 8419 0094 00000000 		.word	_ZN6StreamILc80ELb0ELb1ELi300EE4textE
 8420 0098 00000000 		.word	_ZN4xpcc5stm3214BufferedUsart25writeEh
 8421              	.LBE2114:
 8422              	.LBE2113:
 8423              	.LBE2115:
 8424              	.LBE2116:
 8425              	.LBE2117:
 8426              		.cfi_endproc
 8427              	.LFE1214:
 8429              		.section	.text._ZN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEE5writeEc,"axG",%progbits,_ZN
 8430              		.align	2
 8431              		.weak	_ZN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEE5writeEc
 8432              		.thumb
 8433              		.thumb_func
 8435              	_ZN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEE5writeEc:
 8436              	.LFB1193:
  83:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		write(char c)
 8437              		.loc 5 83 0
 8438              		.cfi_startproc
 8439              		@ args = 0, pretend = 0, frame = 0
 8440              		@ frame_needed = 0, uses_anonymous_args = 0
 8441              	.LVL742:
 8442 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 8443              	.LCFI52:
 8444              		.cfi_def_cfa_offset 24
 8445              		.cfi_offset 3, -24
 8446              		.cfi_offset 4, -20
 8447              		.cfi_offset 5, -16
 8448              		.cfi_offset 6, -12
 8449              		.cfi_offset 7, -8
 8450              		.cfi_offset 14, -4
 8451              	.LBB2126:
 8452              	.LBB2127:
  89:pcInterface.h **** 		if(pos == TEXT_BUFFER_SIZE-3){
 8453              		.loc 13 89 0
 8454 0002 1B4C     		ldr	r4, .L667
 8455 0004 2368     		ldr	r3, [r4, #0]
 8456              	.LVL743:
 8457 0006 40F22912 		movw	r2, #297
 8458 000a 9342     		cmp	r3, r2
 8459 000c 06D0     		beq	.L665
  96:pcInterface.h **** 		if(c == '\n'){
 8460              		.loc 13 96 0
 8461 000e 0A29     		cmp	r1, #10
 8462 0010 1DD0     		beq	.L666
 101:pcInterface.h **** 		text[pos++] = c;
 8463              		.loc 13 101 0
 8464 0012 1848     		ldr	r0, .L667+4
 8465              	.LVL744:
 8466 0014 5A1C     		adds	r2, r3, #1
 8467 0016 C154     		strb	r1, [r0, r3]
 8468 0018 2260     		str	r2, [r4, #0]
 8469 001a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 8470              	.LVL745:
 8471              	.L665:
  90:pcInterface.h **** 			text[pos++] = c;
 8472              		.loc 13 90 0
 8473 001c 154D     		ldr	r5, .L667+4
 8474              	.LBB2128:
 8475              	.LBB2129:
 114:pcInterface.h **** 	uart.write(prefix);
 8476              		.loc 13 114 0
 8477 001e 164E     		ldr	r6, .L667+8
 8478              	.LBE2129:
 8479              	.LBE2128:
  90:pcInterface.h **** 			text[pos++] = c;
 8480              		.loc 13 90 0
 8481 0020 85F82911 		strb	r1, [r5, #297]
 8482              	.LBB2132:
 8483              	.LBB2130:
 114:pcInterface.h **** 	uart.write(prefix);
 8484              		.loc 13 114 0
 8485 0024 4320     		movs	r0, #67
 8486              	.LVL746:
 8487              	.LBE2130:
 8488              	.LBE2132:
  90:pcInterface.h **** 			text[pos++] = c;
 8489              		.loc 13 90 0
 8490 0026 4FF49573 		mov	r3, #298
 8491 002a 2360     		str	r3, [r4, #0]
 8492              	.LBB2133:
 8493              	.LBB2131:
 114:pcInterface.h **** 	uart.write(prefix);
 8494              		.loc 13 114 0
 8495 002c B047     		blx	r6
 8496              	.LVL747:
 118:pcInterface.h **** 	uart.write(',');
 8497              		.loc 13 118 0
 8498 002e 2C20     		movs	r0, #44
 8499 0030 B047     		blx	r6
 8500              	.LVL748:
 121:pcInterface.h **** 	const char* end = &text[pos];
 8501              		.loc 13 121 0
 8502 0032 2768     		ldr	r7, [r4, #0]
 8503 0034 EF19     		adds	r7, r5, r7
 8504              	.LVL749:
 123:pcInterface.h **** 	while(ptr != end){
 8505              		.loc 13 123 0
 8506 0036 AF42     		cmp	r7, r5
 8507 0038 04D0     		beq	.L660
 8508              	.LVL750:
 8509              	.L655:
 124:pcInterface.h **** 		uart.write(*ptr);
 8510              		.loc 13 124 0
 8511 003a 15F8010B 		ldrb	r0, [r5], #1	@ zero_extendqisi2
 8512 003e B047     		blx	r6
 8513              	.LVL751:
 123:pcInterface.h **** 	while(ptr != end){
 8514              		.loc 13 123 0
 8515 0040 AF42     		cmp	r7, r5
 8516 0042 FAD1     		bne	.L655
 8517              	.LVL752:
 8518              	.L660:
 8519              	.LBE2131:
 8520              	.LBE2133:
 8521              	.LBB2134:
 8522              	.LBB2135:
 130:pcInterface.h **** 	uart.write('\n');
 8523              		.loc 13 130 0
 8524 0044 0A20     		movs	r0, #10
 8525 0046 B047     		blx	r6
 8526              	.LVL753:
 132:pcInterface.h **** 	pos = 0;
 8527              		.loc 13 132 0
 8528 0048 0023     		movs	r3, #0
 8529 004a 2360     		str	r3, [r4, #0]
 8530 004c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 8531              	.LVL754:
 8532              	.L666:
 114:pcInterface.h **** 	uart.write(prefix);
 8533              		.loc 13 114 0
 8534 004e 4320     		movs	r0, #67
 8535              	.LVL755:
 8536 0050 094E     		ldr	r6, .L667+8
 121:pcInterface.h **** 	const char* end = &text[pos];
 8537              		.loc 13 121 0
 8538 0052 084D     		ldr	r5, .L667+4
 114:pcInterface.h **** 	uart.write(prefix);
 8539              		.loc 13 114 0
 8540 0054 B047     		blx	r6
 8541              	.LVL756:
 118:pcInterface.h **** 	uart.write(',');
 8542              		.loc 13 118 0
 8543 0056 2C20     		movs	r0, #44
 8544 0058 B047     		blx	r6
 8545              	.LVL757:
 121:pcInterface.h **** 	const char* end = &text[pos];
 8546              		.loc 13 121 0
 8547 005a 2768     		ldr	r7, [r4, #0]
 8548 005c EF19     		adds	r7, r5, r7
 8549              	.LVL758:
 123:pcInterface.h **** 	while(ptr != end){
 8550              		.loc 13 123 0
 8551 005e AF42     		cmp	r7, r5
 8552 0060 F0D0     		beq	.L660
 8553              	.LVL759:
 8554              	.L659:
 124:pcInterface.h **** 		uart.write(*ptr);
 8555              		.loc 13 124 0
 8556 0062 15F8010B 		ldrb	r0, [r5], #1	@ zero_extendqisi2
 8557 0066 B047     		blx	r6
 8558              	.LVL760:
 123:pcInterface.h **** 	while(ptr != end){
 8559              		.loc 13 123 0
 8560 0068 AF42     		cmp	r7, r5
 8561 006a FAD1     		bne	.L659
 8562 006c EAE7     		b	.L660
 8563              	.L668:
 8564 006e 00BF     		.align	2
 8565              	.L667:
 8566 0070 00000000 		.word	_ZN6StreamILc67ELb0ELb1ELi300EE3posE
 8567 0074 00000000 		.word	_ZN6StreamILc67ELb0ELb1ELi300EE4textE
 8568 0078 00000000 		.word	_ZN4xpcc5stm3214BufferedUsart25writeEh
 8569              	.LBE2135:
 8570              	.LBE2134:
 8571              	.LBE2127:
 8572              	.LBE2126:
 8573              		.cfi_endproc
 8574              	.LFE1193:
 8576              		.section	.text._ZN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEE5writeEPKc,"axG",%progbits,_
 8577              		.align	2
 8578              		.weak	_ZN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEE5writeEPKc
 8579              		.thumb
 8580              		.thumb_func
 8582              	_ZN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEE5writeEPKc:
 8583              	.LFB1194:
  89:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		write(const char *s)
 8584              		.loc 5 89 0
 8585              		.cfi_startproc
 8586              		@ args = 0, pretend = 0, frame = 0
 8587              		@ frame_needed = 0, uses_anonymous_args = 0
 8588              	.LVL761:
 8589 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 8590              	.LCFI53:
 8591              		.cfi_def_cfa_offset 24
 8592              		.cfi_offset 4, -24
 8593              		.cfi_offset 5, -20
 8594              		.cfi_offset 6, -16
 8595              		.cfi_offset 7, -12
 8596              		.cfi_offset 8, -8
 8597              		.cfi_offset 14, -4
  89:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		write(const char *s)
 8598              		.loc 5 89 0
 8599 0004 0F46     		mov	r7, r1
 8600              	.LVL762:
 8601              	.L683:
 8602              	.LBB2145:
  92:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 			while ((c = *s++)) {
 8603              		.loc 5 92 0 discriminator 1
 8604 0006 17F8013B 		ldrb	r3, [r7], #1	@ zero_extendqisi2
 8605              	.LVL763:
 8606 000a 7BB1     		cbz	r3, .L684
 8607              	.LVL764:
 8608              	.L678:
 8609              	.LBB2146:
 8610              	.LBB2147:
  89:pcInterface.h **** 		if(pos == TEXT_BUFFER_SIZE-3){
 8611              		.loc 13 89 0
 8612 000c 204C     		ldr	r4, .L687
 8613 000e 2268     		ldr	r2, [r4, #0]
 8614 0010 40F22911 		movw	r1, #297
 8615 0014 8A42     		cmp	r2, r1
 8616 0016 0BD0     		beq	.L685
  96:pcInterface.h **** 		if(c == '\n'){
 8617              		.loc 13 96 0
 8618 0018 0A2B     		cmp	r3, #10
 8619 001a 23D0     		beq	.L686
 101:pcInterface.h **** 		text[pos++] = c;
 8620              		.loc 13 101 0
 8621 001c 1D48     		ldr	r0, .L687+4
 8622 001e 511C     		adds	r1, r2, #1
 8623 0020 8354     		strb	r3, [r0, r2]
 8624 0022 2160     		str	r1, [r4, #0]
 8625              	.LBE2147:
 8626              	.LBE2146:
  92:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 			while ((c = *s++)) {
 8627              		.loc 5 92 0
 8628 0024 17F8013B 		ldrb	r3, [r7], #1	@ zero_extendqisi2
 8629              	.LVL765:
 8630 0028 002B     		cmp	r3, #0
 8631 002a EFD1     		bne	.L678
 8632              	.LVL766:
 8633              	.L684:
 8634              	.LBE2145:
  95:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		}
 8635              		.loc 5 95 0
 8636 002c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 8637              	.LVL767:
 8638              	.L685:
 8639              	.LBB2158:
 8640              	.LBB2157:
 8641              	.LBB2156:
  90:pcInterface.h **** 			text[pos++] = c;
 8642              		.loc 13 90 0
 8643 0030 184D     		ldr	r5, .L687+4
 8644              	.LBB2148:
 8645              	.LBB2149:
 114:pcInterface.h **** 	uart.write(prefix);
 8646              		.loc 13 114 0
 8647 0032 194E     		ldr	r6, .L687+8
 8648              	.LBE2149:
 8649              	.LBE2148:
  90:pcInterface.h **** 			text[pos++] = c;
 8650              		.loc 13 90 0
 8651 0034 85F82931 		strb	r3, [r5, #297]
 8652              	.LBB2152:
 8653              	.LBB2150:
 114:pcInterface.h **** 	uart.write(prefix);
 8654              		.loc 13 114 0
 8655 0038 4320     		movs	r0, #67
 8656              	.LBE2150:
 8657              	.LBE2152:
  90:pcInterface.h **** 			text[pos++] = c;
 8658              		.loc 13 90 0
 8659 003a 4FF49573 		mov	r3, #298
 8660              	.LVL768:
 8661 003e 2360     		str	r3, [r4, #0]
 8662              	.LBB2153:
 8663              	.LBB2151:
 114:pcInterface.h **** 	uart.write(prefix);
 8664              		.loc 13 114 0
 8665 0040 B047     		blx	r6
 8666              	.LVL769:
 118:pcInterface.h **** 	uart.write(',');
 8667              		.loc 13 118 0
 8668 0042 2C20     		movs	r0, #44
 8669 0044 B047     		blx	r6
 8670              	.LVL770:
 121:pcInterface.h **** 	const char* end = &text[pos];
 8671              		.loc 13 121 0
 8672 0046 2368     		ldr	r3, [r4, #0]
 8673 0048 05EB0308 		add	r8, r5, r3
 8674              	.LVL771:
 123:pcInterface.h **** 	while(ptr != end){
 8675              		.loc 13 123 0
 8676 004c A845     		cmp	r8, r5
 8677 004e 04D0     		beq	.L677
 8678              	.LVL772:
 8679              	.L672:
 124:pcInterface.h **** 		uart.write(*ptr);
 8680              		.loc 13 124 0
 8681 0050 15F8010B 		ldrb	r0, [r5], #1	@ zero_extendqisi2
 8682 0054 B047     		blx	r6
 8683              	.LVL773:
 123:pcInterface.h **** 	while(ptr != end){
 8684              		.loc 13 123 0
 8685 0056 A845     		cmp	r8, r5
 8686 0058 FAD1     		bne	.L672
 8687              	.LVL774:
 8688              	.L677:
 8689              	.LBE2151:
 8690              	.LBE2153:
 8691              	.LBB2154:
 8692              	.LBB2155:
 130:pcInterface.h **** 	uart.write('\n');
 8693              		.loc 13 130 0
 8694 005a 0A20     		movs	r0, #10
 8695 005c B047     		blx	r6
 8696              	.LVL775:
 132:pcInterface.h **** 	pos = 0;
 8697              		.loc 13 132 0
 8698 005e 0023     		movs	r3, #0
 8699 0060 2360     		str	r3, [r4, #0]
 8700 0062 D0E7     		b	.L683
 8701              	.LVL776:
 8702              	.L686:
 114:pcInterface.h **** 	uart.write(prefix);
 8703              		.loc 13 114 0
 8704 0064 4320     		movs	r0, #67
 8705 0066 0C4E     		ldr	r6, .L687+8
 121:pcInterface.h **** 	const char* end = &text[pos];
 8706              		.loc 13 121 0
 8707 0068 0A4D     		ldr	r5, .L687+4
 114:pcInterface.h **** 	uart.write(prefix);
 8708              		.loc 13 114 0
 8709 006a B047     		blx	r6
 8710              	.LVL777:
 118:pcInterface.h **** 	uart.write(',');
 8711              		.loc 13 118 0
 8712 006c 2C20     		movs	r0, #44
 8713 006e B047     		blx	r6
 8714              	.LVL778:
 121:pcInterface.h **** 	const char* end = &text[pos];
 8715              		.loc 13 121 0
 8716 0070 2368     		ldr	r3, [r4, #0]
 8717 0072 05EB0308 		add	r8, r5, r3
 8718              	.LVL779:
 123:pcInterface.h **** 	while(ptr != end){
 8719              		.loc 13 123 0
 8720 0076 A845     		cmp	r8, r5
 8721 0078 EFD0     		beq	.L677
 8722              	.LVL780:
 8723              	.L676:
 124:pcInterface.h **** 		uart.write(*ptr);
 8724              		.loc 13 124 0
 8725 007a 15F8010B 		ldrb	r0, [r5], #1	@ zero_extendqisi2
 8726 007e B047     		blx	r6
 8727              	.LVL781:
 123:pcInterface.h **** 	while(ptr != end){
 8728              		.loc 13 123 0
 8729 0080 A845     		cmp	r8, r5
 8730 0082 FAD1     		bne	.L676
 130:pcInterface.h **** 	uart.write('\n');
 8731              		.loc 13 130 0
 8732 0084 0A20     		movs	r0, #10
 8733 0086 B047     		blx	r6
 8734              	.LVL782:
 132:pcInterface.h **** 	pos = 0;
 8735              		.loc 13 132 0
 8736 0088 0023     		movs	r3, #0
 8737 008a 2360     		str	r3, [r4, #0]
 8738 008c BBE7     		b	.L683
 8739              	.L688:
 8740 008e 00BF     		.align	2
 8741              	.L687:
 8742 0090 00000000 		.word	_ZN6StreamILc67ELb0ELb1ELi300EE3posE
 8743 0094 00000000 		.word	_ZN6StreamILc67ELb0ELb1ELi300EE4textE
 8744 0098 00000000 		.word	_ZN4xpcc5stm3214BufferedUsart25writeEh
 8745              	.LBE2155:
 8746              	.LBE2154:
 8747              	.LBE2156:
 8748              	.LBE2157:
 8749              	.LBE2158:
 8750              		.cfi_endproc
 8751              	.LFE1194:
 8753              		.section	.text._ZN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEE5writeEc,"axG",%progbits,_ZN
 8754              		.align	2
 8755              		.weak	_ZN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEE5writeEc
 8756              		.thumb
 8757              		.thumb_func
 8759              	_ZN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEE5writeEc:
 8760              	.LFB1197:
  83:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		write(char c)
 8761              		.loc 5 83 0
 8762              		.cfi_startproc
 8763              		@ args = 0, pretend = 0, frame = 0
 8764              		@ frame_needed = 0, uses_anonymous_args = 0
 8765              	.LVL783:
 8766 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 8767              	.LCFI54:
 8768              		.cfi_def_cfa_offset 24
 8769              		.cfi_offset 3, -24
 8770              		.cfi_offset 4, -20
 8771              		.cfi_offset 5, -16
 8772              		.cfi_offset 6, -12
 8773              		.cfi_offset 7, -8
 8774              		.cfi_offset 14, -4
 8775              	.LBB2167:
 8776              	.LBB2168:
  89:pcInterface.h **** 		if(pos == TEXT_BUFFER_SIZE-3){
 8777              		.loc 13 89 0
 8778 0002 1B4C     		ldr	r4, .L703
 8779 0004 2368     		ldr	r3, [r4, #0]
 8780              	.LVL784:
 8781 0006 40F22912 		movw	r2, #297
 8782 000a 9342     		cmp	r3, r2
 8783 000c 06D0     		beq	.L701
  96:pcInterface.h **** 		if(c == '\n'){
 8784              		.loc 13 96 0
 8785 000e 0A29     		cmp	r1, #10
 8786 0010 1DD0     		beq	.L702
 101:pcInterface.h **** 		text[pos++] = c;
 8787              		.loc 13 101 0
 8788 0012 1848     		ldr	r0, .L703+4
 8789              	.LVL785:
 8790 0014 5A1C     		adds	r2, r3, #1
 8791 0016 C154     		strb	r1, [r0, r3]
 8792 0018 2260     		str	r2, [r4, #0]
 8793 001a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 8794              	.LVL786:
 8795              	.L701:
  90:pcInterface.h **** 			text[pos++] = c;
 8796              		.loc 13 90 0
 8797 001c 154D     		ldr	r5, .L703+4
 8798              	.LBB2169:
 8799              	.LBB2170:
 114:pcInterface.h **** 	uart.write(prefix);
 8800              		.loc 13 114 0
 8801 001e 164E     		ldr	r6, .L703+8
 8802              	.LBE2170:
 8803              	.LBE2169:
  90:pcInterface.h **** 			text[pos++] = c;
 8804              		.loc 13 90 0
 8805 0020 85F82911 		strb	r1, [r5, #297]
 8806              	.LBB2173:
 8807              	.LBB2171:
 114:pcInterface.h **** 	uart.write(prefix);
 8808              		.loc 13 114 0
 8809 0024 4920     		movs	r0, #73
 8810              	.LVL787:
 8811              	.LBE2171:
 8812              	.LBE2173:
  90:pcInterface.h **** 			text[pos++] = c;
 8813              		.loc 13 90 0
 8814 0026 4FF49573 		mov	r3, #298
 8815 002a 2360     		str	r3, [r4, #0]
 8816              	.LBB2174:
 8817              	.LBB2172:
 114:pcInterface.h **** 	uart.write(prefix);
 8818              		.loc 13 114 0
 8819 002c B047     		blx	r6
 8820              	.LVL788:
 118:pcInterface.h **** 	uart.write(',');
 8821              		.loc 13 118 0
 8822 002e 2C20     		movs	r0, #44
 8823 0030 B047     		blx	r6
 8824              	.LVL789:
 121:pcInterface.h **** 	const char* end = &text[pos];
 8825              		.loc 13 121 0
 8826 0032 2768     		ldr	r7, [r4, #0]
 8827 0034 EF19     		adds	r7, r5, r7
 8828              	.LVL790:
 123:pcInterface.h **** 	while(ptr != end){
 8829              		.loc 13 123 0
 8830 0036 AF42     		cmp	r7, r5
 8831 0038 04D0     		beq	.L696
 8832              	.LVL791:
 8833              	.L691:
 124:pcInterface.h **** 		uart.write(*ptr);
 8834              		.loc 13 124 0
 8835 003a 15F8010B 		ldrb	r0, [r5], #1	@ zero_extendqisi2
 8836 003e B047     		blx	r6
 8837              	.LVL792:
 123:pcInterface.h **** 	while(ptr != end){
 8838              		.loc 13 123 0
 8839 0040 AF42     		cmp	r7, r5
 8840 0042 FAD1     		bne	.L691
 8841              	.LVL793:
 8842              	.L696:
 8843              	.LBE2172:
 8844              	.LBE2174:
 8845              	.LBB2175:
 8846              	.LBB2176:
 130:pcInterface.h **** 	uart.write('\n');
 8847              		.loc 13 130 0
 8848 0044 0A20     		movs	r0, #10
 8849 0046 B047     		blx	r6
 8850              	.LVL794:
 132:pcInterface.h **** 	pos = 0;
 8851              		.loc 13 132 0
 8852 0048 0023     		movs	r3, #0
 8853 004a 2360     		str	r3, [r4, #0]
 8854 004c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 8855              	.LVL795:
 8856              	.L702:
 114:pcInterface.h **** 	uart.write(prefix);
 8857              		.loc 13 114 0
 8858 004e 4920     		movs	r0, #73
 8859              	.LVL796:
 8860 0050 094E     		ldr	r6, .L703+8
 121:pcInterface.h **** 	const char* end = &text[pos];
 8861              		.loc 13 121 0
 8862 0052 084D     		ldr	r5, .L703+4
 114:pcInterface.h **** 	uart.write(prefix);
 8863              		.loc 13 114 0
 8864 0054 B047     		blx	r6
 8865              	.LVL797:
 118:pcInterface.h **** 	uart.write(',');
 8866              		.loc 13 118 0
 8867 0056 2C20     		movs	r0, #44
 8868 0058 B047     		blx	r6
 8869              	.LVL798:
 121:pcInterface.h **** 	const char* end = &text[pos];
 8870              		.loc 13 121 0
 8871 005a 2768     		ldr	r7, [r4, #0]
 8872 005c EF19     		adds	r7, r5, r7
 8873              	.LVL799:
 123:pcInterface.h **** 	while(ptr != end){
 8874              		.loc 13 123 0
 8875 005e AF42     		cmp	r7, r5
 8876 0060 F0D0     		beq	.L696
 8877              	.LVL800:
 8878              	.L695:
 124:pcInterface.h **** 		uart.write(*ptr);
 8879              		.loc 13 124 0
 8880 0062 15F8010B 		ldrb	r0, [r5], #1	@ zero_extendqisi2
 8881 0066 B047     		blx	r6
 8882              	.LVL801:
 123:pcInterface.h **** 	while(ptr != end){
 8883              		.loc 13 123 0
 8884 0068 AF42     		cmp	r7, r5
 8885 006a FAD1     		bne	.L695
 8886 006c EAE7     		b	.L696
 8887              	.L704:
 8888 006e 00BF     		.align	2
 8889              	.L703:
 8890 0070 00000000 		.word	_ZN6StreamILc73ELb0ELb1ELi300EE3posE
 8891 0074 00000000 		.word	_ZN6StreamILc73ELb0ELb1ELi300EE4textE
 8892 0078 00000000 		.word	_ZN4xpcc5stm3214BufferedUsart25writeEh
 8893              	.LBE2176:
 8894              	.LBE2175:
 8895              	.LBE2168:
 8896              	.LBE2167:
 8897              		.cfi_endproc
 8898              	.LFE1197:
 8900              		.section	.text._ZN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEE5writeEPKc,"axG",%progbits,_
 8901              		.align	2
 8902              		.weak	_ZN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEE5writeEPKc
 8903              		.thumb
 8904              		.thumb_func
 8906              	_ZN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEE5writeEPKc:
 8907              	.LFB1198:
  89:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		write(const char *s)
 8908              		.loc 5 89 0
 8909              		.cfi_startproc
 8910              		@ args = 0, pretend = 0, frame = 0
 8911              		@ frame_needed = 0, uses_anonymous_args = 0
 8912              	.LVL802:
 8913 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 8914              	.LCFI55:
 8915              		.cfi_def_cfa_offset 24
 8916              		.cfi_offset 4, -24
 8917              		.cfi_offset 5, -20
 8918              		.cfi_offset 6, -16
 8919              		.cfi_offset 7, -12
 8920              		.cfi_offset 8, -8
 8921              		.cfi_offset 14, -4
  89:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		write(const char *s)
 8922              		.loc 5 89 0
 8923 0004 0F46     		mov	r7, r1
 8924              	.LVL803:
 8925              	.L719:
 8926              	.LBB2186:
  92:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 			while ((c = *s++)) {
 8927              		.loc 5 92 0 discriminator 1
 8928 0006 17F8013B 		ldrb	r3, [r7], #1	@ zero_extendqisi2
 8929              	.LVL804:
 8930 000a 7BB1     		cbz	r3, .L720
 8931              	.LVL805:
 8932              	.L714:
 8933              	.LBB2187:
 8934              	.LBB2188:
  89:pcInterface.h **** 		if(pos == TEXT_BUFFER_SIZE-3){
 8935              		.loc 13 89 0
 8936 000c 204C     		ldr	r4, .L723
 8937 000e 2268     		ldr	r2, [r4, #0]
 8938 0010 40F22911 		movw	r1, #297
 8939 0014 8A42     		cmp	r2, r1
 8940 0016 0BD0     		beq	.L721
  96:pcInterface.h **** 		if(c == '\n'){
 8941              		.loc 13 96 0
 8942 0018 0A2B     		cmp	r3, #10
 8943 001a 23D0     		beq	.L722
 101:pcInterface.h **** 		text[pos++] = c;
 8944              		.loc 13 101 0
 8945 001c 1D48     		ldr	r0, .L723+4
 8946 001e 511C     		adds	r1, r2, #1
 8947 0020 8354     		strb	r3, [r0, r2]
 8948 0022 2160     		str	r1, [r4, #0]
 8949              	.LBE2188:
 8950              	.LBE2187:
  92:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 			while ((c = *s++)) {
 8951              		.loc 5 92 0
 8952 0024 17F8013B 		ldrb	r3, [r7], #1	@ zero_extendqisi2
 8953              	.LVL806:
 8954 0028 002B     		cmp	r3, #0
 8955 002a EFD1     		bne	.L714
 8956              	.LVL807:
 8957              	.L720:
 8958              	.LBE2186:
  95:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		}
 8959              		.loc 5 95 0
 8960 002c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 8961              	.LVL808:
 8962              	.L721:
 8963              	.LBB2199:
 8964              	.LBB2198:
 8965              	.LBB2197:
  90:pcInterface.h **** 			text[pos++] = c;
 8966              		.loc 13 90 0
 8967 0030 184D     		ldr	r5, .L723+4
 8968              	.LBB2189:
 8969              	.LBB2190:
 114:pcInterface.h **** 	uart.write(prefix);
 8970              		.loc 13 114 0
 8971 0032 194E     		ldr	r6, .L723+8
 8972              	.LBE2190:
 8973              	.LBE2189:
  90:pcInterface.h **** 			text[pos++] = c;
 8974              		.loc 13 90 0
 8975 0034 85F82931 		strb	r3, [r5, #297]
 8976              	.LBB2193:
 8977              	.LBB2191:
 114:pcInterface.h **** 	uart.write(prefix);
 8978              		.loc 13 114 0
 8979 0038 4920     		movs	r0, #73
 8980              	.LBE2191:
 8981              	.LBE2193:
  90:pcInterface.h **** 			text[pos++] = c;
 8982              		.loc 13 90 0
 8983 003a 4FF49573 		mov	r3, #298
 8984              	.LVL809:
 8985 003e 2360     		str	r3, [r4, #0]
 8986              	.LBB2194:
 8987              	.LBB2192:
 114:pcInterface.h **** 	uart.write(prefix);
 8988              		.loc 13 114 0
 8989 0040 B047     		blx	r6
 8990              	.LVL810:
 118:pcInterface.h **** 	uart.write(',');
 8991              		.loc 13 118 0
 8992 0042 2C20     		movs	r0, #44
 8993 0044 B047     		blx	r6
 8994              	.LVL811:
 121:pcInterface.h **** 	const char* end = &text[pos];
 8995              		.loc 13 121 0
 8996 0046 2368     		ldr	r3, [r4, #0]
 8997 0048 05EB0308 		add	r8, r5, r3
 8998              	.LVL812:
 123:pcInterface.h **** 	while(ptr != end){
 8999              		.loc 13 123 0
 9000 004c A845     		cmp	r8, r5
 9001 004e 04D0     		beq	.L713
 9002              	.LVL813:
 9003              	.L708:
 124:pcInterface.h **** 		uart.write(*ptr);
 9004              		.loc 13 124 0
 9005 0050 15F8010B 		ldrb	r0, [r5], #1	@ zero_extendqisi2
 9006 0054 B047     		blx	r6
 9007              	.LVL814:
 123:pcInterface.h **** 	while(ptr != end){
 9008              		.loc 13 123 0
 9009 0056 A845     		cmp	r8, r5
 9010 0058 FAD1     		bne	.L708
 9011              	.LVL815:
 9012              	.L713:
 9013              	.LBE2192:
 9014              	.LBE2194:
 9015              	.LBB2195:
 9016              	.LBB2196:
 130:pcInterface.h **** 	uart.write('\n');
 9017              		.loc 13 130 0
 9018 005a 0A20     		movs	r0, #10
 9019 005c B047     		blx	r6
 9020              	.LVL816:
 132:pcInterface.h **** 	pos = 0;
 9021              		.loc 13 132 0
 9022 005e 0023     		movs	r3, #0
 9023 0060 2360     		str	r3, [r4, #0]
 9024 0062 D0E7     		b	.L719
 9025              	.LVL817:
 9026              	.L722:
 114:pcInterface.h **** 	uart.write(prefix);
 9027              		.loc 13 114 0
 9028 0064 4920     		movs	r0, #73
 9029 0066 0C4E     		ldr	r6, .L723+8
 121:pcInterface.h **** 	const char* end = &text[pos];
 9030              		.loc 13 121 0
 9031 0068 0A4D     		ldr	r5, .L723+4
 114:pcInterface.h **** 	uart.write(prefix);
 9032              		.loc 13 114 0
 9033 006a B047     		blx	r6
 9034              	.LVL818:
 118:pcInterface.h **** 	uart.write(',');
 9035              		.loc 13 118 0
 9036 006c 2C20     		movs	r0, #44
 9037 006e B047     		blx	r6
 9038              	.LVL819:
 121:pcInterface.h **** 	const char* end = &text[pos];
 9039              		.loc 13 121 0
 9040 0070 2368     		ldr	r3, [r4, #0]
 9041 0072 05EB0308 		add	r8, r5, r3
 9042              	.LVL820:
 123:pcInterface.h **** 	while(ptr != end){
 9043              		.loc 13 123 0
 9044 0076 A845     		cmp	r8, r5
 9045 0078 EFD0     		beq	.L713
 9046              	.LVL821:
 9047              	.L712:
 124:pcInterface.h **** 		uart.write(*ptr);
 9048              		.loc 13 124 0
 9049 007a 15F8010B 		ldrb	r0, [r5], #1	@ zero_extendqisi2
 9050 007e B047     		blx	r6
 9051              	.LVL822:
 123:pcInterface.h **** 	while(ptr != end){
 9052              		.loc 13 123 0
 9053 0080 A845     		cmp	r8, r5
 9054 0082 FAD1     		bne	.L712
 130:pcInterface.h **** 	uart.write('\n');
 9055              		.loc 13 130 0
 9056 0084 0A20     		movs	r0, #10
 9057 0086 B047     		blx	r6
 9058              	.LVL823:
 132:pcInterface.h **** 	pos = 0;
 9059              		.loc 13 132 0
 9060 0088 0023     		movs	r3, #0
 9061 008a 2360     		str	r3, [r4, #0]
 9062 008c BBE7     		b	.L719
 9063              	.L724:
 9064 008e 00BF     		.align	2
 9065              	.L723:
 9066 0090 00000000 		.word	_ZN6StreamILc73ELb0ELb1ELi300EE3posE
 9067 0094 00000000 		.word	_ZN6StreamILc73ELb0ELb1ELi300EE4textE
 9068 0098 00000000 		.word	_ZN4xpcc5stm3214BufferedUsart25writeEh
 9069              	.LBE2196:
 9070              	.LBE2195:
 9071              	.LBE2197:
 9072              	.LBE2198:
 9073              	.LBE2199:
 9074              		.cfi_endproc
 9075              	.LFE1198:
 9077              		.section	.text._ZN8Handlers24rectanglePatternHandler2EPKci,"axG",%progbits,_ZN8Handlers24rectangle
 9078              		.align	2
 9079              		.weak	_ZN8Handlers24rectanglePatternHandler2EPKci
 9080              		.thumb
 9081              		.thumb_func
 9083              	_ZN8Handlers24rectanglePatternHandler2EPKci:
 9084              	.LFB1052:
 224:commandHandlers.h **** 
 225:commandHandlers.h **** static bool rectanglePatternHandler3(const char* cmd, int length){
 226:commandHandlers.h **** 	static int i = 0;
 227:commandHandlers.h **** 	static Point points[5];
 228:commandHandlers.h **** 
 229:commandHandlers.h **** 	if(Pattern::isRunning()){
 230:commandHandlers.h **** 		iout << "Previous pattern is still running!" << endl;
 231:commandHandlers.h **** 		return false;
 232:commandHandlers.h **** 	}
 233:commandHandlers.h **** 
 234:commandHandlers.h **** 	points[i].x = Control<X>::getIsPosition();
 235:commandHandlers.h **** 	points[i].y = Control<Y>::getIsPosition();
 236:commandHandlers.h **** 	dout << "point added (" << points[i].x << ", " << points[i].y << ") i " << i << endl;
 237:commandHandlers.h **** 	i++;
 238:commandHandlers.h **** 
 239:commandHandlers.h **** 	if(i < 4){
 240:commandHandlers.h **** 		return false;
 241:commandHandlers.h **** 	}
 242:commandHandlers.h **** 
 243:commandHandlers.h **** 	if(i == 5){
 244:commandHandlers.h **** 		Pattern::start();
 245:commandHandlers.h **** 		i = 0;
 246:commandHandlers.h **** 	}
 247:commandHandlers.h **** 
 248:commandHandlers.h **** 	Utils::enableSystick();
 249:commandHandlers.h **** 	Control<ALL>::enablePositionControl(true);
 250:commandHandlers.h **** 	//execute pattern
 251:commandHandlers.h **** 	QuadrangleZigZag zRect;
 252:commandHandlers.h **** 	zRect.configure(points);
 253:commandHandlers.h **** 	Pattern::setPattern(zRect);
 254:commandHandlers.h **** 	//Trigger::setThreshold(samplingResolution);
 255:commandHandlers.h **** 	Trigger::enable(true);
 256:commandHandlers.h **** 	iout << "pattern recorded, send command once more to start it" << endl;
 257:commandHandlers.h **** 	//Pattern::start();
 258:commandHandlers.h **** 	//i = 0;
 259:commandHandlers.h **** 	return false;
 260:commandHandlers.h **** }
 261:commandHandlers.h **** 
 262:commandHandlers.h **** static bool linePatternHandler(const char* cmd, int length){
 263:commandHandlers.h **** 	static int i = 0;
 264:commandHandlers.h **** 	static Point points[3];
 265:commandHandlers.h **** 
 266:commandHandlers.h **** 	if(Pattern::isRunning()){
 267:commandHandlers.h **** 		iout << "Previous pattern is still running!" << endl;
 268:commandHandlers.h **** 		return false;
 269:commandHandlers.h **** 	}
 270:commandHandlers.h **** 
 271:commandHandlers.h **** 	points[i].x = Control<X>::getIsPosition();
 272:commandHandlers.h **** 	points[i].y = Control<Y>::getIsPosition();
 273:commandHandlers.h **** 	dout << "point added (" << points[i].x << ", " << points[i].y << ") i " << i << endl;
 274:commandHandlers.h **** 	i++;
 275:commandHandlers.h **** 
 276:commandHandlers.h **** 	if(i < 2){
 277:commandHandlers.h **** 		return false;
 278:commandHandlers.h **** 	}
 279:commandHandlers.h **** 
 280:commandHandlers.h **** 	if(i == 3){
 281:commandHandlers.h **** 		//dout << "starting pattern" << endl;
 282:commandHandlers.h **** 		Pattern::start();
 283:commandHandlers.h **** 		i = 0;
 284:commandHandlers.h **** 		return true;
 285:commandHandlers.h **** 	}
 286:commandHandlers.h **** 	//dout << "setting up pattern" << endl;
 287:commandHandlers.h **** 
 288:commandHandlers.h **** 	Utils::enableSystick();
 289:commandHandlers.h **** 	Control<ALL>::enablePositionControl(true);
 290:commandHandlers.h **** 	//execute pattern
 291:commandHandlers.h **** 	LinePattern line;
 292:commandHandlers.h **** 	line.configure(points);
 293:commandHandlers.h **** 	Pattern::setPattern(line);
 294:commandHandlers.h **** 	Trigger::enable(true);
 295:commandHandlers.h **** 	iout << "pattern recorded, send command once more to start it" << endl;
 296:commandHandlers.h **** 	//Pattern::start();
 297:commandHandlers.h **** 	//i = 0;
 298:commandHandlers.h **** 	return false;
 299:commandHandlers.h **** }
 300:commandHandlers.h **** 
 301:commandHandlers.h **** static bool rectanglePatternHandler2(const char* cmd, int length){
 9085              		.loc 1 301 0
 9086              		.cfi_startproc
 9087              		@ args = 0, pretend = 0, frame = 24
 9088              		@ frame_needed = 0, uses_anonymous_args = 0
 9089              	.LVL824:
 9090 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 9091              	.LCFI56:
 9092              		.cfi_def_cfa_offset 24
 9093              		.cfi_offset 4, -24
 9094              		.cfi_offset 5, -20
 9095              		.cfi_offset 6, -16
 9096              		.cfi_offset 7, -12
 9097              		.cfi_offset 8, -8
 9098              		.cfi_offset 14, -4
 9099 0004 88B0     		sub	sp, sp, #32
 9100              	.LCFI57:
 9101              		.cfi_def_cfa_offset 56
 9102              	.LBB2348:
 302:commandHandlers.h **** 	//expected: 4 arguments: start x, start y, stop x, stop y
 303:commandHandlers.h **** 	static float lastx=-1, lasty=-1, lastStopX=-1, lastStopY=-1;
 304:commandHandlers.h **** 
 305:commandHandlers.h **** 	const char* currentPos;
 306:commandHandlers.h **** 	float startx = atof2(cmd, &currentPos, 100000.f);
 9103              		.loc 1 306 0
 9104 0006 8C4C     		ldr	r4, .L856
 9105 0008 8C4A     		ldr	r2, .L856+4
 9106              	.LBE2348:
 301:commandHandlers.h **** static bool rectanglePatternHandler2(const char* cmd, int length){
 9107              		.loc 1 301 0
 9108 000a 0E46     		mov	r6, r1
 9109              	.LBB2494:
 9110              		.loc 1 306 0
 9111 000c 03A9     		add	r1, sp, #12
 9112              	.LVL825:
 9113              	.LBE2494:
 301:commandHandlers.h **** static bool rectanglePatternHandler2(const char* cmd, int length){
 9114              		.loc 1 301 0
 9115 000e 0546     		mov	r5, r0
 9116              	.LBB2495:
 9117              		.loc 1 306 0
 9118 0010 A047     		blx	r4
 9119              	.LVL826:
 307:commandHandlers.h **** 	float starty = atof2(currentPos, &currentPos, 100000.f);
 9120              		.loc 1 307 0
 9121 0012 03A9     		add	r1, sp, #12
 306:commandHandlers.h **** 	float startx = atof2(cmd, &currentPos, 100000.f);
 9122              		.loc 1 306 0
 9123 0014 0490     		str	r0, [sp, #16]	@ float
 9124              	.LVL827:
 9125              		.loc 1 307 0
 9126 0016 894A     		ldr	r2, .L856+4
 9127              	.LVL828:
 9128 0018 0398     		ldr	r0, [sp, #12]
 9129 001a A047     		blx	r4
 9130              	.LVL829:
 308:commandHandlers.h **** 	float stopx = atof2(currentPos, &currentPos, 100000.f);
 9131              		.loc 1 308 0
 9132 001c 03A9     		add	r1, sp, #12
 307:commandHandlers.h **** 	float starty = atof2(currentPos, &currentPos, 100000.f);
 9133              		.loc 1 307 0
 9134 001e 0590     		str	r0, [sp, #20]	@ float
 9135              	.LVL830:
 9136              		.loc 1 308 0
 9137 0020 864A     		ldr	r2, .L856+4
 9138 0022 0398     		ldr	r0, [sp, #12]
 9139 0024 A047     		blx	r4
 9140              	.LVL831:
 309:commandHandlers.h **** 	float stopy = atof2(currentPos, &currentPos, 100000.f);
 9141              		.loc 1 309 0
 9142 0026 03A9     		add	r1, sp, #12
 308:commandHandlers.h **** 	float stopx = atof2(currentPos, &currentPos, 100000.f);
 9143              		.loc 1 308 0
 9144 0028 0690     		str	r0, [sp, #24]	@ float
 9145              	.LVL832:
 9146              		.loc 1 309 0
 9147 002a 844A     		ldr	r2, .L856+4
 9148 002c 0398     		ldr	r0, [sp, #12]
 9149 002e A047     		blx	r4
 9150              	.LVL833:
 310:commandHandlers.h **** 	int samplingResolution = atoi2(currentPos, &currentPos);
 9151              		.loc 1 310 0
 9152 0030 834B     		ldr	r3, .L856+8
 309:commandHandlers.h **** 	float stopy = atof2(currentPos, &currentPos, 100000.f);
 9153              		.loc 1 309 0
 9154 0032 0790     		str	r0, [sp, #28]	@ float
 9155              	.LVL834:
 9156              		.loc 1 310 0
 9157 0034 03A9     		add	r1, sp, #12
 9158 0036 0398     		ldr	r0, [sp, #12]
 9159 0038 9847     		blx	r3
 9160              	.LVL835:
 311:commandHandlers.h **** 
 312:commandHandlers.h **** 	//sanity checks:
 313:commandHandlers.h **** 	if(currentPos - cmd > length){
 9161              		.loc 1 313 0
 9162 003a 039B     		ldr	r3, [sp, #12]
 9163 003c 5B1B     		subs	r3, r3, r5
 9164 003e B342     		cmp	r3, r6
 310:commandHandlers.h **** 	int samplingResolution = atoi2(currentPos, &currentPos);
 9165              		.loc 1 310 0
 9166 0040 0746     		mov	r7, r0
 9167              	.LVL836:
 9168              		.loc 1 313 0
 9169 0042 00F3C080 		bgt	.L837
 314:commandHandlers.h **** 		cerr << "buffer overrun " << (currentPos - cmd) << endl;
 315:commandHandlers.h **** 		return false;
 316:commandHandlers.h **** 	}
 317:commandHandlers.h **** 	if(startx > XSTAGE_LENGTH_MM || startx < 0){
 9170              		.loc 1 317 0
 9171 0046 9DED047A 		flds	s14, [sp, #16]
 9172 004a DFED7E7A 		flds	s15, .L856+12
 9173 004e B4EEE77A 		fcmpes	s14, s15
 9174 0052 F1EE10FA 		fmstat
 9175 0056 00F39880 		bgt	.L733
 9176              		.loc 1 317 0 is_stmt 0 discriminator 1
 9177 005a B5EEC07A 		fcmpezs	s14
 9178 005e F1EE10FA 		fmstat
 9179 0062 00F19280 		bmi	.L733
 318:commandHandlers.h **** 		iout << "x param is out of bounds: " << startx << endl;
 319:commandHandlers.h **** 		return false;
 320:commandHandlers.h **** 	}
 321:commandHandlers.h **** 	if(starty > YSTAGE_LENGTH_MM || stopy < 0){
 9180              		.loc 1 321 0 is_stmt 1
 9181 0066 DDED056A 		flds	s13, [sp, #20]
 9182 006a F4EEE76A 		fcmpes	s13, s15
 9183 006e F1EE10FA 		fmstat
 9184 0072 00F3C680 		bgt	.L741
 9185              		.loc 1 321 0 is_stmt 0 discriminator 1
 9186 0076 9DED076A 		flds	s12, [sp, #28]
 9187 007a B5EEC06A 		fcmpezs	s12
 9188 007e F1EE10FA 		fmstat
 9189 0082 00F1BE80 		bmi	.L741
 322:commandHandlers.h **** 		iout << "y param is out of bounds: " << stopy << endl;
 323:commandHandlers.h **** 		return false;
 324:commandHandlers.h **** 	}
 325:commandHandlers.h **** 	if(stopx > XSTAGE_LENGTH_MM || stopx < startx){
 9190              		.loc 1 325 0 is_stmt 1
 9191 0086 DDED065A 		flds	s11, [sp, #24]
 9192 008a F4EEE75A 		fcmpes	s11, s15
 9193 008e F1EE10FA 		fmstat
 9194 0092 00F3FD80 		bgt	.L749
 9195              		.loc 1 325 0 is_stmt 0 discriminator 1
 9196 0096 B4EEE57A 		fcmpes	s14, s11
 9197 009a F1EE10FA 		fmstat
 9198 009e 00F3F780 		bgt	.L749
 326:commandHandlers.h **** 		iout << "stopx param is out of bounds: " << stopx << endl;
 327:commandHandlers.h **** 		return false;
 328:commandHandlers.h **** 	}
 329:commandHandlers.h **** 	if(stopy > YSTAGE_LENGTH_MM || stopy < starty){
 9199              		.loc 1 329 0 is_stmt 1
 9200 00a2 B4EEE76A 		fcmpes	s12, s15
 9201 00a6 F1EE10FA 		fmstat
 9202 00aa 00F30681 		bgt	.L756
 9203              		.loc 1 329 0 is_stmt 0 discriminator 1
 9204 00ae F4EEC66A 		fcmpes	s13, s12
 9205 00b2 F1EE10FA 		fmstat
 9206 00b6 00F30081 		bgt	.L756
 330:commandHandlers.h **** 		iout << "stopy param is out of bounds: " << starty << endl;
 331:commandHandlers.h **** 		return false;
 332:commandHandlers.h **** 	}
 333:commandHandlers.h **** 	if(samplingResolution < CONTROLX_DEADBAND || samplingResolution > 100000){
 9207              		.loc 1 333 0 is_stmt 1
 9208 00ba 634B     		ldr	r3, .L856+16
 9209 00bc 9842     		cmp	r0, r3
 9210 00be 00F21E81 		bhi	.L838
 9211              	.LVL837:
 9212              	.LBB2349:
 9213              	.LBB2350:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 9214              		.loc 7 287 0
 9215 00c2 624C     		ldr	r4, .L856+20
 9216 00c4 6368     		ldr	r3, [r4, #4]
 9217 00c6 002B     		cmp	r3, #0
 9218 00c8 00F0A981 		beq	.L839
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 9219              		.loc 7 290 0
 9220 00cc 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 9221              		.loc 7 291 0
 9222 00ce 2046     		mov	r0, r4
 9223              	.LVL838:
 9224 00d0 5F49     		ldr	r1, .L856+24
 9225 00d2 0CBF     		ite	eq
 9226 00d4 5F4B     		ldreq	r3, .L856+28
 9227              		.loc 7 294 0
 9228 00d6 604B     		ldrne	r3, .L856+32
 9229 00d8 9847     		blx	r3
 9230              	.LVL839:
 9231              	.L769:
 9232              	.LBE2350:
 9233              	.LBE2349:
 9234              	.LBB2354:
 9235              	.LBB2355:
 103:commandHandlers.h **** 	dout << axis << " set pwm to " << speed << endl;
 9236              		.loc 1 103 0
 9237 00da 5C4E     		ldr	r6, .L856+20
 9238              	.LVL840:
 269:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeFloat(v);
 9239              		.loc 7 269 0
 9240 00dc 5F4D     		ldr	r5, .L856+36
 9241              	.LVL841:
 9242 00de 3046     		mov	r0, r6
 9243 00e0 04A9     		add	r1, sp, #16
 9244              	.LVL842:
 9245 00e2 A847     		blx	r5
 9246              	.LVL843:
 9247              	.LBE2355:
 9248              	.LBE2354:
 9249              	.LBB2356:
 9250              	.LBB2357:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 9251              		.loc 7 287 0
 9252 00e4 6368     		ldr	r3, [r4, #4]
 9253 00e6 002B     		cmp	r3, #0
 9254 00e8 00F09381 		beq	.L840
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 9255              		.loc 7 290 0
 9256 00ec 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 9257              		.loc 7 291 0
 9258 00ee 3046     		mov	r0, r6
 9259 00f0 5B49     		ldr	r1, .L856+40
 9260 00f2 0CBF     		ite	eq
 9261 00f4 574B     		ldreq	r3, .L856+28
 9262              		.loc 7 294 0
 9263 00f6 584B     		ldrne	r3, .L856+32
 9264 00f8 9847     		blx	r3
 9265              	.LVL844:
 9266              	.L772:
 9267              	.LBE2357:
 9268              	.LBE2356:
 9269              	.LBB2361:
 9270              	.LBB2362:
 103:commandHandlers.h **** 	dout << axis << " set pwm to " << speed << endl;
 9271              		.loc 1 103 0
 9272 00fa 544E     		ldr	r6, .L856+20
 269:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeFloat(v);
 9273              		.loc 7 269 0
 9274 00fc 05A9     		add	r1, sp, #20
 9275              	.LVL845:
 9276 00fe 3046     		mov	r0, r6
 9277 0100 A847     		blx	r5
 9278              	.LVL846:
 9279              	.LBE2362:
 9280              	.LBE2361:
 9281              	.LBB2363:
 9282              	.LBB2364:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 9283              		.loc 7 287 0
 9284 0102 6368     		ldr	r3, [r4, #4]
 9285 0104 002B     		cmp	r3, #0
 9286 0106 00F07E81 		beq	.L841
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 9287              		.loc 7 290 0
 9288 010a 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 9289              		.loc 7 291 0
 9290 010c 3046     		mov	r0, r6
 9291 010e 5449     		ldr	r1, .L856+40
 9292 0110 0CBF     		ite	eq
 9293 0112 504B     		ldreq	r3, .L856+28
 9294              		.loc 7 294 0
 9295 0114 504B     		ldrne	r3, .L856+32
 9296 0116 9847     		blx	r3
 9297              	.LVL847:
 9298              	.L775:
 9299              	.LBE2364:
 9300              	.LBE2363:
 9301              	.LBB2368:
 9302              	.LBB2369:
 103:commandHandlers.h **** 	dout << axis << " set pwm to " << speed << endl;
 9303              		.loc 1 103 0
 9304 0118 4C4E     		ldr	r6, .L856+20
 269:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeFloat(v);
 9305              		.loc 7 269 0
 9306 011a 06A9     		add	r1, sp, #24
 9307              	.LVL848:
 9308 011c 3046     		mov	r0, r6
 9309 011e A847     		blx	r5
 9310              	.LVL849:
 9311              	.LBE2369:
 9312              	.LBE2368:
 9313              	.LBB2370:
 9314              	.LBB2371:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 9315              		.loc 7 287 0
 9316 0120 6368     		ldr	r3, [r4, #4]
 9317 0122 002B     		cmp	r3, #0
 9318 0124 00F06981 		beq	.L842
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 9319              		.loc 7 290 0
 9320 0128 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 9321              		.loc 7 291 0
 9322 012a 3046     		mov	r0, r6
 9323 012c 4C49     		ldr	r1, .L856+40
 9324 012e 0CBF     		ite	eq
 9325 0130 484B     		ldreq	r3, .L856+28
 9326              		.loc 7 294 0
 9327 0132 494B     		ldrne	r3, .L856+32
 9328 0134 9847     		blx	r3
 9329              	.LVL850:
 9330              	.L778:
 9331              	.LBE2371:
 9332              	.LBE2370:
 9333              	.LBB2375:
 9334              	.LBB2376:
 103:commandHandlers.h **** 	dout << axis << " set pwm to " << speed << endl;
 9335              		.loc 1 103 0
 9336 0136 454E     		ldr	r6, .L856+20
 269:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeFloat(v);
 9337              		.loc 7 269 0
 9338 0138 07A9     		add	r1, sp, #28
 9339              	.LVL851:
 9340 013a 3046     		mov	r0, r6
 9341 013c A847     		blx	r5
 9342              	.LVL852:
 9343              	.LBE2376:
 9344              	.LBE2375:
 9345              	.LBB2377:
 9346              	.LBB2378:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 9347              		.loc 7 122 0
 9348 013e 6368     		ldr	r3, [r4, #4]
 9349 0140 002B     		cmp	r3, #0
 9350 0142 00F05481 		beq	.L843
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 9351              		.loc 7 126 0
 9352 0146 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 9353              		.loc 7 125 0
 9354 0148 022B     		cmp	r3, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 9355              		.loc 7 126 0
 9356 014a 3046     		mov	r0, r6
 9357 014c 0CBF     		ite	eq
 9358 014e 454B     		ldreq	r3, .L856+44
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 9359              		.loc 7 129 0
 9360 0150 454B     		ldrne	r3, .L856+48
 9361 0152 9847     		blx	r3
 9362              	.LVL853:
 9363              	.L781:
 9364              	.LBE2378:
 9365              	.LBE2377:
 9366              	.LBB2382:
 9367              	.LBB2383:
  56:pattern.h     **** 		dout << "Pattern done" << endl;
  57:pattern.h     **** 	}
  58:pattern.h     **** 	static int isRunning(){
  59:pattern.h     **** 		return running && !paused;
 9368              		.loc 4 59 0
 9369 0154 454D     		ldr	r5, .L856+52
 9370 0156 464E     		ldr	r6, .L856+56
 9371 0158 2B78     		ldrb	r3, [r5, #0]	@ zero_extendqisi2
 9372 015a 002B     		cmp	r3, #0
 9373 015c 00F0F380 		beq	.L783
 9374 0160 3378     		ldrb	r3, [r6, #0]	@ zero_extendqisi2
 9375 0162 002B     		cmp	r3, #0
 9376 0164 40F0EF80 		bne	.L783
 9377              	.LVL854:
 9378              	.LBE2383:
 9379              	.LBE2382:
 9380              	.LBE2495:
 9381              	.LBB2496:
 9382              	.LBB2497:
 9383              	.LBB2498:
 9384              	.LBB2499:
 9385              	.LBB2500:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 9386              		.loc 7 287 0
 9387 0168 424C     		ldr	r4, .L856+60
 9388 016a 6368     		ldr	r3, [r4, #4]
 9389 016c 002B     		cmp	r3, #0
 9390 016e 00F07B81 		beq	.L844
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 9391              		.loc 7 290 0
 9392 0172 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 9393              		.loc 7 291 0
 9394 0174 2046     		mov	r0, r4
 9395 0176 4049     		ldr	r1, .L856+64
 9396 0178 0CBF     		ite	eq
 9397 017a 364B     		ldreq	r3, .L856+28
 9398              		.loc 7 294 0
 9399 017c 364B     		ldrne	r3, .L856+32
 9400 017e 9847     		blx	r3
 9401              	.LVL855:
 9402              	.L785:
 9403              	.LBE2500:
 9404              	.LBE2499:
 9405              	.LBB2504:
 9406              	.LBB2505:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 9407              		.loc 7 122 0
 9408 0180 6468     		ldr	r4, [r4, #4]
 9409 0182 B4B9     		cbnz	r4, .L739
 9410              	.LVL856:
 9411              	.LBB2506:
 9412              	.LBB2507:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 9413              		.loc 7 123 0
 9414 0184 3B4B     		ldr	r3, .L856+60
 9415 0186 1868     		ldr	r0, [r3, #0]
 9416 0188 50E0     		b	.L833
 9417              	.LVL857:
 9418              	.L733:
 9419              	.LBE2507:
 9420              	.LBE2506:
 9421              	.LBE2505:
 9422              	.LBE2504:
 9423              	.LBE2498:
 9424              	.LBE2497:
 9425              	.LBE2496:
 9426              	.LBB2511:
 9427              	.LBB2384:
 9428              	.LBB2385:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 9429              		.loc 7 287 0
 9430 018a 3A4C     		ldr	r4, .L856+60
 9431 018c 6368     		ldr	r3, [r4, #4]
 9432 018e 002B     		cmp	r3, #0
 9433 0190 00F0A980 		beq	.L845
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 9434              		.loc 7 290 0
 9435 0194 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 9436              		.loc 7 291 0
 9437 0196 2046     		mov	r0, r4
 9438              	.LVL858:
 9439 0198 3849     		ldr	r1, .L856+68
 9440 019a 0CBF     		ite	eq
 9441 019c 2D4B     		ldreq	r3, .L856+28
 9442              		.loc 7 294 0
 9443 019e 2E4B     		ldrne	r3, .L856+32
 9444 01a0 9847     		blx	r3
 9445              	.LVL859:
 9446              	.L737:
 9447              	.LBE2385:
 9448              	.LBE2384:
 9449              	.LBB2389:
 9450              	.LBB2390:
 221:commandHandlers.h **** 	iout << Control<axis>::isPositionControlEnabled() << ", " << Control<axis>::isSpeedControlEnabled(
 9451              		.loc 1 221 0
 9452 01a2 344D     		ldr	r5, .L856+60
 9453              	.LVL860:
 269:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeFloat(v);
 9454              		.loc 7 269 0
 9455 01a4 2D4B     		ldr	r3, .L856+36
 9456 01a6 2846     		mov	r0, r5
 9457 01a8 04A9     		add	r1, sp, #16
 9458              	.LVL861:
 9459 01aa 9847     		blx	r3
 9460              	.LVL862:
 9461              	.LBE2390:
 9462              	.LBE2389:
 9463              	.LBB2391:
 9464              	.LBB2392:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 9465              		.loc 7 122 0
 9466 01ac 6468     		ldr	r4, [r4, #4]
 9467 01ae 002C     		cmp	r4, #0
 9468 01b0 3BD0     		beq	.L835
 9469              	.LVL863:
 9470              	.L739:
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 9471              		.loc 7 126 0
 9472 01b2 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 9473              		.loc 7 125 0
 9474 01b4 022C     		cmp	r4, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 9475              		.loc 7 126 0
 9476 01b6 2F48     		ldr	r0, .L856+60
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 9477              		.loc 7 125 0
 9478 01b8 1FD0     		beq	.L834
 9479              	.L836:
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 9480              		.loc 7 129 0
 9481 01ba 2B4B     		ldr	r3, .L856+48
 9482 01bc 9847     		blx	r3
 9483              	.LVL864:
 319:commandHandlers.h **** 		return false;
 9484              		.loc 1 319 0
 9485 01be 0020     		movs	r0, #0
 9486              	.L819:
 9487              	.LBE2392:
 9488              	.LBE2391:
 9489              	.LBE2511:
 334:commandHandlers.h **** 		iout << "sampling resolution param is out of bounds: " << samplingResolution << endl;
 335:commandHandlers.h **** 		return false;
 336:commandHandlers.h **** 	}
 337:commandHandlers.h **** 
 338:commandHandlers.h **** 	dout << "rectangle: (startx, starty, stopx, stopy) "
 339:commandHandlers.h **** 			<< startx << ", " << starty << ", " << stopx << ", " << stopy << endl;
 340:commandHandlers.h **** 
 341:commandHandlers.h **** 	if(Pattern::isRunning()){
 342:commandHandlers.h **** 		iout << "Previous pattern is still running!" << endl;
 343:commandHandlers.h **** 		return false;
 344:commandHandlers.h **** 	}
 345:commandHandlers.h **** 
 346:commandHandlers.h **** 	Control<ALL>::setMaxSpeed(0.05);
 347:commandHandlers.h **** 	Utils::enableSystick();
 348:commandHandlers.h **** 	Control<ALL>::enablePositionControl(true);
 349:commandHandlers.h **** 	if( true || (startx == lastx && starty == lasty && stopx == lastStopX && stopy == lastStopY)){
 350:commandHandlers.h **** 		//execute pattern
 351:commandHandlers.h **** 		Trigger::enable(true);
 352:commandHandlers.h **** 		QuadrangleZigZag zRect;
 353:commandHandlers.h **** 		zRect.configure2(startx, starty, stopx, stopy, samplingResolution);
 354:commandHandlers.h **** 		Pattern::setPattern(zRect);
 355:commandHandlers.h **** 		Trigger::setThreshold(samplingResolution);
 356:commandHandlers.h **** 		Trigger::enable(true);
 357:commandHandlers.h **** 		Pattern::start();
 358:commandHandlers.h **** 		return true;
 359:commandHandlers.h **** 	}
 360:commandHandlers.h **** 
 361:commandHandlers.h **** 	lastx = startx;
 362:commandHandlers.h **** 	lasty = starty;
 363:commandHandlers.h **** 	lastStopX = stopx;
 364:commandHandlers.h **** 	lastStopY = stopy;
 365:commandHandlers.h **** 
 366:commandHandlers.h **** 	//demonstrate pattern outline
 367:commandHandlers.h **** 	Trigger::enable(true);
 368:commandHandlers.h **** 	Quadrangle rect;
 369:commandHandlers.h **** 	rect.configure(startx, starty, stopx-startx, stopy-starty);
 370:commandHandlers.h **** 	Pattern::setPattern(rect);
 371:commandHandlers.h **** 	Pattern::start();
 372:commandHandlers.h **** 
 373:commandHandlers.h **** 	return true;
 374:commandHandlers.h **** }
 9490              		.loc 1 374 0
 9491 01c0 08B0     		add	sp, sp, #32
 9492 01c2 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 9493              	.LVL865:
 9494              	.L837:
 9495              	.LBB2512:
 9496              	.LBB2397:
 9497              	.LBB2398:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 9498              		.loc 7 287 0
 9499 01c6 2E4C     		ldr	r4, .L856+72
 9500 01c8 6368     		ldr	r3, [r4, #4]
 9501 01ca 002B     		cmp	r3, #0
 9502 01cc 00F09180 		beq	.L846
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 9503              		.loc 7 290 0
 9504 01d0 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 9505              		.loc 7 291 0
 9506 01d2 2046     		mov	r0, r4
 9507              	.LVL866:
 9508 01d4 2B49     		ldr	r1, .L856+76
 9509 01d6 0CBF     		ite	eq
 9510 01d8 1E4B     		ldreq	r3, .L856+28
 9511              		.loc 7 294 0
 9512 01da 1F4B     		ldrne	r3, .L856+32
 9513 01dc 9847     		blx	r3
 9514              	.LVL867:
 9515              	.L728:
 9516              	.LBE2398:
 9517              	.LBE2397:
 9518              	.LBB2402:
 9519              	.LBB2403:
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 9520              		.loc 7 236 0
 9521 01de 0399     		ldr	r1, [sp, #12]
 314:commandHandlers.h **** 		cerr << "buffer overrun " << (currentPos - cmd) << endl;
 9522              		.loc 1 314 0
 9523 01e0 274E     		ldr	r6, .L856+72
 9524              	.LVL868:
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 9525              		.loc 7 236 0
 9526 01e2 294B     		ldr	r3, .L856+80
 9527 01e4 3046     		mov	r0, r6
 9528 01e6 491B     		subs	r1, r1, r5
 9529 01e8 9847     		blx	r3
 9530              	.LVL869:
 9531              	.LBE2403:
 9532              	.LBE2402:
 9533              	.LBB2404:
 9534              	.LBB2405:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 9535              		.loc 7 122 0
 9536 01ea 6468     		ldr	r4, [r4, #4]
 9537 01ec 002C     		cmp	r4, #0
 9538 01ee 00F09C80 		beq	.L847
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 9539              		.loc 7 126 0
 9540 01f2 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 9541              		.loc 7 125 0
 9542 01f4 022C     		cmp	r4, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 9543              		.loc 7 126 0
 9544 01f6 3046     		mov	r0, r6
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 9545              		.loc 7 125 0
 9546 01f8 DFD1     		bne	.L836
 9547              	.LVL870:
 9548              	.L834:
 9549              	.LBE2405:
 9550              	.LBE2404:
 9551              	.LBB2409:
 9552              	.LBB2395:
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 9553              		.loc 7 126 0
 9554 01fa 1A4B     		ldr	r3, .L856+44
 9555 01fc 9847     		blx	r3
 9556              	.LVL871:
 319:commandHandlers.h **** 		return false;
 9557              		.loc 1 319 0
 9558 01fe 0020     		movs	r0, #0
 9559 0200 DEE7     		b	.L819
 9560              	.LVL872:
 9561              	.L741:
 9562              	.LBE2395:
 9563              	.LBE2409:
 9564              	.LBB2410:
 9565              	.LBB2411:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 9566              		.loc 7 287 0
 9567 0202 1C4C     		ldr	r4, .L856+60
 9568 0204 6368     		ldr	r3, [r4, #4]
 9569 0206 002B     		cmp	r3, #0
 9570 0208 00F09180 		beq	.L848
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 9571              		.loc 7 290 0
 9572 020c 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 9573              		.loc 7 291 0
 9574 020e 2046     		mov	r0, r4
 9575              	.LVL873:
 9576 0210 1E49     		ldr	r1, .L856+84
 9577 0212 0CBF     		ite	eq
 9578 0214 0F4B     		ldreq	r3, .L856+28
 9579              		.loc 7 294 0
 9580 0216 104B     		ldrne	r3, .L856+32
 9581 0218 9847     		blx	r3
 9582              	.LVL874:
 9583              	.L745:
 9584              	.LBE2411:
 9585              	.LBE2410:
 9586              	.LBB2415:
 9587              	.LBB2416:
 221:commandHandlers.h **** 	iout << Control<axis>::isPositionControlEnabled() << ", " << Control<axis>::isSpeedControlEnabled(
 9588              		.loc 1 221 0
 9589 021a 164D     		ldr	r5, .L856+60
 9590              	.LVL875:
 269:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeFloat(v);
 9591              		.loc 7 269 0
 9592 021c 0F4B     		ldr	r3, .L856+36
 9593 021e 2846     		mov	r0, r5
 9594 0220 07A9     		add	r1, sp, #28
 9595              	.LVL876:
 9596 0222 9847     		blx	r3
 9597              	.LVL877:
 9598              	.LBE2416:
 9599              	.LBE2415:
 9600              	.LBB2417:
 9601              	.LBB2418:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 9602              		.loc 7 122 0
 9603 0224 6468     		ldr	r4, [r4, #4]
 9604 0226 002C     		cmp	r4, #0
 9605 0228 C3D1     		bne	.L739
 9606              	.LVL878:
 9607              	.L835:
 9608              	.LBE2418:
 9609              	.LBE2417:
 9610              	.LBB2419:
 9611              	.LBB2396:
 9612              	.LBB2393:
 9613              	.LBB2394:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 9614              		.loc 7 123 0
 9615 022a 2868     		ldr	r0, [r5, #0]
 9616              	.LVL879:
 9617              	.L833:
 9618 022c 0368     		ldr	r3, [r0, #0]
 9619 022e 0A21     		movs	r1, #10
 9620 0230 9B68     		ldr	r3, [r3, #8]
 9621 0232 9847     		blx	r3
 9622              	.LVL880:
 319:commandHandlers.h **** 		return false;
 9623              		.loc 1 319 0
 9624 0234 2046     		mov	r0, r4
 9625 0236 C3E7     		b	.L819
 9626              	.L857:
 9627              		.align	2
 9628              	.L856:
 9629 0238 00000000 		.word	_Z5atof2PKcPS0_f
 9630 023c 0050C347 		.word	1203982336
 9631 0240 00000000 		.word	_Z5atoi2PKcPS0_
 9632 0244 0000C842 		.word	1120403456
 9633 0248 A0860100 		.word	100000
 9634 024c 00000000 		.word	.LANCHOR2
 9635 0250 38020000 		.word	.LC27
 9636 0254 00000000 		.word	_ZN4xpcc8IOStream8writeBinEPKc
 9637 0258 00000000 		.word	_ZN4xpcc8IOStream8writeHexEPKc
 9638 025c 00000000 		.word	_ZN4xpcc8IOStream10writeFloatERKf
 9639 0260 3C000000 		.word	.LC3
 9640 0264 00000000 		.word	_ZN4xpcc8IOStream8writeBinEh
 9641 0268 00000000 		.word	_ZN4xpcc8IOStream8writeHexEh
 9642 026c 00000000 		.word	_ZN7Pattern7runningE
 9643 0270 00000000 		.word	_ZN7Pattern6pausedE
 9644 0274 00000000 		.word	.LANCHOR0
 9645 0278 64020000 		.word	.LC28
 9646 027c 90010000 		.word	.LC22
 9647 0280 00000000 		.word	.LANCHOR1
 9648 0284 80010000 		.word	.LC21
 9649 0288 00000000 		.word	_ZN4xpcc8IOStream12writeIntegerEl
 9650 028c AC010000 		.word	.LC23
 9651              	.LVL881:
 9652              	.L749:
 9653              	.LBE2394:
 9654              	.LBE2393:
 9655              	.LBE2396:
 9656              	.LBE2419:
 9657              	.LBB2420:
 9658              	.LBB2421:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 9659              		.loc 7 287 0
 9660 0290 784C     		ldr	r4, .L858
 9661 0292 6368     		ldr	r3, [r4, #4]
 9662 0294 002B     		cmp	r3, #0
 9663 0296 50D0     		beq	.L849
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 9664              		.loc 7 290 0
 9665 0298 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 9666              		.loc 7 291 0
 9667 029a 2046     		mov	r0, r4
 9668              	.LVL882:
 9669 029c 7649     		ldr	r1, .L858+4
 9670 029e 0CBF     		ite	eq
 9671 02a0 764B     		ldreq	r3, .L858+8
 9672              		.loc 7 294 0
 9673 02a2 774B     		ldrne	r3, .L858+12
 9674 02a4 9847     		blx	r3
 9675              	.LVL883:
 9676              	.L753:
 9677              	.LBE2421:
 9678              	.LBE2420:
 9679              	.LBB2425:
 9680              	.LBB2426:
 221:commandHandlers.h **** 	iout << Control<axis>::isPositionControlEnabled() << ", " << Control<axis>::isSpeedControlEnabled(
 9681              		.loc 1 221 0
 9682 02a6 734D     		ldr	r5, .L858
 9683              	.LVL884:
 269:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeFloat(v);
 9684              		.loc 7 269 0
 9685 02a8 764B     		ldr	r3, .L858+16
 9686 02aa 2846     		mov	r0, r5
 9687 02ac 06A9     		add	r1, sp, #24
 9688              	.LVL885:
 9689 02ae 9847     		blx	r3
 9690              	.LVL886:
 9691              	.LBE2426:
 9692              	.LBE2425:
 9693              	.LBB2427:
 9694              	.LBB2428:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 9695              		.loc 7 122 0
 9696 02b0 6468     		ldr	r4, [r4, #4]
 9697 02b2 002C     		cmp	r4, #0
 9698 02b4 7FF47DAF 		bne	.L739
 9699 02b8 B7E7     		b	.L835
 9700              	.LVL887:
 9701              	.L756:
 9702              	.LBE2428:
 9703              	.LBE2427:
 9704              	.LBB2429:
 9705              	.LBB2430:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 9706              		.loc 7 287 0
 9707 02ba 6E4C     		ldr	r4, .L858
 9708 02bc 6368     		ldr	r3, [r4, #4]
 9709 02be 002B     		cmp	r3, #0
 9710 02c0 00F08F80 		beq	.L850
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 9711              		.loc 7 290 0
 9712 02c4 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 9713              		.loc 7 291 0
 9714 02c6 2046     		mov	r0, r4
 9715              	.LVL888:
 9716 02c8 6F49     		ldr	r1, .L858+20
 9717 02ca 0CBF     		ite	eq
 9718 02cc 6B4B     		ldreq	r3, .L858+8
 9719              		.loc 7 294 0
 9720 02ce 6C4B     		ldrne	r3, .L858+12
 9721 02d0 9847     		blx	r3
 9722              	.LVL889:
 9723              	.L760:
 9724              	.LBE2430:
 9725              	.LBE2429:
 9726              	.LBB2434:
 9727              	.LBB2435:
 221:commandHandlers.h **** 	iout << Control<axis>::isPositionControlEnabled() << ", " << Control<axis>::isSpeedControlEnabled(
 9728              		.loc 1 221 0
 9729 02d2 684D     		ldr	r5, .L858
 9730              	.LVL890:
 269:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeFloat(v);
 9731              		.loc 7 269 0
 9732 02d4 6B4B     		ldr	r3, .L858+16
 9733 02d6 2846     		mov	r0, r5
 9734 02d8 05A9     		add	r1, sp, #20
 9735              	.LVL891:
 9736 02da 9847     		blx	r3
 9737              	.LVL892:
 9738              	.LBE2435:
 9739              	.LBE2434:
 9740              	.LBB2436:
 9741              	.LBB2437:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 9742              		.loc 7 122 0
 9743 02dc 6468     		ldr	r4, [r4, #4]
 9744 02de 002C     		cmp	r4, #0
 9745 02e0 7FF467AF 		bne	.L739
 9746 02e4 A1E7     		b	.L835
 9747              	.LVL893:
 9748              	.L845:
 9749              	.LBE2437:
 9750              	.LBE2436:
 9751              	.LBB2438:
 9752              	.LBB2388:
 9753              	.LBB2386:
 9754              	.LBB2387:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 9755              		.loc 7 288 0
 9756 02e6 2068     		ldr	r0, [r4, #0]
 9757              	.LVL894:
 9758 02e8 6849     		ldr	r1, .L858+24
 9759 02ea 0368     		ldr	r3, [r0, #0]
 9760 02ec DB68     		ldr	r3, [r3, #12]
 9761 02ee 9847     		blx	r3
 9762              	.LVL895:
 9763 02f0 57E7     		b	.L737
 9764              	.LVL896:
 9765              	.L846:
 9766              	.LBE2387:
 9767              	.LBE2386:
 9768              	.LBE2388:
 9769              	.LBE2438:
 9770              	.LBB2439:
 9771              	.LBB2401:
 9772              	.LBB2399:
 9773              	.LBB2400:
 9774 02f2 2068     		ldr	r0, [r4, #0]
 9775              	.LVL897:
 9776 02f4 6649     		ldr	r1, .L858+28
 9777 02f6 0368     		ldr	r3, [r0, #0]
 9778 02f8 DB68     		ldr	r3, [r3, #12]
 9779 02fa 9847     		blx	r3
 9780              	.LVL898:
 9781 02fc 6FE7     		b	.L728
 9782              	.LVL899:
 9783              	.L838:
 9784              	.LBE2400:
 9785              	.LBE2399:
 9786              	.LBE2401:
 9787              	.LBE2439:
 9788              	.LBB2440:
 9789              	.LBB2441:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 9790              		.loc 7 287 0
 9791 02fe 5D4C     		ldr	r4, .L858
 9792 0300 6368     		ldr	r3, [r4, #4]
 9793 0302 002B     		cmp	r3, #0
 9794 0304 00F09180 		beq	.L851
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 9795              		.loc 7 290 0
 9796 0308 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 9797              		.loc 7 291 0
 9798 030a 2046     		mov	r0, r4
 9799              	.LVL900:
 9800 030c 6149     		ldr	r1, .L858+32
 9801 030e 0CBF     		ite	eq
 9802 0310 5A4B     		ldreq	r3, .L858+8
 9803              		.loc 7 294 0
 9804 0312 5B4B     		ldrne	r3, .L858+12
 9805 0314 9847     		blx	r3
 9806              	.LVL901:
 9807              	.L765:
 9808              	.LBE2441:
 9809              	.LBE2440:
 9810              	.LBB2445:
 9811              	.LBB2446:
 221:commandHandlers.h **** 	iout << Control<axis>::isPositionControlEnabled() << ", " << Control<axis>::isSpeedControlEnabled(
 9812              		.loc 1 221 0
 9813 0316 574D     		ldr	r5, .L858
 9814              	.LVL902:
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 9815              		.loc 7 236 0
 9816 0318 5F4B     		ldr	r3, .L858+36
 9817 031a 2846     		mov	r0, r5
 9818 031c 3946     		mov	r1, r7
 9819 031e 9847     		blx	r3
 9820              	.LVL903:
 9821              	.LBE2446:
 9822              	.LBE2445:
 9823              	.LBB2447:
 9824              	.LBB2448:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 9825              		.loc 7 122 0
 9826 0320 6468     		ldr	r4, [r4, #4]
 9827 0322 002C     		cmp	r4, #0
 9828 0324 7FF445AF 		bne	.L739
 9829 0328 7FE7     		b	.L835
 9830              	.LVL904:
 9831              	.L847:
 9832              	.LBE2448:
 9833              	.LBE2447:
 9834              	.LBB2449:
 9835              	.LBB2408:
 9836              	.LBB2406:
 9837              	.LBB2407:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 9838              		.loc 7 123 0
 9839 032a 3068     		ldr	r0, [r6, #0]
 9840 032c 7EE7     		b	.L833
 9841              	.LVL905:
 9842              	.L848:
 9843              	.LBE2407:
 9844              	.LBE2406:
 9845              	.LBE2408:
 9846              	.LBE2449:
 9847              	.LBB2450:
 9848              	.LBB2414:
 9849              	.LBB2412:
 9850              	.LBB2413:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 9851              		.loc 7 288 0
 9852 032e 2068     		ldr	r0, [r4, #0]
 9853              	.LVL906:
 9854 0330 5A49     		ldr	r1, .L858+40
 9855 0332 0368     		ldr	r3, [r0, #0]
 9856 0334 DB68     		ldr	r3, [r3, #12]
 9857 0336 9847     		blx	r3
 9858              	.LVL907:
 9859 0338 6FE7     		b	.L745
 9860              	.LVL908:
 9861              	.L849:
 9862              	.LBE2413:
 9863              	.LBE2412:
 9864              	.LBE2414:
 9865              	.LBE2450:
 9866              	.LBB2451:
 9867              	.LBB2424:
 9868              	.LBB2422:
 9869              	.LBB2423:
 9870 033a 2068     		ldr	r0, [r4, #0]
 9871              	.LVL909:
 9872 033c 4E49     		ldr	r1, .L858+4
 9873 033e 0368     		ldr	r3, [r0, #0]
 9874 0340 DB68     		ldr	r3, [r3, #12]
 9875 0342 9847     		blx	r3
 9876              	.LVL910:
 9877 0344 AFE7     		b	.L753
 9878              	.LVL911:
 9879              	.L783:
 9880              	.LBE2423:
 9881              	.LBE2422:
 9882              	.LBE2424:
 9883              	.LBE2451:
 346:commandHandlers.h **** 	Control<ALL>::setMaxSpeed(0.05);
 9884              		.loc 1 346 0
 9885 0346 5648     		ldr	r0, .L858+44
 9886 0348 564B     		ldr	r3, .L858+48
 9887              	.LBB2452:
 351:commandHandlers.h **** 		Trigger::enable(true);
 9888              		.loc 1 351 0
 9889 034a DFF89881 		ldr	r8, .L858+112
 9890              	.LBE2452:
 346:commandHandlers.h **** 	Control<ALL>::setMaxSpeed(0.05);
 9891              		.loc 1 346 0
 9892 034e 9847     		blx	r3
 9893              	.LVL912:
 347:commandHandlers.h **** 	Utils::enableSystick();
 9894              		.loc 1 347 0
 9895 0350 554B     		ldr	r3, .L858+52
 9896 0352 9847     		blx	r3
 9897              	.LVL913:
 348:commandHandlers.h **** 	Control<ALL>::enablePositionControl(true);
 9898              		.loc 1 348 0
 9899 0354 554B     		ldr	r3, .L858+56
 9900 0356 0120     		movs	r0, #1
 9901 0358 9847     		blx	r3
 9902              	.LVL914:
 9903              	.LBB2485:
 351:commandHandlers.h **** 		Trigger::enable(true);
 9904              		.loc 1 351 0
 9905 035a 0120     		movs	r0, #1
 9906 035c C047     		blx	r8
 9907              	.LVL915:
 353:commandHandlers.h **** 		zRect.configure2(startx, starty, stopx, stopy, samplingResolution);
 9908              		.loc 1 353 0
 9909 035e 0599     		ldr	r1, [sp, #20]	@ float
 9910 0360 DFF884C1 		ldr	ip, .L858+116
 9911 0364 069A     		ldr	r2, [sp, #24]	@ float
 9912 0366 079B     		ldr	r3, [sp, #28]	@ float
 9913 0368 0498     		ldr	r0, [sp, #16]	@ float
 9914 036a 0097     		str	r7, [sp, #0]
 9915 036c E047     		blx	ip
 9916              	.LVL916:
 9917              	.LBB2453:
 9918              	.LBB2454:
  27:pattern.h     **** 		func = &T::sample;
 9919              		.loc 4 27 0
 9920 036e 504A     		ldr	r2, .L858+60
 9921 0370 504B     		ldr	r3, .L858+64
 9922              	.LBE2454:
 9923              	.LBE2453:
 355:commandHandlers.h **** 		Trigger::setThreshold(samplingResolution);
 9924              		.loc 1 355 0
 9925 0372 3846     		mov	r0, r7
 9926              	.LBB2456:
 9927              	.LBB2455:
  27:pattern.h     **** 		func = &T::sample;
 9928              		.loc 4 27 0
 9929 0374 1A60     		str	r2, [r3, #0]
 9930              	.LBE2455:
 9931              	.LBE2456:
 355:commandHandlers.h **** 		Trigger::setThreshold(samplingResolution);
 9932              		.loc 1 355 0
 9933 0376 504B     		ldr	r3, .L858+68
 9934 0378 9847     		blx	r3
 9935              	.LVL917:
 356:commandHandlers.h **** 		Trigger::enable(true);
 9936              		.loc 1 356 0
 9937 037a 0120     		movs	r0, #1
 9938 037c C047     		blx	r8
 9939              	.LVL918:
 9940              	.LBB2457:
 9941              	.LBB2458:
  40:pattern.h     **** 		running = true;
 9942              		.loc 4 40 0
 9943 037e 0123     		movs	r3, #1
 9944 0380 2B70     		strb	r3, [r5, #0]
  41:pattern.h     **** 		paused = false;
 9945              		.loc 4 41 0
 9946 0382 0023     		movs	r3, #0
  42:pattern.h     **** 		State::set(State::SCANNING_RECTANGLE);
 9947              		.loc 4 42 0
 9948 0384 0420     		movs	r0, #4
  41:pattern.h     **** 		paused = false;
 9949              		.loc 4 41 0
 9950 0386 3370     		strb	r3, [r6, #0]
  42:pattern.h     **** 		State::set(State::SCANNING_RECTANGLE);
 9951              		.loc 4 42 0
 9952 0388 4C4B     		ldr	r3, .L858+72
 9953 038a 9847     		blx	r3
 9954              	.LVL919:
 9955              	.LBB2459:
 9956              	.LBB2460:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 9957              		.loc 7 287 0
 9958 038c 6368     		ldr	r3, [r4, #4]
 9959 038e 4C48     		ldr	r0, .L858+76
 9960 0390 002B     		cmp	r3, #0
 9961 0392 63D0     		beq	.L852
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 9962              		.loc 7 290 0
 9963 0394 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 9964              		.loc 7 291 0
 9965 0396 4B49     		ldr	r1, .L858+80
 9966 0398 0CBF     		ite	eq
 9967 039a 384B     		ldreq	r3, .L858+8
 9968              		.loc 7 294 0
 9969 039c 384B     		ldrne	r3, .L858+12
 9970 039e 9847     		blx	r3
 9971              	.LVL920:
 9972              	.L788:
 9973              	.LBE2460:
 9974              	.LBE2459:
 9975              	.LBB2464:
 9976              	.LBB2465:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 9977              		.loc 7 122 0
 9978 03a0 6368     		ldr	r3, [r4, #4]
 9979 03a2 4748     		ldr	r0, .L858+76
 9980 03a4 002B     		cmp	r3, #0
 9981 03a6 53D0     		beq	.L853
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 9982              		.loc 7 126 0
 9983 03a8 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 9984              		.loc 7 125 0
 9985 03aa 022B     		cmp	r3, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 9986              		.loc 7 126 0
 9987 03ac 0CBF     		ite	eq
 9988 03ae 464B     		ldreq	r3, .L858+84
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 9989              		.loc 7 129 0
 9990 03b0 464B     		ldrne	r3, .L858+88
 9991 03b2 9847     		blx	r3
 9992              	.LVL921:
 9993              	.L791:
 9994              	.LBE2465:
 9995              	.LBE2464:
 9996              	.LBB2469:
 9997              	.LBB2470:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 9998              		.loc 7 287 0
 9999 03b4 464C     		ldr	r4, .L858+92
 10000 03b6 6368     		ldr	r3, [r4, #4]
 10001 03b8 002B     		cmp	r3, #0
 10002 03ba 43D0     		beq	.L854
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 10003              		.loc 7 290 0
 10004 03bc 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 10005              		.loc 7 291 0
 10006 03be 2046     		mov	r0, r4
 10007 03c0 4449     		ldr	r1, .L858+96
 10008 03c2 0CBF     		ite	eq
 10009 03c4 2D4B     		ldreq	r3, .L858+8
 10010              		.loc 7 294 0
 10011 03c6 2E4B     		ldrne	r3, .L858+12
 10012 03c8 9847     		blx	r3
 10013              	.LVL922:
 10014              	.L794:
 10015              	.LBE2470:
 10016              	.LBE2469:
 10017              	.LBB2474:
 10018              	.LBB2475:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 10019              		.loc 7 122 0
 10020 03ca 6368     		ldr	r3, [r4, #4]
 10021 03cc 4048     		ldr	r0, .L858+92
 10022 03ce 002B     		cmp	r3, #0
 10023 03d0 31D0     		beq	.L855
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 10024              		.loc 7 126 0
 10025 03d2 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 10026              		.loc 7 125 0
 10027 03d4 022B     		cmp	r3, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 10028              		.loc 7 126 0
 10029 03d6 0CBF     		ite	eq
 10030 03d8 3B4B     		ldreq	r3, .L858+84
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 10031              		.loc 7 129 0
 10032 03da 3C4B     		ldrne	r3, .L858+88
 10033 03dc 9847     		blx	r3
 10034              	.LVL923:
 358:commandHandlers.h **** 		return true;
 10035              		.loc 1 358 0
 10036 03de 0120     		movs	r0, #1
 10037 03e0 EEE6     		b	.L819
 10038              	.LVL924:
 10039              	.L850:
 10040              	.LBE2475:
 10041              	.LBE2474:
 10042              	.LBE2458:
 10043              	.LBE2457:
 10044              	.LBE2485:
 10045              	.LBB2486:
 10046              	.LBB2433:
 10047              	.LBB2431:
 10048              	.LBB2432:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 10049              		.loc 7 288 0
 10050 03e2 2068     		ldr	r0, [r4, #0]
 10051              	.LVL925:
 10052 03e4 2849     		ldr	r1, .L858+20
 10053 03e6 0368     		ldr	r3, [r0, #0]
 10054 03e8 DB68     		ldr	r3, [r3, #12]
 10055 03ea 9847     		blx	r3
 10056              	.LVL926:
 10057 03ec 71E7     		b	.L760
 10058              	.LVL927:
 10059              	.L843:
 10060              	.LBE2432:
 10061              	.LBE2431:
 10062              	.LBE2433:
 10063              	.LBE2486:
 10064              	.LBB2487:
 10065              	.LBB2381:
 10066              	.LBB2379:
 10067              	.LBB2380:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 10068              		.loc 7 123 0
 10069 03ee 3068     		ldr	r0, [r6, #0]
 10070 03f0 0368     		ldr	r3, [r0, #0]
 10071 03f2 0A21     		movs	r1, #10
 10072 03f4 9B68     		ldr	r3, [r3, #8]
 10073 03f6 9847     		blx	r3
 10074              	.LVL928:
 10075 03f8 ACE6     		b	.L781
 10076              	.LVL929:
 10077              	.L842:
 10078              	.LBE2380:
 10079              	.LBE2379:
 10080              	.LBE2381:
 10081              	.LBE2487:
 10082              	.LBB2488:
 10083              	.LBB2374:
 10084              	.LBB2372:
 10085              	.LBB2373:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 10086              		.loc 7 288 0
 10087 03fa 3068     		ldr	r0, [r6, #0]
 10088 03fc 3649     		ldr	r1, .L858+100
 10089 03fe 0368     		ldr	r3, [r0, #0]
 10090 0400 DB68     		ldr	r3, [r3, #12]
 10091 0402 9847     		blx	r3
 10092              	.LVL930:
 10093 0404 97E6     		b	.L778
 10094              	.LVL931:
 10095              	.L841:
 10096              	.LBE2373:
 10097              	.LBE2372:
 10098              	.LBE2374:
 10099              	.LBE2488:
 10100              	.LBB2489:
 10101              	.LBB2367:
 10102              	.LBB2365:
 10103              	.LBB2366:
 10104 0406 3068     		ldr	r0, [r6, #0]
 10105 0408 3349     		ldr	r1, .L858+100
 10106 040a 0368     		ldr	r3, [r0, #0]
 10107 040c DB68     		ldr	r3, [r3, #12]
 10108 040e 9847     		blx	r3
 10109              	.LVL932:
 10110 0410 82E6     		b	.L775
 10111              	.LVL933:
 10112              	.L840:
 10113              	.LBE2366:
 10114              	.LBE2365:
 10115              	.LBE2367:
 10116              	.LBE2489:
 10117              	.LBB2490:
 10118              	.LBB2360:
 10119              	.LBB2358:
 10120              	.LBB2359:
 10121 0412 3068     		ldr	r0, [r6, #0]
 10122 0414 3049     		ldr	r1, .L858+100
 10123 0416 0368     		ldr	r3, [r0, #0]
 10124 0418 DB68     		ldr	r3, [r3, #12]
 10125 041a 9847     		blx	r3
 10126              	.LVL934:
 10127 041c 6DE6     		b	.L772
 10128              	.LVL935:
 10129              	.L839:
 10130              	.LBE2359:
 10131              	.LBE2358:
 10132              	.LBE2360:
 10133              	.LBE2490:
 10134              	.LBB2491:
 10135              	.LBB2353:
 10136              	.LBB2351:
 10137              	.LBB2352:
 10138 041e 2068     		ldr	r0, [r4, #0]
 10139              	.LVL936:
 10140 0420 2E49     		ldr	r1, .L858+104
 10141 0422 0368     		ldr	r3, [r0, #0]
 10142 0424 DB68     		ldr	r3, [r3, #12]
 10143 0426 9847     		blx	r3
 10144              	.LVL937:
 10145 0428 57E6     		b	.L769
 10146              	.LVL938:
 10147              	.L851:
 10148              	.LBE2352:
 10149              	.LBE2351:
 10150              	.LBE2353:
 10151              	.LBE2491:
 10152              	.LBB2492:
 10153              	.LBB2444:
 10154              	.LBB2442:
 10155              	.LBB2443:
 10156 042a 2068     		ldr	r0, [r4, #0]
 10157              	.LVL939:
 10158 042c 1949     		ldr	r1, .L858+32
 10159 042e 0368     		ldr	r3, [r0, #0]
 10160 0430 DB68     		ldr	r3, [r3, #12]
 10161 0432 9847     		blx	r3
 10162              	.LVL940:
 10163 0434 6FE7     		b	.L765
 10164              	.LVL941:
 10165              	.L855:
 10166              	.LBE2443:
 10167              	.LBE2442:
 10168              	.LBE2444:
 10169              	.LBE2492:
 10170              	.LBB2493:
 10171              	.LBB2484:
 10172              	.LBB2483:
 10173              	.LBB2479:
 10174              	.LBB2478:
 10175              	.LBB2476:
 10176              	.LBB2477:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 10177              		.loc 7 123 0
 10178 0436 0068     		ldr	r0, [r0, #0]
 10179 0438 0368     		ldr	r3, [r0, #0]
 10180 043a 0A21     		movs	r1, #10
 10181 043c 9B68     		ldr	r3, [r3, #8]
 10182 043e 9847     		blx	r3
 10183              	.LVL942:
 358:commandHandlers.h **** 		return true;
 10184              		.loc 1 358 0
 10185 0440 0120     		movs	r0, #1
 10186 0442 BDE6     		b	.L819
 10187              	.LVL943:
 10188              	.L854:
 10189              	.LBE2477:
 10190              	.LBE2476:
 10191              	.LBE2478:
 10192              	.LBE2479:
 10193              	.LBB2480:
 10194              	.LBB2473:
 10195              	.LBB2471:
 10196              	.LBB2472:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 10197              		.loc 7 288 0
 10198 0444 2068     		ldr	r0, [r4, #0]
 10199 0446 2349     		ldr	r1, .L858+96
 10200 0448 0368     		ldr	r3, [r0, #0]
 10201 044a DB68     		ldr	r3, [r3, #12]
 10202 044c 9847     		blx	r3
 10203              	.LVL944:
 10204 044e BCE7     		b	.L794
 10205              	.LVL945:
 10206              	.L853:
 10207              	.LBE2472:
 10208              	.LBE2471:
 10209              	.LBE2473:
 10210              	.LBE2480:
 10211              	.LBB2481:
 10212              	.LBB2468:
 10213              	.LBB2466:
 10214              	.LBB2467:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 10215              		.loc 7 123 0
 10216 0450 0068     		ldr	r0, [r0, #0]
 10217 0452 0368     		ldr	r3, [r0, #0]
 10218 0454 0A21     		movs	r1, #10
 10219 0456 9B68     		ldr	r3, [r3, #8]
 10220 0458 9847     		blx	r3
 10221              	.LVL946:
 10222 045a ABE7     		b	.L791
 10223              	.LVL947:
 10224              	.L852:
 10225              	.LBE2467:
 10226              	.LBE2466:
 10227              	.LBE2468:
 10228              	.LBE2481:
 10229              	.LBB2482:
 10230              	.LBB2463:
 10231              	.LBB2461:
 10232              	.LBB2462:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 10233              		.loc 7 288 0
 10234 045c 0068     		ldr	r0, [r0, #0]
 10235 045e 1949     		ldr	r1, .L858+80
 10236 0460 0368     		ldr	r3, [r0, #0]
 10237 0462 DB68     		ldr	r3, [r3, #12]
 10238 0464 9847     		blx	r3
 10239              	.LVL948:
 10240 0466 9BE7     		b	.L788
 10241              	.LVL949:
 10242              	.L844:
 10243              	.LBE2462:
 10244              	.LBE2461:
 10245              	.LBE2463:
 10246              	.LBE2482:
 10247              	.LBE2483:
 10248              	.LBE2484:
 10249              	.LBE2493:
 10250              	.LBE2512:
 10251              	.LBB2513:
 10252              	.LBB2510:
 10253              	.LBB2509:
 10254              	.LBB2508:
 10255              	.LBB2503:
 10256              	.LBB2501:
 10257              	.LBB2502:
 10258 0468 2068     		ldr	r0, [r4, #0]
 10259 046a 1D49     		ldr	r1, .L858+108
 10260 046c 0368     		ldr	r3, [r0, #0]
 10261 046e DB68     		ldr	r3, [r3, #12]
 10262 0470 9847     		blx	r3
 10263              	.LVL950:
 10264 0472 85E6     		b	.L785
 10265              	.L859:
 10266              		.align	2
 10267              	.L858:
 10268 0474 00000000 		.word	.LANCHOR0
 10269 0478 C8010000 		.word	.LC24
 10270 047c 00000000 		.word	_ZN4xpcc8IOStream8writeBinEPKc
 10271 0480 00000000 		.word	_ZN4xpcc8IOStream8writeHexEPKc
 10272 0484 00000000 		.word	_ZN4xpcc8IOStream10writeFloatERKf
 10273 0488 E8010000 		.word	.LC25
 10274 048c 90010000 		.word	.LC22
 10275 0490 80010000 		.word	.LC21
 10276 0494 08020000 		.word	.LC26
 10277 0498 00000000 		.word	_ZN4xpcc8IOStream12writeIntegerEl
 10278 049c AC010000 		.word	.LC23
 10279 04a0 CDCC4C3D 		.word	1028443341
 10280 04a4 00000000 		.word	_ZN7ControlIL4Axis5EE11setMaxSpeedEf
 10281 04a8 00000000 		.word	_ZN5Utils13enableSystickEv
 10282 04ac 00000000 		.word	_ZN7ControlIL4Axis5EE21enablePositionControlEb
 10283 04b0 00000000 		.word	_ZN16QuadrangleZigZag6sampleEv
 10284 04b4 00000000 		.word	_ZN7Pattern4funcE
 10285 04b8 00000000 		.word	_ZN7Trigger12setThresholdEi
 10286 04bc 00000000 		.word	_ZN5State3setEi
 10287 04c0 00000000 		.word	.LANCHOR2
 10288 04c4 88020000 		.word	.LC29
 10289 04c8 00000000 		.word	_ZN4xpcc8IOStream8writeBinEh
 10290 04cc 00000000 		.word	_ZN4xpcc8IOStream8writeHexEh
 10291 04d0 00000000 		.word	.LANCHOR3
 10292 04d4 98020000 		.word	.LC30
 10293 04d8 3C000000 		.word	.LC3
 10294 04dc 38020000 		.word	.LC27
 10295 04e0 64020000 		.word	.LC28
 10296 04e4 00000000 		.word	_ZN7Trigger6enableEb
 10297 04e8 00000000 		.word	_ZN16QuadrangleZigZag10configure2Effffi
 10298              	.LBE2502:
 10299              	.LBE2501:
 10300              	.LBE2503:
 10301              	.LBE2508:
 10302              	.LBE2509:
 10303              	.LBE2510:
 10304              	.LBE2513:
 10305              		.cfi_endproc
 10306              	.LFE1052:
 10308              		.section	.text._ZN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEE5writeEc,"axG",%progbits,_ZN
 10309              		.align	2
 10310              		.weak	_ZN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEE5writeEc
 10311              		.thumb
 10312              		.thumb_func
 10314              	_ZN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEE5writeEc:
 10315              	.LFB1209:
  83:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		write(char c)
 10316              		.loc 5 83 0
 10317              		.cfi_startproc
 10318              		@ args = 0, pretend = 0, frame = 0
 10319              		@ frame_needed = 0, uses_anonymous_args = 0
 10320              	.LVL951:
 10321 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 10322              	.LCFI58:
 10323              		.cfi_def_cfa_offset 24
 10324              		.cfi_offset 3, -24
 10325              		.cfi_offset 4, -20
 10326              		.cfi_offset 5, -16
 10327              		.cfi_offset 6, -12
 10328              		.cfi_offset 7, -8
 10329              		.cfi_offset 14, -4
 10330              	.LBB2532:
 10331              	.LBB2533:
  89:pcInterface.h **** 		if(pos == TEXT_BUFFER_SIZE-3){
 10332              		.loc 13 89 0
 10333 0002 2E4C     		ldr	r4, .L882
 10334 0004 2368     		ldr	r3, [r4, #0]
 10335              	.LVL952:
 10336 0006 40F22912 		movw	r2, #297
 10337 000a 9342     		cmp	r3, r2
 10338 000c 06D0     		beq	.L880
  96:pcInterface.h **** 		if(c == '\n'){
 10339              		.loc 13 96 0
 10340 000e 0A29     		cmp	r1, #10
 10341 0010 2ED0     		beq	.L881
 101:pcInterface.h **** 		text[pos++] = c;
 10342              		.loc 13 101 0
 10343 0012 2B48     		ldr	r0, .L882+4
 10344              	.LVL953:
 10345 0014 5A1C     		adds	r2, r3, #1
 10346 0016 C154     		strb	r1, [r0, r3]
 10347 0018 2260     		str	r2, [r4, #0]
 10348 001a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 10349              	.LVL954:
 10350              	.L880:
  90:pcInterface.h **** 			text[pos++] = c;
 10351              		.loc 13 90 0
 10352 001c 284D     		ldr	r5, .L882+4
 10353              	.LBB2534:
 10354              	.LBB2535:
 114:pcInterface.h **** 	uart.write(prefix);
 10355              		.loc 13 114 0
 10356 001e 294E     		ldr	r6, .L882+8
 10357              	.LBE2535:
 10358              	.LBE2534:
  90:pcInterface.h **** 			text[pos++] = c;
 10359              		.loc 13 90 0
 10360 0020 85F82911 		strb	r1, [r5, #297]
 10361              	.LBB2547:
 10362              	.LBB2544:
 114:pcInterface.h **** 	uart.write(prefix);
 10363              		.loc 13 114 0
 10364 0024 4D20     		movs	r0, #77
 10365              	.LVL955:
 10366              	.LBE2544:
 10367              	.LBE2547:
  90:pcInterface.h **** 			text[pos++] = c;
 10368              		.loc 13 90 0
 10369 0026 4FF49573 		mov	r3, #298
 10370 002a 2360     		str	r3, [r4, #0]
 10371              	.LBB2548:
 10372              	.LBB2545:
 114:pcInterface.h **** 	uart.write(prefix);
 10373              		.loc 13 114 0
 10374 002c B047     		blx	r6
 10375              	.LVL956:
 10376              	.LBB2536:
 10377              	.LBB2537:
 10378              	.LBB2538:
 10379              	.LBB2539:
  20:checksum.h    **** 		const char* const pEnd = data+length;
 10380              		.loc 14 20 0
 10381 002e 2168     		ldr	r1, [r4, #0]
 10382 0030 6918     		adds	r1, r5, r1
 10383              	.LVL957:
  21:checksum.h    **** 		while(data != pEnd){
 10384              		.loc 14 21 0
 10385 0032 A942     		cmp	r1, r5
 10386 0034 3DD0     		beq	.L872
 10387 0036 0020     		movs	r0, #0
 10388 0038 2B46     		mov	r3, r5
 10389              	.LVL958:
 10390              	.L863:
 10391              		.loc 14 22 0
 10392 003a 13F8012B 		ldrb	r2, [r3], #1	@ zero_extendqisi2
  21:checksum.h    **** 		while(data != pEnd){
 10393              		.loc 14 21 0
 10394 003e 9942     		cmp	r1, r3
 10395              		.loc 14 22 0
 10396 0040 80EA0200 		eor	r0, r0, r2
 10397              	.LVL959:
  21:checksum.h    **** 		while(data != pEnd){
 10398              		.loc 14 21 0
 10399 0044 F9D1     		bne	.L863
 10400 0046 80F04D00 		eor	r0, r0, #77
 10401              	.LVL960:
 10402 004a C0B2     		uxtb	r0, r0
 10403              	.LVL961:
 10404              	.L862:
 10405              	.LBE2539:
 10406              	.LBE2538:
 10407              		.loc 13 138 0
 10408 004c B047     		blx	r6
 10409              	.LVL962:
 10410              	.LBE2537:
 10411              	.LBE2536:
 118:pcInterface.h **** 	uart.write(',');
 10412              		.loc 13 118 0
 10413 004e 2C20     		movs	r0, #44
 10414 0050 B047     		blx	r6
 10415              	.LVL963:
 121:pcInterface.h **** 	const char* end = &text[pos];
 10416              		.loc 13 121 0
 10417 0052 2768     		ldr	r7, [r4, #0]
 10418 0054 EF19     		adds	r7, r5, r7
 10419              	.LVL964:
 123:pcInterface.h **** 	while(ptr != end){
 10420              		.loc 13 123 0
 10421 0056 AF42     		cmp	r7, r5
 10422 0058 05D0     		beq	.L871
 10423 005a 194D     		ldr	r5, .L882+4
 10424              	.LVL965:
 10425              	.L864:
 124:pcInterface.h **** 		uart.write(*ptr);
 10426              		.loc 13 124 0
 10427 005c 15F8010B 		ldrb	r0, [r5], #1	@ zero_extendqisi2
 10428 0060 B047     		blx	r6
 10429              	.LVL966:
 123:pcInterface.h **** 	while(ptr != end){
 10430              		.loc 13 123 0
 10431 0062 AF42     		cmp	r7, r5
 10432 0064 FAD1     		bne	.L864
 10433              	.LVL967:
 10434              	.L871:
 10435              	.LBE2545:
 10436              	.LBE2548:
 10437              	.LBB2549:
 10438              	.LBB2550:
 130:pcInterface.h **** 	uart.write('\n');
 10439              		.loc 13 130 0
 10440 0066 0A20     		movs	r0, #10
 10441 0068 B047     		blx	r6
 10442              	.LVL968:
 132:pcInterface.h **** 	pos = 0;
 10443              		.loc 13 132 0
 10444 006a 0023     		movs	r3, #0
 10445 006c 2360     		str	r3, [r4, #0]
 10446 006e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 10447              	.LVL969:
 10448              	.L881:
 114:pcInterface.h **** 	uart.write(prefix);
 10449              		.loc 13 114 0
 10450 0070 4D20     		movs	r0, #77
 10451              	.LVL970:
 10452 0072 144E     		ldr	r6, .L882+8
 10453              	.LBB2551:
 10454              	.LBB2552:
 10455              	.LBB2553:
 10456              	.LBB2554:
  20:checksum.h    **** 		const char* const pEnd = data+length;
 10457              		.loc 14 20 0
 10458 0074 124D     		ldr	r5, .L882+4
 10459              	.LBE2554:
 10460              	.LBE2553:
 10461              	.LBE2552:
 10462              	.LBE2551:
 114:pcInterface.h **** 	uart.write(prefix);
 10463              		.loc 13 114 0
 10464 0076 B047     		blx	r6
 10465              	.LVL971:
 10466              	.LBB2561:
 10467              	.LBB2559:
 10468              	.LBB2557:
 10469              	.LBB2555:
  20:checksum.h    **** 		const char* const pEnd = data+length;
 10470              		.loc 14 20 0
 10471 0078 2168     		ldr	r1, [r4, #0]
 10472 007a 6918     		adds	r1, r5, r1
 10473              	.LVL972:
  21:checksum.h    **** 		while(data != pEnd){
 10474              		.loc 14 21 0
 10475 007c A942     		cmp	r1, r5
 10476 007e 1AD0     		beq	.L874
 10477 0080 0020     		movs	r0, #0
 10478 0082 2B46     		mov	r3, r5
 10479              	.LVL973:
 10480              	.L869:
 10481              		.loc 14 22 0
 10482 0084 13F8012B 		ldrb	r2, [r3], #1	@ zero_extendqisi2
  21:checksum.h    **** 		while(data != pEnd){
 10483              		.loc 14 21 0
 10484 0088 9942     		cmp	r1, r3
 10485              		.loc 14 22 0
 10486 008a 80EA0200 		eor	r0, r0, r2
 10487              	.LVL974:
  21:checksum.h    **** 		while(data != pEnd){
 10488              		.loc 14 21 0
 10489 008e F9D1     		bne	.L869
 10490 0090 80F04D00 		eor	r0, r0, #77
 10491              	.LVL975:
 10492 0094 C0B2     		uxtb	r0, r0
 10493              	.LVL976:
 10494              	.L868:
 10495              	.LBE2555:
 10496              	.LBE2557:
 10497              		.loc 13 138 0
 10498 0096 B047     		blx	r6
 10499              	.LVL977:
 10500              	.LBE2559:
 10501              	.LBE2561:
 118:pcInterface.h **** 	uart.write(',');
 10502              		.loc 13 118 0
 10503 0098 2C20     		movs	r0, #44
 10504 009a B047     		blx	r6
 10505              	.LVL978:
 121:pcInterface.h **** 	const char* end = &text[pos];
 10506              		.loc 13 121 0
 10507 009c 2768     		ldr	r7, [r4, #0]
 10508 009e EF19     		adds	r7, r5, r7
 10509              	.LVL979:
 123:pcInterface.h **** 	while(ptr != end){
 10510              		.loc 13 123 0
 10511 00a0 AF42     		cmp	r7, r5
 10512 00a2 E0D0     		beq	.L871
 10513 00a4 064D     		ldr	r5, .L882+4
 10514              	.LVL980:
 10515              	.L870:
 124:pcInterface.h **** 		uart.write(*ptr);
 10516              		.loc 13 124 0
 10517 00a6 15F8010B 		ldrb	r0, [r5], #1	@ zero_extendqisi2
 10518 00aa B047     		blx	r6
 10519              	.LVL981:
 123:pcInterface.h **** 	while(ptr != end){
 10520              		.loc 13 123 0
 10521 00ac AF42     		cmp	r7, r5
 10522 00ae FAD1     		bne	.L870
 10523 00b0 D9E7     		b	.L871
 10524              	.LVL982:
 10525              	.L872:
 10526              	.LBE2550:
 10527              	.LBE2549:
 10528              	.LBB2564:
 10529              	.LBB2546:
 10530              	.LBB2543:
 10531              	.LBB2542:
 10532              	.LBB2541:
 10533              	.LBB2540:
  21:checksum.h    **** 		while(data != pEnd){
 10534              		.loc 14 21 0
 10535 00b2 4D20     		movs	r0, #77
 10536 00b4 CAE7     		b	.L862
 10537              	.LVL983:
 10538              	.L874:
 10539              	.LBE2540:
 10540              	.LBE2541:
 10541              	.LBE2542:
 10542              	.LBE2543:
 10543              	.LBE2546:
 10544              	.LBE2564:
 10545              	.LBB2565:
 10546              	.LBB2563:
 10547              	.LBB2562:
 10548              	.LBB2560:
 10549              	.LBB2558:
 10550              	.LBB2556:
 10551 00b6 4D20     		movs	r0, #77
 10552 00b8 EDE7     		b	.L868
 10553              	.L883:
 10554 00ba 00BF     		.align	2
 10555              	.L882:
 10556 00bc 00000000 		.word	_ZN6StreamILc77ELb1ELb1ELi300EE3posE
 10557 00c0 00000000 		.word	_ZN6StreamILc77ELb1ELb1ELi300EE4textE
 10558 00c4 00000000 		.word	_ZN4xpcc5stm3214BufferedUsart25writeEh
 10559              	.LBE2556:
 10560              	.LBE2558:
 10561              	.LBE2560:
 10562              	.LBE2562:
 10563              	.LBE2563:
 10564              	.LBE2565:
 10565              	.LBE2533:
 10566              	.LBE2532:
 10567              		.cfi_endproc
 10568              	.LFE1209:
 10570              		.section	.text._ZN8Handlers18linePatternHandlerEPKci,"axG",%progbits,_ZN8Handlers18linePatternHand
 10571              		.align	2
 10572              		.weak	_ZN8Handlers18linePatternHandlerEPKci
 10573              		.thumb
 10574              		.thumb_func
 10576              	_ZN8Handlers18linePatternHandlerEPKci:
 10577              	.LFB1051:
 262:commandHandlers.h **** static bool linePatternHandler(const char* cmd, int length){
 10578              		.loc 1 262 0
 10579              		.cfi_startproc
 10580              		@ args = 0, pretend = 0, frame = 0
 10581              		@ frame_needed = 0, uses_anonymous_args = 0
 10582              	.LVL984:
 10583 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 10584              	.LCFI59:
 10585              		.cfi_def_cfa_offset 32
 10586              		.cfi_offset 3, -32
 10587              		.cfi_offset 4, -28
 10588              		.cfi_offset 5, -24
 10589              		.cfi_offset 6, -20
 10590              		.cfi_offset 7, -16
 10591              		.cfi_offset 8, -12
 10592              		.cfi_offset 9, -8
 10593              		.cfi_offset 14, -4
 10594              	.LBB2640:
 10595              	.LBB2641:
 10596              	.LBB2642:
 10597              		.loc 4 59 0
 10598 0004 DFF88C82 		ldr	r8, .L954+108
 10599 0008 98F80030 		ldrb	r3, [r8, #0]	@ zero_extendqisi2
 10600 000c 1BB1     		cbz	r3, .L885
 10601 000e 864B     		ldr	r3, .L954
 10602 0010 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 10603 0012 002B     		cmp	r3, #0
 10604 0014 77D0     		beq	.L940
 10605              	.L885:
 10606              	.LBE2642:
 10607              	.LBE2641:
 271:commandHandlers.h **** 	points[i].x = Control<X>::getIsPosition();
 10608              		.loc 1 271 0
 10609 0016 854C     		ldr	r4, .L954+4
 10610 0018 854B     		ldr	r3, .L954+8
 10611 001a D4F80090 		ldr	r9, [r4, #0]
 10612 001e 854E     		ldr	r6, .L954+12
 10613              	.LBB2643:
 10614              	.LBB2644:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 10615              		.loc 7 287 0
 10616 0020 854D     		ldr	r5, .L954+16
 10617              	.LBE2644:
 10618              	.LBE2643:
 271:commandHandlers.h **** 	points[i].x = Control<X>::getIsPosition();
 10619              		.loc 1 271 0
 10620 0022 9847     		blx	r3
 10621              	.LVL985:
 272:commandHandlers.h **** 	points[i].y = Control<Y>::getIsPosition();
 10622              		.loc 1 272 0
 10623 0024 2768     		ldr	r7, [r4, #0]
 10624 0026 854B     		ldr	r3, .L954+20
 271:commandHandlers.h **** 	points[i].x = Control<X>::getIsPosition();
 10625              		.loc 1 271 0
 10626 0028 46F83900 		str	r0, [r6, r9, lsl #3]
 272:commandHandlers.h **** 	points[i].y = Control<Y>::getIsPosition();
 10627              		.loc 1 272 0
 10628 002c 9847     		blx	r3
 10629              	.LVL986:
 10630 002e 06EBC707 		add	r7, r6, r7, lsl #3
 10631              	.LBB2650:
 10632              	.LBB2647:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 10633              		.loc 7 287 0
 10634 0032 6B68     		ldr	r3, [r5, #4]
 10635              	.LBE2647:
 10636              	.LBE2650:
 272:commandHandlers.h **** 	points[i].y = Control<Y>::getIsPosition();
 10637              		.loc 1 272 0
 10638 0034 7860     		str	r0, [r7, #4]
 10639              	.LVL987:
 10640              	.LBB2651:
 10641              	.LBB2648:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 10642              		.loc 7 287 0
 10643 0036 002B     		cmp	r3, #0
 10644 0038 00F09B80 		beq	.L941
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 10645              		.loc 7 290 0
 10646 003c 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 10647              		.loc 7 291 0
 10648 003e 2846     		mov	r0, r5
 10649 0040 7F49     		ldr	r1, .L954+24
 10650 0042 0CBF     		ite	eq
 10651 0044 7F4B     		ldreq	r3, .L954+28
 10652              		.loc 7 294 0
 10653 0046 804B     		ldrne	r3, .L954+32
 10654 0048 9847     		blx	r3
 10655              	.LVL988:
 10656              	.L892:
 10657              	.LBE2648:
 10658              	.LBE2651:
 10659              	.LBB2652:
 10660              	.LBB2653:
 10661              		.file 15 "pcInterface.cpp"
   1:pcInterface.cpp **** /*
   2:pcInterface.cpp ****  * pcInterface.cpp
   3:pcInterface.cpp ****  *
   4:pcInterface.cpp ****  *  Created on: Dec 30, 2013
   5:pcInterface.cpp ****  *      Author: jonas
   6:pcInterface.cpp ****  */
   7:pcInterface.cpp **** 
   8:pcInterface.cpp **** #include "pcInterface.h"
   9:pcInterface.cpp **** #include "project.h"
  10:pcInterface.cpp **** #include "atof.h"
  11:pcInterface.cpp **** #include "control.h"
  12:pcInterface.cpp **** #include "limits.h"
  13:pcInterface.cpp **** #include <xpcc/architecture.hpp>
  14:pcInterface.cpp **** #include "commandHandlers.h"
  15:pcInterface.cpp **** 
  16:pcInterface.cpp **** xpcc::stm32::BufferedUsart2 uart(921600, 10);
  17:pcInterface.cpp **** xpcc::IODeviceWrapper<xpcc::stm32::BufferedUsart2> uartWrap(uart);
  18:pcInterface.cpp **** xpcc::IOStream coutRaw(uartWrap);
  19:pcInterface.cpp **** 
  20:pcInterface.cpp **** xpcc::IODeviceWrapper<Stream<Prefix::POSITION, false> > poutWrap;
  21:pcInterface.cpp **** xpcc::IOStream pout(poutWrap);
  22:pcInterface.cpp **** 
  23:pcInterface.cpp **** xpcc::IODeviceWrapper<Stream<Prefix::MEASUREMENT, true> > moutWrap;
  24:pcInterface.cpp **** xpcc::IOStream mout(moutWrap);
  25:pcInterface.cpp **** 
  26:pcInterface.cpp **** xpcc::IODeviceWrapper<Stream<Prefix::DEBUG, false> > doutWrap;
  27:pcInterface.cpp **** xpcc::IOStream dout(doutWrap);
  28:pcInterface.cpp **** 
  29:pcInterface.cpp **** xpcc::IODeviceWrapper<Stream<Prefix::ERROR, false> > cerrWrap;
  30:pcInterface.cpp **** xpcc::IOStream cerr(cerrWrap);
  31:pcInterface.cpp **** 
  32:pcInterface.cpp **** xpcc::IODeviceWrapper<Stream<Prefix::INFO, false> > iWrap;
  33:pcInterface.cpp **** xpcc::IOStream iout(iWrap);
  34:pcInterface.cpp **** 
  35:pcInterface.cpp **** xpcc::IODeviceWrapper<Stream<Prefix::COMMAND, false> > cWrap;
  36:pcInterface.cpp **** xpcc::IOStream commandOut(cWrap);
  37:pcInterface.cpp **** 
  38:pcInterface.cpp **** xpcc::IODeviceWrapper<Stream<Prefix::CONTROL, false> > kWrap;
  39:pcInterface.cpp **** xpcc::IOStream controlOut(kWrap);
  40:pcInterface.cpp **** 
  41:pcInterface.cpp **** namespace{
  42:pcInterface.cpp **** const int BUFFER_LENGTH = 512;
  43:pcInterface.cpp **** char buffer[BUFFER_LENGTH] = {0};
  44:pcInterface.cpp **** int bufPos = 0;
  45:pcInterface.cpp **** 
  46:pcInterface.cpp **** PC::Command CommandTable[] = {
  47:pcInterface.cpp ****     { "GO X", Handlers::gotoHandler<X> } //goto x [mm]
  48:pcInterface.cpp ****    ,{ "GO Y", Handlers::gotoHandler<Y> } //goto y [mm]
  49:pcInterface.cpp ****    ,{ "MOVX", Handlers::moveHandler<X> } //move x by [mm]
  50:pcInterface.cpp ****    ,{ "MOVY", Handlers::moveHandler<Y> } //move y by [mm]
  51:pcInterface.cpp ****    ,{ "SPEX", Handlers::setSpeedHandler<X> } //Speed X [-1,1]
  52:pcInterface.cpp ****    ,{ "SPEY", Handlers::setSpeedHandler<Y> } //Speed Y [-1,1]
  53:pcInterface.cpp ****    ,{ "PWMX", Handlers::setPwmHandler<X> } //PWM X [-1200,1200]
  54:pcInterface.cpp ****    ,{ "PWMY", Handlers::setPwmHandler<Y> } //PWM Y [-1200,1200]
  55:pcInterface.cpp ****    ,{ "MAXS", Handlers::setMaxSpeedHandler } //sets max speed for patterns [0,1]
  56:pcInterface.cpp ****    ,{ "EN S", Handlers::enableSystickHandler } //enable systick
  57:pcInterface.cpp ****    ,{ "ER L", Handlers::getLaserError } //get current laser error
  58:pcInterface.cpp ****    ,{ "EN T", Handlers::enableTrigger } //enable trigger, param is 0 or 1
  59:pcInterface.cpp ****    ,{ "SETT", Handlers::setTriggerThreshold } //set threshold for trigger in encoder counts
  60:pcInterface.cpp ****    ,{ "BOOT", Handlers::resetHandler } //reset microController
  61:pcInterface.cpp ****     //Rectangle pattern, parameters: x,y,width,height,sampling resolution;
  62:pcInterface.cpp ****     //First call demonstrates the size, second call confirms
  63:pcInterface.cpp ****    ,{ "PAR1", Handlers::rectanglePatternHandler }
  64:pcInterface.cpp ****     //Rectangle pattern, parameters: start x, start y, stop x , stop y, sampling resolution;
  65:pcInterface.cpp **** 	//First call demonstrates the size, second call confirms
  66:pcInterface.cpp ****    ,{ "PAR2", Handlers::rectanglePatternHandler2 }
  67:pcInterface.cpp ****    ,{ "PAPA", Handlers::pausePatternHandler } //pauses the current pattern
  68:pcInterface.cpp ****    ,{ "PAST", Handlers::stopPatternHandler } //stops the current pattern
  69:pcInterface.cpp ****    ,{ "PARE", Handlers::resumePatternHandler } //resumes execution of current pattern
  70:pcInterface.cpp ****     //shall be called 4 consecutive times for coordinates, requires sampling resolution as paramete
  71:pcInterface.cpp ****    ,{ "PAR3", Handlers::rectanglePatternHandler3 }
  72:pcInterface.cpp ****    ,{ "PAL1", Handlers::linePatternHandler} //shall be called 2 times, requires sampling resolution
  73:pcInterface.cpp ****    ,{ "GETB", Handlers::getPushButtonStates }
  74:pcInterface.cpp ****    ,{ "GETM", Handlers::getMeasurement }
  75:pcInterface.cpp ****    ,{ "GECX", Handlers::getControlOutputs<X> }
  76:pcInterface.cpp ****    ,{ "GECY", Handlers::getControlOutputs<Y> }
  77:pcInterface.cpp ****    ,{ "EXEC", Handlers::execLaserCommand } //execute a laser command
  78:pcInterface.cpp ****    ,{ "MIRR", Handlers::mirrorCommand } //outputs the parameter / mirrors input to the output as a 
  79:pcInterface.cpp **** };
  80:pcInterface.cpp **** }
  81:pcInterface.cpp **** 
  82:pcInterface.cpp **** bool PC::init(){
  83:pcInterface.cpp **** 	uart.configurePins(xpcc::stm32::BufferedUsart2::Mapping::REMAP_PA2_PA3);
  84:pcInterface.cpp **** 	//sanity check:
  85:pcInterface.cpp **** 	int size = sizeof(CommandTable)/sizeof(CommandTable[0]);
  86:pcInterface.cpp **** 	for(int x = 0; x < size; x++){
  87:pcInterface.cpp **** 		for(int y = x+1; y < size; y++){
  88:pcInterface.cpp **** 			int word1 = *(int*)&CommandTable[x].name[0];
  89:pcInterface.cpp **** 			int word2 = *(int*)&CommandTable[y].name[0];
  90:pcInterface.cpp **** 			if(word1 == word2){
  91:pcInterface.cpp **** 				cerr << "duplicate entry in command table: " << CommandTable[x].name << endl;
  92:pcInterface.cpp **** 				return false;
  93:pcInterface.cpp **** 			}
  94:pcInterface.cpp **** 		}
  95:pcInterface.cpp **** 	}
  96:pcInterface.cpp **** 	return true;
  97:pcInterface.cpp **** }
  98:pcInterface.cpp **** 
  99:pcInterface.cpp **** //TODO binary search
 100:pcInterface.cpp **** PC::Command* PC::getCommand(const char* command){
 101:pcInterface.cpp **** 	int size = sizeof(CommandTable)/sizeof(CommandTable[0]);
 102:pcInterface.cpp **** 	for(int i = 0; i < size; i++){
 103:pcInterface.cpp **** 		int word1 = *(int*)&CommandTable[i].name[0];
 104:pcInterface.cpp **** 		int word2 = *(int*)&command[0];
 105:pcInterface.cpp **** 		if(word1 == word2){
 106:pcInterface.cpp **** 			return &CommandTable[i];
 107:pcInterface.cpp **** 		}
 108:pcInterface.cpp **** 	}
 109:pcInterface.cpp **** 	return 0;
 110:pcInterface.cpp **** }
 111:pcInterface.cpp **** 
 112:pcInterface.cpp **** void PC::scanForCommands(){
 113:pcInterface.cpp **** 	uint8_t c;
 114:pcInterface.cpp **** 	if(uart.read(c)){
 115:pcInterface.cpp **** 		if(c != '\n'){
 116:pcInterface.cpp **** 			buffer[bufPos++] = char(c);
 117:pcInterface.cpp **** 			if(bufPos >= BUFFER_LENGTH - 4){
 118:pcInterface.cpp **** 				bufPos = 0;
 119:pcInterface.cpp **** 			}
 120:pcInterface.cpp **** 		}else{
 121:pcInterface.cpp **** 			buffer[bufPos] = 0;
 122:pcInterface.cpp **** 			buffer[bufPos+1] = 0;
 123:pcInterface.cpp **** 			buffer[bufPos+2] = 0;
 124:pcInterface.cpp **** 			buffer[bufPos+3] = 0;
 125:pcInterface.cpp **** 			if(bufPos < 3){
 126:pcInterface.cpp **** 				dout << "Ignoring " << buffer;
 127:pcInterface.cpp **** 				bufPos = 0;
 128:pcInterface.cpp **** 				return;
 129:pcInterface.cpp **** 			}
 130:pcInterface.cpp **** 			Command* cmd = getCommand(buffer);
 131:pcInterface.cpp **** 			if(!cmd){
 132:pcInterface.cpp **** 				cerr << "cannot interpret " << buffer << endl;
 133:pcInterface.cpp **** 				bufPos = 0;
 134:pcInterface.cpp **** 				return;
 135:pcInterface.cpp **** 			}
 136:pcInterface.cpp **** 			bool ok = cmd->handler(&buffer[5], bufPos-5);
 137:pcInterface.cpp **** 			if(ok){
 138:pcInterface.cpp **** 				iout << "OK: " << buffer << endl;
 139:pcInterface.cpp **** 			}
 140:pcInterface.cpp **** 			bufPos = 0;
 141:pcInterface.cpp **** 		}
 142:pcInterface.cpp **** 	}
 143:pcInterface.cpp **** }
 144:pcInterface.cpp **** 
 145:pcInterface.cpp **** void PC::registerCommandHandler(const char* command, bool (*handler)(const char*, int)){
 146:pcInterface.cpp **** 	Command* cmd = PC::getCommand(command);
 147:pcInterface.cpp **** 	if(!cmd){
 148:pcInterface.cpp **** 		cerr << "Error tried to register handler for unknown command: " << command << endl;
 149:pcInterface.cpp **** 		return;
 150:pcInterface.cpp **** 	}
 151:pcInterface.cpp **** 	cmd->handler = handler;
 152:pcInterface.cpp **** }
 153:pcInterface.cpp **** 
 154:pcInterface.cpp **** 
 155:pcInterface.cpp **** bool PC::defaultHandler(const char* command, int length){
 156:pcInterface.cpp **** 	cerr << "Unhandled command: " << command << endl;
 157:pcInterface.cpp **** 	return false;
 158:pcInterface.cpp **** }
 10662              		.loc 15 158 0
 10663 004a 2368     		ldr	r3, [r4, #0]
 103:commandHandlers.h **** 	dout << axis << " set pwm to " << speed << endl;
 10664              		.loc 1 103 0
 10665 004c DFF8E891 		ldr	r9, .L954+16
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 10666              		.loc 7 236 0
 10667 0050 56F83310 		ldr	r1, [r6, r3, lsl #3]
 10668 0054 7D4F     		ldr	r7, .L954+36
 10669 0056 4846     		mov	r0, r9
 10670 0058 B847     		blx	r7
 10671              	.LVL989:
 10672              	.LBE2653:
 10673              	.LBE2652:
 10674              	.LBB2654:
 10675              	.LBB2655:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 10676              		.loc 7 287 0
 10677 005a 6B68     		ldr	r3, [r5, #4]
 10678 005c 002B     		cmp	r3, #0
 10679 005e 67D0     		beq	.L942
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 10680              		.loc 7 290 0
 10681 0060 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 10682              		.loc 7 291 0
 10683 0062 4846     		mov	r0, r9
 10684 0064 7A49     		ldr	r1, .L954+40
 10685 0066 0CBF     		ite	eq
 10686 0068 764B     		ldreq	r3, .L954+28
 10687              		.loc 7 294 0
 10688 006a 774B     		ldrne	r3, .L954+32
 10689 006c 9847     		blx	r3
 10690              	.LVL990:
 10691              	.L895:
 10692              	.LBE2655:
 10693              	.LBE2654:
 10694              	.LBB2659:
 10695              	.LBB2660:
 10696              		.loc 15 158 0
 10697 006e 2368     		ldr	r3, [r4, #0]
 103:commandHandlers.h **** 	dout << axis << " set pwm to " << speed << endl;
 10698              		.loc 1 103 0
 10699 0070 DFF8C491 		ldr	r9, .L954+16
 10700              		.loc 15 158 0
 10701 0074 06EBC306 		add	r6, r6, r3, lsl #3
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 10702              		.loc 7 236 0
 10703 0078 4846     		mov	r0, r9
 10704 007a 7168     		ldr	r1, [r6, #4]
 10705 007c B847     		blx	r7
 10706              	.LVL991:
 10707              	.LBE2660:
 10708              	.LBE2659:
 10709              	.LBB2661:
 10710              	.LBB2662:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 10711              		.loc 7 287 0
 10712 007e 6B68     		ldr	r3, [r5, #4]
 10713 0080 002B     		cmp	r3, #0
 10714 0082 6FD0     		beq	.L943
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 10715              		.loc 7 290 0
 10716 0084 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 10717              		.loc 7 291 0
 10718 0086 4846     		mov	r0, r9
 10719 0088 7249     		ldr	r1, .L954+44
 10720 008a 0CBF     		ite	eq
 10721 008c 6D4B     		ldreq	r3, .L954+28
 10722              		.loc 7 294 0
 10723 008e 6E4B     		ldrne	r3, .L954+32
 10724 0090 9847     		blx	r3
 10725              	.LVL992:
 10726              	.L898:
 10727              	.LBE2662:
 10728              	.LBE2661:
 10729              	.LBB2666:
 10730              	.LBB2667:
 103:commandHandlers.h **** 	dout << axis << " set pwm to " << speed << endl;
 10731              		.loc 1 103 0
 10732 0092 694E     		ldr	r6, .L954+16
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 10733              		.loc 7 236 0
 10734 0094 2168     		ldr	r1, [r4, #0]
 10735 0096 3046     		mov	r0, r6
 10736 0098 B847     		blx	r7
 10737              	.LVL993:
 10738              	.LBE2667:
 10739              	.LBE2666:
 10740              	.LBB2668:
 10741              	.LBB2669:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 10742              		.loc 7 122 0
 10743 009a 6B68     		ldr	r3, [r5, #4]
 10744 009c 002B     		cmp	r3, #0
 10745 009e 54D0     		beq	.L944
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 10746              		.loc 7 126 0
 10747 00a0 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 10748              		.loc 7 125 0
 10749 00a2 022B     		cmp	r3, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 10750              		.loc 7 126 0
 10751 00a4 0CBF     		ite	eq
 10752 00a6 6C4B     		ldreq	r3, .L954+48
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 10753              		.loc 7 129 0
 10754 00a8 6C4B     		ldrne	r3, .L954+52
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 10755              		.loc 7 126 0
 10756 00aa 3046     		mov	r0, r6
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 10757              		.loc 7 129 0
 10758 00ac 9847     		blx	r3
 10759              	.LVL994:
 10760              	.LBE2669:
 10761              	.LBE2668:
 274:commandHandlers.h **** 	i++;
 10762              		.loc 1 274 0
 10763 00ae 2368     		ldr	r3, [r4, #0]
 10764 00b0 0133     		adds	r3, r3, #1
 276:commandHandlers.h **** 	if(i < 2){
 10765              		.loc 1 276 0
 10766 00b2 012B     		cmp	r3, #1
 274:commandHandlers.h **** 	i++;
 10767              		.loc 1 274 0
 10768 00b4 2360     		str	r3, [r4, #0]
 276:commandHandlers.h **** 	if(i < 2){
 10769              		.loc 1 276 0
 10770 00b6 52DD     		ble	.L925
 10771              	.L949:
 280:commandHandlers.h **** 	if(i == 3){
 10772              		.loc 1 280 0
 10773 00b8 032B     		cmp	r3, #3
 10774 00ba 60D0     		beq	.L945
 288:commandHandlers.h **** 	Utils::enableSystick();
 10775              		.loc 1 288 0
 10776 00bc 684B     		ldr	r3, .L954+56
 10777              	.LBB2673:
 10778              	.LBB2674:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 10779              		.loc 7 287 0
 10780 00be 694C     		ldr	r4, .L954+60
 10781              	.LBE2674:
 10782              	.LBE2673:
 288:commandHandlers.h **** 	Utils::enableSystick();
 10783              		.loc 1 288 0
 10784 00c0 9847     		blx	r3
 10785              	.LVL995:
 289:commandHandlers.h **** 	Control<ALL>::enablePositionControl(true);
 10786              		.loc 1 289 0
 10787 00c2 0120     		movs	r0, #1
 10788 00c4 684B     		ldr	r3, .L954+64
 10789 00c6 9847     		blx	r3
 10790              	.LVL996:
 292:commandHandlers.h **** 	line.configure(points);
 10791              		.loc 1 292 0
 10792 00c8 5A48     		ldr	r0, .L954+12
 10793 00ca 684B     		ldr	r3, .L954+68
 10794 00cc 9847     		blx	r3
 10795              	.LVL997:
 10796              	.LBB2680:
 10797              	.LBB2681:
  27:pattern.h     **** 		func = &T::sample;
 10798              		.loc 4 27 0
 10799 00ce 684A     		ldr	r2, .L954+72
 10800 00d0 684B     		ldr	r3, .L954+76
 10801              	.LBE2681:
 10802              	.LBE2680:
 294:commandHandlers.h **** 	Trigger::enable(true);
 10803              		.loc 1 294 0
 10804 00d2 0120     		movs	r0, #1
 10805              	.LBB2683:
 10806              	.LBB2682:
  27:pattern.h     **** 		func = &T::sample;
 10807              		.loc 4 27 0
 10808 00d4 1A60     		str	r2, [r3, #0]
 10809              	.LBE2682:
 10810              	.LBE2683:
 294:commandHandlers.h **** 	Trigger::enable(true);
 10811              		.loc 1 294 0
 10812 00d6 684B     		ldr	r3, .L954+80
 10813 00d8 9847     		blx	r3
 10814              	.LVL998:
 10815              	.LBB2684:
 10816              	.LBB2677:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 10817              		.loc 7 287 0
 10818 00da 6368     		ldr	r3, [r4, #4]
 10819 00dc 002B     		cmp	r3, #0
 10820 00de 00F08480 		beq	.L946
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 10821              		.loc 7 290 0
 10822 00e2 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 10823              		.loc 7 291 0
 10824 00e4 2046     		mov	r0, r4
 10825 00e6 6549     		ldr	r1, .L954+84
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 10826              		.loc 7 290 0
 10827 00e8 14D0     		beq	.L939
 10828              	.LVL999:
 10829              	.L918:
 10830              		.loc 7 294 0
 10831 00ea 574B     		ldr	r3, .L954+32
 10832 00ec 9847     		blx	r3
 10833              	.LVL1000:
 10834              	.L917:
 10835              	.LBE2677:
 10836              	.LBE2684:
 10837              	.LBB2685:
 10838              	.LBB2686:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 10839              		.loc 7 122 0
 10840 00ee 6468     		ldr	r4, [r4, #4]
 10841 00f0 ACB1     		cbz	r4, .L947
 10842              	.L889:
 10843              	.LBE2686:
 10844              	.LBE2685:
 10845              	.LBE2640:
 10846              	.LBB2725:
 10847              	.LBB2726:
 10848              	.LBB2727:
 10849              	.LBB2728:
 10850              	.LBB2729:
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 10851              		.loc 7 126 0
 10852 00f2 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 10853              		.loc 7 125 0
 10854 00f4 022C     		cmp	r4, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 10855              		.loc 7 126 0
 10856 00f6 0CBF     		ite	eq
 10857 00f8 574B     		ldreq	r3, .L954+48
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 10858              		.loc 7 129 0
 10859 00fa 584B     		ldrne	r3, .L954+52
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 10860              		.loc 7 126 0
 10861 00fc 5948     		ldr	r0, .L954+60
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 10862              		.loc 7 129 0
 10863 00fe 9847     		blx	r3
 10864              	.LVL1001:
 10865 0100 0020     		movs	r0, #0
 10866 0102 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 10867              	.LVL1002:
 10868              	.L940:
 10869              	.LBE2729:
 10870              	.LBE2728:
 10871              	.LBB2730:
 10872              	.LBB2731:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 10873              		.loc 7 287 0
 10874 0106 574C     		ldr	r4, .L954+60
 10875 0108 6368     		ldr	r3, [r4, #4]
 10876 010a C3B1     		cbz	r3, .L948
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 10877              		.loc 7 290 0
 10878 010c 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 10879              		.loc 7 291 0
 10880 010e 2046     		mov	r0, r4
 10881              	.LVL1003:
 10882 0110 5B49     		ldr	r1, .L954+88
 10883              	.LVL1004:
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 10884              		.loc 7 290 0
 10885 0112 EAD1     		bne	.L918
 10886              	.LVL1005:
 10887              	.L939:
 10888              	.LBE2731:
 10889              	.LBE2730:
 10890              	.LBE2727:
 10891              	.LBE2726:
 10892              	.LBE2725:
 10893              	.LBB2738:
 10894              	.LBB2690:
 10895              	.LBB2678:
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 10896              		.loc 7 291 0
 10897 0114 4B4B     		ldr	r3, .L954+28
 10898 0116 9847     		blx	r3
 10899              	.LVL1006:
 10900              	.LBE2678:
 10901              	.LBE2690:
 10902              	.LBB2691:
 10903              	.LBB2689:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 10904              		.loc 7 122 0
 10905 0118 6468     		ldr	r4, [r4, #4]
 10906 011a 002C     		cmp	r4, #0
 10907 011c E9D1     		bne	.L889
 10908              	.L947:
 10909              	.LVL1007:
 10910              	.LBB2687:
 10911              	.LBB2688:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 10912              		.loc 7 123 0
 10913 011e 514B     		ldr	r3, .L954+60
 10914 0120 1868     		ldr	r0, [r3, #0]
 10915 0122 0368     		ldr	r3, [r0, #0]
 10916 0124 0A21     		movs	r1, #10
 10917 0126 9B68     		ldr	r3, [r3, #8]
 10918 0128 9847     		blx	r3
 10919              	.LVL1008:
 298:commandHandlers.h **** 	return false;
 10920              		.loc 1 298 0
 10921 012a 2046     		mov	r0, r4
 10922 012c BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 10923              	.LVL1009:
 10924              	.L942:
 10925              	.LBE2688:
 10926              	.LBE2687:
 10927              	.LBE2689:
 10928              	.LBE2691:
 10929              	.LBB2692:
 10930              	.LBB2658:
 10931              	.LBB2656:
 10932              	.LBB2657:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 10933              		.loc 7 288 0
 10934 0130 D9F80000 		ldr	r0, [r9, #0]
 10935 0134 4649     		ldr	r1, .L954+40
 10936 0136 0368     		ldr	r3, [r0, #0]
 10937 0138 DB68     		ldr	r3, [r3, #12]
 10938 013a 9847     		blx	r3
 10939              	.LVL1010:
 10940 013c 97E7     		b	.L895
 10941              	.LVL1011:
 10942              	.L948:
 10943              	.LBE2657:
 10944              	.LBE2656:
 10945              	.LBE2658:
 10946              	.LBE2692:
 10947              	.LBE2738:
 10948              	.LBB2739:
 10949              	.LBB2737:
 10950              	.LBB2736:
 10951              	.LBB2735:
 10952              	.LBB2734:
 10953              	.LBB2732:
 10954              	.LBB2733:
 10955 013e 2068     		ldr	r0, [r4, #0]
 10956              	.LVL1012:
 10957 0140 4F49     		ldr	r1, .L954+88
 10958              	.LVL1013:
 10959 0142 0368     		ldr	r3, [r0, #0]
 10960 0144 DB68     		ldr	r3, [r3, #12]
 10961 0146 9847     		blx	r3
 10962              	.LVL1014:
 10963 0148 D1E7     		b	.L917
 10964              	.LVL1015:
 10965              	.L944:
 10966              	.LBE2733:
 10967              	.LBE2732:
 10968              	.LBE2734:
 10969              	.LBE2735:
 10970              	.LBE2736:
 10971              	.LBE2737:
 10972              	.LBE2739:
 10973              	.LBB2740:
 10974              	.LBB2693:
 10975              	.LBB2672:
 10976              	.LBB2670:
 10977              	.LBB2671:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 10978              		.loc 7 123 0
 10979 014a 3068     		ldr	r0, [r6, #0]
 10980 014c 0368     		ldr	r3, [r0, #0]
 10981 014e 0A21     		movs	r1, #10
 10982 0150 9B68     		ldr	r3, [r3, #8]
 10983 0152 9847     		blx	r3
 10984              	.LVL1016:
 10985              	.LBE2671:
 10986              	.LBE2670:
 10987              	.LBE2672:
 10988              	.LBE2693:
 274:commandHandlers.h **** 	i++;
 10989              		.loc 1 274 0
 10990 0154 2368     		ldr	r3, [r4, #0]
 10991 0156 0133     		adds	r3, r3, #1
 276:commandHandlers.h **** 	if(i < 2){
 10992              		.loc 1 276 0
 10993 0158 012B     		cmp	r3, #1
 274:commandHandlers.h **** 	i++;
 10994              		.loc 1 274 0
 10995 015a 2360     		str	r3, [r4, #0]
 276:commandHandlers.h **** 	if(i < 2){
 10996              		.loc 1 276 0
 10997 015c ACDC     		bgt	.L949
 10998              	.LVL1017:
 10999              	.L925:
 277:commandHandlers.h **** 		return false;
 11000              		.loc 1 277 0
 11001 015e 0020     		movs	r0, #0
 11002 0160 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 11003              	.LVL1018:
 11004              	.L943:
 11005              	.LBB2694:
 11006              	.LBB2665:
 11007              	.LBB2663:
 11008              	.LBB2664:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 11009              		.loc 7 288 0
 11010 0164 D9F80000 		ldr	r0, [r9, #0]
 11011 0168 3A49     		ldr	r1, .L954+44
 11012 016a 0368     		ldr	r3, [r0, #0]
 11013 016c DB68     		ldr	r3, [r3, #12]
 11014 016e 9847     		blx	r3
 11015              	.LVL1019:
 11016 0170 8FE7     		b	.L898
 11017              	.LVL1020:
 11018              	.L941:
 11019              	.LBE2664:
 11020              	.LBE2663:
 11021              	.LBE2665:
 11022              	.LBE2694:
 11023              	.LBB2695:
 11024              	.LBB2649:
 11025              	.LBB2645:
 11026              	.LBB2646:
 11027 0172 2868     		ldr	r0, [r5, #0]
 11028 0174 3249     		ldr	r1, .L954+24
 11029 0176 0368     		ldr	r3, [r0, #0]
 11030 0178 DB68     		ldr	r3, [r3, #12]
 11031 017a 9847     		blx	r3
 11032              	.LVL1021:
 11033 017c 65E7     		b	.L892
 11034              	.LVL1022:
 11035              	.L945:
 11036              	.LBE2646:
 11037              	.LBE2645:
 11038              	.LBE2649:
 11039              	.LBE2695:
 11040              	.LBB2696:
 11041              	.LBB2697:
  40:pattern.h     **** 		running = true;
 11042              		.loc 4 40 0
 11043 017e 0123     		movs	r3, #1
 11044 0180 88F80030 		strb	r3, [r8, #0]
  41:pattern.h     **** 		paused = false;
 11045              		.loc 4 41 0
 11046 0184 284B     		ldr	r3, .L954
 11047 0186 0022     		movs	r2, #0
  42:pattern.h     **** 		State::set(State::SCANNING_RECTANGLE);
 11048              		.loc 4 42 0
 11049 0188 0420     		movs	r0, #4
  41:pattern.h     **** 		paused = false;
 11050              		.loc 4 41 0
 11051 018a 1A70     		strb	r2, [r3, #0]
  42:pattern.h     **** 		State::set(State::SCANNING_RECTANGLE);
 11052              		.loc 4 42 0
 11053 018c 3D4B     		ldr	r3, .L954+92
 11054 018e 9847     		blx	r3
 11055              	.LVL1023:
 11056              	.LBB2698:
 11057              	.LBB2699:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 11058              		.loc 7 287 0
 11059 0190 6B68     		ldr	r3, [r5, #4]
 11060 0192 2948     		ldr	r0, .L954+16
 11061 0194 002B     		cmp	r3, #0
 11062 0196 2ED0     		beq	.L950
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 11063              		.loc 7 290 0
 11064 0198 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 11065              		.loc 7 291 0
 11066 019a 3B49     		ldr	r1, .L954+96
 11067 019c 0CBF     		ite	eq
 11068 019e 294B     		ldreq	r3, .L954+28
 11069              		.loc 7 294 0
 11070 01a0 294B     		ldrne	r3, .L954+32
 11071 01a2 9847     		blx	r3
 11072              	.LVL1024:
 11073              	.L905:
 11074              	.LBE2699:
 11075              	.LBE2698:
 11076              	.LBB2703:
 11077              	.LBB2704:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 11078              		.loc 7 122 0
 11079 01a4 6B68     		ldr	r3, [r5, #4]
 11080 01a6 2448     		ldr	r0, .L954+16
 11081 01a8 002B     		cmp	r3, #0
 11082 01aa 36D0     		beq	.L951
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 11083              		.loc 7 126 0
 11084 01ac 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 11085              		.loc 7 125 0
 11086 01ae 022B     		cmp	r3, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 11087              		.loc 7 126 0
 11088 01b0 0CBF     		ite	eq
 11089 01b2 294B     		ldreq	r3, .L954+48
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 11090              		.loc 7 129 0
 11091 01b4 294B     		ldrne	r3, .L954+52
 11092 01b6 9847     		blx	r3
 11093              	.LVL1025:
 11094              	.L908:
 11095              	.LBE2704:
 11096              	.LBE2703:
 11097              	.LBB2708:
 11098              	.LBB2709:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 11099              		.loc 7 287 0
 11100 01b8 344D     		ldr	r5, .L954+100
 11101 01ba 6B68     		ldr	r3, [r5, #4]
 11102 01bc 002B     		cmp	r3, #0
 11103 01be 26D0     		beq	.L952
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 11104              		.loc 7 290 0
 11105 01c0 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 11106              		.loc 7 291 0
 11107 01c2 2846     		mov	r0, r5
 11108 01c4 3249     		ldr	r1, .L954+104
 11109 01c6 0CBF     		ite	eq
 11110 01c8 1E4B     		ldreq	r3, .L954+28
 11111              		.loc 7 294 0
 11112 01ca 1F4B     		ldrne	r3, .L954+32
 11113 01cc 9847     		blx	r3
 11114              	.LVL1026:
 11115              	.L911:
 11116              	.LBE2709:
 11117              	.LBE2708:
 11118              	.LBB2713:
 11119              	.LBB2714:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 11120              		.loc 7 122 0
 11121 01ce 6B68     		ldr	r3, [r5, #4]
 11122 01d0 2E48     		ldr	r0, .L954+100
 11123 01d2 B3B1     		cbz	r3, .L953
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 11124              		.loc 7 126 0
 11125 01d4 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 11126              		.loc 7 125 0
 11127 01d6 022B     		cmp	r3, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 11128              		.loc 7 126 0
 11129 01d8 0CBF     		ite	eq
 11130 01da 1F4B     		ldreq	r3, .L954+48
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 11131              		.loc 7 129 0
 11132 01dc 1F4B     		ldrne	r3, .L954+52
 11133 01de 9847     		blx	r3
 11134              	.LVL1027:
 11135              	.L914:
 11136              	.LBE2714:
 11137              	.LBE2713:
 11138              	.LBE2697:
 11139              	.LBE2696:
 283:commandHandlers.h **** 		i = 0;
 11140              		.loc 1 283 0
 11141 01e0 0023     		movs	r3, #0
 11142 01e2 2360     		str	r3, [r4, #0]
 284:commandHandlers.h **** 		return true;
 11143              		.loc 1 284 0
 11144 01e4 0120     		movs	r0, #1
 11145 01e6 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 11146              	.LVL1028:
 11147              	.L946:
 11148              	.LBB2723:
 11149              	.LBB2679:
 11150              	.LBB2675:
 11151              	.LBB2676:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 11152              		.loc 7 288 0
 11153 01ea 2068     		ldr	r0, [r4, #0]
 11154 01ec 2349     		ldr	r1, .L954+84
 11155 01ee 0368     		ldr	r3, [r0, #0]
 11156 01f0 DB68     		ldr	r3, [r3, #12]
 11157 01f2 9847     		blx	r3
 11158              	.LVL1029:
 11159 01f4 7BE7     		b	.L917
 11160              	.LVL1030:
 11161              	.L950:
 11162              	.LBE2676:
 11163              	.LBE2675:
 11164              	.LBE2679:
 11165              	.LBE2723:
 11166              	.LBB2724:
 11167              	.LBB2722:
 11168              	.LBB2718:
 11169              	.LBB2702:
 11170              	.LBB2700:
 11171              	.LBB2701:
 11172 01f6 0068     		ldr	r0, [r0, #0]
 11173 01f8 2349     		ldr	r1, .L954+96
 11174 01fa 0368     		ldr	r3, [r0, #0]
 11175 01fc DB68     		ldr	r3, [r3, #12]
 11176 01fe 9847     		blx	r3
 11177              	.LVL1031:
 11178 0200 D0E7     		b	.L905
 11179              	.LVL1032:
 11180              	.L953:
 11181              	.LBE2701:
 11182              	.LBE2700:
 11183              	.LBE2702:
 11184              	.LBE2718:
 11185              	.LBB2719:
 11186              	.LBB2717:
 11187              	.LBB2715:
 11188              	.LBB2716:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 11189              		.loc 7 123 0
 11190 0202 0068     		ldr	r0, [r0, #0]
 11191 0204 0368     		ldr	r3, [r0, #0]
 11192 0206 0A21     		movs	r1, #10
 11193 0208 9B68     		ldr	r3, [r3, #8]
 11194 020a 9847     		blx	r3
 11195              	.LVL1033:
 11196 020c E8E7     		b	.L914
 11197              	.LVL1034:
 11198              	.L952:
 11199              	.LBE2716:
 11200              	.LBE2715:
 11201              	.LBE2717:
 11202              	.LBE2719:
 11203              	.LBB2720:
 11204              	.LBB2712:
 11205              	.LBB2710:
 11206              	.LBB2711:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 11207              		.loc 7 288 0
 11208 020e 2868     		ldr	r0, [r5, #0]
 11209 0210 1F49     		ldr	r1, .L954+104
 11210 0212 0368     		ldr	r3, [r0, #0]
 11211 0214 DB68     		ldr	r3, [r3, #12]
 11212 0216 9847     		blx	r3
 11213              	.LVL1035:
 11214 0218 D9E7     		b	.L911
 11215              	.LVL1036:
 11216              	.L951:
 11217              	.LBE2711:
 11218              	.LBE2710:
 11219              	.LBE2712:
 11220              	.LBE2720:
 11221              	.LBB2721:
 11222              	.LBB2707:
 11223              	.LBB2705:
 11224              	.LBB2706:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 11225              		.loc 7 123 0
 11226 021a 0068     		ldr	r0, [r0, #0]
 11227 021c 0368     		ldr	r3, [r0, #0]
 11228 021e 0A21     		movs	r1, #10
 11229 0220 9B68     		ldr	r3, [r3, #8]
 11230 0222 9847     		blx	r3
 11231              	.LVL1037:
 11232 0224 C8E7     		b	.L908
 11233              	.L955:
 11234 0226 00BF     		.align	2
 11235              	.L954:
 11236 0228 00000000 		.word	_ZN7Pattern6pausedE
 11237 022c 00000000 		.word	_ZZN8Handlers18linePatternHandlerEPKciE1i
 11238 0230 00000000 		.word	_ZN7ControlIL4Axis0EE13getIsPositionEv
 11239 0234 00000000 		.word	_ZZN8Handlers18linePatternHandlerEPKciE6points
 11240 0238 00000000 		.word	.LANCHOR2
 11241 023c 00000000 		.word	_ZN7ControlIL4Axis2EE13getIsPositionEv
 11242 0240 A4020000 		.word	.LC31
 11243 0244 00000000 		.word	_ZN4xpcc8IOStream8writeBinEPKc
 11244 0248 00000000 		.word	_ZN4xpcc8IOStream8writeHexEPKc
 11245 024c 00000000 		.word	_ZN4xpcc8IOStream12writeIntegerEl
 11246 0250 3C000000 		.word	.LC3
 11247 0254 B4020000 		.word	.LC32
 11248 0258 00000000 		.word	_ZN4xpcc8IOStream8writeBinEh
 11249 025c 00000000 		.word	_ZN4xpcc8IOStream8writeHexEh
 11250 0260 00000000 		.word	_ZN5Utils13enableSystickEv
 11251 0264 00000000 		.word	.LANCHOR0
 11252 0268 00000000 		.word	_ZN7ControlIL4Axis5EE21enablePositionControlEb
 11253 026c 00000000 		.word	_ZN11LinePattern9configureEP5Point
 11254 0270 00000000 		.word	_ZN11LinePattern6sampleEv
 11255 0274 00000000 		.word	_ZN7Pattern4funcE
 11256 0278 00000000 		.word	_ZN7Trigger6enableEb
 11257 027c BC020000 		.word	.LC33
 11258 0280 64020000 		.word	.LC28
 11259 0284 00000000 		.word	_ZN5State3setEi
 11260 0288 88020000 		.word	.LC29
 11261 028c 00000000 		.word	.LANCHOR3
 11262 0290 98020000 		.word	.LC30
 11263 0294 00000000 		.word	_ZN7Pattern7runningE
 11264              	.LBE2706:
 11265              	.LBE2705:
 11266              	.LBE2707:
 11267              	.LBE2721:
 11268              	.LBE2722:
 11269              	.LBE2724:
 11270              	.LBE2740:
 11271              		.cfi_endproc
 11272              	.LFE1051:
 11274              		.section	.text._ZN8Handlers24rectanglePatternHandler3EPKci,"axG",%progbits,_ZN8Handlers24rectangle
 11275              		.align	2
 11276              		.weak	_ZN8Handlers24rectanglePatternHandler3EPKci
 11277              		.thumb
 11278              		.thumb_func
 11280              	_ZN8Handlers24rectanglePatternHandler3EPKci:
 11281              	.LFB1050:
 225:commandHandlers.h **** static bool rectanglePatternHandler3(const char* cmd, int length){
 11282              		.loc 1 225 0
 11283              		.cfi_startproc
 11284              		@ args = 0, pretend = 0, frame = 0
 11285              		@ frame_needed = 0, uses_anonymous_args = 0
 11286              	.LVL1038:
 11287 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 11288              	.LCFI60:
 11289              		.cfi_def_cfa_offset 32
 11290              		.cfi_offset 3, -32
 11291              		.cfi_offset 4, -28
 11292              		.cfi_offset 5, -24
 11293              		.cfi_offset 6, -20
 11294              		.cfi_offset 7, -16
 11295              		.cfi_offset 8, -12
 11296              		.cfi_offset 9, -8
 11297              		.cfi_offset 14, -4
 11298              	.LBB2813:
 11299              	.LBB2814:
 11300              	.LBB2815:
 11301              		.loc 4 59 0
 11302 0004 DFF88082 		ldr	r8, .L1024+112
 11303 0008 98F80030 		ldrb	r3, [r8, #0]	@ zero_extendqisi2
 11304 000c 1BB1     		cbz	r3, .L957
 11305 000e 824B     		ldr	r3, .L1024
 11306 0010 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 11307 0012 002B     		cmp	r3, #0
 11308 0014 79D0     		beq	.L1011
 11309              	.L957:
 11310              	.LBE2815:
 11311              	.LBE2814:
 234:commandHandlers.h **** 	points[i].x = Control<X>::getIsPosition();
 11312              		.loc 1 234 0
 11313 0016 814C     		ldr	r4, .L1024+4
 11314 0018 814B     		ldr	r3, .L1024+8
 11315 001a D4F80090 		ldr	r9, [r4, #0]
 11316 001e 814E     		ldr	r6, .L1024+12
 11317              	.LBB2816:
 11318              	.LBB2817:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 11319              		.loc 7 287 0
 11320 0020 814D     		ldr	r5, .L1024+16
 11321              	.LBE2817:
 11322              	.LBE2816:
 234:commandHandlers.h **** 	points[i].x = Control<X>::getIsPosition();
 11323              		.loc 1 234 0
 11324 0022 9847     		blx	r3
 11325              	.LVL1039:
 235:commandHandlers.h **** 	points[i].y = Control<Y>::getIsPosition();
 11326              		.loc 1 235 0
 11327 0024 2768     		ldr	r7, [r4, #0]
 11328 0026 814B     		ldr	r3, .L1024+20
 234:commandHandlers.h **** 	points[i].x = Control<X>::getIsPosition();
 11329              		.loc 1 234 0
 11330 0028 46F83900 		str	r0, [r6, r9, lsl #3]
 235:commandHandlers.h **** 	points[i].y = Control<Y>::getIsPosition();
 11331              		.loc 1 235 0
 11332 002c 9847     		blx	r3
 11333              	.LVL1040:
 11334 002e 06EBC707 		add	r7, r6, r7, lsl #3
 11335              	.LBB2823:
 11336              	.LBB2820:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 11337              		.loc 7 287 0
 11338 0032 6B68     		ldr	r3, [r5, #4]
 11339              	.LBE2820:
 11340              	.LBE2823:
 235:commandHandlers.h **** 	points[i].y = Control<Y>::getIsPosition();
 11341              		.loc 1 235 0
 11342 0034 7860     		str	r0, [r7, #4]
 11343              	.LVL1041:
 11344              	.LBB2824:
 11345              	.LBB2821:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 11346              		.loc 7 287 0
 11347 0036 002B     		cmp	r3, #0
 11348 0038 00F09680 		beq	.L1012
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 11349              		.loc 7 290 0
 11350 003c 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 11351              		.loc 7 291 0
 11352 003e 2846     		mov	r0, r5
 11353 0040 7B49     		ldr	r1, .L1024+24
 11354 0042 0CBF     		ite	eq
 11355 0044 7B4B     		ldreq	r3, .L1024+28
 11356              		.loc 7 294 0
 11357 0046 7C4B     		ldrne	r3, .L1024+32
 11358 0048 9847     		blx	r3
 11359              	.LVL1042:
 11360              	.L964:
 11361              	.LBE2821:
 11362              	.LBE2824:
 11363              	.LBB2825:
 11364              	.LBB2826:
 11365              		.loc 15 158 0
 11366 004a 2368     		ldr	r3, [r4, #0]
 103:commandHandlers.h **** 	dout << axis << " set pwm to " << speed << endl;
 11367              		.loc 1 103 0
 11368 004c DFF8D891 		ldr	r9, .L1024+16
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 11369              		.loc 7 236 0
 11370 0050 56F83310 		ldr	r1, [r6, r3, lsl #3]
 11371 0054 794F     		ldr	r7, .L1024+36
 11372 0056 4846     		mov	r0, r9
 11373 0058 B847     		blx	r7
 11374              	.LVL1043:
 11375              	.LBE2826:
 11376              	.LBE2825:
 11377              	.LBB2827:
 11378              	.LBB2828:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 11379              		.loc 7 287 0
 11380 005a 6B68     		ldr	r3, [r5, #4]
 11381 005c 002B     		cmp	r3, #0
 11382 005e 69D0     		beq	.L1013
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 11383              		.loc 7 290 0
 11384 0060 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 11385              		.loc 7 291 0
 11386 0062 4846     		mov	r0, r9
 11387 0064 7649     		ldr	r1, .L1024+40
 11388 0066 0CBF     		ite	eq
 11389 0068 724B     		ldreq	r3, .L1024+28
 11390              		.loc 7 294 0
 11391 006a 734B     		ldrne	r3, .L1024+32
 11392 006c 9847     		blx	r3
 11393              	.LVL1044:
 11394              	.L967:
 11395              	.LBE2828:
 11396              	.LBE2827:
 11397              	.LBB2832:
 11398              	.LBB2833:
 11399              		.loc 15 158 0
 11400 006e 2368     		ldr	r3, [r4, #0]
 103:commandHandlers.h **** 	dout << axis << " set pwm to " << speed << endl;
 11401              		.loc 1 103 0
 11402 0070 DFF8B491 		ldr	r9, .L1024+16
 11403              		.loc 15 158 0
 11404 0074 06EBC306 		add	r6, r6, r3, lsl #3
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 11405              		.loc 7 236 0
 11406 0078 4846     		mov	r0, r9
 11407 007a 7168     		ldr	r1, [r6, #4]
 11408 007c B847     		blx	r7
 11409              	.LVL1045:
 11410              	.LBE2833:
 11411              	.LBE2832:
 11412              	.LBB2834:
 11413              	.LBB2835:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 11414              		.loc 7 287 0
 11415 007e 6B68     		ldr	r3, [r5, #4]
 11416 0080 002B     		cmp	r3, #0
 11417 0082 6AD0     		beq	.L1014
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 11418              		.loc 7 290 0
 11419 0084 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 11420              		.loc 7 291 0
 11421 0086 4846     		mov	r0, r9
 11422 0088 6E49     		ldr	r1, .L1024+44
 11423 008a 0CBF     		ite	eq
 11424 008c 694B     		ldreq	r3, .L1024+28
 11425              		.loc 7 294 0
 11426 008e 6A4B     		ldrne	r3, .L1024+32
 11427 0090 9847     		blx	r3
 11428              	.LVL1046:
 11429              	.L970:
 11430              	.LBE2835:
 11431              	.LBE2834:
 11432              	.LBB2839:
 11433              	.LBB2840:
 103:commandHandlers.h **** 	dout << axis << " set pwm to " << speed << endl;
 11434              		.loc 1 103 0
 11435 0092 654E     		ldr	r6, .L1024+16
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 11436              		.loc 7 236 0
 11437 0094 2168     		ldr	r1, [r4, #0]
 11438 0096 3046     		mov	r0, r6
 11439 0098 B847     		blx	r7
 11440              	.LVL1047:
 11441              	.LBE2840:
 11442              	.LBE2839:
 11443              	.LBB2841:
 11444              	.LBB2842:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 11445              		.loc 7 122 0
 11446 009a 6B68     		ldr	r3, [r5, #4]
 11447 009c 002B     		cmp	r3, #0
 11448 009e 56D0     		beq	.L1015
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 11449              		.loc 7 126 0
 11450 00a0 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 11451              		.loc 7 125 0
 11452 00a2 022B     		cmp	r3, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 11453              		.loc 7 126 0
 11454 00a4 3046     		mov	r0, r6
 11455 00a6 0CBF     		ite	eq
 11456 00a8 674B     		ldreq	r3, .L1024+48
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 11457              		.loc 7 129 0
 11458 00aa 684B     		ldrne	r3, .L1024+52
 11459 00ac 9847     		blx	r3
 11460              	.LVL1048:
 11461              	.L973:
 11462              	.LBE2842:
 11463              	.LBE2841:
 237:commandHandlers.h **** 	i++;
 11464              		.loc 1 237 0
 11465 00ae 2368     		ldr	r3, [r4, #0]
 11466 00b0 0133     		adds	r3, r3, #1
 239:commandHandlers.h **** 	if(i < 4){
 11467              		.loc 1 239 0
 11468 00b2 032B     		cmp	r3, #3
 237:commandHandlers.h **** 	i++;
 11469              		.loc 1 237 0
 11470 00b4 2360     		str	r3, [r4, #0]
 239:commandHandlers.h **** 	if(i < 4){
 11471              		.loc 1 239 0
 11472 00b6 25DD     		ble	.L1001
 243:commandHandlers.h **** 	if(i == 5){
 11473              		.loc 1 243 0
 11474 00b8 052B     		cmp	r3, #5
 11475 00ba 61D0     		beq	.L1016
 11476              	.L975:
 11477              	.LBE2813:
 11478              	.LBB2886:
 11479              	.LBB2887:
 11480              	.LBB2888:
 248:commandHandlers.h **** 	Utils::enableSystick();
 11481              		.loc 1 248 0
 11482 00bc 644B     		ldr	r3, .L1024+56
 11483              	.LBB2889:
 11484              	.LBB2890:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 11485              		.loc 7 287 0
 11486 00be 654C     		ldr	r4, .L1024+60
 11487              	.LBE2890:
 11488              	.LBE2889:
 248:commandHandlers.h **** 	Utils::enableSystick();
 11489              		.loc 1 248 0
 11490 00c0 9847     		blx	r3
 11491              	.LVL1049:
 249:commandHandlers.h **** 	Control<ALL>::enablePositionControl(true);
 11492              		.loc 1 249 0
 11493 00c2 0120     		movs	r0, #1
 11494 00c4 644B     		ldr	r3, .L1024+64
 11495 00c6 9847     		blx	r3
 11496              	.LVL1050:
 252:commandHandlers.h **** 	zRect.configure(points);
 11497              		.loc 1 252 0
 11498 00c8 644B     		ldr	r3, .L1024+68
 11499 00ca 9847     		blx	r3
 11500              	.LVL1051:
 11501 00cc 644B     		ldr	r3, .L1024+72
 11502 00ce 0146     		mov	r1, r0
 11503 00d0 5448     		ldr	r0, .L1024+12
 11504 00d2 9847     		blx	r3
 11505              	.LVL1052:
 11506              	.LBB2896:
 11507              	.LBB2897:
  27:pattern.h     **** 		func = &T::sample;
 11508              		.loc 4 27 0
 11509 00d4 634A     		ldr	r2, .L1024+76
 11510 00d6 644B     		ldr	r3, .L1024+80
 11511              	.LBE2897:
 11512              	.LBE2896:
 255:commandHandlers.h **** 	Trigger::enable(true);
 11513              		.loc 1 255 0
 11514 00d8 0120     		movs	r0, #1
 11515              	.LBB2899:
 11516              	.LBB2898:
  27:pattern.h     **** 		func = &T::sample;
 11517              		.loc 4 27 0
 11518 00da 1A60     		str	r2, [r3, #0]
 11519              	.LBE2898:
 11520              	.LBE2899:
 255:commandHandlers.h **** 	Trigger::enable(true);
 11521              		.loc 1 255 0
 11522 00dc 634B     		ldr	r3, .L1024+84
 11523 00de 9847     		blx	r3
 11524              	.LVL1053:
 11525              	.LBB2900:
 11526              	.LBB2893:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 11527              		.loc 7 287 0
 11528 00e0 6368     		ldr	r3, [r4, #4]
 11529 00e2 002B     		cmp	r3, #0
 11530 00e4 46D0     		beq	.L1017
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 11531              		.loc 7 290 0
 11532 00e6 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 11533              		.loc 7 291 0
 11534 00e8 2046     		mov	r0, r4
 11535 00ea 6149     		ldr	r1, .L1024+88
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 11536              		.loc 7 290 0
 11537 00ec 14D0     		beq	.L1010
 11538              	.LVL1054:
 11539              	.L990:
 11540              		.loc 7 294 0
 11541 00ee 524B     		ldr	r3, .L1024+32
 11542 00f0 9847     		blx	r3
 11543              	.LVL1055:
 11544              	.L989:
 11545              	.LBE2893:
 11546              	.LBE2900:
 11547              	.LBB2901:
 11548              	.LBB2902:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 11549              		.loc 7 122 0
 11550 00f2 6368     		ldr	r3, [r4, #4]
 11551 00f4 ABB1     		cbz	r3, .L1018
 11552              	.L961:
 11553              	.LBE2902:
 11554              	.LBE2901:
 11555              	.LBE2888:
 11556              	.LBE2887:
 11557              	.LBE2886:
 11558              	.LBB2913:
 11559              	.LBB2846:
 11560              	.LBB2847:
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 11561              		.loc 7 126 0
 11562 00f6 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 11563              		.loc 7 125 0
 11564 00f8 022B     		cmp	r3, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 11565              		.loc 7 126 0
 11566 00fa 5648     		ldr	r0, .L1024+60
 11567 00fc 0CBF     		ite	eq
 11568 00fe 524B     		ldreq	r3, .L1024+48
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 11569              		.loc 7 129 0
 11570 0100 524B     		ldrne	r3, .L1024+52
 11571 0102 9847     		blx	r3
 11572              	.LVL1056:
 11573              	.L1001:
 11574              	.LBE2847:
 11575              	.LBE2846:
 11576              	.LBE2913:
 260:commandHandlers.h **** }
 11577              		.loc 1 260 0
 11578 0104 0020     		movs	r0, #0
 11579 0106 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 11580              	.LVL1057:
 11581              	.L1011:
 11582              	.LBB2914:
 11583              	.LBB2848:
 11584              	.LBB2849:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 11585              		.loc 7 287 0
 11586 010a 524C     		ldr	r4, .L1024+60
 11587 010c 6368     		ldr	r3, [r4, #4]
 11588 010e C3B1     		cbz	r3, .L1019
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 11589              		.loc 7 290 0
 11590 0110 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 11591              		.loc 7 291 0
 11592 0112 2046     		mov	r0, r4
 11593              	.LVL1058:
 11594 0114 5749     		ldr	r1, .L1024+92
 11595              	.LVL1059:
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 11596              		.loc 7 290 0
 11597 0116 EAD1     		bne	.L990
 11598              	.LVL1060:
 11599              	.L1010:
 11600              	.LBE2849:
 11601              	.LBE2848:
 11602              	.LBE2914:
 11603              	.LBB2915:
 11604              	.LBB2911:
 11605              	.LBB2909:
 11606              	.LBB2906:
 11607              	.LBB2894:
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 11608              		.loc 7 291 0
 11609 0118 464B     		ldr	r3, .L1024+28
 11610 011a 9847     		blx	r3
 11611              	.LVL1061:
 11612              	.LBE2894:
 11613              	.LBE2906:
 11614              	.LBB2907:
 11615              	.LBB2905:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 11616              		.loc 7 122 0
 11617 011c 6368     		ldr	r3, [r4, #4]
 11618 011e 002B     		cmp	r3, #0
 11619 0120 E9D1     		bne	.L961
 11620              	.L1018:
 11621              	.LVL1062:
 11622              	.LBB2903:
 11623              	.LBB2904:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 11624              		.loc 7 123 0
 11625 0122 4C4B     		ldr	r3, .L1024+60
 11626 0124 1868     		ldr	r0, [r3, #0]
 11627 0126 0368     		ldr	r3, [r0, #0]
 11628 0128 0A21     		movs	r1, #10
 11629 012a 9B68     		ldr	r3, [r3, #8]
 11630 012c 9847     		blx	r3
 11631              	.LVL1063:
 11632              	.LBE2904:
 11633              	.LBE2903:
 11634              	.LBE2905:
 11635              	.LBE2907:
 11636              	.LBE2909:
 11637              	.LBE2911:
 11638              	.LBE2915:
 260:commandHandlers.h **** }
 11639              		.loc 1 260 0
 11640 012e 0020     		movs	r0, #0
 11641 0130 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 11642              	.LVL1064:
 11643              	.L1013:
 11644              	.LBB2916:
 11645              	.LBB2853:
 11646              	.LBB2831:
 11647              	.LBB2829:
 11648              	.LBB2830:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 11649              		.loc 7 288 0
 11650 0134 D9F80000 		ldr	r0, [r9, #0]
 11651 0138 4149     		ldr	r1, .L1024+40
 11652 013a 0368     		ldr	r3, [r0, #0]
 11653 013c DB68     		ldr	r3, [r3, #12]
 11654 013e 9847     		blx	r3
 11655              	.LVL1065:
 11656 0140 95E7     		b	.L967
 11657              	.LVL1066:
 11658              	.L1019:
 11659              	.LBE2830:
 11660              	.LBE2829:
 11661              	.LBE2831:
 11662              	.LBE2853:
 11663              	.LBB2854:
 11664              	.LBB2852:
 11665              	.LBB2850:
 11666              	.LBB2851:
 11667 0142 2068     		ldr	r0, [r4, #0]
 11668              	.LVL1067:
 11669 0144 4B49     		ldr	r1, .L1024+92
 11670              	.LVL1068:
 11671 0146 0368     		ldr	r3, [r0, #0]
 11672 0148 DB68     		ldr	r3, [r3, #12]
 11673 014a 9847     		blx	r3
 11674              	.LVL1069:
 11675 014c D1E7     		b	.L989
 11676              	.LVL1070:
 11677              	.L1015:
 11678              	.LBE2851:
 11679              	.LBE2850:
 11680              	.LBE2852:
 11681              	.LBE2854:
 11682              	.LBB2855:
 11683              	.LBB2845:
 11684              	.LBB2843:
 11685              	.LBB2844:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 11686              		.loc 7 123 0
 11687 014e 3068     		ldr	r0, [r6, #0]
 11688 0150 0368     		ldr	r3, [r0, #0]
 11689 0152 0A21     		movs	r1, #10
 11690 0154 9B68     		ldr	r3, [r3, #8]
 11691 0156 9847     		blx	r3
 11692              	.LVL1071:
 11693 0158 A9E7     		b	.L973
 11694              	.LVL1072:
 11695              	.L1014:
 11696              	.LBE2844:
 11697              	.LBE2843:
 11698              	.LBE2845:
 11699              	.LBE2855:
 11700              	.LBB2856:
 11701              	.LBB2838:
 11702              	.LBB2836:
 11703              	.LBB2837:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 11704              		.loc 7 288 0
 11705 015a D9F80000 		ldr	r0, [r9, #0]
 11706 015e 3949     		ldr	r1, .L1024+44
 11707 0160 0368     		ldr	r3, [r0, #0]
 11708 0162 DB68     		ldr	r3, [r3, #12]
 11709 0164 9847     		blx	r3
 11710              	.LVL1073:
 11711 0166 94E7     		b	.L970
 11712              	.LVL1074:
 11713              	.L1012:
 11714              	.LBE2837:
 11715              	.LBE2836:
 11716              	.LBE2838:
 11717              	.LBE2856:
 11718              	.LBB2857:
 11719              	.LBB2822:
 11720              	.LBB2818:
 11721              	.LBB2819:
 11722 0168 2868     		ldr	r0, [r5, #0]
 11723 016a 3149     		ldr	r1, .L1024+24
 11724 016c 0368     		ldr	r3, [r0, #0]
 11725 016e DB68     		ldr	r3, [r3, #12]
 11726 0170 9847     		blx	r3
 11727              	.LVL1075:
 11728 0172 6AE7     		b	.L964
 11729              	.LVL1076:
 11730              	.L1017:
 11731              	.LBE2819:
 11732              	.LBE2818:
 11733              	.LBE2822:
 11734              	.LBE2857:
 11735              	.LBE2916:
 11736              	.LBB2917:
 11737              	.LBB2912:
 11738              	.LBB2910:
 11739              	.LBB2908:
 11740              	.LBB2895:
 11741              	.LBB2891:
 11742              	.LBB2892:
 11743 0174 2068     		ldr	r0, [r4, #0]
 11744 0176 3E49     		ldr	r1, .L1024+88
 11745 0178 0368     		ldr	r3, [r0, #0]
 11746 017a DB68     		ldr	r3, [r3, #12]
 11747 017c 9847     		blx	r3
 11748              	.LVL1077:
 11749 017e B8E7     		b	.L989
 11750              	.LVL1078:
 11751              	.L1016:
 11752              	.LBE2892:
 11753              	.LBE2891:
 11754              	.LBE2895:
 11755              	.LBE2908:
 11756              	.LBE2910:
 11757              	.LBE2912:
 11758              	.LBE2917:
 11759              	.LBB2918:
 11760              	.LBB2858:
 11761              	.LBB2859:
  40:pattern.h     **** 		running = true;
 11762              		.loc 4 40 0
 11763 0180 0123     		movs	r3, #1
 11764 0182 88F80030 		strb	r3, [r8, #0]
  41:pattern.h     **** 		paused = false;
 11765              		.loc 4 41 0
 11766 0186 244B     		ldr	r3, .L1024
 11767 0188 0022     		movs	r2, #0
  42:pattern.h     **** 		State::set(State::SCANNING_RECTANGLE);
 11768              		.loc 4 42 0
 11769 018a 0420     		movs	r0, #4
  41:pattern.h     **** 		paused = false;
 11770              		.loc 4 41 0
 11771 018c 1A70     		strb	r2, [r3, #0]
  42:pattern.h     **** 		State::set(State::SCANNING_RECTANGLE);
 11772              		.loc 4 42 0
 11773 018e 3A4B     		ldr	r3, .L1024+96
 11774 0190 9847     		blx	r3
 11775              	.LVL1079:
 11776              	.LBB2860:
 11777              	.LBB2861:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 11778              		.loc 7 287 0
 11779 0192 6B68     		ldr	r3, [r5, #4]
 11780 0194 2448     		ldr	r0, .L1024+16
 11781 0196 002B     		cmp	r3, #0
 11782 0198 25D0     		beq	.L1020
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 11783              		.loc 7 290 0
 11784 019a 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 11785              		.loc 7 291 0
 11786 019c 3749     		ldr	r1, .L1024+100
 11787 019e 0CBF     		ite	eq
 11788 01a0 244B     		ldreq	r3, .L1024+28
 11789              		.loc 7 294 0
 11790 01a2 254B     		ldrne	r3, .L1024+32
 11791 01a4 9847     		blx	r3
 11792              	.LVL1080:
 11793              	.L977:
 11794              	.LBE2861:
 11795              	.LBE2860:
 11796              	.LBB2865:
 11797              	.LBB2866:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 11798              		.loc 7 122 0
 11799 01a6 6B68     		ldr	r3, [r5, #4]
 11800 01a8 1F48     		ldr	r0, .L1024+16
 11801 01aa 002B     		cmp	r3, #0
 11802 01ac 2DD0     		beq	.L1021
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 11803              		.loc 7 126 0
 11804 01ae 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 11805              		.loc 7 125 0
 11806 01b0 022B     		cmp	r3, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 11807              		.loc 7 126 0
 11808 01b2 0CBF     		ite	eq
 11809 01b4 244B     		ldreq	r3, .L1024+48
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 11810              		.loc 7 129 0
 11811 01b6 254B     		ldrne	r3, .L1024+52
 11812 01b8 9847     		blx	r3
 11813              	.LVL1081:
 11814              	.L980:
 11815              	.LBE2866:
 11816              	.LBE2865:
 11817              	.LBB2870:
 11818              	.LBB2871:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 11819              		.loc 7 287 0
 11820 01ba 314D     		ldr	r5, .L1024+104
 11821 01bc 6B68     		ldr	r3, [r5, #4]
 11822 01be F3B1     		cbz	r3, .L1022
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 11823              		.loc 7 290 0
 11824 01c0 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 11825              		.loc 7 291 0
 11826 01c2 2846     		mov	r0, r5
 11827 01c4 2F49     		ldr	r1, .L1024+108
 11828 01c6 0CBF     		ite	eq
 11829 01c8 1A4B     		ldreq	r3, .L1024+28
 11830              		.loc 7 294 0
 11831 01ca 1B4B     		ldrne	r3, .L1024+32
 11832 01cc 9847     		blx	r3
 11833              	.LVL1082:
 11834              	.L983:
 11835              	.LBE2871:
 11836              	.LBE2870:
 11837              	.LBB2875:
 11838              	.LBB2876:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 11839              		.loc 7 122 0
 11840 01ce 6B68     		ldr	r3, [r5, #4]
 11841 01d0 2B48     		ldr	r0, .L1024+104
 11842 01d2 73B1     		cbz	r3, .L1023
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 11843              		.loc 7 126 0
 11844 01d4 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 11845              		.loc 7 125 0
 11846 01d6 022B     		cmp	r3, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 11847              		.loc 7 126 0
 11848 01d8 0CBF     		ite	eq
 11849 01da 1B4B     		ldreq	r3, .L1024+48
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 11850              		.loc 7 129 0
 11851 01dc 1B4B     		ldrne	r3, .L1024+52
 11852 01de 9847     		blx	r3
 11853              	.LVL1083:
 11854              	.L986:
 11855              	.LBE2876:
 11856              	.LBE2875:
 11857              	.LBE2859:
 11858              	.LBE2858:
 245:commandHandlers.h **** 		i = 0;
 11859              		.loc 1 245 0
 11860 01e0 0023     		movs	r3, #0
 11861 01e2 2360     		str	r3, [r4, #0]
 11862 01e4 6AE7     		b	.L975
 11863              	.LVL1084:
 11864              	.L1020:
 11865              	.LBB2885:
 11866              	.LBB2884:
 11867              	.LBB2880:
 11868              	.LBB2864:
 11869              	.LBB2862:
 11870              	.LBB2863:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 11871              		.loc 7 288 0
 11872 01e6 0068     		ldr	r0, [r0, #0]
 11873 01e8 2449     		ldr	r1, .L1024+100
 11874 01ea 0368     		ldr	r3, [r0, #0]
 11875 01ec DB68     		ldr	r3, [r3, #12]
 11876 01ee 9847     		blx	r3
 11877              	.LVL1085:
 11878 01f0 D9E7     		b	.L977
 11879              	.LVL1086:
 11880              	.L1023:
 11881              	.LBE2863:
 11882              	.LBE2862:
 11883              	.LBE2864:
 11884              	.LBE2880:
 11885              	.LBB2881:
 11886              	.LBB2879:
 11887              	.LBB2877:
 11888              	.LBB2878:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 11889              		.loc 7 123 0
 11890 01f2 0068     		ldr	r0, [r0, #0]
 11891 01f4 0368     		ldr	r3, [r0, #0]
 11892 01f6 0A21     		movs	r1, #10
 11893 01f8 9B68     		ldr	r3, [r3, #8]
 11894 01fa 9847     		blx	r3
 11895              	.LVL1087:
 11896 01fc F0E7     		b	.L986
 11897              	.LVL1088:
 11898              	.L1022:
 11899              	.LBE2878:
 11900              	.LBE2877:
 11901              	.LBE2879:
 11902              	.LBE2881:
 11903              	.LBB2882:
 11904              	.LBB2874:
 11905              	.LBB2872:
 11906              	.LBB2873:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 11907              		.loc 7 288 0
 11908 01fe 2868     		ldr	r0, [r5, #0]
 11909 0200 2049     		ldr	r1, .L1024+108
 11910 0202 0368     		ldr	r3, [r0, #0]
 11911 0204 DB68     		ldr	r3, [r3, #12]
 11912 0206 9847     		blx	r3
 11913              	.LVL1089:
 11914 0208 E1E7     		b	.L983
 11915              	.LVL1090:
 11916              	.L1021:
 11917              	.LBE2873:
 11918              	.LBE2872:
 11919              	.LBE2874:
 11920              	.LBE2882:
 11921              	.LBB2883:
 11922              	.LBB2869:
 11923              	.LBB2867:
 11924              	.LBB2868:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 11925              		.loc 7 123 0
 11926 020a 0068     		ldr	r0, [r0, #0]
 11927 020c 0368     		ldr	r3, [r0, #0]
 11928 020e 0A21     		movs	r1, #10
 11929 0210 9B68     		ldr	r3, [r3, #8]
 11930 0212 9847     		blx	r3
 11931              	.LVL1091:
 11932 0214 D1E7     		b	.L980
 11933              	.L1025:
 11934 0216 00BF     		.align	2
 11935              	.L1024:
 11936 0218 00000000 		.word	_ZN7Pattern6pausedE
 11937 021c 00000000 		.word	_ZZN8Handlers24rectanglePatternHandler3EPKciE1i
 11938 0220 00000000 		.word	_ZN7ControlIL4Axis0EE13getIsPositionEv
 11939 0224 00000000 		.word	_ZZN8Handlers24rectanglePatternHandler3EPKciE6points
 11940 0228 00000000 		.word	.LANCHOR2
 11941 022c 00000000 		.word	_ZN7ControlIL4Axis2EE13getIsPositionEv
 11942 0230 A4020000 		.word	.LC31
 11943 0234 00000000 		.word	_ZN4xpcc8IOStream8writeBinEPKc
 11944 0238 00000000 		.word	_ZN4xpcc8IOStream8writeHexEPKc
 11945 023c 00000000 		.word	_ZN4xpcc8IOStream12writeIntegerEl
 11946 0240 3C000000 		.word	.LC3
 11947 0244 B4020000 		.word	.LC32
 11948 0248 00000000 		.word	_ZN4xpcc8IOStream8writeBinEh
 11949 024c 00000000 		.word	_ZN4xpcc8IOStream8writeHexEh
 11950 0250 00000000 		.word	_ZN5Utils13enableSystickEv
 11951 0254 00000000 		.word	.LANCHOR0
 11952 0258 00000000 		.word	_ZN7ControlIL4Axis5EE21enablePositionControlEb
 11953 025c 00000000 		.word	_ZN7Trigger12getThresholdEv
 11954 0260 00000000 		.word	_ZN16QuadrangleZigZag9configureEP5Pointi
 11955 0264 00000000 		.word	_ZN16QuadrangleZigZag6sampleEv
 11956 0268 00000000 		.word	_ZN7Pattern4funcE
 11957 026c 00000000 		.word	_ZN7Trigger6enableEb
 11958 0270 BC020000 		.word	.LC33
 11959 0274 64020000 		.word	.LC28
 11960 0278 00000000 		.word	_ZN5State3setEi
 11961 027c 88020000 		.word	.LC29
 11962 0280 00000000 		.word	.LANCHOR3
 11963 0284 98020000 		.word	.LC30
 11964 0288 00000000 		.word	_ZN7Pattern7runningE
 11965              	.LBE2868:
 11966              	.LBE2867:
 11967              	.LBE2869:
 11968              	.LBE2883:
 11969              	.LBE2884:
 11970              	.LBE2885:
 11971              	.LBE2918:
 11972              		.cfi_endproc
 11973              	.LFE1050:
 11975              		.section	.text._ZN7Pattern5startEv,"axG",%progbits,_ZN7Pattern5startEv,comdat
 11976              		.align	2
 11977              		.weak	_ZN7Pattern5startEv
 11978              		.thumb
 11979              		.thumb_func
 11981              	_ZN7Pattern5startEv:
 11982              	.LFB1028:
  39:pattern.h     **** 	static void start(){
 11983              		.loc 4 39 0
 11984              		.cfi_startproc
 11985              		@ args = 0, pretend = 0, frame = 0
 11986              		@ frame_needed = 0, uses_anonymous_args = 0
  40:pattern.h     **** 		running = true;
 11987              		.loc 4 40 0
 11988 0000 2A4B     		ldr	r3, .L1043
 11989 0002 0122     		movs	r2, #1
  39:pattern.h     **** 	static void start(){
 11990              		.loc 4 39 0
 11991 0004 10B5     		push	{r4, lr}
 11992              	.LCFI61:
 11993              		.cfi_def_cfa_offset 8
 11994              		.cfi_offset 4, -8
 11995              		.cfi_offset 14, -4
  40:pattern.h     **** 		running = true;
 11996              		.loc 4 40 0
 11997 0006 1A70     		strb	r2, [r3, #0]
  41:pattern.h     **** 		paused = false;
 11998              		.loc 4 41 0
 11999 0008 294B     		ldr	r3, .L1043+4
 12000              	.LBB2935:
 12001              	.LBB2936:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 12002              		.loc 7 287 0
 12003 000a 2A4C     		ldr	r4, .L1043+8
 12004              	.LBE2936:
 12005              	.LBE2935:
  41:pattern.h     **** 		paused = false;
 12006              		.loc 4 41 0
 12007 000c 0022     		movs	r2, #0
 12008 000e 1A70     		strb	r2, [r3, #0]
  42:pattern.h     **** 		State::set(State::SCANNING_RECTANGLE);
 12009              		.loc 4 42 0
 12010 0010 0420     		movs	r0, #4
 12011 0012 294B     		ldr	r3, .L1043+12
 12012 0014 9847     		blx	r3
 12013              	.LVL1092:
 12014              	.LBB2941:
 12015              	.LBB2939:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 12016              		.loc 7 287 0
 12017 0016 6368     		ldr	r3, [r4, #4]
 12018 0018 002B     		cmp	r3, #0
 12019 001a 26D0     		beq	.L1039
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 12020              		.loc 7 290 0
 12021 001c 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 12022              		.loc 7 291 0
 12023 001e 2046     		mov	r0, r4
 12024 0020 0CBF     		ite	eq
 12025 0022 264B     		ldreq	r3, .L1043+16
 12026              		.loc 7 294 0
 12027 0024 264B     		ldrne	r3, .L1043+20
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 12028              		.loc 7 291 0
 12029 0026 2749     		ldr	r1, .L1043+24
 12030              		.loc 7 294 0
 12031 0028 9847     		blx	r3
 12032              	.LVL1093:
 12033              	.LBE2939:
 12034              	.LBE2941:
 12035              	.LBB2942:
 12036              	.LBB2943:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 12037              		.loc 7 122 0
 12038 002a 6368     		ldr	r3, [r4, #4]
 12039 002c 2148     		ldr	r0, .L1043+8
 12040 002e 002B     		cmp	r3, #0
 12041 0030 24D0     		beq	.L1040
 12042              	.L1030:
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 12043              		.loc 7 126 0
 12044 0032 0A21     		movs	r1, #10
 12045              	.LBE2943:
 12046              	.LBE2942:
 12047              	.LBB2951:
 12048              	.LBB2952:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 12049              		.loc 7 287 0
 12050 0034 244C     		ldr	r4, .L1043+28
 12051              	.LBE2952:
 12052              	.LBE2951:
 12053              	.LBB2958:
 12054              	.LBB2948:
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 12055              		.loc 7 125 0
 12056 0036 022B     		cmp	r3, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 12057              		.loc 7 126 0
 12058 0038 0CBF     		ite	eq
 12059 003a 244B     		ldreq	r3, .L1043+32
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 12060              		.loc 7 129 0
 12061 003c 244B     		ldrne	r3, .L1043+36
 12062 003e 9847     		blx	r3
 12063              	.LVL1094:
 12064              	.LBE2948:
 12065              	.LBE2958:
 12066              	.LBB2959:
 12067              	.LBB2955:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 12068              		.loc 7 287 0
 12069 0040 6368     		ldr	r3, [r4, #4]
 12070 0042 002B     		cmp	r3, #0
 12071 0044 23D0     		beq	.L1041
 12072              	.L1033:
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 12073              		.loc 7 290 0
 12074 0046 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 12075              		.loc 7 291 0
 12076 0048 2046     		mov	r0, r4
 12077 004a 0CBF     		ite	eq
 12078 004c 1B4B     		ldreq	r3, .L1043+16
 12079              		.loc 7 294 0
 12080 004e 1C4B     		ldrne	r3, .L1043+20
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 12081              		.loc 7 291 0
 12082 0050 2049     		ldr	r1, .L1043+40
 12083              		.loc 7 294 0
 12084 0052 9847     		blx	r3
 12085              	.LVL1095:
 12086              	.LBE2955:
 12087              	.LBE2959:
 12088              	.LBB2960:
 12089              	.LBB2961:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 12090              		.loc 7 122 0
 12091 0054 6368     		ldr	r3, [r4, #4]
 12092 0056 1C48     		ldr	r0, .L1043+28
 12093 0058 002B     		cmp	r3, #0
 12094 005a 21D0     		beq	.L1042
 12095              	.L1036:
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 12096              		.loc 7 126 0
 12097 005c 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 12098              		.loc 7 125 0
 12099 005e 022B     		cmp	r3, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 12100              		.loc 7 126 0
 12101 0060 0CBF     		ite	eq
 12102 0062 1A4B     		ldreq	r3, .L1043+32
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 12103              		.loc 7 129 0
 12104 0064 1A4B     		ldrne	r3, .L1043+36
 12105 0066 9847     		blx	r3
 12106              	.LVL1096:
 12107 0068 10BD     		pop	{r4, pc}
 12108              	.LVL1097:
 12109              	.L1039:
 12110              	.LBE2961:
 12111              	.LBE2960:
 12112              	.LBB2965:
 12113              	.LBB2940:
 12114              	.LBB2937:
 12115              	.LBB2938:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 12116              		.loc 7 288 0
 12117 006a 2068     		ldr	r0, [r4, #0]
 12118 006c 1549     		ldr	r1, .L1043+24
 12119 006e 0368     		ldr	r3, [r0, #0]
 12120 0070 DB68     		ldr	r3, [r3, #12]
 12121 0072 9847     		blx	r3
 12122              	.LVL1098:
 12123              	.LBE2938:
 12124              	.LBE2937:
 12125              	.LBE2940:
 12126              	.LBE2965:
 12127              	.LBB2966:
 12128              	.LBB2949:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 12129              		.loc 7 122 0
 12130 0074 6368     		ldr	r3, [r4, #4]
 12131 0076 0F48     		ldr	r0, .L1043+8
 12132 0078 002B     		cmp	r3, #0
 12133 007a DAD1     		bne	.L1030
 12134              	.LVL1099:
 12135              	.L1040:
 12136              	.LBB2944:
 12137              	.LBB2945:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 12138              		.loc 7 123 0
 12139 007c 0068     		ldr	r0, [r0, #0]
 12140              	.LBE2945:
 12141              	.LBE2944:
 12142              	.LBE2949:
 12143              	.LBE2966:
 12144              	.LBB2967:
 12145              	.LBB2956:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 12146              		.loc 7 287 0
 12147 007e 124C     		ldr	r4, .L1043+28
 12148              	.LBE2956:
 12149              	.LBE2967:
 12150              	.LBB2968:
 12151              	.LBB2950:
 12152              	.LBB2947:
 12153              	.LBB2946:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 12154              		.loc 7 123 0
 12155 0080 0368     		ldr	r3, [r0, #0]
 12156 0082 0A21     		movs	r1, #10
 12157 0084 9B68     		ldr	r3, [r3, #8]
 12158 0086 9847     		blx	r3
 12159              	.LVL1100:
 12160              	.LBE2946:
 12161              	.LBE2947:
 12162              	.LBE2950:
 12163              	.LBE2968:
 12164              	.LBB2969:
 12165              	.LBB2957:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 12166              		.loc 7 287 0
 12167 0088 6368     		ldr	r3, [r4, #4]
 12168 008a 002B     		cmp	r3, #0
 12169 008c DBD1     		bne	.L1033
 12170              	.LVL1101:
 12171              	.L1041:
 12172              	.LBB2953:
 12173              	.LBB2954:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 12174              		.loc 7 288 0
 12175 008e 2068     		ldr	r0, [r4, #0]
 12176 0090 1049     		ldr	r1, .L1043+40
 12177 0092 0368     		ldr	r3, [r0, #0]
 12178 0094 DB68     		ldr	r3, [r3, #12]
 12179 0096 9847     		blx	r3
 12180              	.LVL1102:
 12181              	.LBE2954:
 12182              	.LBE2953:
 12183              	.LBE2957:
 12184              	.LBE2969:
 12185              	.LBB2970:
 12186              	.LBB2964:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 12187              		.loc 7 122 0
 12188 0098 6368     		ldr	r3, [r4, #4]
 12189 009a 0B48     		ldr	r0, .L1043+28
 12190 009c 002B     		cmp	r3, #0
 12191 009e DDD1     		bne	.L1036
 12192              	.LVL1103:
 12193              	.L1042:
 12194              	.LBB2962:
 12195              	.LBB2963:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 12196              		.loc 7 123 0
 12197 00a0 0068     		ldr	r0, [r0, #0]
 12198 00a2 0368     		ldr	r3, [r0, #0]
 12199 00a4 0A21     		movs	r1, #10
 12200 00a6 9B68     		ldr	r3, [r3, #8]
 12201 00a8 9847     		blx	r3
 12202              	.LVL1104:
 12203 00aa 10BD     		pop	{r4, pc}
 12204              	.L1044:
 12205              		.align	2
 12206              	.L1043:
 12207 00ac 00000000 		.word	_ZN7Pattern7runningE
 12208 00b0 00000000 		.word	_ZN7Pattern6pausedE
 12209 00b4 00000000 		.word	.LANCHOR2
 12210 00b8 00000000 		.word	_ZN5State3setEi
 12211 00bc 00000000 		.word	_ZN4xpcc8IOStream8writeBinEPKc
 12212 00c0 00000000 		.word	_ZN4xpcc8IOStream8writeHexEPKc
 12213 00c4 88020000 		.word	.LC29
 12214 00c8 00000000 		.word	.LANCHOR3
 12215 00cc 00000000 		.word	_ZN4xpcc8IOStream8writeBinEh
 12216 00d0 00000000 		.word	_ZN4xpcc8IOStream8writeHexEh
 12217 00d4 98020000 		.word	.LC30
 12218              	.LBE2963:
 12219              	.LBE2962:
 12220              	.LBE2964:
 12221              	.LBE2970:
 12222              		.cfi_endproc
 12223              	.LFE1028:
 12225              		.section	.text._ZN8Handlers23rectanglePatternHandlerEPKci,"axG",%progbits,_ZN8Handlers23rectangleP
 12226              		.align	2
 12227              		.weak	_ZN8Handlers23rectanglePatternHandlerEPKci
 12228              		.thumb
 12229              		.thumb_func
 12231              	_ZN8Handlers23rectanglePatternHandlerEPKci:
 12232              	.LFB1053:
 375:commandHandlers.h **** 
 376:commandHandlers.h **** static bool rectanglePatternHandler(const char* cmd, int length){
 12233              		.loc 1 376 0
 12234              		.cfi_startproc
 12235              		@ args = 0, pretend = 0, frame = 24
 12236              		@ frame_needed = 0, uses_anonymous_args = 0
 12237              	.LVL1105:
 12238 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 12239              	.LCFI62:
 12240              		.cfi_def_cfa_offset 20
 12241              		.cfi_offset 4, -20
 12242              		.cfi_offset 5, -16
 12243              		.cfi_offset 6, -12
 12244              		.cfi_offset 7, -8
 12245              		.cfi_offset 14, -4
 12246 0002 89B0     		sub	sp, sp, #36
 12247              	.LCFI63:
 12248              		.cfi_def_cfa_offset 56
 12249              	.LBB3125:
 377:commandHandlers.h **** 	//expected: 4 arguments: x, y, width, height
 378:commandHandlers.h **** 	static float lastx=-1, lasty=-1, lastw=-1, lasth=-1;
 379:commandHandlers.h **** 
 380:commandHandlers.h **** 	const char* currentPos;
 381:commandHandlers.h **** 	float x = atof2(cmd, &currentPos, 100000.f);
 12250              		.loc 1 381 0
 12251 0004 8D4C     		ldr	r4, .L1180
 12252 0006 8E4A     		ldr	r2, .L1180+4
 12253              	.LBE3125:
 376:commandHandlers.h **** static bool rectanglePatternHandler(const char* cmd, int length){
 12254              		.loc 1 376 0
 12255 0008 0E46     		mov	r6, r1
 12256              	.LBB3282:
 12257              		.loc 1 381 0
 12258 000a 02A9     		add	r1, sp, #8
 12259              	.LVL1106:
 12260              	.LBE3282:
 376:commandHandlers.h **** static bool rectanglePatternHandler(const char* cmd, int length){
 12261              		.loc 1 376 0
 12262 000c 0546     		mov	r5, r0
 12263              	.LBB3283:
 12264              		.loc 1 381 0
 12265 000e A047     		blx	r4
 12266              	.LVL1107:
 382:commandHandlers.h **** 	float y = atof2(currentPos, &currentPos, 100000.f);
 12267              		.loc 1 382 0
 12268 0010 02A9     		add	r1, sp, #8
 381:commandHandlers.h **** 	float x = atof2(cmd, &currentPos, 100000.f);
 12269              		.loc 1 381 0
 12270 0012 0390     		str	r0, [sp, #12]	@ float
 12271              	.LVL1108:
 12272              		.loc 1 382 0
 12273 0014 8A4A     		ldr	r2, .L1180+4
 12274              	.LVL1109:
 12275 0016 0298     		ldr	r0, [sp, #8]
 12276 0018 A047     		blx	r4
 12277              	.LVL1110:
 383:commandHandlers.h **** 	float width = atof2(currentPos, &currentPos, 100000.f);
 12278              		.loc 1 383 0
 12279 001a 02A9     		add	r1, sp, #8
 382:commandHandlers.h **** 	float y = atof2(currentPos, &currentPos, 100000.f);
 12280              		.loc 1 382 0
 12281 001c 0490     		str	r0, [sp, #16]	@ float
 12282              	.LVL1111:
 12283              		.loc 1 383 0
 12284 001e 884A     		ldr	r2, .L1180+4
 12285 0020 0298     		ldr	r0, [sp, #8]
 12286 0022 A047     		blx	r4
 12287              	.LVL1112:
 384:commandHandlers.h **** 	float height = atof2(currentPos, &currentPos, 100000.f);
 12288              		.loc 1 384 0
 12289 0024 02A9     		add	r1, sp, #8
 383:commandHandlers.h **** 	float width = atof2(currentPos, &currentPos, 100000.f);
 12290              		.loc 1 383 0
 12291 0026 0590     		str	r0, [sp, #20]	@ float
 12292              	.LVL1113:
 12293              		.loc 1 384 0
 12294 0028 854A     		ldr	r2, .L1180+4
 12295 002a 0298     		ldr	r0, [sp, #8]
 12296 002c A047     		blx	r4
 12297              	.LVL1114:
 385:commandHandlers.h **** 	int samplingResolution = atoi2(currentPos, &currentPos);
 12298              		.loc 1 385 0
 12299 002e 854B     		ldr	r3, .L1180+8
 384:commandHandlers.h **** 	float height = atof2(currentPos, &currentPos, 100000.f);
 12300              		.loc 1 384 0
 12301 0030 0690     		str	r0, [sp, #24]	@ float
 12302              	.LVL1115:
 12303              		.loc 1 385 0
 12304 0032 02A9     		add	r1, sp, #8
 12305 0034 0298     		ldr	r0, [sp, #8]
 12306 0036 9847     		blx	r3
 12307              	.LVL1116:
 386:commandHandlers.h **** 
 387:commandHandlers.h **** 	//sanity checks:
 388:commandHandlers.h **** 	if(currentPos - cmd > length){
 12308              		.loc 1 388 0
 12309 0038 029B     		ldr	r3, [sp, #8]
 12310 003a 5B1B     		subs	r3, r3, r5
 12311 003c B342     		cmp	r3, r6
 385:commandHandlers.h **** 	int samplingResolution = atoi2(currentPos, &currentPos);
 12312              		.loc 1 385 0
 12313 003e 0746     		mov	r7, r0
 12314              	.LVL1117:
 12315              		.loc 1 388 0
 12316 0040 00F3C380 		bgt	.L1159
 389:commandHandlers.h **** 		cerr << "buffer overrun " << (currentPos - cmd) << endl;
 390:commandHandlers.h **** 		return false;
 391:commandHandlers.h **** 	}
 392:commandHandlers.h **** 	if(x > XSTAGE_LENGTH_MM || x < 0){
 12317              		.loc 1 392 0
 12318 0044 9DED037A 		flds	s14, [sp, #12]
 12319 0048 DFED7F7A 		flds	s15, .L1180+12
 12320 004c B4EEE77A 		fcmpes	s14, s15
 12321 0050 F1EE10FA 		fmstat
 12322 0054 00F39C80 		bgt	.L1053
 12323              		.loc 1 392 0 is_stmt 0 discriminator 1
 12324 0058 B5EEC07A 		fcmpezs	s14
 12325 005c F1EE10FA 		fmstat
 12326 0060 00F19680 		bmi	.L1053
 393:commandHandlers.h **** 		iout << "x param is out of bounds: " << x << endl;
 394:commandHandlers.h **** 		return false;
 395:commandHandlers.h **** 	}
 396:commandHandlers.h **** 	if(y > YSTAGE_LENGTH_MM || y < 0){
 12327              		.loc 1 396 0 is_stmt 1
 12328 0064 DDED046A 		flds	s13, [sp, #16]
 12329 0068 F4EEE76A 		fcmpes	s13, s15
 12330 006c F1EE10FA 		fmstat
 12331 0070 00F3C980 		bgt	.L1061
 12332              		.loc 1 396 0 is_stmt 0 discriminator 1
 12333 0074 F5EEC06A 		fcmpezs	s13
 12334 0078 F1EE10FA 		fmstat
 12335 007c 00F1C380 		bmi	.L1061
 397:commandHandlers.h **** 		iout << "y param is out of bounds: " << y << endl;
 398:commandHandlers.h **** 		return false;
 399:commandHandlers.h **** 	}
 400:commandHandlers.h **** 	if(x+width > XSTAGE_LENGTH_MM || width <= 0){
 12336              		.loc 1 400 0 is_stmt 1
 12337 0080 9DED056A 		flds	s12, [sp, #20]
 12338 0084 37EE067A 		fadds	s14, s14, s12
 12339 0088 B4EEE77A 		fcmpes	s14, s15
 12340 008c F1EE10FA 		fmstat
 12341 0090 00F38281 		bgt	.L1069
 12342              		.loc 1 400 0 is_stmt 0 discriminator 1
 12343 0094 B5EEC06A 		fcmpezs	s12
 12344 0098 F1EE10FA 		fmstat
 12345 009c 40F27C81 		bls	.L1069
 401:commandHandlers.h **** 		iout << "(x+)width param is out of bounds: " << (x+width) << endl;
 402:commandHandlers.h **** 		return false;
 403:commandHandlers.h **** 	}
 404:commandHandlers.h **** 	if(y+height > YSTAGE_LENGTH_MM || height <= 0){
 12346              		.loc 1 404 0 is_stmt 1
 12347 00a0 9DED067A 		flds	s14, [sp, #24]
 12348 00a4 76EE876A 		fadds	s13, s13, s14
 12349 00a8 F4EEE76A 		fcmpes	s13, s15
 12350 00ac F1EE10FA 		fmstat
 12351 00b0 00F3F080 		bgt	.L1078
 12352              		.loc 1 404 0 is_stmt 0 discriminator 1
 12353 00b4 B5EEC07A 		fcmpezs	s14
 12354 00b8 F1EE10FA 		fmstat
 12355 00bc 40F2EA80 		bls	.L1078
 405:commandHandlers.h **** 		iout << "(y+)height param is out of bounds: " << height << endl;
 406:commandHandlers.h **** 		return false;
 407:commandHandlers.h **** 	}
 408:commandHandlers.h **** 	if(samplingResolution < CONTROLX_DEADBAND || samplingResolution > 100000){
 12356              		.loc 1 408 0 is_stmt 1
 12357 00c0 624B     		ldr	r3, .L1180+16
 12358 00c2 9842     		cmp	r0, r3
 12359 00c4 00F29181 		bhi	.L1160
 12360              	.LVL1118:
 12361              	.LBB3126:
 12362              	.LBB3127:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 12363              		.loc 7 287 0
 12364 00c8 614C     		ldr	r4, .L1180+20
 12365 00ca 6368     		ldr	r3, [r4, #4]
 12366 00cc 002B     		cmp	r3, #0
 12367 00ce 00F0F081 		beq	.L1161
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 12368              		.loc 7 290 0
 12369 00d2 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 12370              		.loc 7 291 0
 12371 00d4 2046     		mov	r0, r4
 12372              	.LVL1119:
 12373 00d6 5F49     		ldr	r1, .L1180+24
 12374 00d8 0CBF     		ite	eq
 12375 00da 5F4B     		ldreq	r3, .L1180+28
 12376              		.loc 7 294 0
 12377 00dc 5F4B     		ldrne	r3, .L1180+32
 12378 00de 9847     		blx	r3
 12379              	.LVL1120:
 12380              	.L1091:
 12381              	.LBE3127:
 12382              	.LBE3126:
 12383              	.LBB3131:
 12384              	.LBB3132:
 103:commandHandlers.h **** 	dout << axis << " set pwm to " << speed << endl;
 12385              		.loc 1 103 0
 12386 00e0 5B4E     		ldr	r6, .L1180+20
 12387              	.LVL1121:
 269:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeFloat(v);
 12388              		.loc 7 269 0
 12389 00e2 5F4D     		ldr	r5, .L1180+36
 12390              	.LVL1122:
 12391 00e4 3046     		mov	r0, r6
 12392 00e6 03A9     		add	r1, sp, #12
 12393              	.LVL1123:
 12394 00e8 A847     		blx	r5
 12395              	.LVL1124:
 12396              	.LBE3132:
 12397              	.LBE3131:
 12398              	.LBB3133:
 12399              	.LBB3134:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 12400              		.loc 7 287 0
 12401 00ea 6368     		ldr	r3, [r4, #4]
 12402 00ec 002B     		cmp	r3, #0
 12403 00ee 00F0DA81 		beq	.L1162
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 12404              		.loc 7 290 0
 12405 00f2 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 12406              		.loc 7 291 0
 12407 00f4 3046     		mov	r0, r6
 12408 00f6 5B49     		ldr	r1, .L1180+40
 12409 00f8 0CBF     		ite	eq
 12410 00fa 574B     		ldreq	r3, .L1180+28
 12411              		.loc 7 294 0
 12412 00fc 574B     		ldrne	r3, .L1180+32
 12413 00fe 9847     		blx	r3
 12414              	.LVL1125:
 12415              	.L1094:
 12416              	.LBE3134:
 12417              	.LBE3133:
 12418              	.LBB3138:
 12419              	.LBB3139:
 103:commandHandlers.h **** 	dout << axis << " set pwm to " << speed << endl;
 12420              		.loc 1 103 0
 12421 0100 534E     		ldr	r6, .L1180+20
 269:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeFloat(v);
 12422              		.loc 7 269 0
 12423 0102 04A9     		add	r1, sp, #16
 12424              	.LVL1126:
 12425 0104 3046     		mov	r0, r6
 12426 0106 A847     		blx	r5
 12427              	.LVL1127:
 12428              	.LBE3139:
 12429              	.LBE3138:
 12430              	.LBB3140:
 12431              	.LBB3141:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 12432              		.loc 7 287 0
 12433 0108 6368     		ldr	r3, [r4, #4]
 12434 010a 002B     		cmp	r3, #0
 12435 010c 00F0C581 		beq	.L1163
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 12436              		.loc 7 290 0
 12437 0110 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 12438              		.loc 7 291 0
 12439 0112 3046     		mov	r0, r6
 12440 0114 5349     		ldr	r1, .L1180+40
 12441 0116 0CBF     		ite	eq
 12442 0118 4F4B     		ldreq	r3, .L1180+28
 12443              		.loc 7 294 0
 12444 011a 504B     		ldrne	r3, .L1180+32
 12445 011c 9847     		blx	r3
 12446              	.LVL1128:
 12447              	.L1097:
 12448              	.LBE3141:
 12449              	.LBE3140:
 12450              	.LBB3145:
 12451              	.LBB3146:
 103:commandHandlers.h **** 	dout << axis << " set pwm to " << speed << endl;
 12452              		.loc 1 103 0
 12453 011e 4C4E     		ldr	r6, .L1180+20
 269:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeFloat(v);
 12454              		.loc 7 269 0
 12455 0120 05A9     		add	r1, sp, #20
 12456              	.LVL1129:
 12457 0122 3046     		mov	r0, r6
 12458 0124 A847     		blx	r5
 12459              	.LVL1130:
 12460              	.LBE3146:
 12461              	.LBE3145:
 12462              	.LBB3147:
 12463              	.LBB3148:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 12464              		.loc 7 287 0
 12465 0126 6368     		ldr	r3, [r4, #4]
 12466 0128 002B     		cmp	r3, #0
 12467 012a 00F0B081 		beq	.L1164
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 12468              		.loc 7 290 0
 12469 012e 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 12470              		.loc 7 291 0
 12471 0130 3046     		mov	r0, r6
 12472 0132 4C49     		ldr	r1, .L1180+40
 12473 0134 0CBF     		ite	eq
 12474 0136 484B     		ldreq	r3, .L1180+28
 12475              		.loc 7 294 0
 12476 0138 484B     		ldrne	r3, .L1180+32
 12477 013a 9847     		blx	r3
 12478              	.LVL1131:
 12479              	.L1100:
 12480              	.LBE3148:
 12481              	.LBE3147:
 12482              	.LBB3152:
 12483              	.LBB3153:
 103:commandHandlers.h **** 	dout << axis << " set pwm to " << speed << endl;
 12484              		.loc 1 103 0
 12485 013c 444E     		ldr	r6, .L1180+20
 269:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeFloat(v);
 12486              		.loc 7 269 0
 12487 013e 06A9     		add	r1, sp, #24
 12488              	.LVL1132:
 12489 0140 3046     		mov	r0, r6
 12490 0142 A847     		blx	r5
 12491              	.LVL1133:
 12492              	.LBE3153:
 12493              	.LBE3152:
 12494              	.LBB3154:
 12495              	.LBB3155:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 12496              		.loc 7 122 0
 12497 0144 6368     		ldr	r3, [r4, #4]
 12498 0146 002B     		cmp	r3, #0
 12499 0148 00F09B81 		beq	.L1165
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 12500              		.loc 7 126 0
 12501 014c 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 12502              		.loc 7 125 0
 12503 014e 022B     		cmp	r3, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 12504              		.loc 7 126 0
 12505 0150 3046     		mov	r0, r6
 12506 0152 0CBF     		ite	eq
 12507 0154 444B     		ldreq	r3, .L1180+44
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 12508              		.loc 7 129 0
 12509 0156 454B     		ldrne	r3, .L1180+48
 12510 0158 9847     		blx	r3
 12511              	.LVL1134:
 12512              	.L1103:
 12513              	.LBE3155:
 12514              	.LBE3154:
 12515              	.LBB3159:
 12516              	.LBB3160:
 12517              		.loc 4 59 0
 12518 015a 454D     		ldr	r5, .L1180+52
 12519 015c 2B78     		ldrb	r3, [r5, #0]	@ zero_extendqisi2
 12520 015e 002B     		cmp	r3, #0
 12521 0160 00F0AE80 		beq	.L1105
 12522 0164 434B     		ldr	r3, .L1180+56
 12523 0166 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 12524 0168 002B     		cmp	r3, #0
 12525 016a 40F0A980 		bne	.L1105
 12526              	.LVL1135:
 12527              	.LBE3160:
 12528              	.LBE3159:
 12529              	.LBE3283:
 12530              	.LBB3284:
 12531              	.LBB3285:
 12532              	.LBB3286:
 12533              	.LBB3287:
 12534              	.LBB3288:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 12535              		.loc 7 287 0
 12536 016e 424C     		ldr	r4, .L1180+60
 12537 0170 6368     		ldr	r3, [r4, #4]
 12538 0172 002B     		cmp	r3, #0
 12539 0174 00F02182 		beq	.L1166
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 12540              		.loc 7 290 0
 12541 0178 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 12542              		.loc 7 291 0
 12543 017a 2046     		mov	r0, r4
 12544 017c 3F49     		ldr	r1, .L1180+64
 12545 017e 0CBF     		ite	eq
 12546 0180 354B     		ldreq	r3, .L1180+28
 12547              		.loc 7 294 0
 12548 0182 364B     		ldrne	r3, .L1180+32
 12549 0184 9847     		blx	r3
 12550              	.LVL1136:
 12551              	.L1107:
 12552              	.LBE3288:
 12553              	.LBE3287:
 12554              	.LBB3292:
 12555              	.LBB3293:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 12556              		.loc 7 122 0
 12557 0186 6468     		ldr	r4, [r4, #4]
 12558 0188 B4B9     		cbnz	r4, .L1059
 12559              	.LVL1137:
 12560              	.LBB3294:
 12561              	.LBB3295:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 12562              		.loc 7 123 0
 12563 018a 3B4B     		ldr	r3, .L1180+60
 12564 018c 1868     		ldr	r0, [r3, #0]
 12565 018e 4FE0     		b	.L1155
 12566              	.LVL1138:
 12567              	.L1053:
 12568              	.LBE3295:
 12569              	.LBE3294:
 12570              	.LBE3293:
 12571              	.LBE3292:
 12572              	.LBE3286:
 12573              	.LBE3285:
 12574              	.LBE3284:
 12575              	.LBB3299:
 12576              	.LBB3161:
 12577              	.LBB3162:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 12578              		.loc 7 287 0
 12579 0190 394C     		ldr	r4, .L1180+60
 12580 0192 6368     		ldr	r3, [r4, #4]
 12581 0194 002B     		cmp	r3, #0
 12582 0196 00F02281 		beq	.L1167
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 12583              		.loc 7 290 0
 12584 019a 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 12585              		.loc 7 291 0
 12586 019c 2046     		mov	r0, r4
 12587              	.LVL1139:
 12588 019e 3849     		ldr	r1, .L1180+68
 12589 01a0 0CBF     		ite	eq
 12590 01a2 2D4B     		ldreq	r3, .L1180+28
 12591              		.loc 7 294 0
 12592 01a4 2D4B     		ldrne	r3, .L1180+32
 12593 01a6 9847     		blx	r3
 12594              	.LVL1140:
 12595              	.L1057:
 12596              	.LBE3162:
 12597              	.LBE3161:
 12598              	.LBB3166:
 12599              	.LBB3167:
 221:commandHandlers.h **** 	iout << Control<axis>::isPositionControlEnabled() << ", " << Control<axis>::isSpeedControlEnabled(
 12600              		.loc 1 221 0
 12601 01a8 334D     		ldr	r5, .L1180+60
 12602              	.LVL1141:
 269:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeFloat(v);
 12603              		.loc 7 269 0
 12604 01aa 2D4B     		ldr	r3, .L1180+36
 12605 01ac 2846     		mov	r0, r5
 12606 01ae 03A9     		add	r1, sp, #12
 12607              	.LVL1142:
 12608 01b0 9847     		blx	r3
 12609              	.LVL1143:
 12610              	.LBE3167:
 12611              	.LBE3166:
 12612              	.LBB3168:
 12613              	.LBB3169:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 12614              		.loc 7 122 0
 12615 01b2 6468     		ldr	r4, [r4, #4]
 12616 01b4 002C     		cmp	r4, #0
 12617 01b6 3AD0     		beq	.L1158
 12618              	.LVL1144:
 12619              	.L1059:
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 12620              		.loc 7 126 0
 12621 01b8 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 12622              		.loc 7 125 0
 12623 01ba 022C     		cmp	r4, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 12624              		.loc 7 126 0
 12625 01bc 2E48     		ldr	r0, .L1180+60
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 12626              		.loc 7 125 0
 12627 01be 1ED0     		beq	.L1156
 12628              	.L1077:
 12629              	.LBE3169:
 12630              	.LBE3168:
 12631              	.LBB3174:
 12632              	.LBB3175:
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 12633              		.loc 7 129 0
 12634 01c0 2A4B     		ldr	r3, .L1180+48
 12635 01c2 9847     		blx	r3
 12636              	.LVL1145:
 12637              	.L1076:
 12638              	.LBE3175:
 12639              	.LBE3174:
 402:commandHandlers.h **** 		return false;
 12640              		.loc 1 402 0
 12641 01c4 0020     		movs	r0, #0
 12642              	.L1142:
 12643              	.LBE3299:
 409:commandHandlers.h **** 		iout << "sampling resolution param is out of bounds: " << samplingResolution << endl;
 410:commandHandlers.h **** 		return false;
 411:commandHandlers.h **** 	}
 412:commandHandlers.h **** 
 413:commandHandlers.h **** 	dout << "rectangle: (x,y,width,height) " << x << ", " << y << ", " << width << ", " << height << e
 414:commandHandlers.h **** 
 415:commandHandlers.h **** 	if(Pattern::isRunning()){
 416:commandHandlers.h **** 		iout << "Previous pattern is still running!" << endl;
 417:commandHandlers.h **** 		return false;
 418:commandHandlers.h **** 	}
 419:commandHandlers.h **** 	Utils::enableSystick();
 420:commandHandlers.h **** 	Control<ALL>::enablePositionControl(true);
 421:commandHandlers.h **** 	if(x == lastx && y == lasty && width == lastw && height == lasth){
 422:commandHandlers.h **** 		//execute pattern
 423:commandHandlers.h **** 		Trigger::enable(true);
 424:commandHandlers.h **** 		QuadrangleZigZag zRect;
 425:commandHandlers.h **** 		zRect.configure(x, y, width, height, samplingResolution);
 426:commandHandlers.h **** 		Pattern::setPattern(zRect);
 427:commandHandlers.h **** 		Trigger::setThreshold(samplingResolution);
 428:commandHandlers.h **** 		Trigger::enable(true);
 429:commandHandlers.h **** 		Pattern::start();
 430:commandHandlers.h **** 		return true;
 431:commandHandlers.h **** 	}
 432:commandHandlers.h **** 
 433:commandHandlers.h **** 	lastx = x;
 434:commandHandlers.h **** 	lasty = y;
 435:commandHandlers.h **** 	lastw = width;
 436:commandHandlers.h **** 	lasth = height;
 437:commandHandlers.h **** 
 438:commandHandlers.h **** 	//demonstrate pattern outline
 439:commandHandlers.h **** 	Trigger::enable(true);
 440:commandHandlers.h **** 	Quadrangle rect;
 441:commandHandlers.h **** 	rect.configure(x, y, width, height);
 442:commandHandlers.h **** 	Pattern::setPattern(rect);
 443:commandHandlers.h **** 	Pattern::start();
 444:commandHandlers.h **** 
 445:commandHandlers.h **** 	return true;
 446:commandHandlers.h **** }
 12644              		.loc 1 446 0
 12645 01c6 09B0     		add	sp, sp, #36
 12646 01c8 F0BD     		pop	{r4, r5, r6, r7, pc}
 12647              	.LVL1146:
 12648              	.L1159:
 12649              	.LBB3300:
 12650              	.LBB3180:
 12651              	.LBB3181:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 12652              		.loc 7 287 0
 12653 01ca 2E4C     		ldr	r4, .L1180+72
 12654 01cc 6368     		ldr	r3, [r4, #4]
 12655 01ce 002B     		cmp	r3, #0
 12656 01d0 00F01F81 		beq	.L1168
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 12657              		.loc 7 290 0
 12658 01d4 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 12659              		.loc 7 291 0
 12660 01d6 2046     		mov	r0, r4
 12661              	.LVL1147:
 12662 01d8 2B49     		ldr	r1, .L1180+76
 12663 01da 0CBF     		ite	eq
 12664 01dc 1E4B     		ldreq	r3, .L1180+28
 12665              		.loc 7 294 0
 12666 01de 1F4B     		ldrne	r3, .L1180+32
 12667 01e0 9847     		blx	r3
 12668              	.LVL1148:
 12669              	.L1048:
 12670              	.LBE3181:
 12671              	.LBE3180:
 12672              	.LBB3185:
 12673              	.LBB3186:
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 12674              		.loc 7 236 0
 12675 01e2 0299     		ldr	r1, [sp, #8]
 389:commandHandlers.h **** 		cerr << "buffer overrun " << (currentPos - cmd) << endl;
 12676              		.loc 1 389 0
 12677 01e4 274E     		ldr	r6, .L1180+72
 12678              	.LVL1149:
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 12679              		.loc 7 236 0
 12680 01e6 294B     		ldr	r3, .L1180+80
 12681 01e8 3046     		mov	r0, r6
 12682 01ea 491B     		subs	r1, r1, r5
 12683 01ec 9847     		blx	r3
 12684              	.LVL1150:
 12685              	.LBE3186:
 12686              	.LBE3185:
 12687              	.LBB3187:
 12688              	.LBB3188:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 12689              		.loc 7 122 0
 12690 01ee 6468     		ldr	r4, [r4, #4]
 12691 01f0 002C     		cmp	r4, #0
 12692 01f2 00F02481 		beq	.L1169
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 12693              		.loc 7 126 0
 12694 01f6 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 12695              		.loc 7 125 0
 12696 01f8 022C     		cmp	r4, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 12697              		.loc 7 126 0
 12698 01fa 3046     		mov	r0, r6
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 12699              		.loc 7 125 0
 12700 01fc E0D1     		bne	.L1077
 12701              	.LVL1151:
 12702              	.L1156:
 12703              	.LBE3188:
 12704              	.LBE3187:
 12705              	.LBB3192:
 12706              	.LBB3172:
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 12707              		.loc 7 126 0
 12708 01fe 1A4B     		ldr	r3, .L1180+44
 12709 0200 9847     		blx	r3
 12710              	.LVL1152:
 394:commandHandlers.h **** 		return false;
 12711              		.loc 1 394 0
 12712 0202 0020     		movs	r0, #0
 12713 0204 DFE7     		b	.L1142
 12714              	.LVL1153:
 12715              	.L1061:
 12716              	.LBE3172:
 12717              	.LBE3192:
 12718              	.LBB3193:
 12719              	.LBB3194:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 12720              		.loc 7 287 0
 12721 0206 1C4C     		ldr	r4, .L1180+60
 12722 0208 6368     		ldr	r3, [r4, #4]
 12723 020a 002B     		cmp	r3, #0
 12724 020c 00F01981 		beq	.L1170
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 12725              		.loc 7 290 0
 12726 0210 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 12727              		.loc 7 291 0
 12728 0212 2046     		mov	r0, r4
 12729              	.LVL1154:
 12730 0214 1E49     		ldr	r1, .L1180+84
 12731 0216 0CBF     		ite	eq
 12732 0218 0F4B     		ldreq	r3, .L1180+28
 12733              		.loc 7 294 0
 12734 021a 104B     		ldrne	r3, .L1180+32
 12735 021c 9847     		blx	r3
 12736              	.LVL1155:
 12737              	.L1065:
 12738              	.LBE3194:
 12739              	.LBE3193:
 12740              	.LBB3198:
 12741              	.LBB3199:
 221:commandHandlers.h **** 	iout << Control<axis>::isPositionControlEnabled() << ", " << Control<axis>::isSpeedControlEnabled(
 12742              		.loc 1 221 0
 12743 021e 164D     		ldr	r5, .L1180+60
 12744              	.LVL1156:
 269:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeFloat(v);
 12745              		.loc 7 269 0
 12746 0220 0F4B     		ldr	r3, .L1180+36
 12747 0222 2846     		mov	r0, r5
 12748 0224 04A9     		add	r1, sp, #16
 12749              	.LVL1157:
 12750 0226 9847     		blx	r3
 12751              	.LVL1158:
 12752              	.LBE3199:
 12753              	.LBE3198:
 12754              	.LBB3200:
 12755              	.LBB3201:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 12756              		.loc 7 122 0
 12757 0228 6468     		ldr	r4, [r4, #4]
 12758 022a 002C     		cmp	r4, #0
 12759 022c C4D1     		bne	.L1059
 12760              	.LVL1159:
 12761              	.L1158:
 12762              	.LBE3201:
 12763              	.LBE3200:
 12764              	.LBB3202:
 12765              	.LBB3173:
 12766              	.LBB3170:
 12767              	.LBB3171:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 12768              		.loc 7 123 0
 12769 022e 2868     		ldr	r0, [r5, #0]
 12770              	.LVL1160:
 12771              	.L1155:
 12772 0230 0368     		ldr	r3, [r0, #0]
 12773 0232 0A21     		movs	r1, #10
 12774 0234 9B68     		ldr	r3, [r3, #8]
 12775 0236 9847     		blx	r3
 12776              	.LVL1161:
 394:commandHandlers.h **** 		return false;
 12777              		.loc 1 394 0
 12778 0238 2046     		mov	r0, r4
 12779 023a C4E7     		b	.L1142
 12780              	.L1181:
 12781              		.align	2
 12782              	.L1180:
 12783 023c 00000000 		.word	_Z5atof2PKcPS0_f
 12784 0240 0050C347 		.word	1203982336
 12785 0244 00000000 		.word	_Z5atoi2PKcPS0_
 12786 0248 0000C842 		.word	1120403456
 12787 024c A0860100 		.word	100000
 12788 0250 00000000 		.word	.LANCHOR2
 12789 0254 3C030000 		.word	.LC36
 12790 0258 00000000 		.word	_ZN4xpcc8IOStream8writeBinEPKc
 12791 025c 00000000 		.word	_ZN4xpcc8IOStream8writeHexEPKc
 12792 0260 00000000 		.word	_ZN4xpcc8IOStream10writeFloatERKf
 12793 0264 3C000000 		.word	.LC3
 12794 0268 00000000 		.word	_ZN4xpcc8IOStream8writeBinEh
 12795 026c 00000000 		.word	_ZN4xpcc8IOStream8writeHexEh
 12796 0270 00000000 		.word	_ZN7Pattern7runningE
 12797 0274 00000000 		.word	_ZN7Pattern6pausedE
 12798 0278 00000000 		.word	.LANCHOR0
 12799 027c 64020000 		.word	.LC28
 12800 0280 90010000 		.word	.LC22
 12801 0284 00000000 		.word	.LANCHOR1
 12802 0288 80010000 		.word	.LC21
 12803 028c 00000000 		.word	_ZN4xpcc8IOStream12writeIntegerEl
 12804 0290 AC010000 		.word	.LC23
 12805              	.LVL1162:
 12806              	.L1078:
 12807              	.LBE3171:
 12808              	.LBE3170:
 12809              	.LBE3173:
 12810              	.LBE3202:
 12811              	.LBB3203:
 12812              	.LBB3204:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 12813              		.loc 7 287 0
 12814 0294 934C     		ldr	r4, .L1182
 12815 0296 6368     		ldr	r3, [r4, #4]
 12816 0298 002B     		cmp	r3, #0
 12817 029a 00F01081 		beq	.L1171
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 12818              		.loc 7 290 0
 12819 029e 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 12820              		.loc 7 291 0
 12821 02a0 2046     		mov	r0, r4
 12822              	.LVL1163:
 12823 02a2 9149     		ldr	r1, .L1182+4
 12824 02a4 0CBF     		ite	eq
 12825 02a6 914B     		ldreq	r3, .L1182+8
 12826              		.loc 7 294 0
 12827 02a8 914B     		ldrne	r3, .L1182+12
 12828 02aa 9847     		blx	r3
 12829              	.LVL1164:
 12830              	.L1082:
 12831              	.LBE3204:
 12832              	.LBE3203:
 12833              	.LBB3208:
 12834              	.LBB3209:
 221:commandHandlers.h **** 	iout << Control<axis>::isPositionControlEnabled() << ", " << Control<axis>::isSpeedControlEnabled(
 12835              		.loc 1 221 0
 12836 02ac 8D4D     		ldr	r5, .L1182
 12837              	.LVL1165:
 269:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeFloat(v);
 12838              		.loc 7 269 0
 12839 02ae 914B     		ldr	r3, .L1182+16
 12840 02b0 2846     		mov	r0, r5
 12841 02b2 06A9     		add	r1, sp, #24
 12842              	.LVL1166:
 12843 02b4 9847     		blx	r3
 12844              	.LVL1167:
 12845              	.LBE3209:
 12846              	.LBE3208:
 12847              	.LBB3210:
 12848              	.LBB3211:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 12849              		.loc 7 122 0
 12850 02b6 6468     		ldr	r4, [r4, #4]
 12851 02b8 002C     		cmp	r4, #0
 12852 02ba 7FF47DAF 		bne	.L1059
 12853 02be B6E7     		b	.L1158
 12854              	.LVL1168:
 12855              	.L1105:
 12856              	.LBE3211:
 12857              	.LBE3210:
 419:commandHandlers.h **** 	Utils::enableSystick();
 12858              		.loc 1 419 0
 12859 02c0 8D4B     		ldr	r3, .L1182+20
 12860 02c2 9847     		blx	r3
 12861              	.LVL1169:
 420:commandHandlers.h **** 	Control<ALL>::enablePositionControl(true);
 12862              		.loc 1 420 0
 12863 02c4 0120     		movs	r0, #1
 12864 02c6 8D4B     		ldr	r3, .L1182+24
 12865 02c8 9847     		blx	r3
 12866              	.LVL1170:
 12867              	.LBB3212:
 421:commandHandlers.h **** 	if(x == lastx && y == lasty && width == lastw && height == lasth){
 12868              		.loc 1 421 0
 12869 02ca 8D4B     		ldr	r3, .L1182+28
 12870 02cc DDED037A 		flds	s15, [sp, #12]
 12871 02d0 93ED007A 		flds	s14, [r3, #0]
 12872 02d4 F4EE477A 		fcmps	s15, s14
 12873 02d8 F1EE10FA 		fmstat
 12874 02dc 40F09F80 		bne	.L1172
 421:commandHandlers.h **** 	if(x == lastx && y == lasty && width == lastw && height == lasth){
 12875              		.loc 1 421 0 is_stmt 0 discriminator 1
 12876 02e0 884A     		ldr	r2, .L1182+32
 12877 02e2 9DED047A 		flds	s14, [sp, #16]
 12878 02e6 D2ED006A 		flds	s13, [r2, #0]
 12879 02ea B4EE667A 		fcmps	s14, s13
 12880 02ee F1EE10FA 		fmstat
 12881 02f2 00F0B880 		beq	.L1148
 12882 02f6 DDED056A 		flds	s13, [sp, #20]
 12883 02fa 9DED066A 		flds	s12, [sp, #24]
 12884 02fe 8249     		ldr	r1, .L1182+36
 12885 0300 824E     		ldr	r6, .L1182+40
 12886              	.LVL1171:
 12887              	.L1110:
 12888              	.LBE3212:
 433:commandHandlers.h **** 	lastx = x;
 12889              		.loc 1 433 0 is_stmt 1
 12890 0302 C3ED007A 		fsts	s15, [r3, #0]
 439:commandHandlers.h **** 	Trigger::enable(true);
 12891              		.loc 1 439 0
 12892 0306 0120     		movs	r0, #1
 12893 0308 814B     		ldr	r3, .L1182+44
 434:commandHandlers.h **** 	lasty = y;
 12894              		.loc 1 434 0
 12895 030a 82ED007A 		fsts	s14, [r2, #0]
 435:commandHandlers.h **** 	lastw = width;
 12896              		.loc 1 435 0
 12897 030e C1ED006A 		fsts	s13, [r1, #0]
 436:commandHandlers.h **** 	lasth = height;
 12898              		.loc 1 436 0
 12899 0312 86ED006A 		fsts	s12, [r6, #0]
 439:commandHandlers.h **** 	Trigger::enable(true);
 12900              		.loc 1 439 0
 12901 0316 9847     		blx	r3
 12902              	.LVL1172:
 441:commandHandlers.h **** 	rect.configure(x, y, width, height);
 12903              		.loc 1 441 0
 12904 0318 7E4E     		ldr	r6, .L1182+48
 12905 031a 0398     		ldr	r0, [sp, #12]	@ float
 12906 031c 0499     		ldr	r1, [sp, #16]	@ float
 12907 031e 059A     		ldr	r2, [sp, #20]	@ float
 12908 0320 069B     		ldr	r3, [sp, #24]	@ float
 12909 0322 B047     		blx	r6
 12910              	.LVL1173:
 12911              	.LBB3218:
 12912              	.LBB3219:
  27:pattern.h     **** 		func = &T::sample;
 12913              		.loc 4 27 0
 12914 0324 7C4A     		ldr	r2, .L1182+52
 12915 0326 7D4B     		ldr	r3, .L1182+56
 12916 0328 1A60     		str	r2, [r3, #0]
 12917              	.LBE3219:
 12918              	.LBE3218:
 12919              	.LBB3220:
 12920              	.LBB3221:
  40:pattern.h     **** 		running = true;
 12921              		.loc 4 40 0
 12922 032a 0123     		movs	r3, #1
 12923 032c 2B70     		strb	r3, [r5, #0]
  41:pattern.h     **** 		paused = false;
 12924              		.loc 4 41 0
 12925 032e 7C4B     		ldr	r3, .L1182+60
 12926 0330 0022     		movs	r2, #0
  42:pattern.h     **** 		State::set(State::SCANNING_RECTANGLE);
 12927              		.loc 4 42 0
 12928 0332 0420     		movs	r0, #4
  41:pattern.h     **** 		paused = false;
 12929              		.loc 4 41 0
 12930 0334 1A70     		strb	r2, [r3, #0]
  42:pattern.h     **** 		State::set(State::SCANNING_RECTANGLE);
 12931              		.loc 4 42 0
 12932 0336 7B4B     		ldr	r3, .L1182+64
 12933 0338 9847     		blx	r3
 12934              	.LVL1174:
 12935              	.LBB3222:
 12936              	.LBB3223:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 12937              		.loc 7 287 0
 12938 033a 6368     		ldr	r3, [r4, #4]
 12939 033c 7A48     		ldr	r0, .L1182+68
 12940 033e 002B     		cmp	r3, #0
 12941 0340 00F0C380 		beq	.L1173
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 12942              		.loc 7 290 0
 12943 0344 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 12944              		.loc 7 291 0
 12945 0346 7949     		ldr	r1, .L1182+72
 12946 0348 0CBF     		ite	eq
 12947 034a 684B     		ldreq	r3, .L1182+8
 12948              		.loc 7 294 0
 12949 034c 684B     		ldrne	r3, .L1182+12
 12950 034e 9847     		blx	r3
 12951              	.LVL1175:
 12952              	.L1112:
 12953              	.LBE3223:
 12954              	.LBE3222:
 12955              	.LBB3227:
 12956              	.LBB3228:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 12957              		.loc 7 122 0
 12958 0350 6368     		ldr	r3, [r4, #4]
 12959 0352 7548     		ldr	r0, .L1182+68
 12960 0354 002B     		cmp	r3, #0
 12961 0356 00F00981 		beq	.L1174
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 12962              		.loc 7 126 0
 12963 035a 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 12964              		.loc 7 125 0
 12965 035c 022B     		cmp	r3, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 12966              		.loc 7 126 0
 12967 035e 0CBF     		ite	eq
 12968 0360 734B     		ldreq	r3, .L1182+76
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 12969              		.loc 7 129 0
 12970 0362 744B     		ldrne	r3, .L1182+80
 12971 0364 9847     		blx	r3
 12972              	.LVL1176:
 12973              	.L1115:
 12974              	.LBE3228:
 12975              	.LBE3227:
 12976              	.LBB3232:
 12977              	.LBB3233:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 12978              		.loc 7 287 0
 12979 0366 744C     		ldr	r4, .L1182+84
 12980 0368 6368     		ldr	r3, [r4, #4]
 12981 036a 002B     		cmp	r3, #0
 12982 036c 00F0F880 		beq	.L1175
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 12983              		.loc 7 290 0
 12984 0370 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 12985              		.loc 7 291 0
 12986 0372 2046     		mov	r0, r4
 12987 0374 7149     		ldr	r1, .L1182+88
 12988 0376 0CBF     		ite	eq
 12989 0378 5C4B     		ldreq	r3, .L1182+8
 12990              		.loc 7 294 0
 12991 037a 5D4B     		ldrne	r3, .L1182+12
 12992 037c 9847     		blx	r3
 12993              	.LVL1177:
 12994              	.L1118:
 12995              	.LBE3233:
 12996              	.LBE3232:
 12997              	.LBB3237:
 12998              	.LBB3238:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 12999              		.loc 7 122 0
 13000 037e 6368     		ldr	r3, [r4, #4]
 13001 0380 6D48     		ldr	r0, .L1182+84
 13002 0382 002B     		cmp	r3, #0
 13003 0384 00F0A780 		beq	.L1176
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 13004              		.loc 7 126 0
 13005 0388 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 13006              		.loc 7 125 0
 13007 038a 022B     		cmp	r3, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 13008              		.loc 7 126 0
 13009 038c 0CBF     		ite	eq
 13010 038e 684B     		ldreq	r3, .L1182+76
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 13011              		.loc 7 129 0
 13012 0390 684B     		ldrne	r3, .L1182+80
 13013 0392 9847     		blx	r3
 13014              	.LVL1178:
 445:commandHandlers.h **** 	return true;
 13015              		.loc 1 445 0
 13016 0394 0120     		movs	r0, #1
 13017 0396 16E7     		b	.L1142
 13018              	.LVL1179:
 13019              	.L1069:
 13020              	.LBE3238:
 13021              	.LBE3237:
 13022              	.LBE3221:
 13023              	.LBE3220:
 13024              	.LBB3247:
 13025              	.LBB3248:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 13026              		.loc 7 287 0
 13027 0398 524C     		ldr	r4, .L1182
 13028 039a 6368     		ldr	r3, [r4, #4]
 13029 039c 002B     		cmp	r3, #0
 13030 039e 56D0     		beq	.L1177
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 13031              		.loc 7 290 0
 13032 03a0 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 13033              		.loc 7 291 0
 13034 03a2 2046     		mov	r0, r4
 13035              	.LVL1180:
 13036 03a4 6649     		ldr	r1, .L1182+92
 13037 03a6 0CBF     		ite	eq
 13038 03a8 504B     		ldreq	r3, .L1182+8
 13039              		.loc 7 294 0
 13040 03aa 514B     		ldrne	r3, .L1182+12
 13041 03ac 9847     		blx	r3
 13042              	.LVL1181:
 13043              	.L1073:
 13044              	.LBE3248:
 13045              	.LBE3247:
 401:commandHandlers.h **** 		iout << "(x+)width param is out of bounds: " << (x+width) << endl;
 13046              		.loc 1 401 0
 13047 03ae DDED057A 		flds	s15, [sp, #20]
 13048 03b2 9DED037A 		flds	s14, [sp, #12]
 13049              	.LBB3252:
 13050              	.LBB3253:
 221:commandHandlers.h **** 	iout << Control<axis>::isPositionControlEnabled() << ", " << Control<axis>::isSpeedControlEnabled(
 13051              		.loc 1 221 0
 13052 03b6 4B4D     		ldr	r5, .L1182
 13053              	.LVL1182:
 269:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeFloat(v);
 13054              		.loc 7 269 0
 13055 03b8 4E4B     		ldr	r3, .L1182+16
 13056              	.LBE3253:
 13057              	.LBE3252:
 401:commandHandlers.h **** 		iout << "(x+)width param is out of bounds: " << (x+width) << endl;
 13058              		.loc 1 401 0
 13059 03ba 77EE277A 		fadds	s15, s14, s15
 13060 03be 08A9     		add	r1, sp, #32
 13061 03c0 61ED017A 		fstmdbs	r1!, {s15}
 13062              	.LVL1183:
 13063              	.LBB3255:
 13064              	.LBB3254:
 269:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeFloat(v);
 13065              		.loc 7 269 0
 13066 03c4 2846     		mov	r0, r5
 13067 03c6 9847     		blx	r3
 13068              	.LVL1184:
 13069              	.LBE3254:
 13070              	.LBE3255:
 13071              	.LBB3256:
 13072              	.LBB3178:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 13073              		.loc 7 122 0
 13074 03c8 6368     		ldr	r3, [r4, #4]
 13075 03ca 002B     		cmp	r3, #0
 13076 03cc 45D0     		beq	.L1178
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 13077              		.loc 7 126 0
 13078 03ce 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 13079              		.loc 7 125 0
 13080 03d0 022B     		cmp	r3, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 13081              		.loc 7 126 0
 13082 03d2 2846     		mov	r0, r5
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 13083              		.loc 7 125 0
 13084 03d4 7FF4F4AE 		bne	.L1077
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 13085              		.loc 7 126 0
 13086 03d8 554B     		ldr	r3, .L1182+76
 13087 03da 9847     		blx	r3
 13088              	.LVL1185:
 13089 03dc F2E6     		b	.L1076
 13090              	.LVL1186:
 13091              	.L1167:
 13092              	.LBE3178:
 13093              	.LBE3256:
 13094              	.LBB3257:
 13095              	.LBB3165:
 13096              	.LBB3163:
 13097              	.LBB3164:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 13098              		.loc 7 288 0
 13099 03de 2068     		ldr	r0, [r4, #0]
 13100              	.LVL1187:
 13101 03e0 5849     		ldr	r1, .L1182+96
 13102 03e2 0368     		ldr	r3, [r0, #0]
 13103 03e4 DB68     		ldr	r3, [r3, #12]
 13104 03e6 9847     		blx	r3
 13105              	.LVL1188:
 13106 03e8 DEE6     		b	.L1057
 13107              	.LVL1189:
 13108              	.L1160:
 13109              	.LBE3164:
 13110              	.LBE3163:
 13111              	.LBE3165:
 13112              	.LBE3257:
 13113              	.LBB3258:
 13114              	.LBB3259:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 13115              		.loc 7 287 0
 13116 03ea 3E4C     		ldr	r4, .L1182
 13117 03ec 6368     		ldr	r3, [r4, #4]
 13118 03ee 03B3     		cbz	r3, .L1179
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 13119              		.loc 7 290 0
 13120 03f0 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 13121              		.loc 7 291 0
 13122 03f2 2046     		mov	r0, r4
 13123              	.LVL1190:
 13124 03f4 5449     		ldr	r1, .L1182+100
 13125 03f6 0CBF     		ite	eq
 13126 03f8 3C4B     		ldreq	r3, .L1182+8
 13127              		.loc 7 294 0
 13128 03fa 3D4B     		ldrne	r3, .L1182+12
 13129 03fc 9847     		blx	r3
 13130              	.LVL1191:
 13131              	.L1087:
 13132              	.LBE3259:
 13133              	.LBE3258:
 13134              	.LBB3263:
 13135              	.LBB3264:
 221:commandHandlers.h **** 	iout << Control<axis>::isPositionControlEnabled() << ", " << Control<axis>::isSpeedControlEnabled(
 13136              		.loc 1 221 0
 13137 03fe 394D     		ldr	r5, .L1182
 13138              	.LVL1192:
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 13139              		.loc 7 236 0
 13140 0400 524B     		ldr	r3, .L1182+104
 13141 0402 2846     		mov	r0, r5
 13142 0404 3946     		mov	r1, r7
 13143 0406 9847     		blx	r3
 13144              	.LVL1193:
 13145              	.LBE3264:
 13146              	.LBE3263:
 13147              	.LBB3265:
 13148              	.LBB3266:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 13149              		.loc 7 122 0
 13150 0408 6468     		ldr	r4, [r4, #4]
 13151 040a 002C     		cmp	r4, #0
 13152 040c 7FF4D4AE 		bne	.L1059
 13153 0410 0DE7     		b	.L1158
 13154              	.LVL1194:
 13155              	.L1168:
 13156              	.LBE3266:
 13157              	.LBE3265:
 13158              	.LBB3267:
 13159              	.LBB3184:
 13160              	.LBB3182:
 13161              	.LBB3183:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 13162              		.loc 7 288 0
 13163 0412 2068     		ldr	r0, [r4, #0]
 13164              	.LVL1195:
 13165 0414 4E49     		ldr	r1, .L1182+108
 13166 0416 0368     		ldr	r3, [r0, #0]
 13167 0418 DB68     		ldr	r3, [r3, #12]
 13168 041a 9847     		blx	r3
 13169              	.LVL1196:
 13170 041c E1E6     		b	.L1048
 13171              	.LVL1197:
 13172              	.L1172:
 13173 041e 9DED047A 		flds	s14, [sp, #16]
 13174 0422 DDED056A 		flds	s13, [sp, #20]
 13175 0426 9DED066A 		flds	s12, [sp, #24]
 13176 042a 364A     		ldr	r2, .L1182+32
 13177 042c 3649     		ldr	r1, .L1182+36
 13178 042e 374E     		ldr	r6, .L1182+40
 13179 0430 67E7     		b	.L1110
 13180              	.LVL1198:
 13181              	.L1179:
 13182              	.LBE3183:
 13183              	.LBE3182:
 13184              	.LBE3184:
 13185              	.LBE3267:
 13186              	.LBB3268:
 13187              	.LBB3262:
 13188              	.LBB3260:
 13189              	.LBB3261:
 13190 0432 2068     		ldr	r0, [r4, #0]
 13191              	.LVL1199:
 13192 0434 4449     		ldr	r1, .L1182+100
 13193 0436 0368     		ldr	r3, [r0, #0]
 13194 0438 DB68     		ldr	r3, [r3, #12]
 13195 043a 9847     		blx	r3
 13196              	.LVL1200:
 13197 043c DFE7     		b	.L1087
 13198              	.LVL1201:
 13199              	.L1169:
 13200              	.LBE3261:
 13201              	.LBE3260:
 13202              	.LBE3262:
 13203              	.LBE3268:
 13204              	.LBB3269:
 13205              	.LBB3191:
 13206              	.LBB3189:
 13207              	.LBB3190:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 13208              		.loc 7 123 0
 13209 043e 3068     		ldr	r0, [r6, #0]
 13210 0440 F6E6     		b	.L1155
 13211              	.LVL1202:
 13212              	.L1170:
 13213              	.LBE3190:
 13214              	.LBE3189:
 13215              	.LBE3191:
 13216              	.LBE3269:
 13217              	.LBB3270:
 13218              	.LBB3197:
 13219              	.LBB3195:
 13220              	.LBB3196:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 13221              		.loc 7 288 0
 13222 0442 2068     		ldr	r0, [r4, #0]
 13223              	.LVL1203:
 13224 0444 4349     		ldr	r1, .L1182+112
 13225 0446 0368     		ldr	r3, [r0, #0]
 13226 0448 DB68     		ldr	r3, [r3, #12]
 13227 044a 9847     		blx	r3
 13228              	.LVL1204:
 13229 044c E7E6     		b	.L1065
 13230              	.LVL1205:
 13231              	.L1177:
 13232              	.LBE3196:
 13233              	.LBE3195:
 13234              	.LBE3197:
 13235              	.LBE3270:
 13236              	.LBB3271:
 13237              	.LBB3251:
 13238              	.LBB3249:
 13239              	.LBB3250:
 13240 044e 2068     		ldr	r0, [r4, #0]
 13241              	.LVL1206:
 13242 0450 3B49     		ldr	r1, .L1182+92
 13243 0452 0368     		ldr	r3, [r0, #0]
 13244 0454 DB68     		ldr	r3, [r3, #12]
 13245 0456 9847     		blx	r3
 13246              	.LVL1207:
 13247 0458 A9E7     		b	.L1073
 13248              	.LVL1208:
 13249              	.L1178:
 13250              	.LBE3250:
 13251              	.LBE3249:
 13252              	.LBE3251:
 13253              	.LBE3271:
 13254              	.LBB3272:
 13255              	.LBB3179:
 13256              	.LBB3176:
 13257              	.LBB3177:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 13258              		.loc 7 123 0
 13259 045a 2868     		ldr	r0, [r5, #0]
 13260 045c 0368     		ldr	r3, [r0, #0]
 13261 045e 0A21     		movs	r1, #10
 13262 0460 9B68     		ldr	r3, [r3, #8]
 13263 0462 9847     		blx	r3
 13264              	.LVL1209:
 13265 0464 AEE6     		b	.L1076
 13266              	.LVL1210:
 13267              	.L1148:
 13268              	.LBE3177:
 13269              	.LBE3176:
 13270              	.LBE3179:
 13271              	.LBE3272:
 13272              	.LBB3273:
 421:commandHandlers.h **** 	if(x == lastx && y == lasty && width == lastw && height == lasth){
 13273              		.loc 1 421 0 discriminator 2
 13274 0466 2849     		ldr	r1, .L1182+36
 13275 0468 DDED056A 		flds	s13, [sp, #20]
 13276 046c 91ED006A 		flds	s12, [r1, #0]
 13277 0470 F4EE466A 		fcmps	s13, s12
 13278 0474 F1EE10FA 		fmstat
 13279 0478 7ED0     		beq	.L1149
 13280 047a 9DED066A 		flds	s12, [sp, #24]
 13281 047e 234E     		ldr	r6, .L1182+40
 13282 0480 3FE7     		b	.L1110
 13283              	.LVL1211:
 13284              	.L1165:
 13285              	.LBE3273:
 13286              	.LBB3274:
 13287              	.LBB3158:
 13288              	.LBB3156:
 13289              	.LBB3157:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 13290              		.loc 7 123 0
 13291 0482 3068     		ldr	r0, [r6, #0]
 13292 0484 0368     		ldr	r3, [r0, #0]
 13293 0486 0A21     		movs	r1, #10
 13294 0488 9B68     		ldr	r3, [r3, #8]
 13295 048a 9847     		blx	r3
 13296              	.LVL1212:
 13297 048c 65E6     		b	.L1103
 13298              	.LVL1213:
 13299              	.L1164:
 13300              	.LBE3157:
 13301              	.LBE3156:
 13302              	.LBE3158:
 13303              	.LBE3274:
 13304              	.LBB3275:
 13305              	.LBB3151:
 13306              	.LBB3149:
 13307              	.LBB3150:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 13308              		.loc 7 288 0
 13309 048e 3068     		ldr	r0, [r6, #0]
 13310 0490 3149     		ldr	r1, .L1182+116
 13311 0492 0368     		ldr	r3, [r0, #0]
 13312 0494 DB68     		ldr	r3, [r3, #12]
 13313 0496 9847     		blx	r3
 13314              	.LVL1214:
 13315 0498 50E6     		b	.L1100
 13316              	.LVL1215:
 13317              	.L1163:
 13318              	.LBE3150:
 13319              	.LBE3149:
 13320              	.LBE3151:
 13321              	.LBE3275:
 13322              	.LBB3276:
 13323              	.LBB3144:
 13324              	.LBB3142:
 13325              	.LBB3143:
 13326 049a 3068     		ldr	r0, [r6, #0]
 13327 049c 2E49     		ldr	r1, .L1182+116
 13328 049e 0368     		ldr	r3, [r0, #0]
 13329 04a0 DB68     		ldr	r3, [r3, #12]
 13330 04a2 9847     		blx	r3
 13331              	.LVL1216:
 13332 04a4 3BE6     		b	.L1097
 13333              	.LVL1217:
 13334              	.L1162:
 13335              	.LBE3143:
 13336              	.LBE3142:
 13337              	.LBE3144:
 13338              	.LBE3276:
 13339              	.LBB3277:
 13340              	.LBB3137:
 13341              	.LBB3135:
 13342              	.LBB3136:
 13343 04a6 3068     		ldr	r0, [r6, #0]
 13344 04a8 2B49     		ldr	r1, .L1182+116
 13345 04aa 0368     		ldr	r3, [r0, #0]
 13346 04ac DB68     		ldr	r3, [r3, #12]
 13347 04ae 9847     		blx	r3
 13348              	.LVL1218:
 13349 04b0 26E6     		b	.L1094
 13350              	.LVL1219:
 13351              	.L1161:
 13352              	.LBE3136:
 13353              	.LBE3135:
 13354              	.LBE3137:
 13355              	.LBE3277:
 13356              	.LBB3278:
 13357              	.LBB3130:
 13358              	.LBB3128:
 13359              	.LBB3129:
 13360 04b2 2068     		ldr	r0, [r4, #0]
 13361              	.LVL1220:
 13362 04b4 2949     		ldr	r1, .L1182+120
 13363 04b6 0368     		ldr	r3, [r0, #0]
 13364 04b8 DB68     		ldr	r3, [r3, #12]
 13365 04ba 9847     		blx	r3
 13366              	.LVL1221:
 13367 04bc 10E6     		b	.L1091
 13368              	.LVL1222:
 13369              	.L1171:
 13370              	.LBE3129:
 13371              	.LBE3128:
 13372              	.LBE3130:
 13373              	.LBE3278:
 13374              	.LBB3279:
 13375              	.LBB3207:
 13376              	.LBB3205:
 13377              	.LBB3206:
 13378 04be 2068     		ldr	r0, [r4, #0]
 13379              	.LVL1223:
 13380 04c0 0949     		ldr	r1, .L1182+4
 13381 04c2 0368     		ldr	r3, [r0, #0]
 13382 04c4 DB68     		ldr	r3, [r3, #12]
 13383 04c6 9847     		blx	r3
 13384              	.LVL1224:
 13385 04c8 F0E6     		b	.L1082
 13386              	.LVL1225:
 13387              	.L1173:
 13388              	.LBE3206:
 13389              	.LBE3205:
 13390              	.LBE3207:
 13391              	.LBE3279:
 13392              	.LBB3280:
 13393              	.LBB3246:
 13394              	.LBB3242:
 13395              	.LBB3226:
 13396              	.LBB3224:
 13397              	.LBB3225:
 13398 04ca 0068     		ldr	r0, [r0, #0]
 13399 04cc 1749     		ldr	r1, .L1182+72
 13400 04ce 0368     		ldr	r3, [r0, #0]
 13401 04d0 DB68     		ldr	r3, [r3, #12]
 13402 04d2 9847     		blx	r3
 13403              	.LVL1226:
 13404 04d4 3CE7     		b	.L1112
 13405              	.LVL1227:
 13406              	.L1176:
 13407              	.LBE3225:
 13408              	.LBE3224:
 13409              	.LBE3226:
 13410              	.LBE3242:
 13411              	.LBB3243:
 13412              	.LBB3241:
 13413              	.LBB3239:
 13414              	.LBB3240:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 13415              		.loc 7 123 0
 13416 04d6 0068     		ldr	r0, [r0, #0]
 13417 04d8 0368     		ldr	r3, [r0, #0]
 13418 04da 0A21     		movs	r1, #10
 13419 04dc 9B68     		ldr	r3, [r3, #8]
 13420 04de 9847     		blx	r3
 13421              	.LVL1228:
 445:commandHandlers.h **** 	return true;
 13422              		.loc 1 445 0
 13423 04e0 0120     		movs	r0, #1
 13424 04e2 70E6     		b	.L1142
 13425              	.L1183:
 13426              		.align	2
 13427              	.L1182:
 13428 04e4 00000000 		.word	.LANCHOR0
 13429 04e8 18030000 		.word	.LC35
 13430 04ec 00000000 		.word	_ZN4xpcc8IOStream8writeBinEPKc
 13431 04f0 00000000 		.word	_ZN4xpcc8IOStream8writeHexEPKc
 13432 04f4 00000000 		.word	_ZN4xpcc8IOStream10writeFloatERKf
 13433 04f8 00000000 		.word	_ZN5Utils13enableSystickEv
 13434 04fc 00000000 		.word	_ZN7ControlIL4Axis5EE21enablePositionControlEb
 13435 0500 00000000 		.word	_ZZN8Handlers23rectanglePatternHandlerEPKciE5lastx
 13436 0504 00000000 		.word	_ZZN8Handlers23rectanglePatternHandlerEPKciE5lasty
 13437 0508 00000000 		.word	_ZZN8Handlers23rectanglePatternHandlerEPKciE5lastw
 13438 050c 00000000 		.word	_ZZN8Handlers23rectanglePatternHandlerEPKciE5lasth
 13439 0510 00000000 		.word	_ZN7Trigger6enableEb
 13440 0514 00000000 		.word	_ZN10Quadrangle9configureEffff
 13441 0518 00000000 		.word	_ZN10Quadrangle6sampleEv
 13442 051c 00000000 		.word	_ZN7Pattern4funcE
 13443 0520 00000000 		.word	_ZN7Pattern6pausedE
 13444 0524 00000000 		.word	_ZN5State3setEi
 13445 0528 00000000 		.word	.LANCHOR2
 13446 052c 88020000 		.word	.LC29
 13447 0530 00000000 		.word	_ZN4xpcc8IOStream8writeBinEh
 13448 0534 00000000 		.word	_ZN4xpcc8IOStream8writeHexEh
 13449 0538 00000000 		.word	.LANCHOR3
 13450 053c 98020000 		.word	.LC30
 13451 0540 F4020000 		.word	.LC34
 13452 0544 90010000 		.word	.LC22
 13453 0548 08020000 		.word	.LC26
 13454 054c 00000000 		.word	_ZN4xpcc8IOStream12writeIntegerEl
 13455 0550 80010000 		.word	.LC21
 13456 0554 AC010000 		.word	.LC23
 13457 0558 3C000000 		.word	.LC3
 13458 055c 3C030000 		.word	.LC36
 13459              	.LVL1229:
 13460              	.L1175:
 13461              	.LBE3240:
 13462              	.LBE3239:
 13463              	.LBE3241:
 13464              	.LBE3243:
 13465              	.LBB3244:
 13466              	.LBB3236:
 13467              	.LBB3234:
 13468              	.LBB3235:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 13469              		.loc 7 288 0
 13470 0560 2068     		ldr	r0, [r4, #0]
 13471 0562 1949     		ldr	r1, .L1184
 13472 0564 0368     		ldr	r3, [r0, #0]
 13473 0566 DB68     		ldr	r3, [r3, #12]
 13474 0568 9847     		blx	r3
 13475              	.LVL1230:
 13476 056a 08E7     		b	.L1118
 13477              	.LVL1231:
 13478              	.L1174:
 13479              	.LBE3235:
 13480              	.LBE3234:
 13481              	.LBE3236:
 13482              	.LBE3244:
 13483              	.LBB3245:
 13484              	.LBB3231:
 13485              	.LBB3229:
 13486              	.LBB3230:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 13487              		.loc 7 123 0
 13488 056c 0068     		ldr	r0, [r0, #0]
 13489 056e 0368     		ldr	r3, [r0, #0]
 13490 0570 0A21     		movs	r1, #10
 13491 0572 9B68     		ldr	r3, [r3, #8]
 13492 0574 9847     		blx	r3
 13493              	.LVL1232:
 13494 0576 F6E6     		b	.L1115
 13495              	.LVL1233:
 13496              	.L1149:
 13497              	.LBE3230:
 13498              	.LBE3229:
 13499              	.LBE3231:
 13500              	.LBE3245:
 13501              	.LBE3246:
 13502              	.LBE3280:
 13503              	.LBB3281:
 421:commandHandlers.h **** 	if(x == lastx && y == lasty && width == lastw && height == lasth){
 13504              		.loc 1 421 0 discriminator 3
 13505 0578 144E     		ldr	r6, .L1184+4
 13506 057a 9DED066A 		flds	s12, [sp, #24]
 13507 057e D6ED005A 		flds	s11, [r6, #0]
 13508 0582 B4EE656A 		fcmps	s12, s11
 13509 0586 F1EE10FA 		fmstat
 13510 058a 7FF4BAAE 		bne	.L1110
 13511              	.LBB3213:
 423:commandHandlers.h **** 		Trigger::enable(true);
 13512              		.loc 1 423 0
 13513 058e 0120     		movs	r0, #1
 13514 0590 0F4C     		ldr	r4, .L1184+8
 425:commandHandlers.h **** 		zRect.configure(x, y, width, height, samplingResolution);
 13515              		.loc 1 425 0
 13516 0592 104D     		ldr	r5, .L1184+12
 423:commandHandlers.h **** 		Trigger::enable(true);
 13517              		.loc 1 423 0
 13518 0594 A047     		blx	r4
 13519              	.LVL1234:
 425:commandHandlers.h **** 		zRect.configure(x, y, width, height, samplingResolution);
 13520              		.loc 1 425 0
 13521 0596 0499     		ldr	r1, [sp, #16]	@ float
 13522 0598 059A     		ldr	r2, [sp, #20]	@ float
 13523 059a 069B     		ldr	r3, [sp, #24]	@ float
 13524 059c 0398     		ldr	r0, [sp, #12]	@ float
 13525 059e 0097     		str	r7, [sp, #0]
 13526 05a0 A847     		blx	r5
 13527              	.LVL1235:
 13528              	.LBB3214:
 13529              	.LBB3215:
  27:pattern.h     **** 		func = &T::sample;
 13530              		.loc 4 27 0
 13531 05a2 0D4A     		ldr	r2, .L1184+16
 13532 05a4 0D4B     		ldr	r3, .L1184+20
 13533              	.LBE3215:
 13534              	.LBE3214:
 427:commandHandlers.h **** 		Trigger::setThreshold(samplingResolution);
 13535              		.loc 1 427 0
 13536 05a6 3846     		mov	r0, r7
 13537              	.LBB3217:
 13538              	.LBB3216:
  27:pattern.h     **** 		func = &T::sample;
 13539              		.loc 4 27 0
 13540 05a8 1A60     		str	r2, [r3, #0]
 13541              	.LBE3216:
 13542              	.LBE3217:
 427:commandHandlers.h **** 		Trigger::setThreshold(samplingResolution);
 13543              		.loc 1 427 0
 13544 05aa 0D4B     		ldr	r3, .L1184+24
 13545 05ac 9847     		blx	r3
 13546              	.LVL1236:
 428:commandHandlers.h **** 		Trigger::enable(true);
 13547              		.loc 1 428 0
 13548 05ae 0120     		movs	r0, #1
 13549 05b0 A047     		blx	r4
 13550              	.LVL1237:
 429:commandHandlers.h **** 		Pattern::start();
 13551              		.loc 1 429 0
 13552 05b2 0C4B     		ldr	r3, .L1184+28
 13553 05b4 9847     		blx	r3
 13554              	.LVL1238:
 430:commandHandlers.h **** 		return true;
 13555              		.loc 1 430 0
 13556 05b6 0120     		movs	r0, #1
 13557 05b8 05E6     		b	.L1142
 13558              	.LVL1239:
 13559              	.L1166:
 13560              	.LBE3213:
 13561              	.LBE3281:
 13562              	.LBE3300:
 13563              	.LBB3301:
 13564              	.LBB3298:
 13565              	.LBB3297:
 13566              	.LBB3296:
 13567              	.LBB3291:
 13568              	.LBB3289:
 13569              	.LBB3290:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 13570              		.loc 7 288 0
 13571 05ba 2068     		ldr	r0, [r4, #0]
 13572 05bc 0A49     		ldr	r1, .L1184+32
 13573 05be 0368     		ldr	r3, [r0, #0]
 13574 05c0 DB68     		ldr	r3, [r3, #12]
 13575 05c2 9847     		blx	r3
 13576              	.LVL1240:
 13577 05c4 DFE5     		b	.L1107
 13578              	.L1185:
 13579 05c6 00BF     		.align	2
 13580              	.L1184:
 13581 05c8 98020000 		.word	.LC30
 13582 05cc 00000000 		.word	_ZZN8Handlers23rectanglePatternHandlerEPKciE5lasth
 13583 05d0 00000000 		.word	_ZN7Trigger6enableEb
 13584 05d4 00000000 		.word	_ZN16QuadrangleZigZag9configureEffffi
 13585 05d8 00000000 		.word	_ZN16QuadrangleZigZag6sampleEv
 13586 05dc 00000000 		.word	_ZN7Pattern4funcE
 13587 05e0 00000000 		.word	_ZN7Trigger12setThresholdEi
 13588 05e4 00000000 		.word	_ZN7Pattern5startEv
 13589 05e8 64020000 		.word	.LC28
 13590              	.LBE3290:
 13591              	.LBE3289:
 13592              	.LBE3291:
 13593              	.LBE3296:
 13594              	.LBE3297:
 13595              	.LBE3298:
 13596              	.LBE3301:
 13597              		.cfi_endproc
 13598              	.LFE1053:
 13600              		.section	.text._ZN2PC4initEv,"ax",%progbits
 13601              		.align	2
 13602              		.global	_ZN2PC4initEv
 13603              		.thumb
 13604              		.thumb_func
 13606              	_ZN2PC4initEv:
 13607              	.LFB1054:
  82:pcInterface.cpp **** bool PC::init(){
 13608              		.loc 15 82 0
 13609              		.cfi_startproc
 13610              		@ args = 0, pretend = 0, frame = 0
 13611              		@ frame_needed = 0, uses_anonymous_args = 0
 13612 0000 70B5     		push	{r4, r5, r6, lr}
 13613              	.LCFI64:
 13614              		.cfi_def_cfa_offset 16
 13615              		.cfi_offset 4, -16
 13616              		.cfi_offset 5, -12
 13617              		.cfi_offset 6, -8
 13618              		.cfi_offset 14, -4
 13619              	.LBB3318:
  83:pcInterface.cpp **** 	uart.configurePins(xpcc::stm32::BufferedUsart2::Mapping::REMAP_PA2_PA3);
 13620              		.loc 15 83 0
 13621 0002 0020     		movs	r0, #0
 13622 0004 264B     		ldr	r3, .L1208
 13623 0006 9847     		blx	r3
 13624              	.LVL1241:
  86:pcInterface.cpp **** 	for(int x = 0; x < size; x++){
 13625              		.loc 15 86 0
 13626 0008 0024     		movs	r4, #0
 13627              	.L1200:
 13628              	.LBB3319:
 13629              	.LBB3320:
  87:pcInterface.cpp **** 		for(int y = x+1; y < size; y++){
 13630              		.loc 15 87 0
 13631 000a 631C     		adds	r3, r4, #1
 13632              	.LVL1242:
 13633 000c 1B2B     		cmp	r3, #27
 13634 000e 01D1     		bne	.L1204
  96:pcInterface.cpp **** 	return true;
 13635              		.loc 15 96 0
 13636 0010 0120     		movs	r0, #1
 13637              	.LBE3320:
 13638              	.LBE3319:
 13639              	.LBE3318:
  97:pcInterface.cpp **** }
 13640              		.loc 15 97 0
 13641 0012 70BD     		pop	{r4, r5, r6, pc}
 13642              	.L1204:
 13643              	.LBB3345:
 13644              	.LBB3344:
 13645              	.LBB3343:
 13646              	.LBB3321:
  88:pcInterface.cpp **** 			int word1 = *(int*)&CommandTable[x].name[0];
 13647              		.loc 15 88 0
 13648 0014 234D     		ldr	r5, .L1208+4
 13649 0016 55F83410 		ldr	r1, [r5, r4, lsl #3]
  89:pcInterface.cpp **** 			int word2 = *(int*)&CommandTable[y].name[0];
 13650              		.loc 15 89 0
 13651 001a 55F83320 		ldr	r2, [r5, r3, lsl #3]
  88:pcInterface.cpp **** 			int word1 = *(int*)&CommandTable[x].name[0];
 13652              		.loc 15 88 0
 13653 001e 0968     		ldr	r1, [r1, #0]
 13654              	.LVL1243:
  90:pcInterface.cpp **** 			if(word1 == word2){
 13655              		.loc 15 90 0
 13656 0020 1268     		ldr	r2, [r2, #0]
 13657 0022 9142     		cmp	r1, r2
 13658 0024 0AD0     		beq	.L1188
 13659 0026 1A46     		mov	r2, r3
 13660              	.LVL1244:
 13661              	.L1190:
 13662              	.LBE3321:
  87:pcInterface.cpp **** 		for(int y = x+1; y < size; y++){
 13663              		.loc 15 87 0
 13664 0028 0132     		adds	r2, r2, #1
 13665              	.LVL1245:
 13666 002a 1A2A     		cmp	r2, #26
 13667 002c 01DD     		ble	.L1199
 13668 002e 1C46     		mov	r4, r3
 13669 0030 EBE7     		b	.L1200
 13670              	.L1199:
 13671              	.LVL1246:
 13672              	.LBB3342:
  89:pcInterface.cpp **** 			int word2 = *(int*)&CommandTable[y].name[0];
 13673              		.loc 15 89 0
 13674 0032 55F83200 		ldr	r0, [r5, r2, lsl #3]
  90:pcInterface.cpp **** 			if(word1 == word2){
 13675              		.loc 15 90 0
 13676 0036 0068     		ldr	r0, [r0, #0]
 13677 0038 8842     		cmp	r0, r1
 13678 003a F5D1     		bne	.L1190
 13679              	.LVL1247:
 13680              	.L1188:
 13681              	.LBB3322:
 13682              	.LBB3323:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 13683              		.loc 7 287 0
 13684 003c 1A4E     		ldr	r6, .L1208+8
 13685 003e 7368     		ldr	r3, [r6, #4]
 13686 0040 DBB1     		cbz	r3, .L1205
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 13687              		.loc 7 290 0
 13688 0042 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 13689              		.loc 7 291 0
 13690 0044 3046     		mov	r0, r6
 13691 0046 1949     		ldr	r1, .L1208+12
 13692              	.LVL1248:
 13693 0048 0CBF     		ite	eq
 13694 004a 194B     		ldreq	r3, .L1208+16
 13695              		.loc 7 294 0
 13696 004c 194B     		ldrne	r3, .L1208+20
 13697 004e 9847     		blx	r3
 13698              	.LVL1249:
 13699              	.L1192:
 13700              	.LBE3323:
 13701              	.LBE3322:
 13702              	.LBB3327:
 13703              	.LBB3328:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 13704              		.loc 7 287 0
 13705 0050 7368     		ldr	r3, [r6, #4]
 13706              	.LBE3328:
 13707              	.LBE3327:
  91:pcInterface.cpp **** 				cerr << "duplicate entry in command table: " << CommandTable[x].name << endl;
 13708              		.loc 15 91 0
 13709 0052 55F83410 		ldr	r1, [r5, r4, lsl #3]
 13710              	.LVL1250:
 13711              	.LBB3333:
 13712              	.LBB3331:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 13713              		.loc 7 287 0
 13714 0056 1448     		ldr	r0, .L1208+8
 13715 0058 E3B1     		cbz	r3, .L1206
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 13716              		.loc 7 290 0
 13717 005a 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 13718              		.loc 7 291 0
 13719 005c 0CBF     		ite	eq
 13720 005e 144B     		ldreq	r3, .L1208+16
 13721              		.loc 7 294 0
 13722 0060 144B     		ldrne	r3, .L1208+20
 13723 0062 9847     		blx	r3
 13724              	.LVL1251:
 13725              	.L1195:
 13726              	.LBE3331:
 13727              	.LBE3333:
 13728              	.LBB3334:
 13729              	.LBB3335:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 13730              		.loc 7 122 0
 13731 0064 7468     		ldr	r4, [r6, #4]
 13732 0066 1048     		ldr	r0, .L1208+8
 13733 0068 6CB1     		cbz	r4, .L1207
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 13734              		.loc 7 126 0
 13735 006a 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 13736              		.loc 7 125 0
 13737 006c 022C     		cmp	r4, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 13738              		.loc 7 126 0
 13739 006e 0CBF     		ite	eq
 13740 0070 114B     		ldreq	r3, .L1208+24
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 13741              		.loc 7 129 0
 13742 0072 124B     		ldrne	r3, .L1208+28
 13743 0074 9847     		blx	r3
 13744              	.LVL1252:
  92:pcInterface.cpp **** 				return false;
 13745              		.loc 15 92 0
 13746 0076 0020     		movs	r0, #0
 13747 0078 70BD     		pop	{r4, r5, r6, pc}
 13748              	.LVL1253:
 13749              	.L1205:
 13750              	.LBE3335:
 13751              	.LBE3334:
 13752              	.LBB3339:
 13753              	.LBB3326:
 13754              	.LBB3324:
 13755              	.LBB3325:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 13756              		.loc 7 288 0
 13757 007a 3068     		ldr	r0, [r6, #0]
 13758 007c 0B49     		ldr	r1, .L1208+12
 13759              	.LVL1254:
 13760 007e 0368     		ldr	r3, [r0, #0]
 13761 0080 DB68     		ldr	r3, [r3, #12]
 13762 0082 9847     		blx	r3
 13763              	.LVL1255:
 13764 0084 E4E7     		b	.L1192
 13765              	.LVL1256:
 13766              	.L1207:
 13767              	.LBE3325:
 13768              	.LBE3324:
 13769              	.LBE3326:
 13770              	.LBE3339:
 13771              	.LBB3340:
 13772              	.LBB3338:
 13773              	.LBB3336:
 13774              	.LBB3337:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 13775              		.loc 7 123 0
 13776 0086 0068     		ldr	r0, [r0, #0]
 13777 0088 0368     		ldr	r3, [r0, #0]
 13778 008a 0A21     		movs	r1, #10
 13779 008c 9B68     		ldr	r3, [r3, #8]
 13780 008e 9847     		blx	r3
 13781              	.LVL1257:
  92:pcInterface.cpp **** 				return false;
 13782              		.loc 15 92 0
 13783 0090 2046     		mov	r0, r4
 13784 0092 70BD     		pop	{r4, r5, r6, pc}
 13785              	.LVL1258:
 13786              	.L1206:
 13787              	.LBE3337:
 13788              	.LBE3336:
 13789              	.LBE3338:
 13790              	.LBE3340:
 13791              	.LBB3341:
 13792              	.LBB3332:
 13793              	.LBB3329:
 13794              	.LBB3330:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 13795              		.loc 7 288 0
 13796 0094 0068     		ldr	r0, [r0, #0]
 13797 0096 0368     		ldr	r3, [r0, #0]
 13798 0098 DB68     		ldr	r3, [r3, #12]
 13799 009a 9847     		blx	r3
 13800              	.LVL1259:
 13801 009c E2E7     		b	.L1195
 13802              	.L1209:
 13803 009e 00BF     		.align	2
 13804              	.L1208:
 13805 00a0 00000000 		.word	_ZN4xpcc5stm3214BufferedUsart213configurePinsENS1_7MappingE
 13806 00a4 00000000 		.word	.LANCHOR4
 13807 00a8 00000000 		.word	.LANCHOR1
 13808 00ac 5C030000 		.word	.LC37
 13809 00b0 00000000 		.word	_ZN4xpcc8IOStream8writeBinEPKc
 13810 00b4 00000000 		.word	_ZN4xpcc8IOStream8writeHexEPKc
 13811 00b8 00000000 		.word	_ZN4xpcc8IOStream8writeBinEh
 13812 00bc 00000000 		.word	_ZN4xpcc8IOStream8writeHexEh
 13813              	.LBE3330:
 13814              	.LBE3329:
 13815              	.LBE3332:
 13816              	.LBE3341:
 13817              	.LBE3342:
 13818              	.LBE3343:
 13819              	.LBE3344:
 13820              	.LBE3345:
 13821              		.cfi_endproc
 13822              	.LFE1054:
 13824              		.section	.text._ZN2PC10getCommandEPKc,"ax",%progbits
 13825              		.align	2
 13826              		.global	_ZN2PC10getCommandEPKc
 13827              		.thumb
 13828              		.thumb_func
 13830              	_ZN2PC10getCommandEPKc:
 13831              	.LFB1055:
 100:pcInterface.cpp **** PC::Command* PC::getCommand(const char* command){
 13832              		.loc 15 100 0
 13833              		.cfi_startproc
 13834              		@ args = 0, pretend = 0, frame = 0
 13835              		@ frame_needed = 0, uses_anonymous_args = 0
 13836              		@ link register save eliminated.
 13837              	.LVL1260:
 13838 0000 0068     		ldr	r0, [r0, #0]
 13839              	.LVL1261:
 13840 0002 0849     		ldr	r1, .L1216
 102:pcInterface.cpp **** 	for(int i = 0; i < size; i++){
 13841              		.loc 15 102 0
 13842 0004 0023     		movs	r3, #0
 13843 0006 02E0     		b	.L1213
 13844              	.LVL1262:
 13845              	.L1211:
 13846              	.LBB3346:
 13847              	.LBB3347:
 13848 0008 0133     		adds	r3, r3, #1
 13849              	.LVL1263:
 13850 000a 1B2B     		cmp	r3, #27
 13851 000c 08D0     		beq	.L1215
 13852              	.LVL1264:
 13853              	.L1213:
 13854              	.LBB3348:
 103:pcInterface.cpp **** 		int word1 = *(int*)&CommandTable[i].name[0];
 13855              		.loc 15 103 0
 13856 000e 51F83320 		ldr	r2, [r1, r3, lsl #3]
 105:pcInterface.cpp **** 		if(word1 == word2){
 13857              		.loc 15 105 0
 13858 0012 1268     		ldr	r2, [r2, #0]
 13859 0014 8242     		cmp	r2, r0
 13860 0016 F7D1     		bne	.L1211
 106:pcInterface.cpp **** 			return &CommandTable[i];
 13861              		.loc 15 106 0
 13862 0018 0248     		ldr	r0, .L1216
 13863              	.LVL1265:
 13864 001a 00EBC300 		add	r0, r0, r3, lsl #3
 13865 001e 7047     		bx	lr
 13866              	.LVL1266:
 13867              	.L1215:
 13868              	.LBE3348:
 109:pcInterface.cpp **** 	return 0;
 13869              		.loc 15 109 0
 13870 0020 0020     		movs	r0, #0
 13871              	.LVL1267:
 13872              	.LBE3347:
 13873              	.LBE3346:
 110:pcInterface.cpp **** }
 13874              		.loc 15 110 0
 13875 0022 7047     		bx	lr
 13876              	.L1217:
 13877              		.align	2
 13878              	.L1216:
 13879 0024 00000000 		.word	.LANCHOR4
 13880              		.cfi_endproc
 13881              	.LFE1055:
 13883              		.section	.text._ZN2PC15scanForCommandsEv,"ax",%progbits
 13884              		.align	2
 13885              		.global	_ZN2PC15scanForCommandsEv
 13886              		.thumb
 13887              		.thumb_func
 13889              	_ZN2PC15scanForCommandsEv:
 13890              	.LFB1056:
 112:pcInterface.cpp **** void PC::scanForCommands(){
 13891              		.loc 15 112 0
 13892              		.cfi_startproc
 13893              		@ args = 0, pretend = 0, frame = 8
 13894              		@ frame_needed = 0, uses_anonymous_args = 0
 13895 0000 30B5     		push	{r4, r5, lr}
 13896              	.LCFI65:
 13897              		.cfi_def_cfa_offset 12
 13898              		.cfi_offset 4, -12
 13899              		.cfi_offset 5, -8
 13900              		.cfi_offset 14, -4
 13901 0002 83B0     		sub	sp, sp, #12
 13902              	.LCFI66:
 13903              		.cfi_def_cfa_offset 24
 13904              	.LBB3389:
 13905              	.LBB3390:
 114:pcInterface.cpp **** 	if(uart.read(c)){
 13906              		.loc 15 114 0
 13907 0004 0DF10700 		add	r0, sp, #7
 13908 0008 554B     		ldr	r3, .L1271
 13909 000a 9847     		blx	r3
 13910              	.LVL1268:
 13911 000c 70B1     		cbz	r0, .L1218
 13912              	.LVL1269:
 13913              	.LBB3391:
 115:pcInterface.cpp **** 		if(c != '\n'){
 13914              		.loc 15 115 0
 13915 000e 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 13916 0012 0A2B     		cmp	r3, #10
 13917 0014 0CD0     		beq	.L1220
 116:pcInterface.cpp **** 			buffer[bufPos++] = char(c);
 13918              		.loc 15 116 0
 13919 0016 534A     		ldr	r2, .L1271+4
 13920 0018 534C     		ldr	r4, .L1271+8
 13921 001a 1068     		ldr	r0, [r2, #0]
 13922 001c 411C     		adds	r1, r0, #1
 117:pcInterface.cpp **** 			if(bufPos >= BUFFER_LENGTH - 4){
 13923              		.loc 15 117 0
 13924 001e B1F5FE7F 		cmp	r1, #508
 116:pcInterface.cpp **** 			buffer[bufPos++] = char(c);
 13925              		.loc 15 116 0
 13926 0022 2354     		strb	r3, [r4, r0]
 13927 0024 1160     		str	r1, [r2, #0]
 117:pcInterface.cpp **** 			if(bufPos >= BUFFER_LENGTH - 4){
 13928              		.loc 15 117 0
 13929 0026 01DB     		blt	.L1218
 118:pcInterface.cpp **** 				bufPos = 0;
 13930              		.loc 15 118 0
 13931 0028 0023     		movs	r3, #0
 13932 002a 1360     		str	r3, [r2, #0]
 13933              	.L1218:
 13934              	.LBE3391:
 13935              	.LBE3390:
 13936              	.LBE3389:
 143:pcInterface.cpp **** }
 13937              		.loc 15 143 0
 13938 002c 03B0     		add	sp, sp, #12
 13939 002e 30BD     		pop	{r4, r5, pc}
 13940              	.L1220:
 13941              	.LBB3443:
 13942              	.LBB3442:
 13943              	.LBB3441:
 13944              	.LBB3392:
 121:pcInterface.cpp **** 			buffer[bufPos] = 0;
 13945              		.loc 15 121 0
 13946 0030 4C4D     		ldr	r5, .L1271+4
 13947 0032 4D48     		ldr	r0, .L1271+8
 13948 0034 2968     		ldr	r1, [r5, #0]
 122:pcInterface.cpp **** 			buffer[bufPos+1] = 0;
 13949              		.loc 15 122 0
 13950 0036 4218     		adds	r2, r0, r1
 121:pcInterface.cpp **** 			buffer[bufPos] = 0;
 13951              		.loc 15 121 0
 13952 0038 0023     		movs	r3, #0
 125:pcInterface.cpp **** 			if(bufPos < 3){
 13953              		.loc 15 125 0
 13954 003a 0229     		cmp	r1, #2
 121:pcInterface.cpp **** 			buffer[bufPos] = 0;
 13955              		.loc 15 121 0
 13956 003c 4354     		strb	r3, [r0, r1]
 122:pcInterface.cpp **** 			buffer[bufPos+1] = 0;
 13957              		.loc 15 122 0
 13958 003e 5370     		strb	r3, [r2, #1]
 123:pcInterface.cpp **** 			buffer[bufPos+2] = 0;
 13959              		.loc 15 123 0
 13960 0040 9370     		strb	r3, [r2, #2]
 124:pcInterface.cpp **** 			buffer[bufPos+3] = 0;
 13961              		.loc 15 124 0
 13962 0042 D370     		strb	r3, [r2, #3]
 125:pcInterface.cpp **** 			if(bufPos < 3){
 13963              		.loc 15 125 0
 13964 0044 59DD     		ble	.L1262
 13965 0046 0468     		ldr	r4, [r0, #0]
 13966 0048 4848     		ldr	r0, .L1271+12
 13967 004a 02E0     		b	.L1232
 13968              	.LVL1270:
 13969              	.L1229:
 13970              	.LBB3393:
 13971              	.LBB3394:
 13972              	.LBB3395:
 102:pcInterface.cpp **** 	for(int i = 0; i < size; i++){
 13973              		.loc 15 102 0
 13974 004c 0133     		adds	r3, r3, #1
 13975              	.LVL1271:
 13976 004e 1B2B     		cmp	r3, #27
 13977 0050 0FD0     		beq	.L1263
 13978              	.LVL1272:
 13979              	.L1232:
 13980              	.LBB3396:
 103:pcInterface.cpp **** 		int word1 = *(int*)&CommandTable[i].name[0];
 13981              		.loc 15 103 0
 13982 0052 50F83320 		ldr	r2, [r0, r3, lsl #3]
 105:pcInterface.cpp **** 		if(word1 == word2){
 13983              		.loc 15 105 0
 13984 0056 1268     		ldr	r2, [r2, #0]
 13985 0058 A242     		cmp	r2, r4
 13986 005a F7D1     		bne	.L1229
 13987              	.LBE3396:
 13988              	.LBE3395:
 13989              	.LBE3394:
 13990              	.LBE3393:
 136:pcInterface.cpp **** 			bool ok = cmd->handler(&buffer[5], bufPos-5);
 13991              		.loc 15 136 0
 13992 005c 434A     		ldr	r2, .L1271+12
 13993 005e 4448     		ldr	r0, .L1271+16
 13994 0060 02EBC303 		add	r3, r2, r3, lsl #3
 13995              	.LVL1273:
 13996 0064 0539     		subs	r1, r1, #5
 13997 0066 5B68     		ldr	r3, [r3, #4]
 13998 0068 9847     		blx	r3
 13999              	.LVL1274:
 137:pcInterface.cpp **** 			if(ok){
 14000              		.loc 15 137 0
 14001 006a 08BB     		cbnz	r0, .L1264
 14002              	.LVL1275:
 14003              	.L1231:
 140:pcInterface.cpp **** 			bufPos = 0;
 14004              		.loc 15 140 0
 14005 006c 0023     		movs	r3, #0
 14006 006e 2B60     		str	r3, [r5, #0]
 14007 0070 DCE7     		b	.L1218
 14008              	.LVL1276:
 14009              	.L1263:
 14010              	.LBB3397:
 14011              	.LBB3398:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 14012              		.loc 7 287 0
 14013 0072 404C     		ldr	r4, .L1271+20
 14014              	.LVL1277:
 14015 0074 6368     		ldr	r3, [r4, #4]
 14016              	.LVL1278:
 14017 0076 002B     		cmp	r3, #0
 14018 0078 39D0     		beq	.L1265
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 14019              		.loc 7 290 0
 14020 007a 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 14021              		.loc 7 291 0
 14022 007c 2046     		mov	r0, r4
 14023 007e 3E49     		ldr	r1, .L1271+24
 14024 0080 0CBF     		ite	eq
 14025 0082 3E4B     		ldreq	r3, .L1271+28
 14026              		.loc 7 294 0
 14027 0084 3E4B     		ldrne	r3, .L1271+32
 14028 0086 9847     		blx	r3
 14029              	.LVL1279:
 14030              	.L1234:
 14031              	.LBE3398:
 14032              	.LBE3397:
 14033              	.LBB3402:
 14034              	.LBB3403:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 14035              		.loc 7 287 0
 14036 0088 6368     		ldr	r3, [r4, #4]
 14037 008a 3A48     		ldr	r0, .L1271+20
 14038 008c 002B     		cmp	r3, #0
 14039 008e 60D0     		beq	.L1266
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 14040              		.loc 7 290 0
 14041 0090 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 14042              		.loc 7 291 0
 14043 0092 3549     		ldr	r1, .L1271+8
 14044 0094 0CBF     		ite	eq
 14045 0096 394B     		ldreq	r3, .L1271+28
 14046              		.loc 7 294 0
 14047 0098 394B     		ldrne	r3, .L1271+32
 14048 009a 9847     		blx	r3
 14049              	.LVL1280:
 14050              	.L1237:
 14051              	.LBE3403:
 14052              	.LBE3402:
 14053              	.LBB3407:
 14054              	.LBB3408:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 14055              		.loc 7 122 0
 14056 009c 6368     		ldr	r3, [r4, #4]
 14057 009e 3548     		ldr	r0, .L1271+20
 14058 00a0 FBB1     		cbz	r3, .L1260
 14059              	.LVL1281:
 14060              	.L1248:
 14061              	.LBE3408:
 14062              	.LBE3407:
 14063              	.LBB3409:
 14064              	.LBB3410:
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 14065              		.loc 7 126 0
 14066 00a2 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 14067              		.loc 7 125 0
 14068 00a4 022B     		cmp	r3, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 14069              		.loc 7 126 0
 14070 00a6 0CBF     		ite	eq
 14071 00a8 364B     		ldreq	r3, .L1271+36
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 14072              		.loc 7 129 0
 14073 00aa 374B     		ldrne	r3, .L1271+40
 14074 00ac 9847     		blx	r3
 14075              	.LVL1282:
 14076 00ae DDE7     		b	.L1231
 14077              	.LVL1283:
 14078              	.L1264:
 14079              	.LBE3410:
 14080              	.LBE3409:
 14081              	.LBB3414:
 14082              	.LBB3415:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 14083              		.loc 7 287 0
 14084 00b0 364C     		ldr	r4, .L1271+44
 14085              	.LVL1284:
 14086 00b2 6368     		ldr	r3, [r4, #4]
 14087 00b4 002B     		cmp	r3, #0
 14088 00b6 46D0     		beq	.L1267
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 14089              		.loc 7 290 0
 14090 00b8 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 14091              		.loc 7 291 0
 14092 00ba 2046     		mov	r0, r4
 14093              	.LVL1285:
 14094 00bc 3449     		ldr	r1, .L1271+48
 14095 00be 0CBF     		ite	eq
 14096 00c0 2E4B     		ldreq	r3, .L1271+28
 14097              		.loc 7 294 0
 14098 00c2 2F4B     		ldrne	r3, .L1271+32
 14099 00c4 9847     		blx	r3
 14100              	.LVL1286:
 14101              	.L1243:
 14102              	.LBE3415:
 14103              	.LBE3414:
 14104              	.LBB3419:
 14105              	.LBB3420:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 14106              		.loc 7 287 0
 14107 00c6 6368     		ldr	r3, [r4, #4]
 14108 00c8 3048     		ldr	r0, .L1271+44
 14109 00ca 002B     		cmp	r3, #0
 14110 00cc 35D0     		beq	.L1268
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 14111              		.loc 7 290 0
 14112 00ce 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 14113              		.loc 7 291 0
 14114 00d0 2549     		ldr	r1, .L1271+8
 14115 00d2 0CBF     		ite	eq
 14116 00d4 294B     		ldreq	r3, .L1271+28
 14117              		.loc 7 294 0
 14118 00d6 2A4B     		ldrne	r3, .L1271+32
 14119 00d8 9847     		blx	r3
 14120              	.LVL1287:
 14121              	.L1246:
 14122              	.LBE3420:
 14123              	.LBE3419:
 14124              	.LBB3424:
 14125              	.LBB3413:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 14126              		.loc 7 122 0
 14127 00da 6368     		ldr	r3, [r4, #4]
 14128 00dc 2B48     		ldr	r0, .L1271+44
 14129 00de 002B     		cmp	r3, #0
 14130 00e0 DFD1     		bne	.L1248
 14131              	.LVL1288:
 14132              	.L1260:
 14133              	.LBB3411:
 14134              	.LBB3412:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 14135              		.loc 7 123 0
 14136 00e2 0068     		ldr	r0, [r0, #0]
 14137 00e4 0368     		ldr	r3, [r0, #0]
 14138 00e6 0A21     		movs	r1, #10
 14139 00e8 9B68     		ldr	r3, [r3, #8]
 14140 00ea 9847     		blx	r3
 14141              	.LVL1289:
 14142 00ec BEE7     		b	.L1231
 14143              	.LVL1290:
 14144              	.L1265:
 14145              	.LBE3412:
 14146              	.LBE3411:
 14147              	.LBE3413:
 14148              	.LBE3424:
 14149              	.LBB3425:
 14150              	.LBB3401:
 14151              	.LBB3399:
 14152              	.LBB3400:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 14153              		.loc 7 288 0
 14154 00ee 2068     		ldr	r0, [r4, #0]
 14155 00f0 2149     		ldr	r1, .L1271+24
 14156 00f2 0368     		ldr	r3, [r0, #0]
 14157 00f4 DB68     		ldr	r3, [r3, #12]
 14158 00f6 9847     		blx	r3
 14159              	.LVL1291:
 14160 00f8 C6E7     		b	.L1234
 14161              	.LVL1292:
 14162              	.L1262:
 14163              	.LBE3400:
 14164              	.LBE3399:
 14165              	.LBE3401:
 14166              	.LBE3425:
 14167              	.LBB3426:
 14168              	.LBB3427:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 14169              		.loc 7 287 0
 14170 00fa 264C     		ldr	r4, .L1271+52
 14171 00fc 6368     		ldr	r3, [r4, #4]
 14172 00fe 83B1     		cbz	r3, .L1269
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 14173              		.loc 7 290 0
 14174 0100 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 14175              		.loc 7 291 0
 14176 0102 2046     		mov	r0, r4
 14177 0104 2449     		ldr	r1, .L1271+56
 14178 0106 0CBF     		ite	eq
 14179 0108 1C4B     		ldreq	r3, .L1271+28
 14180              		.loc 7 294 0
 14181 010a 1D4B     		ldrne	r3, .L1271+32
 14182 010c 9847     		blx	r3
 14183              	.LVL1293:
 14184              	.L1223:
 14185              	.LBE3427:
 14186              	.LBE3426:
 14187              	.LBB3431:
 14188              	.LBB3432:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 14189              		.loc 7 287 0
 14190 010e 6368     		ldr	r3, [r4, #4]
 14191 0110 2048     		ldr	r0, .L1271+52
 14192 0112 63B1     		cbz	r3, .L1270
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 14193              		.loc 7 290 0
 14194 0114 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 14195              		.loc 7 291 0
 14196 0116 1449     		ldr	r1, .L1271+8
 14197 0118 0CBF     		ite	eq
 14198 011a 184B     		ldreq	r3, .L1271+28
 14199              		.loc 7 294 0
 14200 011c 184B     		ldrne	r3, .L1271+32
 14201 011e 9847     		blx	r3
 14202              	.LVL1294:
 14203 0120 A4E7     		b	.L1231
 14204              	.LVL1295:
 14205              	.L1269:
 14206              	.LBE3432:
 14207              	.LBE3431:
 14208              	.LBB3436:
 14209              	.LBB3430:
 14210              	.LBB3428:
 14211              	.LBB3429:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 14212              		.loc 7 288 0
 14213 0122 2068     		ldr	r0, [r4, #0]
 14214 0124 1C49     		ldr	r1, .L1271+56
 14215 0126 0368     		ldr	r3, [r0, #0]
 14216 0128 DB68     		ldr	r3, [r3, #12]
 14217 012a 9847     		blx	r3
 14218              	.LVL1296:
 14219 012c EFE7     		b	.L1223
 14220              	.LVL1297:
 14221              	.L1270:
 14222              	.LBE3429:
 14223              	.LBE3428:
 14224              	.LBE3430:
 14225              	.LBE3436:
 14226              	.LBB3437:
 14227              	.LBB3435:
 14228              	.LBB3433:
 14229              	.LBB3434:
 14230 012e 0068     		ldr	r0, [r0, #0]
 14231 0130 0D49     		ldr	r1, .L1271+8
 14232 0132 0368     		ldr	r3, [r0, #0]
 14233 0134 DB68     		ldr	r3, [r3, #12]
 14234 0136 9847     		blx	r3
 14235              	.LVL1298:
 14236 0138 98E7     		b	.L1231
 14237              	.LVL1299:
 14238              	.L1268:
 14239              	.LBE3434:
 14240              	.LBE3433:
 14241              	.LBE3435:
 14242              	.LBE3437:
 14243              	.LBB3438:
 14244              	.LBB3423:
 14245              	.LBB3421:
 14246              	.LBB3422:
 14247 013a 0068     		ldr	r0, [r0, #0]
 14248 013c 0A49     		ldr	r1, .L1271+8
 14249 013e 0368     		ldr	r3, [r0, #0]
 14250 0140 DB68     		ldr	r3, [r3, #12]
 14251 0142 9847     		blx	r3
 14252              	.LVL1300:
 14253 0144 C9E7     		b	.L1246
 14254              	.LVL1301:
 14255              	.L1267:
 14256              	.LBE3422:
 14257              	.LBE3421:
 14258              	.LBE3423:
 14259              	.LBE3438:
 14260              	.LBB3439:
 14261              	.LBB3418:
 14262              	.LBB3416:
 14263              	.LBB3417:
 14264 0146 2068     		ldr	r0, [r4, #0]
 14265              	.LVL1302:
 14266 0148 1149     		ldr	r1, .L1271+48
 14267 014a 0368     		ldr	r3, [r0, #0]
 14268 014c DB68     		ldr	r3, [r3, #12]
 14269 014e 9847     		blx	r3
 14270              	.LVL1303:
 14271 0150 B9E7     		b	.L1243
 14272              	.LVL1304:
 14273              	.L1266:
 14274              	.LBE3417:
 14275              	.LBE3416:
 14276              	.LBE3418:
 14277              	.LBE3439:
 14278              	.LBB3440:
 14279              	.LBB3406:
 14280              	.LBB3404:
 14281              	.LBB3405:
 14282 0152 0068     		ldr	r0, [r0, #0]
 14283 0154 0449     		ldr	r1, .L1271+8
 14284 0156 0368     		ldr	r3, [r0, #0]
 14285 0158 DB68     		ldr	r3, [r3, #12]
 14286 015a 9847     		blx	r3
 14287              	.LVL1305:
 14288 015c 9EE7     		b	.L1237
 14289              	.L1272:
 14290 015e 00BF     		.align	2
 14291              	.L1271:
 14292 0160 00000000 		.word	_ZN4xpcc5stm3214BufferedUsart24readERh
 14293 0164 00000000 		.word	.LANCHOR5
 14294 0168 00000000 		.word	.LANCHOR6
 14295 016c 00000000 		.word	.LANCHOR4
 14296 0170 05000000 		.word	.LANCHOR6+5
 14297 0174 00000000 		.word	.LANCHOR1
 14298 0178 8C030000 		.word	.LC39
 14299 017c 00000000 		.word	_ZN4xpcc8IOStream8writeBinEPKc
 14300 0180 00000000 		.word	_ZN4xpcc8IOStream8writeHexEPKc
 14301 0184 00000000 		.word	_ZN4xpcc8IOStream8writeBinEh
 14302 0188 00000000 		.word	_ZN4xpcc8IOStream8writeHexEh
 14303 018c 00000000 		.word	.LANCHOR0
 14304 0190 A0030000 		.word	.LC40
 14305 0194 00000000 		.word	.LANCHOR2
 14306 0198 80030000 		.word	.LC38
 14307              	.LBE3405:
 14308              	.LBE3404:
 14309              	.LBE3406:
 14310              	.LBE3440:
 14311              	.LBE3392:
 14312              	.LBE3441:
 14313              	.LBE3442:
 14314              	.LBE3443:
 14315              		.cfi_endproc
 14316              	.LFE1056:
 14318              		.section	.text._ZN2PC22registerCommandHandlerEPKcPFbS1_iE,"ax",%progbits
 14319              		.align	2
 14320              		.global	_ZN2PC22registerCommandHandlerEPKcPFbS1_iE
 14321              		.thumb
 14322              		.thumb_func
 14324              	_ZN2PC22registerCommandHandlerEPKcPFbS1_iE:
 14325              	.LFB1057:
 145:pcInterface.cpp **** void PC::registerCommandHandler(const char* command, bool (*handler)(const char*, int)){
 14326              		.loc 15 145 0
 14327              		.cfi_startproc
 14328              		@ args = 0, pretend = 0, frame = 0
 14329              		@ frame_needed = 0, uses_anonymous_args = 0
 14330              	.LVL1306:
 14331 0000 70B5     		push	{r4, r5, r6, lr}
 14332              	.LCFI67:
 14333              		.cfi_def_cfa_offset 16
 14334              		.cfi_offset 4, -16
 14335              		.cfi_offset 5, -12
 14336              		.cfi_offset 6, -8
 14337              		.cfi_offset 14, -4
 102:pcInterface.cpp **** 	for(int i = 0; i < size; i++){
 14338              		.loc 15 102 0
 14339 0002 0023     		movs	r3, #0
 145:pcInterface.cpp **** void PC::registerCommandHandler(const char* command, bool (*handler)(const char*, int)){
 14340              		.loc 15 145 0
 14341 0004 0646     		mov	r6, r0
 14342              	.LVL1307:
 14343 0006 1F4D     		ldr	r5, .L1294
 14344 0008 0468     		ldr	r4, [r0, #0]
 14345 000a 02E0     		b	.L1276
 14346              	.LVL1308:
 14347              	.L1274:
 14348              	.LBB3461:
 14349              	.LBB3462:
 14350              	.LBB3463:
 14351              	.LBB3464:
 102:pcInterface.cpp **** 	for(int i = 0; i < size; i++){
 14352              		.loc 15 102 0
 14353 000c 0133     		adds	r3, r3, #1
 14354              	.LVL1309:
 14355 000e 1B2B     		cmp	r3, #27
 14356 0010 09D0     		beq	.L1290
 14357              	.LVL1310:
 14358              	.L1276:
 14359              	.LBB3465:
 103:pcInterface.cpp **** 		int word1 = *(int*)&CommandTable[i].name[0];
 14360              		.loc 15 103 0
 14361 0012 55F83320 		ldr	r2, [r5, r3, lsl #3]
 105:pcInterface.cpp **** 		if(word1 == word2){
 14362              		.loc 15 105 0
 14363 0016 1268     		ldr	r2, [r2, #0]
 14364 0018 A242     		cmp	r2, r4
 14365 001a F7D1     		bne	.L1274
 14366              	.LBE3465:
 14367              	.LBE3464:
 14368              	.LBE3463:
 14369              	.LBE3462:
 151:pcInterface.cpp **** 	cmd->handler = handler;
 14370              		.loc 15 151 0
 14371 001c 194A     		ldr	r2, .L1294
 14372 001e 02EBC303 		add	r3, r2, r3, lsl #3
 14373              	.LVL1311:
 14374 0022 5960     		str	r1, [r3, #4]
 14375 0024 70BD     		pop	{r4, r5, r6, pc}
 14376              	.LVL1312:
 14377              	.L1290:
 14378              	.LBB3466:
 14379              	.LBB3467:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 14380              		.loc 7 287 0
 14381 0026 184C     		ldr	r4, .L1294+4
 14382              	.LVL1313:
 14383 0028 6368     		ldr	r3, [r4, #4]
 14384              	.LVL1314:
 14385 002a FBB1     		cbz	r3, .L1291
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 14386              		.loc 7 290 0
 14387 002c 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 14388              		.loc 7 291 0
 14389 002e 2046     		mov	r0, r4
 14390              	.LVL1315:
 14391 0030 1649     		ldr	r1, .L1294+8
 14392              	.LVL1316:
 14393 0032 0CBF     		ite	eq
 14394 0034 164B     		ldreq	r3, .L1294+12
 14395              		.loc 7 294 0
 14396 0036 174B     		ldrne	r3, .L1294+16
 14397 0038 9847     		blx	r3
 14398              	.LVL1317:
 14399              	.L1278:
 14400              	.LBE3467:
 14401              	.LBE3466:
 14402              	.LBB3471:
 14403              	.LBB3472:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 14404              		.loc 7 287 0
 14405 003a 6368     		ldr	r3, [r4, #4]
 14406 003c 1248     		ldr	r0, .L1294+4
 14407 003e 7BB1     		cbz	r3, .L1292
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 14408              		.loc 7 290 0
 14409 0040 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 14410              		.loc 7 291 0
 14411 0042 3146     		mov	r1, r6
 14412 0044 0CBF     		ite	eq
 14413 0046 124B     		ldreq	r3, .L1294+12
 14414              		.loc 7 294 0
 14415 0048 124B     		ldrne	r3, .L1294+16
 14416 004a 9847     		blx	r3
 14417              	.LVL1318:
 14418              	.L1281:
 14419              	.LBE3472:
 14420              	.LBE3471:
 14421              	.LBB3476:
 14422              	.LBB3477:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 14423              		.loc 7 122 0
 14424 004c 6368     		ldr	r3, [r4, #4]
 14425 004e 0E48     		ldr	r0, .L1294+4
 14426 0050 93B1     		cbz	r3, .L1293
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 14427              		.loc 7 126 0
 14428 0052 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 14429              		.loc 7 125 0
 14430 0054 022B     		cmp	r3, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 14431              		.loc 7 126 0
 14432 0056 0CBF     		ite	eq
 14433 0058 0F4B     		ldreq	r3, .L1294+20
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 14434              		.loc 7 129 0
 14435 005a 104B     		ldrne	r3, .L1294+24
 14436 005c 9847     		blx	r3
 14437              	.LVL1319:
 14438 005e 70BD     		pop	{r4, r5, r6, pc}
 14439              	.LVL1320:
 14440              	.L1292:
 14441              	.LBE3477:
 14442              	.LBE3476:
 14443              	.LBB3481:
 14444              	.LBB3475:
 14445              	.LBB3473:
 14446              	.LBB3474:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 14447              		.loc 7 288 0
 14448 0060 0068     		ldr	r0, [r0, #0]
 14449 0062 0368     		ldr	r3, [r0, #0]
 14450 0064 3146     		mov	r1, r6
 14451 0066 DB68     		ldr	r3, [r3, #12]
 14452 0068 9847     		blx	r3
 14453              	.LVL1321:
 14454 006a EFE7     		b	.L1281
 14455              	.LVL1322:
 14456              	.L1291:
 14457              	.LBE3474:
 14458              	.LBE3473:
 14459              	.LBE3475:
 14460              	.LBE3481:
 14461              	.LBB3482:
 14462              	.LBB3470:
 14463              	.LBB3468:
 14464              	.LBB3469:
 14465 006c 2068     		ldr	r0, [r4, #0]
 14466              	.LVL1323:
 14467 006e 0749     		ldr	r1, .L1294+8
 14468              	.LVL1324:
 14469 0070 0368     		ldr	r3, [r0, #0]
 14470 0072 DB68     		ldr	r3, [r3, #12]
 14471 0074 9847     		blx	r3
 14472              	.LVL1325:
 14473 0076 E0E7     		b	.L1278
 14474              	.LVL1326:
 14475              	.L1293:
 14476              	.LBE3469:
 14477              	.LBE3468:
 14478              	.LBE3470:
 14479              	.LBE3482:
 14480              	.LBB3483:
 14481              	.LBB3480:
 14482              	.LBB3478:
 14483              	.LBB3479:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 14484              		.loc 7 123 0
 14485 0078 0068     		ldr	r0, [r0, #0]
 14486 007a 0368     		ldr	r3, [r0, #0]
 14487 007c 0A21     		movs	r1, #10
 14488 007e 9B68     		ldr	r3, [r3, #8]
 14489 0080 9847     		blx	r3
 14490              	.LVL1327:
 14491 0082 70BD     		pop	{r4, r5, r6, pc}
 14492              	.L1295:
 14493              		.align	2
 14494              	.L1294:
 14495 0084 00000000 		.word	.LANCHOR4
 14496 0088 00000000 		.word	.LANCHOR1
 14497 008c A8030000 		.word	.LC41
 14498 0090 00000000 		.word	_ZN4xpcc8IOStream8writeBinEPKc
 14499 0094 00000000 		.word	_ZN4xpcc8IOStream8writeHexEPKc
 14500 0098 00000000 		.word	_ZN4xpcc8IOStream8writeBinEh
 14501 009c 00000000 		.word	_ZN4xpcc8IOStream8writeHexEh
 14502              	.LBE3479:
 14503              	.LBE3478:
 14504              	.LBE3480:
 14505              	.LBE3483:
 14506              	.LBE3461:
 14507              		.cfi_endproc
 14508              	.LFE1057:
 14510              		.section	.text._ZN2PC14defaultHandlerEPKci,"ax",%progbits
 14511              		.align	2
 14512              		.global	_ZN2PC14defaultHandlerEPKci
 14513              		.thumb
 14514              		.thumb_func
 14516              	_ZN2PC14defaultHandlerEPKci:
 14517              	.LFB1058:
 155:pcInterface.cpp **** bool PC::defaultHandler(const char* command, int length){
 14518              		.loc 15 155 0
 14519              		.cfi_startproc
 14520              		@ args = 0, pretend = 0, frame = 0
 14521              		@ frame_needed = 0, uses_anonymous_args = 0
 14522              	.LVL1328:
 14523 0000 38B5     		push	{r3, r4, r5, lr}
 14524              	.LCFI68:
 14525              		.cfi_def_cfa_offset 16
 14526              		.cfi_offset 3, -16
 14527              		.cfi_offset 4, -12
 14528              		.cfi_offset 5, -8
 14529              		.cfi_offset 14, -4
 14530              	.LBB3496:
 14531              	.LBB3497:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 14532              		.loc 7 287 0
 14533 0002 1C4C     		ldr	r4, .L1309
 14534 0004 6368     		ldr	r3, [r4, #4]
 14535              	.LBE3497:
 14536              	.LBE3496:
 155:pcInterface.cpp **** bool PC::defaultHandler(const char* command, int length){
 14537              		.loc 15 155 0
 14538 0006 0546     		mov	r5, r0
 14539              	.LBB3502:
 14540              	.LBB3500:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 14541              		.loc 7 287 0
 14542 0008 D3B1     		cbz	r3, .L1306
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 14543              		.loc 7 290 0
 14544 000a 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 14545              		.loc 7 291 0
 14546 000c 2046     		mov	r0, r4
 14547              	.LVL1329:
 14548 000e 0CBF     		ite	eq
 14549 0010 194B     		ldreq	r3, .L1309+4
 14550              		.loc 7 294 0
 14551 0012 1A4B     		ldrne	r3, .L1309+8
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 14552              		.loc 7 291 0
 14553 0014 1A49     		ldr	r1, .L1309+12
 14554              	.LVL1330:
 14555              		.loc 7 294 0
 14556 0016 9847     		blx	r3
 14557              	.LVL1331:
 14558              	.LBE3500:
 14559              	.LBE3502:
 14560              	.LBB3503:
 14561              	.LBB3504:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 14562              		.loc 7 287 0
 14563 0018 6368     		ldr	r3, [r4, #4]
 14564 001a 1648     		ldr	r0, .L1309
 14565 001c CBB1     		cbz	r3, .L1307
 14566              	.L1300:
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 14567              		.loc 7 290 0
 14568 001e 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 14569              		.loc 7 291 0
 14570 0020 0CBF     		ite	eq
 14571 0022 154B     		ldreq	r3, .L1309+4
 14572              		.loc 7 294 0
 14573 0024 154B     		ldrne	r3, .L1309+8
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 14574              		.loc 7 291 0
 14575 0026 2946     		mov	r1, r5
 14576              		.loc 7 294 0
 14577 0028 9847     		blx	r3
 14578              	.LVL1332:
 14579              	.LBE3504:
 14580              	.LBE3503:
 14581              	.LBB3508:
 14582              	.LBB3509:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 14583              		.loc 7 122 0
 14584 002a 6368     		ldr	r3, [r4, #4]
 14585 002c 1148     		ldr	r0, .L1309
 14586 002e CBB1     		cbz	r3, .L1308
 14587              	.L1303:
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 14588              		.loc 7 126 0
 14589 0030 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 14590              		.loc 7 125 0
 14591 0032 022B     		cmp	r3, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 14592              		.loc 7 126 0
 14593 0034 0CBF     		ite	eq
 14594 0036 134B     		ldreq	r3, .L1309+16
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 14595              		.loc 7 129 0
 14596 0038 134B     		ldrne	r3, .L1309+20
 14597 003a 9847     		blx	r3
 14598              	.LVL1333:
 14599              	.LBE3509:
 14600              	.LBE3508:
 14601              		.loc 15 158 0
 14602 003c 0020     		movs	r0, #0
 14603 003e 38BD     		pop	{r3, r4, r5, pc}
 14604              	.LVL1334:
 14605              	.L1306:
 14606              	.LBB3513:
 14607              	.LBB3501:
 14608              	.LBB3498:
 14609              	.LBB3499:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 14610              		.loc 7 288 0
 14611 0040 2068     		ldr	r0, [r4, #0]
 14612              	.LVL1335:
 14613 0042 0F49     		ldr	r1, .L1309+12
 14614              	.LVL1336:
 14615 0044 0368     		ldr	r3, [r0, #0]
 14616 0046 DB68     		ldr	r3, [r3, #12]
 14617 0048 9847     		blx	r3
 14618              	.LVL1337:
 14619              	.LBE3499:
 14620              	.LBE3498:
 14621              	.LBE3501:
 14622              	.LBE3513:
 14623              	.LBB3514:
 14624              	.LBB3507:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 14625              		.loc 7 287 0
 14626 004a 6368     		ldr	r3, [r4, #4]
 14627 004c 0948     		ldr	r0, .L1309
 14628 004e 002B     		cmp	r3, #0
 14629 0050 E5D1     		bne	.L1300
 14630              	.LVL1338:
 14631              	.L1307:
 14632              	.LBB3505:
 14633              	.LBB3506:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 14634              		.loc 7 288 0
 14635 0052 0068     		ldr	r0, [r0, #0]
 14636 0054 0368     		ldr	r3, [r0, #0]
 14637 0056 2946     		mov	r1, r5
 14638 0058 DB68     		ldr	r3, [r3, #12]
 14639 005a 9847     		blx	r3
 14640              	.LVL1339:
 14641              	.LBE3506:
 14642              	.LBE3505:
 14643              	.LBE3507:
 14644              	.LBE3514:
 14645              	.LBB3515:
 14646              	.LBB3512:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 14647              		.loc 7 122 0
 14648 005c 6368     		ldr	r3, [r4, #4]
 14649 005e 0548     		ldr	r0, .L1309
 14650 0060 002B     		cmp	r3, #0
 14651 0062 E5D1     		bne	.L1303
 14652              	.LVL1340:
 14653              	.L1308:
 14654              	.LBB3510:
 14655              	.LBB3511:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 14656              		.loc 7 123 0
 14657 0064 0068     		ldr	r0, [r0, #0]
 14658 0066 0368     		ldr	r3, [r0, #0]
 14659 0068 0A21     		movs	r1, #10
 14660 006a 9B68     		ldr	r3, [r3, #8]
 14661 006c 9847     		blx	r3
 14662              	.LVL1341:
 14663              	.LBE3511:
 14664              	.LBE3510:
 14665              	.LBE3512:
 14666              	.LBE3515:
 14667              		.loc 15 158 0
 14668 006e 0020     		movs	r0, #0
 14669 0070 38BD     		pop	{r3, r4, r5, pc}
 14670              	.L1310:
 14671 0072 00BF     		.align	2
 14672              	.L1309:
 14673 0074 00000000 		.word	.LANCHOR1
 14674 0078 00000000 		.word	_ZN4xpcc8IOStream8writeBinEPKc
 14675 007c 00000000 		.word	_ZN4xpcc8IOStream8writeHexEPKc
 14676 0080 E0030000 		.word	.LC42
 14677 0084 00000000 		.word	_ZN4xpcc8IOStream8writeBinEh
 14678 0088 00000000 		.word	_ZN4xpcc8IOStream8writeHexEh
 14679              		.cfi_endproc
 14680              	.LFE1058:
 14682              		.section	.text.startup._GLOBAL__sub_I_uart,"ax",%progbits
 14683              		.align	2
 14684              		.thumb
 14685              		.thumb_func
 14687              	_GLOBAL__sub_I_uart:
 14688              	.LFB1249:
 14689              		.loc 15 158 0
 14690              		.cfi_startproc
 14691              		@ args = 0, pretend = 0, frame = 0
 14692              		@ frame_needed = 0, uses_anonymous_args = 0
 14693              	.LVL1342:
 14694 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 14695              	.LCFI69:
 14696              		.cfi_def_cfa_offset 40
 14697              		.cfi_offset 3, -40
 14698              		.cfi_offset 4, -36
 14699              		.cfi_offset 5, -32
 14700              		.cfi_offset 6, -28
 14701              		.cfi_offset 7, -24
 14702              		.cfi_offset 8, -20
 14703              		.cfi_offset 9, -16
 14704              		.cfi_offset 10, -12
 14705              		.cfi_offset 11, -8
 14706              		.cfi_offset 14, -4
 14707              	.LBB3552:
 14708              	.LBB3553:
 14709              	.LBB3554:
 14710              	.LBB3555:
 14711              		.file 16 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/u
   1:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** // coding: utf-8
   2:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** // ----------------------------------------------------------------------------
   3:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** /* Copyright (c) 2011, Roboterclub Aachen e.V.
   4:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp ****  * All rights reserved.
   5:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp ****  *
   6:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp ****  * Redistribution and use in source and binary forms, with or without
   7:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp ****  * modification, are permitted provided that the following conditions are met:
   8:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp ****  * 
   9:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp ****  *     * Redistributions of source code must retain the above copyright
  10:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp ****  *       notice, this list of conditions and the following disclaimer.
  11:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp ****  *     * Redistributions in binary form must reproduce the above copyright
  12:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp ****  *       notice, this list of conditions and the following disclaimer in the
  13:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp ****  *       documentation and/or other materials provided with the distribution.
  14:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp ****  *     * Neither the name of the Roboterclub Aachen e.V. nor the
  15:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp ****  *       names of its contributors may be used to endorse or promote products
  16:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp ****  *       derived from this software without specific prior written permission.
  17:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp ****  *
  18:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp ****  * THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
  19:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp ****  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  20:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  21:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp ****  * DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
  22:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  23:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  24:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  25:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  26:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  27:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  28:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp ****  */
  29:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** // ----------------------------------------------------------------------------
  30:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** /*
  31:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp ****  * WARNING: This file is generated automatically, do not edit!
  32:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp ****  * Please modify the corresponding *.in file instead and rebuild this file. 
  33:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp ****  */
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** // ----------------------------------------------------------------------------
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 
  36:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** #ifndef XPCC_STM32__USART_2_HPP
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** #define XPCC_STM32__USART_2_HPP
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 
  39:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** #include <stdint.h>
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** #include "uart_base.hpp"
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** #include "../device.h"
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** namespace xpcc
  44:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** {
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 	namespace stm32
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 	{
  47:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 		/**
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 		 * @brief		Universal synchronous/asynchronous receiver
  49:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 		 * 				transmitter (USART2)
  50:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 		 * 
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 		 * Simple unbuffered implementation.
  52:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 		 * 
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 		 * @ingroup		stm32
  54:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 		 */
  55:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 		class Usart2 : public UartBase
  56:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 		{
  57:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 		public:
  58:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			Usart2(uint32_t baudrate)
  59:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			{
  60:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 				setBaudrate(baudrate);
  61:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			}
  62:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			
  63:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			enum Mapping
  64:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			{
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** #if defined(STM32F2XX) || defined(STM32F3XX) || defined(STM32F4XX)
  66:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 				REMAP_PA2_PA3,		///< TX mapped to PA2, RX mapped to PA3 (CTS/PA0, RTS/PA1, CK/PA4)
  67:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 				REMAP_PD5_PD6,		///< TX mapped to PD5, RX mapped to PD6 (CTS/PD3, RTS/PD4, CK/PD7)
  68:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** #if defined (STM32F3XX)
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 				REMAP_PA14_PA15,	///< TX mapped to PA14, RX mapped to PA15
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 				REMAP_PB3_PB4,		///< TX mapped to PB3, RX mapped to PB4 (CK/PB5)
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** #endif
  72:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** #else
  73:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 				REMAP_PA2_PA3 = 0,						///< TX mapped to PA2, RX mapped to PA3 (CTS/PA0, RTS/PA1, CK/PA4)
  74:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 				REMAP_PD5_PD6 = AFIO_MAPR_USART2_REMAP,	///< TX mapped to PD5, RX mapped to PD6 (CTS/PD3, RTS/P
  75:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** #endif
  76:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			};
  77:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			
  78:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			/**
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			 * Configure the IO Pins for Usart2
  80:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			 */
  81:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			static void
  82:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			configurePins(Mapping mapping);
  83:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			
  84:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			/**
  85:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			 * \brief	Set baudrate
  86:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			 * \param	baudrate	desired baud rate
  87:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			 */
  88:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			static void
  89:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			setBaudrate(uint32_t baudrate);
  90:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			
  91:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			/**
  92:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			 * \brief	Send a single byte
  93:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			 */
  94:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			static void
  95:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			write(uint8_t data);
  96:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			
  97:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			/**
  98:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			 * \brief	Write a block of bytes
  99:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			 *
 100:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			 * \param	*buffer	Pointer to a buffer
 101:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			 * \param	n	Number of bytes to be read
 102:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			 */
 103:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			static void
 104:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			write(const uint8_t *buffer, uint8_t n);
 105:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			
 106:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			/**
 107:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			 * \brief	Read a single byte
 108:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			 */
 109:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			static bool
 110:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			read(uint8_t& c);
 111:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			
 112:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			/**
 113:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			 * \brief	Read a block of bytes
 114:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			 * 
 115:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			 * \param	*buffer	Pointer to a buffer big enough to storage \a n bytes
 116:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			 * \param	n	Number of bytes to be read
 117:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			 * 
 118:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			 * \return	Number of bytes which could be read, maximal \a n
 119:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			 */
 120:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			static uint8_t
 121:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			read(uint8_t *buffer, uint8_t n);
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 		};
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 		
 124:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 		
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 		// --------------------------------------------------------------------
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 		/**
 127:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 		 * \brief	Buffered Usart
 128:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 		 * 
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 		 * This implementation uses a ringbuffer. The size of the ringbuffer
 130:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 		 * can be changed in the \c project.cfg file.
 131:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 		 * 
 132:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 		 * Just add add a value for USART2_TX_BUFFER_SIZE and/or 
 133:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 		 * USART2_RX_BUFFER_SIZE in the \c defines section. The size can
 134:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 		 * be any value between 1 and 254.
 135:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 		 * 
 136:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 		 * Example:
 137:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 		 * \code
 138:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 		 * [defines]
 139:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 		 * USART2_TX_BUFFER_SIZE = 20
 140:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 		 * USART2_RX_BUFFER_SIZE = 30
 141:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 		 * \endcode
 142:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 		 * 
 143:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 		 * \ingroup	stm32
 144:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 		 */
 145:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 		class BufferedUsart2 : public UartBase
 146:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 		{
 147:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 		public:
 148:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			/**
 149:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			 * Set baudrate.
 150:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			 * 
 151:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			 * \param	baudrate	Desired baud rate (e.g. 115200)
 152:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			 * \param	interruptPriority
 153:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			 * 			Interrupt vector priority (0=highest to 15=lowest)
 154:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			 * \param	blocking
 155:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			 * 			The write-function waits until a free slot is available
 156:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			 * 			in the send buffer.
 157:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			 */
 158:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			BufferedUsart2(uint32_t baudrate,
 159:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 					uint32_t interruptPriority, bool blocking = true)
 160:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 			{
 161:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/uart/usart_2.hpp **** 				setBaudrate(baudrate, interruptPriority, blocking);
 14712              		.loc 16 161 0
 14713 0004 0A21     		movs	r1, #10
 14714 0006 0122     		movs	r2, #1
 14715 0008 4FF46120 		mov	r0, #921600
 14716 000c 2F4B     		ldr	r3, .L1312
 14717              	.LBE3555:
 14718              	.LBE3554:
  17:pcInterface.cpp **** xpcc::IODeviceWrapper<xpcc::stm32::BufferedUsart2> uartWrap(uart);
 14719              		.loc 15 17 0
 14720 000e 304E     		ldr	r6, .L1312+4
 14721 0010 304D     		ldr	r5, .L1312+8
  18:pcInterface.cpp **** xpcc::IOStream coutRaw(uartWrap);
 14722              		.loc 15 18 0
 14723 0012 314C     		ldr	r4, .L1312+12
 14724              	.LBB3557:
 14725              	.LBB3558:
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		{
 14726              		.loc 5 79 0
 14727 0014 DFF834B1 		ldr	fp, .L1312+128
 14728              	.LBE3558:
 14729              	.LBE3557:
 14730              	.LBB3561:
 14731              	.LBB3562:
 14732 0018 DFF834A1 		ldr	sl, .L1312+132
 14733              	.LBE3562:
 14734              	.LBE3561:
 14735              	.LBB3565:
 14736              	.LBB3566:
 14737 001c DFF83491 		ldr	r9, .L1312+136
 14738              	.LBE3566:
 14739              	.LBE3565:
 14740              	.LBB3569:
 14741              	.LBB3570:
 14742 0020 DFF83481 		ldr	r8, .L1312+140
 14743              	.LBE3570:
 14744              	.LBE3569:
 14745              	.LBB3573:
 14746              	.LBB3574:
 14747 0024 2D4F     		ldr	r7, .L1312+16
 14748              	.LBE3574:
 14749              	.LBE3573:
 14750              	.LBB3577:
 14751              	.LBB3556:
 14752              		.loc 16 161 0
 14753 0026 9847     		blx	r3
 14754              	.LVL1343:
 14755              	.LBE3556:
 14756              	.LBE3577:
 14757              	.LBB3578:
 14758              	.LBB3579:
  74:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		{
 14759              		.loc 5 74 0
 14760 0028 2D4B     		ldr	r3, .L1312+20
 14761 002a 2E4A     		ldr	r2, .L1312+24
 14762              	.LBE3579:
 14763              	.LBE3578:
  17:pcInterface.cpp **** xpcc::IODeviceWrapper<xpcc::stm32::BufferedUsart2> uartWrap(uart);
 14764              		.loc 15 17 0
 14765 002c 2E49     		ldr	r1, .L1312+28
 14766              	.LBB3581:
 14767              	.LBB3580:
  74:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		{
 14768              		.loc 5 74 0
 14769 002e 1A60     		str	r2, [r3, #0]
 14770              	.LBE3580:
 14771              	.LBE3581:
  17:pcInterface.cpp **** xpcc::IODeviceWrapper<xpcc::stm32::BufferedUsart2> uartWrap(uart);
 14772              		.loc 15 17 0
 14773 0030 1846     		mov	r0, r3
 14774 0032 3246     		mov	r2, r6
 14775 0034 A847     		blx	r5
 14776              	.LVL1344:
  18:pcInterface.cpp **** xpcc::IOStream coutRaw(uartWrap);
 14777              		.loc 15 18 0
 14778 0036 2A49     		ldr	r1, .L1312+20
 14779 0038 2C48     		ldr	r0, .L1312+32
 14780 003a A047     		blx	r4
 14781              	.LVL1345:
 14782              	.LBB3582:
 14783              	.LBB3559:
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		{
 14784              		.loc 5 79 0
 14785 003c 2C4B     		ldr	r3, .L1312+36
 14786              	.LBE3559:
 14787              	.LBE3582:
  20:pcInterface.cpp **** xpcc::IODeviceWrapper<Stream<Prefix::POSITION, false> > poutWrap;
 14788              		.loc 15 20 0
 14789 003e 2D49     		ldr	r1, .L1312+40
 14790              	.LBB3583:
 14791              	.LBB3560:
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		{
 14792              		.loc 5 79 0
 14793 0040 CBF80030 		str	r3, [fp, #0]
 14794              	.LBE3560:
 14795              	.LBE3583:
  20:pcInterface.cpp **** xpcc::IODeviceWrapper<Stream<Prefix::POSITION, false> > poutWrap;
 14796              		.loc 15 20 0
 14797 0044 3246     		mov	r2, r6
 14798 0046 5846     		mov	r0, fp
 14799 0048 A847     		blx	r5
 14800              	.LVL1346:
  21:pcInterface.cpp **** xpcc::IOStream pout(poutWrap);
 14801              		.loc 15 21 0
 14802 004a 5946     		mov	r1, fp
 14803 004c 2A48     		ldr	r0, .L1312+44
 14804 004e A047     		blx	r4
 14805              	.LVL1347:
 14806              	.LBB3584:
 14807              	.LBB3563:
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		{
 14808              		.loc 5 79 0
 14809 0050 2A4B     		ldr	r3, .L1312+48
 14810              	.LBE3563:
 14811              	.LBE3584:
  23:pcInterface.cpp **** xpcc::IODeviceWrapper<Stream<Prefix::MEASUREMENT, true> > moutWrap;
 14812              		.loc 15 23 0
 14813 0052 2B49     		ldr	r1, .L1312+52
 14814              	.LBB3585:
 14815              	.LBB3564:
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		{
 14816              		.loc 5 79 0
 14817 0054 CAF80030 		str	r3, [sl, #0]
 14818              	.LBE3564:
 14819              	.LBE3585:
  23:pcInterface.cpp **** xpcc::IODeviceWrapper<Stream<Prefix::MEASUREMENT, true> > moutWrap;
 14820              		.loc 15 23 0
 14821 0058 3246     		mov	r2, r6
 14822 005a 5046     		mov	r0, sl
 14823 005c A847     		blx	r5
 14824              	.LVL1348:
  24:pcInterface.cpp **** xpcc::IOStream mout(moutWrap);
 14825              		.loc 15 24 0
 14826 005e 5146     		mov	r1, sl
 14827 0060 2848     		ldr	r0, .L1312+56
 14828 0062 A047     		blx	r4
 14829              	.LVL1349:
 14830              	.LBB3586:
 14831              	.LBB3567:
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		{
 14832              		.loc 5 79 0
 14833 0064 284B     		ldr	r3, .L1312+60
 14834              	.LBE3567:
 14835              	.LBE3586:
  26:pcInterface.cpp **** xpcc::IODeviceWrapper<Stream<Prefix::DEBUG, false> > doutWrap;
 14836              		.loc 15 26 0
 14837 0066 2949     		ldr	r1, .L1312+64
 14838              	.LBB3587:
 14839              	.LBB3568:
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		{
 14840              		.loc 5 79 0
 14841 0068 C9F80030 		str	r3, [r9, #0]
 14842              	.LBE3568:
 14843              	.LBE3587:
  26:pcInterface.cpp **** xpcc::IODeviceWrapper<Stream<Prefix::DEBUG, false> > doutWrap;
 14844              		.loc 15 26 0
 14845 006c 3246     		mov	r2, r6
 14846 006e 4846     		mov	r0, r9
 14847 0070 A847     		blx	r5
 14848              	.LVL1350:
  27:pcInterface.cpp **** xpcc::IOStream dout(doutWrap);
 14849              		.loc 15 27 0
 14850 0072 4946     		mov	r1, r9
 14851 0074 2648     		ldr	r0, .L1312+68
 14852 0076 A047     		blx	r4
 14853              	.LVL1351:
 14854              	.LBB3588:
 14855              	.LBB3571:
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		{
 14856              		.loc 5 79 0
 14857 0078 264B     		ldr	r3, .L1312+72
 14858              	.LBE3571:
 14859              	.LBE3588:
  29:pcInterface.cpp **** xpcc::IODeviceWrapper<Stream<Prefix::ERROR, false> > cerrWrap;
 14860              		.loc 15 29 0
 14861 007a 2749     		ldr	r1, .L1312+76
 14862              	.LBB3589:
 14863              	.LBB3572:
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		{
 14864              		.loc 5 79 0
 14865 007c C8F80030 		str	r3, [r8, #0]
 14866              	.LBE3572:
 14867              	.LBE3589:
  29:pcInterface.cpp **** xpcc::IODeviceWrapper<Stream<Prefix::ERROR, false> > cerrWrap;
 14868              		.loc 15 29 0
 14869 0080 3246     		mov	r2, r6
 14870 0082 4046     		mov	r0, r8
 14871 0084 A847     		blx	r5
 14872              	.LVL1352:
  30:pcInterface.cpp **** xpcc::IOStream cerr(cerrWrap);
 14873              		.loc 15 30 0
 14874 0086 4146     		mov	r1, r8
 14875 0088 2448     		ldr	r0, .L1312+80
 14876 008a A047     		blx	r4
 14877              	.LVL1353:
 14878              	.LBB3590:
 14879              	.LBB3575:
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		{
 14880              		.loc 5 79 0
 14881 008c 244B     		ldr	r3, .L1312+84
 14882              	.LBE3575:
 14883              	.LBE3590:
  32:pcInterface.cpp **** xpcc::IODeviceWrapper<Stream<Prefix::INFO, false> > iWrap;
 14884              		.loc 15 32 0
 14885 008e 2549     		ldr	r1, .L1312+88
 14886              	.LBB3591:
 14887              	.LBB3576:
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		{
 14888              		.loc 5 79 0
 14889 0090 3B60     		str	r3, [r7, #0]
 14890              	.LBE3576:
 14891              	.LBE3591:
  32:pcInterface.cpp **** xpcc::IODeviceWrapper<Stream<Prefix::INFO, false> > iWrap;
 14892              		.loc 15 32 0
 14893 0092 3246     		mov	r2, r6
 14894 0094 3846     		mov	r0, r7
 14895 0096 A847     		blx	r5
 14896              	.LVL1354:
  33:pcInterface.cpp **** xpcc::IOStream iout(iWrap);
 14897              		.loc 15 33 0
 14898 0098 3946     		mov	r1, r7
 14899 009a 2348     		ldr	r0, .L1312+92
 14900 009c A047     		blx	r4
 14901              	.LVL1355:
 14902              	.LBB3592:
 14903              	.LBB3593:
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		{
 14904              		.loc 5 79 0
 14905 009e 234B     		ldr	r3, .L1312+96
 14906 00a0 234A     		ldr	r2, .L1312+100
 14907              	.LBE3593:
 14908              	.LBE3592:
  35:pcInterface.cpp **** xpcc::IODeviceWrapper<Stream<Prefix::COMMAND, false> > cWrap;
 14909              		.loc 15 35 0
 14910 00a2 2449     		ldr	r1, .L1312+104
 14911              	.LBB3595:
 14912              	.LBB3594:
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		{
 14913              		.loc 5 79 0
 14914 00a4 1360     		str	r3, [r2, #0]
 14915              	.LBE3594:
 14916              	.LBE3595:
  35:pcInterface.cpp **** xpcc::IODeviceWrapper<Stream<Prefix::COMMAND, false> > cWrap;
 14917              		.loc 15 35 0
 14918 00a6 2248     		ldr	r0, .L1312+100
 14919 00a8 3246     		mov	r2, r6
 14920 00aa A847     		blx	r5
 14921              	.LVL1356:
  36:pcInterface.cpp **** xpcc::IOStream commandOut(cWrap);
 14922              		.loc 15 36 0
 14923 00ac 2049     		ldr	r1, .L1312+100
 14924 00ae 2248     		ldr	r0, .L1312+108
 14925 00b0 A047     		blx	r4
 14926              	.LVL1357:
 14927              	.LBB3596:
 14928              	.LBB3597:
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		{
 14929              		.loc 5 79 0
 14930 00b2 224B     		ldr	r3, .L1312+112
 14931 00b4 224A     		ldr	r2, .L1312+116
 14932              	.LBE3597:
 14933              	.LBE3596:
  38:pcInterface.cpp **** xpcc::IODeviceWrapper<Stream<Prefix::CONTROL, false> > kWrap;
 14934              		.loc 15 38 0
 14935 00b6 2349     		ldr	r1, .L1312+120
 14936              	.LBB3599:
 14937              	.LBB3598:
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice_wrapper.hpp **** 		{
 14938              		.loc 5 79 0
 14939 00b8 1360     		str	r3, [r2, #0]
 14940              	.LBE3598:
 14941              	.LBE3599:
  38:pcInterface.cpp **** xpcc::IODeviceWrapper<Stream<Prefix::CONTROL, false> > kWrap;
 14942              		.loc 15 38 0
 14943 00ba 1046     		mov	r0, r2
 14944 00bc 3246     		mov	r2, r6
 14945 00be A847     		blx	r5
 14946              	.LVL1358:
  39:pcInterface.cpp **** xpcc::IOStream controlOut(kWrap);
 14947              		.loc 15 39 0
 14948 00c0 1F49     		ldr	r1, .L1312+116
 14949 00c2 2148     		ldr	r0, .L1312+124
 14950 00c4 A047     		blx	r4
 14951              	.LVL1359:
 14952 00c6 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 14953              	.L1313:
 14954 00ca 00BF     		.align	2
 14955              	.L1312:
 14956 00cc 00000000 		.word	_ZN4xpcc5stm3214BufferedUsart211setBaudrateEmmb
 14957 00d0 00000000 		.word	__dso_handle
 14958 00d4 00000000 		.word	__aeabi_atexit
 14959 00d8 00000000 		.word	_ZN4xpcc8IOStreamC1ERNS_8IODeviceE
 14960 00dc 00000000 		.word	.LANCHOR15
 14961 00e0 00000000 		.word	.LANCHOR7
 14962 00e4 08000000 		.word	_ZTVN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EEE+8
 14963 00e8 00000000 		.word	_ZN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EED1Ev
 14964 00ec 00000000 		.word	.LANCHOR8
 14965 00f0 08000000 		.word	_ZTVN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEEE+8
 14966 00f4 00000000 		.word	_ZN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEED1Ev
 14967 00f8 00000000 		.word	.LANCHOR10
 14968 00fc 08000000 		.word	_ZTVN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEEE+8
 14969 0100 00000000 		.word	_ZN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEED1Ev
 14970 0104 00000000 		.word	.LANCHOR12
 14971 0108 08000000 		.word	_ZTVN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEEE+8
 14972 010c 00000000 		.word	_ZN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEED1Ev
 14973 0110 00000000 		.word	.LANCHOR2
 14974 0114 08000000 		.word	_ZTVN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEEE+8
 14975 0118 00000000 		.word	_ZN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEED1Ev
 14976 011c 00000000 		.word	.LANCHOR1
 14977 0120 08000000 		.word	_ZTVN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEEE+8
 14978 0124 00000000 		.word	_ZN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEED1Ev
 14979 0128 00000000 		.word	.LANCHOR0
 14980 012c 08000000 		.word	_ZTVN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEEE+8
 14981 0130 00000000 		.word	.LANCHOR16
 14982 0134 00000000 		.word	_ZN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEED1Ev
 14983 0138 00000000 		.word	.LANCHOR3
 14984 013c 08000000 		.word	_ZTVN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEEE+8
 14985 0140 00000000 		.word	.LANCHOR17
 14986 0144 00000000 		.word	_ZN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEED1Ev
 14987 0148 00000000 		.word	.LANCHOR18
 14988 014c 00000000 		.word	.LANCHOR9
 14989 0150 00000000 		.word	.LANCHOR11
 14990 0154 00000000 		.word	.LANCHOR13
 14991 0158 00000000 		.word	.LANCHOR14
 14992              	.LBE3553:
 14993              	.LBE3552:
 14994              		.cfi_endproc
 14995              	.LFE1249:
 14997              		.section	.init_array,"aw",%init_array
 14998              		.align	2
 14999 0000 00000000 		.word	_GLOBAL__sub_I_uart(target1)
 15000              		.weak	_ZN10HallSensorIL4Axis2EE9triggeredE
 15001              		.section	.bss._ZN10HallSensorIL4Axis2EE9triggeredE,"awG",%nobits,_ZN10HallSensorIL4Axis2EE9trigger
 15002              		.align	2
 15005              	_ZN10HallSensorIL4Axis2EE9triggeredE:
 15006 0000 0000     		.space	2
 15007              		.weak	_ZN10HallSensorIL4Axis0EE9triggeredE
 15008 0002 0000     		.section	.bss._ZN10HallSensorIL4Axis0EE9triggeredE,"awG",%nobits,_ZN10HallSensorIL4Axis0EE9trigger
 15009              		.align	2
 15012              	_ZN10HallSensorIL4Axis0EE9triggeredE:
 15013 0000 0000     		.space	2
 15014              		.weak	_ZN7ControlIL4Axis2EE7v_shallE
 15015 0002 0000     		.section	.bss._ZN7ControlIL4Axis2EE7v_shallE,"awG",%nobits,_ZN7ControlIL4Axis2EE7v_shallE,comdat
 15016              		.align	2
 15019              	_ZN7ControlIL4Axis2EE7v_shallE:
 15020 0000 00000000 		.space	4
 15021              		.weak	_ZN7ControlIL4Axis2EE4v_isE
 15022              		.section	.bss._ZN7ControlIL4Axis2EE4v_isE,"awG",%nobits,_ZN7ControlIL4Axis2EE4v_isE,comdat
 15023              		.align	2
 15026              	_ZN7ControlIL4Axis2EE4v_isE:
 15027 0000 00000000 		.space	4
 15028              		.weak	_ZN7ControlIL4Axis2EE9pos_shallE
 15029              		.section	.bss._ZN7ControlIL4Axis2EE9pos_shallE,"awG",%nobits,_ZN7ControlIL4Axis2EE9pos_shallE,comd
 15030              		.align	2
 15033              	_ZN7ControlIL4Axis2EE9pos_shallE:
 15034 0000 00000000 		.space	4
 15035              		.weak	_ZN7ControlIL4Axis0EE7v_shallE
 15036              		.section	.bss._ZN7ControlIL4Axis0EE7v_shallE,"awG",%nobits,_ZN7ControlIL4Axis0EE7v_shallE,comdat
 15037              		.align	2
 15040              	_ZN7ControlIL4Axis0EE7v_shallE:
 15041 0000 00000000 		.space	4
 15042              		.weak	_ZN7ControlIL4Axis0EE4v_isE
 15043              		.section	.bss._ZN7ControlIL4Axis0EE4v_isE,"awG",%nobits,_ZN7ControlIL4Axis0EE4v_isE,comdat
 15044              		.align	2
 15047              	_ZN7ControlIL4Axis0EE4v_isE:
 15048 0000 00000000 		.space	4
 15049              		.weak	_ZN7ControlIL4Axis0EE9pos_shallE
 15050              		.section	.bss._ZN7ControlIL4Axis0EE9pos_shallE,"awG",%nobits,_ZN7ControlIL4Axis0EE9pos_shallE,comd
 15051              		.align	2
 15054              	_ZN7ControlIL4Axis0EE9pos_shallE:
 15055 0000 00000000 		.space	4
 15056              		.global	controlOut
 15057              		.global	kWrap
 15058              		.global	commandOut
 15059              		.global	cWrap
 15060              		.global	iout
 15061              		.global	iWrap
 15062              		.global	cerr
 15063              		.global	cerrWrap
 15064              		.global	dout
 15065              		.global	doutWrap
 15066              		.global	mout
 15067              		.global	moutWrap
 15068              		.global	pout
 15069              		.global	poutWrap
 15070              		.global	coutRaw
 15071              		.global	uartWrap
 15072              		.global	uart
 15073              		.weak	_ZN7ControlIL4Axis2EE3v_uE
 15074              		.section	.bss._ZN7ControlIL4Axis2EE3v_uE,"awG",%nobits,_ZN7ControlIL4Axis2EE3v_uE,comdat
 15075              		.align	2
 15078              	_ZN7ControlIL4Axis2EE3v_uE:
 15079 0000 00000000 		.space	4
 15080              		.weak	_ZN7ControlIL4Axis2EE7v_urealE
 15081              		.section	.bss._ZN7ControlIL4Axis2EE7v_urealE,"awG",%nobits,_ZN7ControlIL4Axis2EE7v_urealE,comdat
 15082              		.align	2
 15085              	_ZN7ControlIL4Axis2EE7v_urealE:
 15086 0000 00000000 		.space	4
 15087              		.weak	_ZN7ControlIL4Axis2EE22positionControlEnabledE
 15088              		.section	.bss._ZN7ControlIL4Axis2EE22positionControlEnabledE,"awG",%nobits,_ZN7ControlIL4Axis2EE22
 15091              	_ZN7ControlIL4Axis2EE22positionControlEnabledE:
 15092 0000 00       		.space	1
 15093              		.weak	_ZN7ControlIL4Axis2EE19speedControlEnabledE
 15094              		.section	.bss._ZN7ControlIL4Axis2EE19speedControlEnabledE,"awG",%nobits,_ZN7ControlIL4Axis2EE19spe
 15097              	_ZN7ControlIL4Axis2EE19speedControlEnabledE:
 15098 0000 00       		.space	1
 15099              		.weak	_ZN7ControlIL4Axis0EE3v_uE
 15100              		.section	.bss._ZN7ControlIL4Axis0EE3v_uE,"awG",%nobits,_ZN7ControlIL4Axis0EE3v_uE,comdat
 15101              		.align	2
 15104              	_ZN7ControlIL4Axis0EE3v_uE:
 15105 0000 00000000 		.space	4
 15106              		.weak	_ZN7ControlIL4Axis0EE7v_urealE
 15107              		.section	.bss._ZN7ControlIL4Axis0EE7v_urealE,"awG",%nobits,_ZN7ControlIL4Axis0EE7v_urealE,comdat
 15108              		.align	2
 15111              	_ZN7ControlIL4Axis0EE7v_urealE:
 15112 0000 00000000 		.space	4
 15113              		.weak	_ZN7ControlIL4Axis0EE22positionControlEnabledE
 15114              		.section	.bss._ZN7ControlIL4Axis0EE22positionControlEnabledE,"awG",%nobits,_ZN7ControlIL4Axis0EE22
 15117              	_ZN7ControlIL4Axis0EE22positionControlEnabledE:
 15118 0000 00       		.space	1
 15119              		.weak	_ZN7ControlIL4Axis0EE19speedControlEnabledE
 15120              		.section	.bss._ZN7ControlIL4Axis0EE19speedControlEnabledE,"awG",%nobits,_ZN7ControlIL4Axis0EE19spe
 15123              	_ZN7ControlIL4Axis0EE19speedControlEnabledE:
 15124 0000 00       		.space	1
 15125              		.weak	_ZZN8Handlers18linePatternHandlerEPKciE1i
 15126              		.section	.bss._ZZN8Handlers18linePatternHandlerEPKciE1i,"awG",%nobits,_ZZN8Handlers18linePatternHa
 15127              		.align	2
 15130              	_ZZN8Handlers18linePatternHandlerEPKciE1i:
 15131 0000 00000000 		.space	4
 15132              		.weak	_ZZN8Handlers18linePatternHandlerEPKciE6points
 15133              		.section	.bss._ZZN8Handlers18linePatternHandlerEPKciE6points,"awG",%nobits,_ZZN8Handlers18linePatt
 15134              		.align	2
 15137              	_ZZN8Handlers18linePatternHandlerEPKciE6points:
 15138 0000 00000000 		.space	24
 15138      00000000 
 15138      00000000 
 15138      00000000 
 15138      00000000 
 15139              		.weak	_ZZN8Handlers24rectanglePatternHandler3EPKciE1i
 15140              		.section	.bss._ZZN8Handlers24rectanglePatternHandler3EPKciE1i,"awG",%nobits,_ZZN8Handlers24rectang
 15141              		.align	2
 15144              	_ZZN8Handlers24rectanglePatternHandler3EPKciE1i:
 15145 0000 00000000 		.space	4
 15146              		.weak	_ZZN8Handlers24rectanglePatternHandler3EPKciE6points
 15147              		.section	.bss._ZZN8Handlers24rectanglePatternHandler3EPKciE6points,"awG",%nobits,_ZZN8Handlers24re
 15148              		.align	2
 15151              	_ZZN8Handlers24rectanglePatternHandler3EPKciE6points:
 15152 0000 00000000 		.space	40
 15152      00000000 
 15152      00000000 
 15152      00000000 
 15152      00000000 
 15153              		.weak	_ZZN8Handlers23rectanglePatternHandlerEPKciE5lastx
 15154              		.section	.data._ZZN8Handlers23rectanglePatternHandlerEPKciE5lastx,"awG",%progbits,_ZZN8Handlers23r
 15155              		.align	2
 15158              	_ZZN8Handlers23rectanglePatternHandlerEPKciE5lastx:
 15159 0000 000080BF 		.word	-1082130432
 15160              		.weak	_ZZN8Handlers23rectanglePatternHandlerEPKciE5lasty
 15161              		.section	.data._ZZN8Handlers23rectanglePatternHandlerEPKciE5lasty,"awG",%progbits,_ZZN8Handlers23r
 15162              		.align	2
 15165              	_ZZN8Handlers23rectanglePatternHandlerEPKciE5lasty:
 15166 0000 000080BF 		.word	-1082130432
 15167              		.weak	_ZZN8Handlers23rectanglePatternHandlerEPKciE5lastw
 15168              		.section	.data._ZZN8Handlers23rectanglePatternHandlerEPKciE5lastw,"awG",%progbits,_ZZN8Handlers23r
 15169              		.align	2
 15172              	_ZZN8Handlers23rectanglePatternHandlerEPKciE5lastw:
 15173 0000 000080BF 		.word	-1082130432
 15174              		.weak	_ZZN8Handlers23rectanglePatternHandlerEPKciE5lasth
 15175              		.section	.data._ZZN8Handlers23rectanglePatternHandlerEPKciE5lasth,"awG",%progbits,_ZZN8Handlers23r
 15176              		.align	2
 15179              	_ZZN8Handlers23rectanglePatternHandlerEPKciE5lasth:
 15180 0000 000080BF 		.word	-1082130432
 15181              		.weak	_ZTVN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEEE
 15182              		.section	.rodata._ZTVN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEEE,"aG",%progbits,_ZTVN4x
 15183              		.align	3
 15186              	_ZTVN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEEE:
 15187 0000 00000000 		.word	0
 15188 0004 00000000 		.word	0
 15189 0008 00000000 		.word	_ZN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEED1Ev
 15190 000c 00000000 		.word	_ZN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEED0Ev
 15191 0010 00000000 		.word	_ZN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEE5writeEc
 15192 0014 00000000 		.word	_ZN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEE5writeEPKc
 15193 0018 00000000 		.word	_ZN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEE5flushEv
 15194 001c 00000000 		.word	_ZN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEE4readERc
 15195              		.weak	_ZTVN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEEE
 15196              		.section	.rodata._ZTVN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEEE,"aG",%progbits,_ZTVN4x
 15197              		.align	3
 15200              	_ZTVN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEEE:
 15201 0000 00000000 		.word	0
 15202 0004 00000000 		.word	0
 15203 0008 00000000 		.word	_ZN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEED1Ev
 15204 000c 00000000 		.word	_ZN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEED0Ev
 15205 0010 00000000 		.word	_ZN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEE5writeEc
 15206 0014 00000000 		.word	_ZN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEE5writeEPKc
 15207 0018 00000000 		.word	_ZN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEE5flushEv
 15208 001c 00000000 		.word	_ZN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEE4readERc
 15209              		.weak	_ZTVN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEEE
 15210              		.section	.rodata._ZTVN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEEE,"aG",%progbits,_ZTVN4x
 15211              		.align	3
 15214              	_ZTVN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEEE:
 15215 0000 00000000 		.word	0
 15216 0004 00000000 		.word	0
 15217 0008 00000000 		.word	_ZN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEED1Ev
 15218 000c 00000000 		.word	_ZN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEED0Ev
 15219 0010 00000000 		.word	_ZN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEE5writeEc
 15220 0014 00000000 		.word	_ZN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEE5writeEPKc
 15221 0018 00000000 		.word	_ZN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEE5flushEv
 15222 001c 00000000 		.word	_ZN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEE4readERc
 15223              		.weak	_ZTVN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEEE
 15224              		.section	.rodata._ZTVN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEEE,"aG",%progbits,_ZTVN4x
 15225              		.align	3
 15228              	_ZTVN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEEE:
 15229 0000 00000000 		.word	0
 15230 0004 00000000 		.word	0
 15231 0008 00000000 		.word	_ZN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEED1Ev
 15232 000c 00000000 		.word	_ZN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEED0Ev
 15233 0010 00000000 		.word	_ZN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEE5writeEc
 15234 0014 00000000 		.word	_ZN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEE5writeEPKc
 15235 0018 00000000 		.word	_ZN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEE5flushEv
 15236 001c 00000000 		.word	_ZN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEE4readERc
 15237              		.weak	_ZTVN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEEE
 15238              		.section	.rodata._ZTVN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEEE,"aG",%progbits,_ZTVN4x
 15239              		.align	3
 15242              	_ZTVN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEEE:
 15243 0000 00000000 		.word	0
 15244 0004 00000000 		.word	0
 15245 0008 00000000 		.word	_ZN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEED1Ev
 15246 000c 00000000 		.word	_ZN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEED0Ev
 15247 0010 00000000 		.word	_ZN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEE5writeEc
 15248 0014 00000000 		.word	_ZN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEE5writeEPKc
 15249 0018 00000000 		.word	_ZN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEE5flushEv
 15250 001c 00000000 		.word	_ZN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEE4readERc
 15251              		.weak	_ZTVN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEEE
 15252              		.section	.rodata._ZTVN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEEE,"aG",%progbits,_ZTVN4x
 15253              		.align	3
 15256              	_ZTVN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEEE:
 15257 0000 00000000 		.word	0
 15258 0004 00000000 		.word	0
 15259 0008 00000000 		.word	_ZN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEED1Ev
 15260 000c 00000000 		.word	_ZN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEED0Ev
 15261 0010 00000000 		.word	_ZN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEE5writeEc
 15262 0014 00000000 		.word	_ZN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEE5writeEPKc
 15263 0018 00000000 		.word	_ZN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEE5flushEv
 15264 001c 00000000 		.word	_ZN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEE4readERc
 15265              		.weak	_ZTVN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEEE
 15266              		.section	.rodata._ZTVN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEEE,"aG",%progbits,_ZTVN4x
 15267              		.align	3
 15270              	_ZTVN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEEE:
 15271 0000 00000000 		.word	0
 15272 0004 00000000 		.word	0
 15273 0008 00000000 		.word	_ZN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEED1Ev
 15274 000c 00000000 		.word	_ZN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEED0Ev
 15275 0010 00000000 		.word	_ZN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEE5writeEc
 15276 0014 00000000 		.word	_ZN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEE5writeEPKc
 15277 0018 00000000 		.word	_ZN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEE5flushEv
 15278 001c 00000000 		.word	_ZN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEE4readERc
 15279              		.weak	_ZTVN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EEE
 15280              		.section	.rodata._ZTVN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EEE,"aG",%progbits,_ZTVN4xpc
 15281              		.align	3
 15284              	_ZTVN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EEE:
 15285 0000 00000000 		.word	0
 15286 0004 00000000 		.word	0
 15287 0008 00000000 		.word	_ZN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EED1Ev
 15288 000c 00000000 		.word	_ZN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EED0Ev
 15289 0010 00000000 		.word	_ZN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EE5writeEc
 15290 0014 00000000 		.word	_ZN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EE5writeEPKc
 15291 0018 00000000 		.word	_ZN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EE5flushEv
 15292 001c 00000000 		.word	_ZN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EE4readERc
 15293              		.weak	_ZN6StreamILc75ELb0ELb1ELi300EE3posE
 15294              		.section	.bss._ZN6StreamILc75ELb0ELb1ELi300EE3posE,"awG",%nobits,_ZN6StreamILc75ELb0ELb1ELi300EE3p
 15295              		.align	2
 15298              	_ZN6StreamILc75ELb0ELb1ELi300EE3posE:
 15299 0000 00000000 		.space	4
 15300              		.weak	_ZN6StreamILc75ELb0ELb1ELi300EE4textE
 15301              		.section	.bss._ZN6StreamILc75ELb0ELb1ELi300EE4textE,"awG",%nobits,_ZN6StreamILc75ELb0ELb1ELi300EE4
 15302              		.align	2
 15305              	_ZN6StreamILc75ELb0ELb1ELi300EE4textE:
 15306 0000 00000000 		.space	300
 15306      00000000 
 15306      00000000 
 15306      00000000 
 15306      00000000 
 15307              		.weak	_ZN6StreamILc67ELb0ELb1ELi300EE3posE
 15308              		.section	.bss._ZN6StreamILc67ELb0ELb1ELi300EE3posE,"awG",%nobits,_ZN6StreamILc67ELb0ELb1ELi300EE3p
 15309              		.align	2
 15312              	_ZN6StreamILc67ELb0ELb1ELi300EE3posE:
 15313 0000 00000000 		.space	4
 15314              		.weak	_ZN6StreamILc67ELb0ELb1ELi300EE4textE
 15315              		.section	.bss._ZN6StreamILc67ELb0ELb1ELi300EE4textE,"awG",%nobits,_ZN6StreamILc67ELb0ELb1ELi300EE4
 15316              		.align	2
 15319              	_ZN6StreamILc67ELb0ELb1ELi300EE4textE:
 15320 0000 00000000 		.space	300
 15320      00000000 
 15320      00000000 
 15320      00000000 
 15320      00000000 
 15321              		.weak	_ZN6StreamILc73ELb0ELb1ELi300EE3posE
 15322              		.section	.bss._ZN6StreamILc73ELb0ELb1ELi300EE3posE,"awG",%nobits,_ZN6StreamILc73ELb0ELb1ELi300EE3p
 15323              		.align	2
 15326              	_ZN6StreamILc73ELb0ELb1ELi300EE3posE:
 15327 0000 00000000 		.space	4
 15328              		.weak	_ZN6StreamILc73ELb0ELb1ELi300EE4textE
 15329              		.section	.bss._ZN6StreamILc73ELb0ELb1ELi300EE4textE,"awG",%nobits,_ZN6StreamILc73ELb0ELb1ELi300EE4
 15330              		.align	2
 15333              	_ZN6StreamILc73ELb0ELb1ELi300EE4textE:
 15334 0000 00000000 		.space	300
 15334      00000000 
 15334      00000000 
 15334      00000000 
 15334      00000000 
 15335              		.weak	_ZN6StreamILc69ELb0ELb1ELi300EE3posE
 15336              		.section	.bss._ZN6StreamILc69ELb0ELb1ELi300EE3posE,"awG",%nobits,_ZN6StreamILc69ELb0ELb1ELi300EE3p
 15337              		.align	2
 15340              	_ZN6StreamILc69ELb0ELb1ELi300EE3posE:
 15341 0000 00000000 		.space	4
 15342              		.weak	_ZN6StreamILc69ELb0ELb1ELi300EE4textE
 15343              		.section	.bss._ZN6StreamILc69ELb0ELb1ELi300EE4textE,"awG",%nobits,_ZN6StreamILc69ELb0ELb1ELi300EE4
 15344              		.align	2
 15347              	_ZN6StreamILc69ELb0ELb1ELi300EE4textE:
 15348 0000 00000000 		.space	300
 15348      00000000 
 15348      00000000 
 15348      00000000 
 15348      00000000 
 15349              		.weak	_ZN6StreamILc68ELb0ELb1ELi300EE3posE
 15350              		.section	.bss._ZN6StreamILc68ELb0ELb1ELi300EE3posE,"awG",%nobits,_ZN6StreamILc68ELb0ELb1ELi300EE3p
 15351              		.align	2
 15354              	_ZN6StreamILc68ELb0ELb1ELi300EE3posE:
 15355 0000 00000000 		.space	4
 15356              		.weak	_ZN6StreamILc68ELb0ELb1ELi300EE4textE
 15357              		.section	.bss._ZN6StreamILc68ELb0ELb1ELi300EE4textE,"awG",%nobits,_ZN6StreamILc68ELb0ELb1ELi300EE4
 15358              		.align	2
 15361              	_ZN6StreamILc68ELb0ELb1ELi300EE4textE:
 15362 0000 00000000 		.space	300
 15362      00000000 
 15362      00000000 
 15362      00000000 
 15362      00000000 
 15363              		.weak	_ZN6StreamILc77ELb1ELb1ELi300EE3posE
 15364              		.section	.bss._ZN6StreamILc77ELb1ELb1ELi300EE3posE,"awG",%nobits,_ZN6StreamILc77ELb1ELb1ELi300EE3p
 15365              		.align	2
 15368              	_ZN6StreamILc77ELb1ELb1ELi300EE3posE:
 15369 0000 00000000 		.space	4
 15370              		.weak	_ZN6StreamILc77ELb1ELb1ELi300EE4textE
 15371              		.section	.bss._ZN6StreamILc77ELb1ELb1ELi300EE4textE,"awG",%nobits,_ZN6StreamILc77ELb1ELb1ELi300EE4
 15372              		.align	2
 15375              	_ZN6StreamILc77ELb1ELb1ELi300EE4textE:
 15376 0000 00000000 		.space	300
 15376      00000000 
 15376      00000000 
 15376      00000000 
 15376      00000000 
 15377              		.weak	_ZN6StreamILc80ELb0ELb1ELi300EE3posE
 15378              		.section	.bss._ZN6StreamILc80ELb0ELb1ELi300EE3posE,"awG",%nobits,_ZN6StreamILc80ELb0ELb1ELi300EE3p
 15379              		.align	2
 15382              	_ZN6StreamILc80ELb0ELb1ELi300EE3posE:
 15383 0000 00000000 		.space	4
 15384              		.weak	_ZN6StreamILc80ELb0ELb1ELi300EE4textE
 15385              		.section	.bss._ZN6StreamILc80ELb0ELb1ELi300EE4textE,"awG",%nobits,_ZN6StreamILc80ELb0ELb1ELi300EE4
 15386              		.align	2
 15389              	_ZN6StreamILc80ELb0ELb1ELi300EE4textE:
 15390 0000 00000000 		.space	300
 15390      00000000 
 15390      00000000 
 15390      00000000 
 15390      00000000 
 15391              		.section	.bss.mout,"aw",%nobits
 15392              		.align	2
 15393              		.set	.LANCHOR12,. + 0
 15396              	mout:
 15397 0000 00000000 		.space	8
 15397      00000000 
 15398              		.section	.bss.cerr,"aw",%nobits
 15399              		.align	2
 15400              		.set	.LANCHOR1,. + 0
 15403              	cerr:
 15404 0000 00000000 		.space	8
 15404      00000000 
 15405              		.section	.data._ZN12_GLOBAL__N_112CommandTableE,"aw",%progbits
 15406              		.align	2
 15407              		.set	.LANCHOR4,. + 0
 15410              	_ZN12_GLOBAL__N_112CommandTableE:
 15411 0000 F4030000 		.word	.LC43
 15412 0004 00000000 		.word	_ZN8Handlers11gotoHandlerIL4Axis0EEEbPKci
 15413 0008 FC030000 		.word	.LC44
 15414 000c 00000000 		.word	_ZN8Handlers11gotoHandlerIL4Axis2EEEbPKci
 15415 0010 04040000 		.word	.LC45
 15416 0014 00000000 		.word	_ZN8Handlers11moveHandlerIL4Axis0EEEbPKci
 15417 0018 0C040000 		.word	.LC46
 15418 001c 00000000 		.word	_ZN8Handlers11moveHandlerIL4Axis2EEEbPKci
 15419 0020 14040000 		.word	.LC47
 15420 0024 00000000 		.word	_ZN8Handlers15setSpeedHandlerIL4Axis0EEEbPKci
 15421 0028 1C040000 		.word	.LC48
 15422 002c 00000000 		.word	_ZN8Handlers15setSpeedHandlerIL4Axis2EEEbPKci
 15423 0030 24040000 		.word	.LC49
 15424 0034 00000000 		.word	_ZN8Handlers13setPwmHandlerIL4Axis0EEEbPKci
 15425 0038 2C040000 		.word	.LC50
 15426 003c 00000000 		.word	_ZN8Handlers13setPwmHandlerIL4Axis2EEEbPKci
 15427 0040 34040000 		.word	.LC51
 15428 0044 00000000 		.word	_ZN8Handlers18setMaxSpeedHandlerEPKci
 15429 0048 3C040000 		.word	.LC52
 15430 004c 00000000 		.word	_ZN8Handlers20enableSystickHandlerEPKci
 15431 0050 44040000 		.word	.LC53
 15432 0054 00000000 		.word	_ZN8Handlers13getLaserErrorEPKci
 15433 0058 4C040000 		.word	.LC54
 15434 005c 00000000 		.word	_ZN8Handlers13enableTriggerEPKci
 15435 0060 54040000 		.word	.LC55
 15436 0064 00000000 		.word	_ZN8Handlers19setTriggerThresholdEPKci
 15437 0068 5C040000 		.word	.LC56
 15438 006c 00000000 		.word	_ZN8Handlers12resetHandlerEPKci
 15439 0070 64040000 		.word	.LC57
 15440 0074 00000000 		.word	_ZN8Handlers23rectanglePatternHandlerEPKci
 15441 0078 6C040000 		.word	.LC58
 15442 007c 00000000 		.word	_ZN8Handlers24rectanglePatternHandler2EPKci
 15443 0080 74040000 		.word	.LC59
 15444 0084 00000000 		.word	_ZN8Handlers19pausePatternHandlerEPKci
 15445 0088 7C040000 		.word	.LC60
 15446 008c 00000000 		.word	_ZN8Handlers18stopPatternHandlerEPKci
 15447 0090 84040000 		.word	.LC61
 15448 0094 00000000 		.word	_ZN8Handlers20resumePatternHandlerEPKci
 15449 0098 8C040000 		.word	.LC62
 15450 009c 00000000 		.word	_ZN8Handlers24rectanglePatternHandler3EPKci
 15451 00a0 94040000 		.word	.LC63
 15452 00a4 00000000 		.word	_ZN8Handlers18linePatternHandlerEPKci
 15453 00a8 9C040000 		.word	.LC64
 15454 00ac 00000000 		.word	_ZN8Handlers19getPushButtonStatesEPKci
 15455 00b0 A4040000 		.word	.LC65
 15456 00b4 00000000 		.word	_ZN8Handlers14getMeasurementEPKci
 15457 00b8 AC040000 		.word	.LC66
 15458 00bc 00000000 		.word	_ZN8Handlers17getControlOutputsIL4Axis0EEEbPKci
 15459 00c0 B4040000 		.word	.LC67
 15460 00c4 00000000 		.word	_ZN8Handlers17getControlOutputsIL4Axis2EEEbPKci
 15461 00c8 BC040000 		.word	.LC68
 15462 00cc 00000000 		.word	_ZN8Handlers16execLaserCommandEPKci
 15463 00d0 C4040000 		.word	.LC69
 15464 00d4 00000000 		.word	_ZN8Handlers13mirrorCommandEPKci
 15465              		.section	.bss.cWrap,"aw",%nobits
 15466              		.align	2
 15467              		.set	.LANCHOR16,. + 0
 15470              	cWrap:
 15471 0000 00000000 		.space	4
 15472              		.section	.bss._ZN12_GLOBAL__N_16bufferE,"aw",%nobits
 15473              		.align	2
 15474              		.set	.LANCHOR6,. + 0
 15477              	_ZN12_GLOBAL__N_16bufferE:
 15478 0000 00000000 		.space	512
 15478      00000000 
 15478      00000000 
 15478      00000000 
 15478      00000000 
 15479              		.section	.bss.controlOut,"aw",%nobits
 15480              		.align	2
 15481              		.set	.LANCHOR18,. + 0
 15484              	controlOut:
 15485 0000 00000000 		.space	8
 15485      00000000 
 15486              		.section	.bss.coutRaw,"aw",%nobits
 15487              		.align	2
 15488              		.set	.LANCHOR8,. + 0
 15491              	coutRaw:
 15492 0000 00000000 		.space	8
 15492      00000000 
 15493              		.section	.bss.kWrap,"aw",%nobits
 15494              		.align	2
 15495              		.set	.LANCHOR17,. + 0
 15498              	kWrap:
 15499 0000 00000000 		.space	4
 15500              		.section	.bss.pout,"aw",%nobits
 15501              		.align	2
 15502              		.set	.LANCHOR10,. + 0
 15505              	pout:
 15506 0000 00000000 		.space	8
 15506      00000000 
 15507              		.section	.bss.uartWrap,"aw",%nobits
 15508              		.align	2
 15509              		.set	.LANCHOR7,. + 0
 15512              	uartWrap:
 15513 0000 00000000 		.space	4
 15514              		.section	.bss.moutWrap,"aw",%nobits
 15515              		.align	2
 15516              		.set	.LANCHOR11,. + 0
 15519              	moutWrap:
 15520 0000 00000000 		.space	4
 15521              		.section	.bss.uart,"aw",%nobits
 15522              		.align	2
 15525              	uart:
 15526 0000 00       		.space	1
 15527 0001 000000   		.section	.bss.doutWrap,"aw",%nobits
 15528              		.align	2
 15529              		.set	.LANCHOR13,. + 0
 15532              	doutWrap:
 15533 0000 00000000 		.space	4
 15534              		.section	.rodata.str1.4,"aMS",%progbits,1
 15535              		.align	2
 15536              	.LC0:
 15537 0000 775F7820 		.ascii	"w_x x w_v v v_u v_ureal\000"
 15537      7820775F 
 15537      76207620 
 15537      765F7520 
 15537      765F7572 
 15538              	.LC1:
 15539 0018 2000     		.ascii	" \000"
 15540 001a 0000     		.space	2
 15541              	.LC2:
 15542 001c 706F7350 		.ascii	"posPid enabled, vPid enabled\000"
 15542      69642065 
 15542      6E61626C 
 15542      65642C20 
 15542      76506964 
 15543 0039 000000   		.space	3
 15544              	.LC3:
 15545 003c 2C2000   		.ascii	", \000"
 15546 003f 00       		.space	1
 15547              	.LC4:
 15548 0040 73706565 		.ascii	"speed param must be between -1 and 1\000"
 15548      64207061 
 15548      72616D20 
 15548      6D757374 
 15548      20626520 
 15549 0065 000000   		.space	3
 15550              	.LC5:
 15551 0068 7265616C 		.ascii	"real states: X: \000"
 15551      20737461 
 15551      7465733A 
 15551      20583A20 
 15551      00
 15552 0079 000000   		.space	3
 15553              	.LC6:
 15554 007c 2D00     		.ascii	"-\000"
 15555 007e 0000     		.space	2
 15556              	.LC7:
 15557 0080 203A3A20 		.ascii	" :: Y: \000"
 15557      593A2000 
 15558              	.LC8:
 15559 0088 62756666 		.ascii	"buffered states: \000"
 15559      65726564 
 15559      20737461 
 15559      7465733A 
 15559      2000
 15560 009a 0000     		.space	2
 15561              	.LC9:
 15562 009c 203A3A20 		.ascii	" :: \000"
 15562      00
 15563 00a1 000000   		.space	3
 15564              	.LC10:
 15565 00a4 50617474 		.ascii	"Pattern done\000"
 15565      65726E20 
 15565      646F6E65 
 15565      00
 15566 00b1 000000   		.space	3
 15567              	.LC11:
 15568 00b4 696E7661 		.ascii	"invalid argument for trigger threshold\000"
 15568      6C696420 
 15568      61726775 
 15568      6D656E74 
 15568      20666F72 
 15569 00db 00       		.space	1
 15570              	.LC12:
 15571 00dc 73797374 		.ascii	"systick enable \000"
 15571      69636B20 
 15571      656E6162 
 15571      6C652000 
 15572              	.LC13:
 15573 00ec 4C617365 		.ascii	"Laser error: \000"
 15573      72206572 
 15573      726F723A 
 15573      2000
 15574 00fa 0000     		.space	2
 15575              	.LC14:
 15576 00fc 74726967 		.ascii	"trigger enable \000"
 15576      67657220 
 15576      656E6162 
 15576      6C652000 
 15577              	.LC15:
 15578 010c 45584543 		.ascii	"EXEC: \000"
 15578      3A2000
 15579 0113 00       		.space	1
 15580              	.LC16:
 15581 0114 20676F69 		.ascii	" going to \000"
 15581      6E672074 
 15581      6F2000
 15582 011f 00       		.space	1
 15583              	.LC17:
 15584 0120 6E6F2063 		.ascii	"no command found to mirror\000"
 15584      6F6D6D61 
 15584      6E642066 
 15584      6F756E64 
 15584      20746F20 
 15585 013b 00       		.space	1
 15586              	.LC18:
 15587 013c 73706565 		.ascii	"speed param must be between 0 and 1\000"
 15587      64207061 
 15587      72616D20 
 15587      6D757374 
 15587      20626520 
 15588              	.LC19:
 15589 0160 20736574 		.ascii	" set speed to \000"
 15589      20737065 
 15589      65642074 
 15589      6F2000
 15590 016f 00       		.space	1
 15591              	.LC20:
 15592 0170 20736574 		.ascii	" set pwm to \000"
 15592      2070776D 
 15592      20746F20 
 15592      00
 15593 017d 000000   		.space	3
 15594              	.LC21:
 15595 0180 62756666 		.ascii	"buffer overrun \000"
 15595      6572206F 
 15595      76657272 
 15595      756E2000 
 15596              	.LC22:
 15597 0190 78207061 		.ascii	"x param is out of bounds: \000"
 15597      72616D20 
 15597      6973206F 
 15597      7574206F 
 15597      6620626F 
 15598 01ab 00       		.space	1
 15599              	.LC23:
 15600 01ac 79207061 		.ascii	"y param is out of bounds: \000"
 15600      72616D20 
 15600      6973206F 
 15600      7574206F 
 15600      6620626F 
 15601 01c7 00       		.space	1
 15602              	.LC24:
 15603 01c8 73746F70 		.ascii	"stopx param is out of bounds: \000"
 15603      78207061 
 15603      72616D20 
 15603      6973206F 
 15603      7574206F 
 15604 01e7 00       		.space	1
 15605              	.LC25:
 15606 01e8 73746F70 		.ascii	"stopy param is out of bounds: \000"
 15606      79207061 
 15606      72616D20 
 15606      6973206F 
 15606      7574206F 
 15607 0207 00       		.space	1
 15608              	.LC26:
 15609 0208 73616D70 		.ascii	"sampling resolution param is out of bounds: \000"
 15609      6C696E67 
 15609      20726573 
 15609      6F6C7574 
 15609      696F6E20 
 15610 0235 000000   		.space	3
 15611              	.LC27:
 15612 0238 72656374 		.ascii	"rectangle: (startx, starty, stopx, stopy) \000"
 15612      616E676C 
 15612      653A2028 
 15612      73746172 
 15612      74782C20 
 15613 0263 00       		.space	1
 15614              	.LC28:
 15615 0264 50726576 		.ascii	"Previous pattern is still running!\000"
 15615      696F7573 
 15615      20706174 
 15615      7465726E 
 15615      20697320 
 15616 0287 00       		.space	1
 15617              	.LC29:
 15618 0288 50617474 		.ascii	"Pattern start\000"
 15618      65726E20 
 15618      73746172 
 15618      7400
 15619 0296 0000     		.space	2
 15620              	.LC30:
 15621 0298 666C7573 		.ascii	"flush data\000"
 15621      68206461 
 15621      746100
 15622 02a3 00       		.space	1
 15623              	.LC31:
 15624 02a4 706F696E 		.ascii	"point added (\000"
 15624      74206164 
 15624      64656420 
 15624      2800
 15625 02b2 0000     		.space	2
 15626              	.LC32:
 15627 02b4 29206920 		.ascii	") i \000"
 15627      00
 15628 02b9 000000   		.space	3
 15629              	.LC33:
 15630 02bc 70617474 		.ascii	"pattern recorded, send command once more to start i"
 15630      65726E20 
 15630      7265636F 
 15630      72646564 
 15630      2C207365 
 15631 02ef 7400     		.ascii	"t\000"
 15632 02f1 000000   		.space	3
 15633              	.LC34:
 15634 02f4 28782B29 		.ascii	"(x+)width param is out of bounds: \000"
 15634      77696474 
 15634      68207061 
 15634      72616D20 
 15634      6973206F 
 15635 0317 00       		.space	1
 15636              	.LC35:
 15637 0318 28792B29 		.ascii	"(y+)height param is out of bounds: \000"
 15637      68656967 
 15637      68742070 
 15637      6172616D 
 15637      20697320 
 15638              	.LC36:
 15639 033c 72656374 		.ascii	"rectangle: (x,y,width,height) \000"
 15639      616E676C 
 15639      653A2028 
 15639      782C792C 
 15639      77696474 
 15640 035b 00       		.space	1
 15641              	.LC37:
 15642 035c 6475706C 		.ascii	"duplicate entry in command table: \000"
 15642      69636174 
 15642      6520656E 
 15642      74727920 
 15642      696E2063 
 15643 037f 00       		.space	1
 15644              	.LC38:
 15645 0380 49676E6F 		.ascii	"Ignoring \000"
 15645      72696E67 
 15645      2000
 15646 038a 0000     		.space	2
 15647              	.LC39:
 15648 038c 63616E6E 		.ascii	"cannot interpret \000"
 15648      6F742069 
 15648      6E746572 
 15648      70726574 
 15648      2000
 15649 039e 0000     		.space	2
 15650              	.LC40:
 15651 03a0 4F4B3A20 		.ascii	"OK: \000"
 15651      00
 15652 03a5 000000   		.space	3
 15653              	.LC41:
 15654 03a8 4572726F 		.ascii	"Error tried to register handler for unknown command"
 15654      72207472 
 15654      69656420 
 15654      746F2072 
 15654      65676973 
 15655 03db 3A2000   		.ascii	": \000"
 15656 03de 0000     		.space	2
 15657              	.LC42:
 15658 03e0 556E6861 		.ascii	"Unhandled command: \000"
 15658      6E646C65 
 15658      6420636F 
 15658      6D6D616E 
 15658      643A2000 
 15659              	.LC43:
 15660 03f4 474F2058 		.ascii	"GO X\000"
 15660      00
 15661 03f9 000000   		.space	3
 15662              	.LC44:
 15663 03fc 474F2059 		.ascii	"GO Y\000"
 15663      00
 15664 0401 000000   		.space	3
 15665              	.LC45:
 15666 0404 4D4F5658 		.ascii	"MOVX\000"
 15666      00
 15667 0409 000000   		.space	3
 15668              	.LC46:
 15669 040c 4D4F5659 		.ascii	"MOVY\000"
 15669      00
 15670 0411 000000   		.space	3
 15671              	.LC47:
 15672 0414 53504558 		.ascii	"SPEX\000"
 15672      00
 15673 0419 000000   		.space	3
 15674              	.LC48:
 15675 041c 53504559 		.ascii	"SPEY\000"
 15675      00
 15676 0421 000000   		.space	3
 15677              	.LC49:
 15678 0424 50574D58 		.ascii	"PWMX\000"
 15678      00
 15679 0429 000000   		.space	3
 15680              	.LC50:
 15681 042c 50574D59 		.ascii	"PWMY\000"
 15681      00
 15682 0431 000000   		.space	3
 15683              	.LC51:
 15684 0434 4D415853 		.ascii	"MAXS\000"
 15684      00
 15685 0439 000000   		.space	3
 15686              	.LC52:
 15687 043c 454E2053 		.ascii	"EN S\000"
 15687      00
 15688 0441 000000   		.space	3
 15689              	.LC53:
 15690 0444 4552204C 		.ascii	"ER L\000"
 15690      00
 15691 0449 000000   		.space	3
 15692              	.LC54:
 15693 044c 454E2054 		.ascii	"EN T\000"
 15693      00
 15694 0451 000000   		.space	3
 15695              	.LC55:
 15696 0454 53455454 		.ascii	"SETT\000"
 15696      00
 15697 0459 000000   		.space	3
 15698              	.LC56:
 15699 045c 424F4F54 		.ascii	"BOOT\000"
 15699      00
 15700 0461 000000   		.space	3
 15701              	.LC57:
 15702 0464 50415231 		.ascii	"PAR1\000"
 15702      00
 15703 0469 000000   		.space	3
 15704              	.LC58:
 15705 046c 50415232 		.ascii	"PAR2\000"
 15705      00
 15706 0471 000000   		.space	3
 15707              	.LC59:
 15708 0474 50415041 		.ascii	"PAPA\000"
 15708      00
 15709 0479 000000   		.space	3
 15710              	.LC60:
 15711 047c 50415354 		.ascii	"PAST\000"
 15711      00
 15712 0481 000000   		.space	3
 15713              	.LC61:
 15714 0484 50415245 		.ascii	"PARE\000"
 15714      00
 15715 0489 000000   		.space	3
 15716              	.LC62:
 15717 048c 50415233 		.ascii	"PAR3\000"
 15717      00
 15718 0491 000000   		.space	3
 15719              	.LC63:
 15720 0494 50414C31 		.ascii	"PAL1\000"
 15720      00
 15721 0499 000000   		.space	3
 15722              	.LC64:
 15723 049c 47455442 		.ascii	"GETB\000"
 15723      00
 15724 04a1 000000   		.space	3
 15725              	.LC65:
 15726 04a4 4745544D 		.ascii	"GETM\000"
 15726      00
 15727 04a9 000000   		.space	3
 15728              	.LC66:
 15729 04ac 47454358 		.ascii	"GECX\000"
 15729      00
 15730 04b1 000000   		.space	3
 15731              	.LC67:
 15732 04b4 47454359 		.ascii	"GECY\000"
 15732      00
 15733 04b9 000000   		.space	3
 15734              	.LC68:
 15735 04bc 45584543 		.ascii	"EXEC\000"
 15735      00
 15736 04c1 000000   		.space	3
 15737              	.LC69:
 15738 04c4 4D495252 		.ascii	"MIRR\000"
 15738      00
 15739 04c9 000000   		.section	.bss.commandOut,"aw",%nobits
 15740              		.align	2
 15741              		.set	.LANCHOR3,. + 0
 15744              	commandOut:
 15745 0000 00000000 		.space	8
 15745      00000000 
 15746              		.section	.bss.dout,"aw",%nobits
 15747              		.align	2
 15748              		.set	.LANCHOR2,. + 0
 15751              	dout:
 15752 0000 00000000 		.space	8
 15752      00000000 
 15753              		.section	.bss.poutWrap,"aw",%nobits
 15754              		.align	2
 15755              		.set	.LANCHOR9,. + 0
 15758              	poutWrap:
 15759 0000 00000000 		.space	4
 15760              		.section	.bss.cerrWrap,"aw",%nobits
 15761              		.align	2
 15762              		.set	.LANCHOR14,. + 0
 15765              	cerrWrap:
 15766 0000 00000000 		.space	4
 15767              		.section	.bss.iout,"aw",%nobits
 15768              		.align	2
 15769              		.set	.LANCHOR0,. + 0
 15772              	iout:
 15773 0000 00000000 		.space	8
 15773      00000000 
 15774              		.section	.bss._ZN12_GLOBAL__N_16bufPosE,"aw",%nobits
 15775              		.align	2
 15776              		.set	.LANCHOR5,. + 0
 15779              	_ZN12_GLOBAL__N_16bufPosE:
 15780 0000 00000000 		.space	4
 15781              		.section	.bss.iWrap,"aw",%nobits
 15782              		.align	2
 15783              		.set	.LANCHOR15,. + 0
 15786              	iWrap:
 15787 0000 00000000 		.space	4
 15788              		.text
 15789              	.Letext0:
 15790              		.file 17 "project.h"
 15791              		.file 18 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/st
 15792              		.file 19 "/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Device/ST/STM32F4xx/Incl
 15793              		.file 20 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/c
 15794              		.file 21 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/u
 15795              		.file 22 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/gpio.hpp"
 15796              		.file 23 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/f
 15797              		.file 24 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/connectivity/i2c/constants.hpp"
 15798              		.file 25 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/atomic.hpp"
 15799              		.file 26 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/connectivity/can/message.hpp"
 15800              		.file 27 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/template_metaprogramming.hpp"
 15801              		.file 28 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/accessor/ram.hpp"
 15802              		.file 29 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/include/stddef.h"
 15803              		.file 30 "<built-in>"
 15804              		.file 31 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c+
 15805              		.file 32 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c+
 15806              		.file 33 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/st
 15807              		.file 34 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/st
 15808              		.file 35 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c+
 15809              		.file 36 "rectangle.h"
 15810              		.file 37 "quadrangleZigZag.h"
 15811              		.file 38 "linePattern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 pcInterface.cpp
     /tmp/cc5jYXtL.s:20     .text._ZN8Handlers12resetHandlerEPKci:00000000 $t
     /tmp/cc5jYXtL.s:25     .text._ZN8Handlers12resetHandlerEPKci:00000000 _ZN8Handlers12resetHandlerEPKci
     /tmp/cc5jYXtL.s:68     .text._ZN8Handlers12resetHandlerEPKci:00000018 $d
     /tmp/cc5jYXtL.s:78     .text._ZN8Handlers19pausePatternHandlerEPKci:00000000 $t
     /tmp/cc5jYXtL.s:83     .text._ZN8Handlers19pausePatternHandlerEPKci:00000000 _ZN8Handlers19pausePatternHandlerEPKci
     /tmp/cc5jYXtL.s:110    .text._ZN8Handlers19pausePatternHandlerEPKci:00000010 $d
     /tmp/cc5jYXtL.s:116    .text._ZN8Handlers20resumePatternHandlerEPKci:00000000 $t
     /tmp/cc5jYXtL.s:121    .text._ZN8Handlers20resumePatternHandlerEPKci:00000000 _ZN8Handlers20resumePatternHandlerEPKci
     /tmp/cc5jYXtL.s:147    .text._ZN8Handlers20resumePatternHandlerEPKci:00000010 $d
     /tmp/cc5jYXtL.s:153    .text._ZN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEED2Ev:00000000 $t
     /tmp/cc5jYXtL.s:158    .text._ZN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEED2Ev:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEED2Ev
     /tmp/cc5jYXtL.s:182    .text._ZN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEED2Ev:00000008 $d
     /tmp/cc5jYXtL.s:158    .text._ZN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEED2Ev:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEED1Ev
     /tmp/cc5jYXtL.s:189    .text._ZN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEED2Ev:00000000 $t
     /tmp/cc5jYXtL.s:194    .text._ZN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEED2Ev:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEED2Ev
     /tmp/cc5jYXtL.s:216    .text._ZN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEED2Ev:00000008 $d
     /tmp/cc5jYXtL.s:194    .text._ZN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEED2Ev:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEED1Ev
     /tmp/cc5jYXtL.s:223    .text._ZN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEED2Ev:00000000 $t
     /tmp/cc5jYXtL.s:228    .text._ZN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEED2Ev:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEED2Ev
     /tmp/cc5jYXtL.s:250    .text._ZN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEED2Ev:00000008 $d
     /tmp/cc5jYXtL.s:228    .text._ZN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEED2Ev:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEED1Ev
     /tmp/cc5jYXtL.s:257    .text._ZN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEED2Ev:00000000 $t
     /tmp/cc5jYXtL.s:262    .text._ZN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEED2Ev:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEED2Ev
     /tmp/cc5jYXtL.s:284    .text._ZN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEED2Ev:00000008 $d
     /tmp/cc5jYXtL.s:262    .text._ZN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEED2Ev:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEED1Ev
     /tmp/cc5jYXtL.s:291    .text._ZN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEED2Ev:00000000 $t
     /tmp/cc5jYXtL.s:296    .text._ZN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEED2Ev:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEED2Ev
     /tmp/cc5jYXtL.s:318    .text._ZN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEED2Ev:00000008 $d
     /tmp/cc5jYXtL.s:296    .text._ZN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEED2Ev:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEED1Ev
     /tmp/cc5jYXtL.s:325    .text._ZN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEED2Ev:00000000 $t
     /tmp/cc5jYXtL.s:330    .text._ZN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEED2Ev:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEED2Ev
     /tmp/cc5jYXtL.s:352    .text._ZN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEED2Ev:00000008 $d
     /tmp/cc5jYXtL.s:330    .text._ZN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEED2Ev:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEED1Ev
     /tmp/cc5jYXtL.s:359    .text._ZN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEED2Ev:00000000 $t
     /tmp/cc5jYXtL.s:364    .text._ZN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEED2Ev:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEED2Ev
     /tmp/cc5jYXtL.s:386    .text._ZN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEED2Ev:00000008 $d
     /tmp/cc5jYXtL.s:364    .text._ZN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEED2Ev:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEED1Ev
     /tmp/cc5jYXtL.s:393    .text._ZN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EED2Ev:00000000 $t
     /tmp/cc5jYXtL.s:398    .text._ZN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EED2Ev:00000000 _ZN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EED2Ev
     /tmp/cc5jYXtL.s:420    .text._ZN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EED2Ev:00000008 $d
     /tmp/cc5jYXtL.s:398    .text._ZN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EED2Ev:00000000 _ZN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EED1Ev
     /tmp/cc5jYXtL.s:427    .text._ZN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEE5flushEv:00000000 $t
     /tmp/cc5jYXtL.s:432    .text._ZN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEE5flushEv:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEE5flushEv
     /tmp/cc5jYXtL.s:445    .text._ZN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEE4readERc:00000000 $t
     /tmp/cc5jYXtL.s:450    .text._ZN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEE4readERc:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEE4readERc
     /tmp/cc5jYXtL.s:466    .text._ZN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEE5flushEv:00000000 $t
     /tmp/cc5jYXtL.s:471    .text._ZN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEE5flushEv:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEE5flushEv
     /tmp/cc5jYXtL.s:484    .text._ZN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEE4readERc:00000000 $t
     /tmp/cc5jYXtL.s:489    .text._ZN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEE4readERc:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEE4readERc
     /tmp/cc5jYXtL.s:505    .text._ZN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEE5flushEv:00000000 $t
     /tmp/cc5jYXtL.s:510    .text._ZN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEE5flushEv:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEE5flushEv
     /tmp/cc5jYXtL.s:523    .text._ZN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEE4readERc:00000000 $t
     /tmp/cc5jYXtL.s:528    .text._ZN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEE4readERc:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEE4readERc
     /tmp/cc5jYXtL.s:544    .text._ZN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEE5flushEv:00000000 $t
     /tmp/cc5jYXtL.s:549    .text._ZN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEE5flushEv:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEE5flushEv
     /tmp/cc5jYXtL.s:562    .text._ZN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEE4readERc:00000000 $t
     /tmp/cc5jYXtL.s:567    .text._ZN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEE4readERc:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEE4readERc
     /tmp/cc5jYXtL.s:583    .text._ZN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEE5flushEv:00000000 $t
     /tmp/cc5jYXtL.s:588    .text._ZN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEE5flushEv:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEE5flushEv
     /tmp/cc5jYXtL.s:601    .text._ZN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEE4readERc:00000000 $t
     /tmp/cc5jYXtL.s:606    .text._ZN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEE4readERc:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEE4readERc
     /tmp/cc5jYXtL.s:622    .text._ZN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEE5flushEv:00000000 $t
     /tmp/cc5jYXtL.s:627    .text._ZN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEE5flushEv:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEE5flushEv
     /tmp/cc5jYXtL.s:640    .text._ZN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEE4readERc:00000000 $t
     /tmp/cc5jYXtL.s:645    .text._ZN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEE4readERc:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEE4readERc
     /tmp/cc5jYXtL.s:661    .text._ZN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEE5flushEv:00000000 $t
     /tmp/cc5jYXtL.s:666    .text._ZN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEE5flushEv:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEE5flushEv
     /tmp/cc5jYXtL.s:679    .text._ZN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEE4readERc:00000000 $t
     /tmp/cc5jYXtL.s:684    .text._ZN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEE4readERc:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEE4readERc
     /tmp/cc5jYXtL.s:700    .text._ZN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EE5flushEv:00000000 $t
     /tmp/cc5jYXtL.s:705    .text._ZN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EE5flushEv:00000000 _ZN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EE5flushEv
     /tmp/cc5jYXtL.s:718    .text._ZN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EE4readERc:00000000 $t
     /tmp/cc5jYXtL.s:723    .text._ZN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EE4readERc:00000000 _ZN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EE4readERc
     /tmp/cc5jYXtL.s:769    .text._ZN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EE4readERc:0000001c $d
     /tmp/cc5jYXtL.s:774    .text._ZN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EE5writeEPKc:00000000 $t
     /tmp/cc5jYXtL.s:779    .text._ZN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EE5writeEPKc:00000000 _ZN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EE5writeEPKc
     /tmp/cc5jYXtL.s:816    .text._ZN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EE5writeEPKc:00000018 $d
     /tmp/cc5jYXtL.s:822    .text._ZN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EE5writeEc:00000000 $t
     /tmp/cc5jYXtL.s:827    .text._ZN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EE5writeEc:00000000 _ZN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EE5writeEc
     /tmp/cc5jYXtL.s:849    .text._ZN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EE5writeEc:0000000c $d
     /tmp/cc5jYXtL.s:854    .text._ZN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EED0Ev:00000000 $t
     /tmp/cc5jYXtL.s:859    .text._ZN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EED0Ev:00000000 _ZN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EED0Ev
     /tmp/cc5jYXtL.s:904    .text._ZN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EED0Ev:00000010 $d
     /tmp/cc5jYXtL.s:910    .text._ZN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEED0Ev:00000000 $t
     /tmp/cc5jYXtL.s:915    .text._ZN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEED0Ev:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEED0Ev
     /tmp/cc5jYXtL.s:960    .text._ZN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEED0Ev:00000010 $d
     /tmp/cc5jYXtL.s:966    .text._ZN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEED0Ev:00000000 $t
     /tmp/cc5jYXtL.s:971    .text._ZN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEED0Ev:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEED0Ev
     /tmp/cc5jYXtL.s:1016   .text._ZN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEED0Ev:00000010 $d
     /tmp/cc5jYXtL.s:1022   .text._ZN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEED0Ev:00000000 $t
     /tmp/cc5jYXtL.s:1027   .text._ZN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEED0Ev:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEED0Ev
     /tmp/cc5jYXtL.s:1072   .text._ZN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEED0Ev:00000010 $d
     /tmp/cc5jYXtL.s:1078   .text._ZN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEED0Ev:00000000 $t
     /tmp/cc5jYXtL.s:1083   .text._ZN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEED0Ev:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEED0Ev
     /tmp/cc5jYXtL.s:1128   .text._ZN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEED0Ev:00000010 $d
     /tmp/cc5jYXtL.s:1134   .text._ZN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEED0Ev:00000000 $t
     /tmp/cc5jYXtL.s:1139   .text._ZN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEED0Ev:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEED0Ev
     /tmp/cc5jYXtL.s:1184   .text._ZN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEED0Ev:00000010 $d
     /tmp/cc5jYXtL.s:1190   .text._ZN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEED0Ev:00000000 $t
     /tmp/cc5jYXtL.s:1195   .text._ZN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEED0Ev:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEED0Ev
     /tmp/cc5jYXtL.s:1240   .text._ZN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEED0Ev:00000010 $d
     /tmp/cc5jYXtL.s:1246   .text._ZN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEED0Ev:00000000 $t
     /tmp/cc5jYXtL.s:1251   .text._ZN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEED0Ev:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEED0Ev
     /tmp/cc5jYXtL.s:1296   .text._ZN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEED0Ev:00000010 $d
     /tmp/cc5jYXtL.s:1302   .text._ZN8Handlers14getMeasurementEPKci:00000000 $t
     /tmp/cc5jYXtL.s:1307   .text._ZN8Handlers14getMeasurementEPKci:00000000 _ZN8Handlers14getMeasurementEPKci
     /tmp/cc5jYXtL.s:1329   .text._ZN8Handlers14getMeasurementEPKci:0000000c $d
     /tmp/cc5jYXtL.s:1334   .text._ZN8Handlers17getControlOutputsIL4Axis0EEEbPKci:00000000 $t
     /tmp/cc5jYXtL.s:1339   .text._ZN8Handlers17getControlOutputsIL4Axis0EEEbPKci:00000000 _ZN8Handlers17getControlOutputsIL4Axis0EEEbPKci
     /tmp/cc5jYXtL.s:2015   .text._ZN8Handlers17getControlOutputsIL4Axis0EEEbPKci:00000220 $d
     /tmp/cc5jYXtL.s:15054  .bss._ZN7ControlIL4Axis0EE9pos_shallE:00000000 _ZN7ControlIL4Axis0EE9pos_shallE
     /tmp/cc5jYXtL.s:15040  .bss._ZN7ControlIL4Axis0EE7v_shallE:00000000 _ZN7ControlIL4Axis0EE7v_shallE
     /tmp/cc5jYXtL.s:15047  .bss._ZN7ControlIL4Axis0EE4v_isE:00000000 _ZN7ControlIL4Axis0EE4v_isE
     /tmp/cc5jYXtL.s:15104  .bss._ZN7ControlIL4Axis0EE3v_uE:00000000 _ZN7ControlIL4Axis0EE3v_uE
     /tmp/cc5jYXtL.s:15111  .bss._ZN7ControlIL4Axis0EE7v_urealE:00000000 _ZN7ControlIL4Axis0EE7v_urealE
     /tmp/cc5jYXtL.s:15117  .bss._ZN7ControlIL4Axis0EE22positionControlEnabledE:00000000 _ZN7ControlIL4Axis0EE22positionControlEnabledE
     /tmp/cc5jYXtL.s:15123  .bss._ZN7ControlIL4Axis0EE19speedControlEnabledE:00000000 _ZN7ControlIL4Axis0EE19speedControlEnabledE
     /tmp/cc5jYXtL.s:2042   .text._ZN8Handlers17getControlOutputsIL4Axis0EEEbPKci:00000268 $t
     /tmp/cc5jYXtL.s:2066   .text._ZN8Handlers17getControlOutputsIL4Axis0EEEbPKci:00000288 $d
     /tmp/cc5jYXtL.s:2079   .text._ZN8Handlers15setSpeedHandlerIL4Axis2EEEbPKci:00000000 $t
     /tmp/cc5jYXtL.s:2084   .text._ZN8Handlers15setSpeedHandlerIL4Axis2EEEbPKci:00000000 _ZN8Handlers15setSpeedHandlerIL4Axis2EEEbPKci
     /tmp/cc5jYXtL.s:2299   .text._ZN8Handlers15setSpeedHandlerIL4Axis2EEEbPKci:000000d0 $d
     /tmp/cc5jYXtL.s:15019  .bss._ZN7ControlIL4Axis2EE7v_shallE:00000000 _ZN7ControlIL4Axis2EE7v_shallE
     /tmp/cc5jYXtL.s:2331   .text._ZN8Handlers15setSpeedHandlerIL4Axis0EEEbPKci:00000000 $t
     /tmp/cc5jYXtL.s:2336   .text._ZN8Handlers15setSpeedHandlerIL4Axis0EEEbPKci:00000000 _ZN8Handlers15setSpeedHandlerIL4Axis0EEEbPKci
     /tmp/cc5jYXtL.s:2550   .text._ZN8Handlers15setSpeedHandlerIL4Axis0EEEbPKci:000000d0 $d
     /tmp/cc5jYXtL.s:2582   .text._ZN8Handlers17getControlOutputsIL4Axis2EEEbPKci:00000000 $t
     /tmp/cc5jYXtL.s:2587   .text._ZN8Handlers17getControlOutputsIL4Axis2EEEbPKci:00000000 _ZN8Handlers17getControlOutputsIL4Axis2EEEbPKci
     /tmp/cc5jYXtL.s:3261   .text._ZN8Handlers17getControlOutputsIL4Axis2EEEbPKci:00000220 $d
     /tmp/cc5jYXtL.s:15033  .bss._ZN7ControlIL4Axis2EE9pos_shallE:00000000 _ZN7ControlIL4Axis2EE9pos_shallE
     /tmp/cc5jYXtL.s:15026  .bss._ZN7ControlIL4Axis2EE4v_isE:00000000 _ZN7ControlIL4Axis2EE4v_isE
     /tmp/cc5jYXtL.s:15078  .bss._ZN7ControlIL4Axis2EE3v_uE:00000000 _ZN7ControlIL4Axis2EE3v_uE
     /tmp/cc5jYXtL.s:15085  .bss._ZN7ControlIL4Axis2EE7v_urealE:00000000 _ZN7ControlIL4Axis2EE7v_urealE
     /tmp/cc5jYXtL.s:15091  .bss._ZN7ControlIL4Axis2EE22positionControlEnabledE:00000000 _ZN7ControlIL4Axis2EE22positionControlEnabledE
     /tmp/cc5jYXtL.s:15097  .bss._ZN7ControlIL4Axis2EE19speedControlEnabledE:00000000 _ZN7ControlIL4Axis2EE19speedControlEnabledE
     /tmp/cc5jYXtL.s:3288   .text._ZN8Handlers17getControlOutputsIL4Axis2EEEbPKci:00000268 $t
     /tmp/cc5jYXtL.s:3312   .text._ZN8Handlers17getControlOutputsIL4Axis2EEEbPKci:00000288 $d
     /tmp/cc5jYXtL.s:3320   .text._ZN8Handlers19getPushButtonStatesEPKci:00000000 $t
     /tmp/cc5jYXtL.s:3325   .text._ZN8Handlers19getPushButtonStatesEPKci:00000000 _ZN8Handlers19getPushButtonStatesEPKci
     /tmp/cc5jYXtL.s:3935   .text._ZN8Handlers19getPushButtonStatesEPKci:000001b0 $d
     /tmp/cc5jYXtL.s:15012  .bss._ZN10HallSensorIL4Axis0EE9triggeredE:00000000 _ZN10HallSensorIL4Axis0EE9triggeredE
     /tmp/cc5jYXtL.s:15005  .bss._ZN10HallSensorIL4Axis2EE9triggeredE:00000000 _ZN10HallSensorIL4Axis2EE9triggeredE
     /tmp/cc5jYXtL.s:3958   .text._ZN8Handlers18stopPatternHandlerEPKci:00000000 $t
     /tmp/cc5jYXtL.s:3963   .text._ZN8Handlers18stopPatternHandlerEPKci:00000000 _ZN8Handlers18stopPatternHandlerEPKci
     /tmp/cc5jYXtL.s:4094   .text._ZN8Handlers18stopPatternHandlerEPKci:00000058 $d
     /tmp/cc5jYXtL.s:4106   .text._ZN8Handlers19setTriggerThresholdEPKci:00000000 $t
     /tmp/cc5jYXtL.s:4111   .text._ZN8Handlers19setTriggerThresholdEPKci:00000000 _ZN8Handlers19setTriggerThresholdEPKci
     /tmp/cc5jYXtL.s:4245   .text._ZN8Handlers19setTriggerThresholdEPKci:00000078 $d
     /tmp/cc5jYXtL.s:4264   .text._ZN8Handlers20enableSystickHandlerEPKci:00000000 $t
     /tmp/cc5jYXtL.s:4269   .text._ZN8Handlers20enableSystickHandlerEPKci:00000000 _ZN8Handlers20enableSystickHandlerEPKci
     /tmp/cc5jYXtL.s:4425   .text._ZN8Handlers20enableSystickHandlerEPKci:00000070 $d
     /tmp/cc5jYXtL.s:4439   .text._ZN8Handlers13getLaserErrorEPKci:00000000 $t
     /tmp/cc5jYXtL.s:4444   .text._ZN8Handlers13getLaserErrorEPKci:00000000 _ZN8Handlers13getLaserErrorEPKci
     /tmp/cc5jYXtL.s:4572   .text._ZN8Handlers13getLaserErrorEPKci:00000054 $d
     /tmp/cc5jYXtL.s:4584   .text._ZN8Handlers13enableTriggerEPKci:00000000 $t
     /tmp/cc5jYXtL.s:4589   .text._ZN8Handlers13enableTriggerEPKci:00000000 _ZN8Handlers13enableTriggerEPKci
     /tmp/cc5jYXtL.s:4725   .text._ZN8Handlers13enableTriggerEPKci:00000064 $d
     /tmp/cc5jYXtL.s:4738   .text._ZN8Handlers16execLaserCommandEPKci:00000000 $t
     /tmp/cc5jYXtL.s:4743   .text._ZN8Handlers16execLaserCommandEPKci:00000000 _ZN8Handlers16execLaserCommandEPKci
     /tmp/cc5jYXtL.s:4913   .text._ZN8Handlers16execLaserCommandEPKci:00000078 $d
     /tmp/cc5jYXtL.s:4924   .text._ZN8Handlers11gotoHandlerIL4Axis2EEEbPKci:00000000 $t
     /tmp/cc5jYXtL.s:4929   .text._ZN8Handlers11gotoHandlerIL4Axis2EEEbPKci:00000000 _ZN8Handlers11gotoHandlerIL4Axis2EEEbPKci
     /tmp/cc5jYXtL.s:5153   .text._ZN8Handlers11gotoHandlerIL4Axis2EEEbPKci:000000c0 $d
     /tmp/cc5jYXtL.s:5178   .text._ZN8Handlers11moveHandlerIL4Axis2EEEbPKci:00000000 $t
     /tmp/cc5jYXtL.s:5183   .text._ZN8Handlers11moveHandlerIL4Axis2EEEbPKci:00000000 _ZN8Handlers11moveHandlerIL4Axis2EEEbPKci
     /tmp/cc5jYXtL.s:5417   .text._ZN8Handlers11moveHandlerIL4Axis2EEEbPKci:000000d4 $d
     /tmp/cc5jYXtL.s:5443   .text._ZN8Handlers11gotoHandlerIL4Axis0EEEbPKci:00000000 $t
     /tmp/cc5jYXtL.s:5448   .text._ZN8Handlers11gotoHandlerIL4Axis0EEEbPKci:00000000 _ZN8Handlers11gotoHandlerIL4Axis0EEEbPKci
     /tmp/cc5jYXtL.s:5672   .text._ZN8Handlers11gotoHandlerIL4Axis0EEEbPKci:000000c0 $d
     /tmp/cc5jYXtL.s:5697   .text._ZN8Handlers13mirrorCommandEPKci:00000000 $t
     /tmp/cc5jYXtL.s:5702   .text._ZN8Handlers13mirrorCommandEPKci:00000000 _ZN8Handlers13mirrorCommandEPKci
     /tmp/cc5jYXtL.s:5866   .text._ZN8Handlers13mirrorCommandEPKci:00000078 $d
     /tmp/cc5jYXtL.s:5883   .text._ZN8Handlers11moveHandlerIL4Axis0EEEbPKci:00000000 $t
     /tmp/cc5jYXtL.s:5888   .text._ZN8Handlers11moveHandlerIL4Axis0EEEbPKci:00000000 _ZN8Handlers11moveHandlerIL4Axis0EEEbPKci
     /tmp/cc5jYXtL.s:6122   .text._ZN8Handlers11moveHandlerIL4Axis0EEEbPKci:000000d4 $d
     /tmp/cc5jYXtL.s:6148   .text._ZN8Handlers18setMaxSpeedHandlerEPKci:00000000 $t
     /tmp/cc5jYXtL.s:6153   .text._ZN8Handlers18setMaxSpeedHandlerEPKci:00000000 _ZN8Handlers18setMaxSpeedHandlerEPKci
     /tmp/cc5jYXtL.s:6389   .text._ZN8Handlers18setMaxSpeedHandlerEPKci:000000bc $d
     /tmp/cc5jYXtL.s:6411   .text._ZN8Handlers13setPwmHandlerIL4Axis2EEEbPKci:00000000 $t
     /tmp/cc5jYXtL.s:6416   .text._ZN8Handlers13setPwmHandlerIL4Axis2EEEbPKci:00000000 _ZN8Handlers13setPwmHandlerIL4Axis2EEEbPKci
     /tmp/cc5jYXtL.s:6602   .text._ZN8Handlers13setPwmHandlerIL4Axis2EEEbPKci:0000009c $d
     /tmp/cc5jYXtL.s:6626   .text._ZN8Handlers13setPwmHandlerIL4Axis0EEEbPKci:00000000 $t
     /tmp/cc5jYXtL.s:6631   .text._ZN8Handlers13setPwmHandlerIL4Axis0EEEbPKci:00000000 _ZN8Handlers13setPwmHandlerIL4Axis0EEEbPKci
     /tmp/cc5jYXtL.s:6816   .text._ZN8Handlers13setPwmHandlerIL4Axis0EEEbPKci:0000009c $d
     /tmp/cc5jYXtL.s:6840   .text._ZN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEE5writeEPKc:00000000 $t
     /tmp/cc5jYXtL.s:6845   .text._ZN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEE5writeEPKc:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEE5writeEPKc
     /tmp/cc5jYXtL.s:7118   .text._ZN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEE5writeEPKc:000000dc $d
     /tmp/cc5jYXtL.s:15368  .bss._ZN6StreamILc77ELb1ELb1ELi300EE3posE:00000000 _ZN6StreamILc77ELb1ELb1ELi300EE3posE
     /tmp/cc5jYXtL.s:15375  .bss._ZN6StreamILc77ELb1ELb1ELi300EE4textE:00000000 _ZN6StreamILc77ELb1ELb1ELi300EE4textE
     /tmp/cc5jYXtL.s:7134   .text._ZN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEE5writeEc:00000000 $t
     /tmp/cc5jYXtL.s:7139   .text._ZN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEE5writeEc:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEE5writeEc
     /tmp/cc5jYXtL.s:7270   .text._ZN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEE5writeEc:00000070 $d
     /tmp/cc5jYXtL.s:15298  .bss._ZN6StreamILc75ELb0ELb1ELi300EE3posE:00000000 _ZN6StreamILc75ELb0ELb1ELi300EE3posE
     /tmp/cc5jYXtL.s:15305  .bss._ZN6StreamILc75ELb0ELb1ELi300EE4textE:00000000 _ZN6StreamILc75ELb0ELb1ELi300EE4textE
     /tmp/cc5jYXtL.s:7281   .text._ZN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEE5writeEPKc:00000000 $t
     /tmp/cc5jYXtL.s:7286   .text._ZN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEE5writeEPKc:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEE5writeEPKc
     /tmp/cc5jYXtL.s:7446   .text._ZN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEE5writeEPKc:00000090 $d
     /tmp/cc5jYXtL.s:7458   .text._ZN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEE5writeEc:00000000 $t
     /tmp/cc5jYXtL.s:7463   .text._ZN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEE5writeEc:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEE5writeEc
     /tmp/cc5jYXtL.s:7594   .text._ZN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEE5writeEc:00000070 $d
     /tmp/cc5jYXtL.s:15354  .bss._ZN6StreamILc68ELb0ELb1ELi300EE3posE:00000000 _ZN6StreamILc68ELb0ELb1ELi300EE3posE
     /tmp/cc5jYXtL.s:15361  .bss._ZN6StreamILc68ELb0ELb1ELi300EE4textE:00000000 _ZN6StreamILc68ELb0ELb1ELi300EE4textE
     /tmp/cc5jYXtL.s:7605   .text._ZN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEE5writeEPKc:00000000 $t
     /tmp/cc5jYXtL.s:7610   .text._ZN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEE5writeEPKc:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEE5writeEPKc
     /tmp/cc5jYXtL.s:7770   .text._ZN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEE5writeEPKc:00000090 $d
     /tmp/cc5jYXtL.s:7782   .text._ZN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEE5writeEc:00000000 $t
     /tmp/cc5jYXtL.s:7787   .text._ZN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEE5writeEc:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEE5writeEc
     /tmp/cc5jYXtL.s:7918   .text._ZN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEE5writeEc:00000070 $d
     /tmp/cc5jYXtL.s:15340  .bss._ZN6StreamILc69ELb0ELb1ELi300EE3posE:00000000 _ZN6StreamILc69ELb0ELb1ELi300EE3posE
     /tmp/cc5jYXtL.s:15347  .bss._ZN6StreamILc69ELb0ELb1ELi300EE4textE:00000000 _ZN6StreamILc69ELb0ELb1ELi300EE4textE
     /tmp/cc5jYXtL.s:7929   .text._ZN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEE5writeEPKc:00000000 $t
     /tmp/cc5jYXtL.s:7934   .text._ZN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEE5writeEPKc:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEE5writeEPKc
     /tmp/cc5jYXtL.s:8094   .text._ZN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEE5writeEPKc:00000090 $d
     /tmp/cc5jYXtL.s:8106   .text._ZN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEE5writeEc:00000000 $t
     /tmp/cc5jYXtL.s:8111   .text._ZN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEE5writeEc:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEE5writeEc
     /tmp/cc5jYXtL.s:8242   .text._ZN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEE5writeEc:00000070 $d
     /tmp/cc5jYXtL.s:15382  .bss._ZN6StreamILc80ELb0ELb1ELi300EE3posE:00000000 _ZN6StreamILc80ELb0ELb1ELi300EE3posE
     /tmp/cc5jYXtL.s:15389  .bss._ZN6StreamILc80ELb0ELb1ELi300EE4textE:00000000 _ZN6StreamILc80ELb0ELb1ELi300EE4textE
     /tmp/cc5jYXtL.s:8253   .text._ZN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEE5writeEPKc:00000000 $t
     /tmp/cc5jYXtL.s:8258   .text._ZN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEE5writeEPKc:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEE5writeEPKc
     /tmp/cc5jYXtL.s:8418   .text._ZN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEE5writeEPKc:00000090 $d
     /tmp/cc5jYXtL.s:8430   .text._ZN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEE5writeEc:00000000 $t
     /tmp/cc5jYXtL.s:8435   .text._ZN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEE5writeEc:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEE5writeEc
     /tmp/cc5jYXtL.s:8566   .text._ZN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEE5writeEc:00000070 $d
     /tmp/cc5jYXtL.s:15312  .bss._ZN6StreamILc67ELb0ELb1ELi300EE3posE:00000000 _ZN6StreamILc67ELb0ELb1ELi300EE3posE
     /tmp/cc5jYXtL.s:15319  .bss._ZN6StreamILc67ELb0ELb1ELi300EE4textE:00000000 _ZN6StreamILc67ELb0ELb1ELi300EE4textE
     /tmp/cc5jYXtL.s:8577   .text._ZN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEE5writeEPKc:00000000 $t
     /tmp/cc5jYXtL.s:8582   .text._ZN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEE5writeEPKc:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEE5writeEPKc
     /tmp/cc5jYXtL.s:8742   .text._ZN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEE5writeEPKc:00000090 $d
     /tmp/cc5jYXtL.s:8754   .text._ZN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEE5writeEc:00000000 $t
     /tmp/cc5jYXtL.s:8759   .text._ZN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEE5writeEc:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEE5writeEc
     /tmp/cc5jYXtL.s:8890   .text._ZN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEE5writeEc:00000070 $d
     /tmp/cc5jYXtL.s:15326  .bss._ZN6StreamILc73ELb0ELb1ELi300EE3posE:00000000 _ZN6StreamILc73ELb0ELb1ELi300EE3posE
     /tmp/cc5jYXtL.s:15333  .bss._ZN6StreamILc73ELb0ELb1ELi300EE4textE:00000000 _ZN6StreamILc73ELb0ELb1ELi300EE4textE
     /tmp/cc5jYXtL.s:8901   .text._ZN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEE5writeEPKc:00000000 $t
     /tmp/cc5jYXtL.s:8906   .text._ZN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEE5writeEPKc:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEE5writeEPKc
     /tmp/cc5jYXtL.s:9066   .text._ZN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEE5writeEPKc:00000090 $d
     /tmp/cc5jYXtL.s:9078   .text._ZN8Handlers24rectanglePatternHandler2EPKci:00000000 $t
     /tmp/cc5jYXtL.s:9083   .text._ZN8Handlers24rectanglePatternHandler2EPKci:00000000 _ZN8Handlers24rectanglePatternHandler2EPKci
     /tmp/cc5jYXtL.s:9629   .text._ZN8Handlers24rectanglePatternHandler2EPKci:00000238 $d
     /tmp/cc5jYXtL.s:9660   .text._ZN8Handlers24rectanglePatternHandler2EPKci:00000290 $t
     /tmp/cc5jYXtL.s:10268  .text._ZN8Handlers24rectanglePatternHandler2EPKci:00000474 $d
     /tmp/cc5jYXtL.s:10309  .text._ZN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEE5writeEc:00000000 $t
     /tmp/cc5jYXtL.s:10314  .text._ZN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEE5writeEc:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEE5writeEc
     /tmp/cc5jYXtL.s:10556  .text._ZN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEE5writeEc:000000bc $d
     /tmp/cc5jYXtL.s:10571  .text._ZN8Handlers18linePatternHandlerEPKci:00000000 $t
     /tmp/cc5jYXtL.s:10576  .text._ZN8Handlers18linePatternHandlerEPKci:00000000 _ZN8Handlers18linePatternHandlerEPKci
     /tmp/cc5jYXtL.s:11236  .text._ZN8Handlers18linePatternHandlerEPKci:00000228 $d
     /tmp/cc5jYXtL.s:15130  .bss._ZZN8Handlers18linePatternHandlerEPKciE1i:00000000 _ZZN8Handlers18linePatternHandlerEPKciE1i
     /tmp/cc5jYXtL.s:15137  .bss._ZZN8Handlers18linePatternHandlerEPKciE6points:00000000 _ZZN8Handlers18linePatternHandlerEPKciE6points
     /tmp/cc5jYXtL.s:11275  .text._ZN8Handlers24rectanglePatternHandler3EPKci:00000000 $t
     /tmp/cc5jYXtL.s:11280  .text._ZN8Handlers24rectanglePatternHandler3EPKci:00000000 _ZN8Handlers24rectanglePatternHandler3EPKci
     /tmp/cc5jYXtL.s:11936  .text._ZN8Handlers24rectanglePatternHandler3EPKci:00000218 $d
     /tmp/cc5jYXtL.s:15144  .bss._ZZN8Handlers24rectanglePatternHandler3EPKciE1i:00000000 _ZZN8Handlers24rectanglePatternHandler3EPKciE1i
     /tmp/cc5jYXtL.s:15151  .bss._ZZN8Handlers24rectanglePatternHandler3EPKciE6points:00000000 _ZZN8Handlers24rectanglePatternHandler3EPKciE6points
     /tmp/cc5jYXtL.s:11976  .text._ZN7Pattern5startEv:00000000 $t
     /tmp/cc5jYXtL.s:11981  .text._ZN7Pattern5startEv:00000000 _ZN7Pattern5startEv
     /tmp/cc5jYXtL.s:12207  .text._ZN7Pattern5startEv:000000ac $d
     /tmp/cc5jYXtL.s:12226  .text._ZN8Handlers23rectanglePatternHandlerEPKci:00000000 $t
     /tmp/cc5jYXtL.s:12231  .text._ZN8Handlers23rectanglePatternHandlerEPKci:00000000 _ZN8Handlers23rectanglePatternHandlerEPKci
     /tmp/cc5jYXtL.s:12783  .text._ZN8Handlers23rectanglePatternHandlerEPKci:0000023c $d
     /tmp/cc5jYXtL.s:12814  .text._ZN8Handlers23rectanglePatternHandlerEPKci:00000294 $t
     /tmp/cc5jYXtL.s:13428  .text._ZN8Handlers23rectanglePatternHandlerEPKci:000004e4 $d
     /tmp/cc5jYXtL.s:15158  .data._ZZN8Handlers23rectanglePatternHandlerEPKciE5lastx:00000000 _ZZN8Handlers23rectanglePatternHandlerEPKciE5lastx
     /tmp/cc5jYXtL.s:15165  .data._ZZN8Handlers23rectanglePatternHandlerEPKciE5lasty:00000000 _ZZN8Handlers23rectanglePatternHandlerEPKciE5lasty
     /tmp/cc5jYXtL.s:15172  .data._ZZN8Handlers23rectanglePatternHandlerEPKciE5lastw:00000000 _ZZN8Handlers23rectanglePatternHandlerEPKciE5lastw
     /tmp/cc5jYXtL.s:15179  .data._ZZN8Handlers23rectanglePatternHandlerEPKciE5lasth:00000000 _ZZN8Handlers23rectanglePatternHandlerEPKciE5lasth
     /tmp/cc5jYXtL.s:13470  .text._ZN8Handlers23rectanglePatternHandlerEPKci:00000560 $t
     /tmp/cc5jYXtL.s:13581  .text._ZN8Handlers23rectanglePatternHandlerEPKci:000005c8 $d
     /tmp/cc5jYXtL.s:13601  .text._ZN2PC4initEv:00000000 $t
     /tmp/cc5jYXtL.s:13606  .text._ZN2PC4initEv:00000000 _ZN2PC4initEv
     /tmp/cc5jYXtL.s:13805  .text._ZN2PC4initEv:000000a0 $d
     /tmp/cc5jYXtL.s:13825  .text._ZN2PC10getCommandEPKc:00000000 $t
     /tmp/cc5jYXtL.s:13830  .text._ZN2PC10getCommandEPKc:00000000 _ZN2PC10getCommandEPKc
     /tmp/cc5jYXtL.s:13879  .text._ZN2PC10getCommandEPKc:00000024 $d
     /tmp/cc5jYXtL.s:13884  .text._ZN2PC15scanForCommandsEv:00000000 $t
     /tmp/cc5jYXtL.s:13889  .text._ZN2PC15scanForCommandsEv:00000000 _ZN2PC15scanForCommandsEv
     /tmp/cc5jYXtL.s:14292  .text._ZN2PC15scanForCommandsEv:00000160 $d
     /tmp/cc5jYXtL.s:14319  .text._ZN2PC22registerCommandHandlerEPKcPFbS1_iE:00000000 $t
     /tmp/cc5jYXtL.s:14324  .text._ZN2PC22registerCommandHandlerEPKcPFbS1_iE:00000000 _ZN2PC22registerCommandHandlerEPKcPFbS1_iE
     /tmp/cc5jYXtL.s:14495  .text._ZN2PC22registerCommandHandlerEPKcPFbS1_iE:00000084 $d
     /tmp/cc5jYXtL.s:14511  .text._ZN2PC14defaultHandlerEPKci:00000000 $t
     /tmp/cc5jYXtL.s:14516  .text._ZN2PC14defaultHandlerEPKci:00000000 _ZN2PC14defaultHandlerEPKci
     /tmp/cc5jYXtL.s:14673  .text._ZN2PC14defaultHandlerEPKci:00000074 $d
     /tmp/cc5jYXtL.s:14683  .text.startup._GLOBAL__sub_I_uart:00000000 $t
     /tmp/cc5jYXtL.s:14687  .text.startup._GLOBAL__sub_I_uart:00000000 _GLOBAL__sub_I_uart
     /tmp/cc5jYXtL.s:14956  .text.startup._GLOBAL__sub_I_uart:000000cc $d
     /tmp/cc5jYXtL.s:15284  .rodata._ZTVN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EEE:00000000 _ZTVN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EEE
     /tmp/cc5jYXtL.s:15270  .rodata._ZTVN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEEE:00000000 _ZTVN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEEE
     /tmp/cc5jYXtL.s:15256  .rodata._ZTVN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEEE:00000000 _ZTVN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEEE
     /tmp/cc5jYXtL.s:15242  .rodata._ZTVN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEEE:00000000 _ZTVN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEEE
     /tmp/cc5jYXtL.s:15228  .rodata._ZTVN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEEE:00000000 _ZTVN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEEE
     /tmp/cc5jYXtL.s:15214  .rodata._ZTVN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEEE:00000000 _ZTVN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEEE
     /tmp/cc5jYXtL.s:15200  .rodata._ZTVN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEEE:00000000 _ZTVN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEEE
     /tmp/cc5jYXtL.s:15186  .rodata._ZTVN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEEE:00000000 _ZTVN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEEE
     /tmp/cc5jYXtL.s:14998  .init_array:00000000 $d
     /tmp/cc5jYXtL.s:15002  .bss._ZN10HallSensorIL4Axis2EE9triggeredE:00000000 $d
     /tmp/cc5jYXtL.s:15009  .bss._ZN10HallSensorIL4Axis0EE9triggeredE:00000000 $d
     /tmp/cc5jYXtL.s:15016  .bss._ZN7ControlIL4Axis2EE7v_shallE:00000000 $d
     /tmp/cc5jYXtL.s:15023  .bss._ZN7ControlIL4Axis2EE4v_isE:00000000 $d
     /tmp/cc5jYXtL.s:15030  .bss._ZN7ControlIL4Axis2EE9pos_shallE:00000000 $d
     /tmp/cc5jYXtL.s:15037  .bss._ZN7ControlIL4Axis0EE7v_shallE:00000000 $d
     /tmp/cc5jYXtL.s:15044  .bss._ZN7ControlIL4Axis0EE4v_isE:00000000 $d
     /tmp/cc5jYXtL.s:15051  .bss._ZN7ControlIL4Axis0EE9pos_shallE:00000000 $d
     /tmp/cc5jYXtL.s:15484  .bss.controlOut:00000000 controlOut
     /tmp/cc5jYXtL.s:15498  .bss.kWrap:00000000 kWrap
     /tmp/cc5jYXtL.s:15744  .bss.commandOut:00000000 commandOut
     /tmp/cc5jYXtL.s:15470  .bss.cWrap:00000000 cWrap
     /tmp/cc5jYXtL.s:15772  .bss.iout:00000000 iout
     /tmp/cc5jYXtL.s:15786  .bss.iWrap:00000000 iWrap
     /tmp/cc5jYXtL.s:15403  .bss.cerr:00000000 cerr
     /tmp/cc5jYXtL.s:15765  .bss.cerrWrap:00000000 cerrWrap
     /tmp/cc5jYXtL.s:15751  .bss.dout:00000000 dout
     /tmp/cc5jYXtL.s:15532  .bss.doutWrap:00000000 doutWrap
     /tmp/cc5jYXtL.s:15396  .bss.mout:00000000 mout
     /tmp/cc5jYXtL.s:15519  .bss.moutWrap:00000000 moutWrap
     /tmp/cc5jYXtL.s:15505  .bss.pout:00000000 pout
     /tmp/cc5jYXtL.s:15758  .bss.poutWrap:00000000 poutWrap
     /tmp/cc5jYXtL.s:15491  .bss.coutRaw:00000000 coutRaw
     /tmp/cc5jYXtL.s:15512  .bss.uartWrap:00000000 uartWrap
     /tmp/cc5jYXtL.s:15525  .bss.uart:00000000 uart
     /tmp/cc5jYXtL.s:15075  .bss._ZN7ControlIL4Axis2EE3v_uE:00000000 $d
     /tmp/cc5jYXtL.s:15082  .bss._ZN7ControlIL4Axis2EE7v_urealE:00000000 $d
     /tmp/cc5jYXtL.s:15092  .bss._ZN7ControlIL4Axis2EE22positionControlEnabledE:00000000 $d
     /tmp/cc5jYXtL.s:15098  .bss._ZN7ControlIL4Axis2EE19speedControlEnabledE:00000000 $d
     /tmp/cc5jYXtL.s:15101  .bss._ZN7ControlIL4Axis0EE3v_uE:00000000 $d
     /tmp/cc5jYXtL.s:15108  .bss._ZN7ControlIL4Axis0EE7v_urealE:00000000 $d
     /tmp/cc5jYXtL.s:15118  .bss._ZN7ControlIL4Axis0EE22positionControlEnabledE:00000000 $d
     /tmp/cc5jYXtL.s:15124  .bss._ZN7ControlIL4Axis0EE19speedControlEnabledE:00000000 $d
     /tmp/cc5jYXtL.s:15127  .bss._ZZN8Handlers18linePatternHandlerEPKciE1i:00000000 $d
     /tmp/cc5jYXtL.s:15134  .bss._ZZN8Handlers18linePatternHandlerEPKciE6points:00000000 $d
     /tmp/cc5jYXtL.s:15141  .bss._ZZN8Handlers24rectanglePatternHandler3EPKciE1i:00000000 $d
     /tmp/cc5jYXtL.s:15148  .bss._ZZN8Handlers24rectanglePatternHandler3EPKciE6points:00000000 $d
     /tmp/cc5jYXtL.s:15155  .data._ZZN8Handlers23rectanglePatternHandlerEPKciE5lastx:00000000 $d
     /tmp/cc5jYXtL.s:15162  .data._ZZN8Handlers23rectanglePatternHandlerEPKciE5lasty:00000000 $d
     /tmp/cc5jYXtL.s:15169  .data._ZZN8Handlers23rectanglePatternHandlerEPKciE5lastw:00000000 $d
     /tmp/cc5jYXtL.s:15176  .data._ZZN8Handlers23rectanglePatternHandlerEPKciE5lasth:00000000 $d
     /tmp/cc5jYXtL.s:15183  .rodata._ZTVN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEEE:00000000 $d
     /tmp/cc5jYXtL.s:15197  .rodata._ZTVN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEEE:00000000 $d
     /tmp/cc5jYXtL.s:15211  .rodata._ZTVN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEEE:00000000 $d
     /tmp/cc5jYXtL.s:15225  .rodata._ZTVN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEEE:00000000 $d
     /tmp/cc5jYXtL.s:15239  .rodata._ZTVN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEEE:00000000 $d
     /tmp/cc5jYXtL.s:15253  .rodata._ZTVN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEEE:00000000 $d
     /tmp/cc5jYXtL.s:15267  .rodata._ZTVN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEEE:00000000 $d
     /tmp/cc5jYXtL.s:15281  .rodata._ZTVN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EEE:00000000 $d
     /tmp/cc5jYXtL.s:15295  .bss._ZN6StreamILc75ELb0ELb1ELi300EE3posE:00000000 $d
     /tmp/cc5jYXtL.s:15302  .bss._ZN6StreamILc75ELb0ELb1ELi300EE4textE:00000000 $d
     /tmp/cc5jYXtL.s:15309  .bss._ZN6StreamILc67ELb0ELb1ELi300EE3posE:00000000 $d
     /tmp/cc5jYXtL.s:15316  .bss._ZN6StreamILc67ELb0ELb1ELi300EE4textE:00000000 $d
     /tmp/cc5jYXtL.s:15323  .bss._ZN6StreamILc73ELb0ELb1ELi300EE3posE:00000000 $d
     /tmp/cc5jYXtL.s:15330  .bss._ZN6StreamILc73ELb0ELb1ELi300EE4textE:00000000 $d
     /tmp/cc5jYXtL.s:15337  .bss._ZN6StreamILc69ELb0ELb1ELi300EE3posE:00000000 $d
     /tmp/cc5jYXtL.s:15344  .bss._ZN6StreamILc69ELb0ELb1ELi300EE4textE:00000000 $d
     /tmp/cc5jYXtL.s:15351  .bss._ZN6StreamILc68ELb0ELb1ELi300EE3posE:00000000 $d
     /tmp/cc5jYXtL.s:15358  .bss._ZN6StreamILc68ELb0ELb1ELi300EE4textE:00000000 $d
     /tmp/cc5jYXtL.s:15365  .bss._ZN6StreamILc77ELb1ELb1ELi300EE3posE:00000000 $d
     /tmp/cc5jYXtL.s:15372  .bss._ZN6StreamILc77ELb1ELb1ELi300EE4textE:00000000 $d
     /tmp/cc5jYXtL.s:15379  .bss._ZN6StreamILc80ELb0ELb1ELi300EE3posE:00000000 $d
     /tmp/cc5jYXtL.s:15386  .bss._ZN6StreamILc80ELb0ELb1ELi300EE4textE:00000000 $d
     /tmp/cc5jYXtL.s:15392  .bss.mout:00000000 $d
     /tmp/cc5jYXtL.s:15399  .bss.cerr:00000000 $d
     /tmp/cc5jYXtL.s:15406  .data._ZN12_GLOBAL__N_112CommandTableE:00000000 $d
     /tmp/cc5jYXtL.s:15410  .data._ZN12_GLOBAL__N_112CommandTableE:00000000 _ZN12_GLOBAL__N_112CommandTableE
     /tmp/cc5jYXtL.s:15466  .bss.cWrap:00000000 $d
     /tmp/cc5jYXtL.s:15473  .bss._ZN12_GLOBAL__N_16bufferE:00000000 $d
     /tmp/cc5jYXtL.s:15477  .bss._ZN12_GLOBAL__N_16bufferE:00000000 _ZN12_GLOBAL__N_16bufferE
     /tmp/cc5jYXtL.s:15480  .bss.controlOut:00000000 $d
     /tmp/cc5jYXtL.s:15487  .bss.coutRaw:00000000 $d
     /tmp/cc5jYXtL.s:15494  .bss.kWrap:00000000 $d
     /tmp/cc5jYXtL.s:15501  .bss.pout:00000000 $d
     /tmp/cc5jYXtL.s:15508  .bss.uartWrap:00000000 $d
     /tmp/cc5jYXtL.s:15515  .bss.moutWrap:00000000 $d
     /tmp/cc5jYXtL.s:15522  .bss.uart:00000000 $d
     /tmp/cc5jYXtL.s:15528  .bss.doutWrap:00000000 $d
     /tmp/cc5jYXtL.s:15535  .rodata.str1.4:00000000 $d
     /tmp/cc5jYXtL.s:15740  .bss.commandOut:00000000 $d
     /tmp/cc5jYXtL.s:15747  .bss.dout:00000000 $d
     /tmp/cc5jYXtL.s:15754  .bss.poutWrap:00000000 $d
     /tmp/cc5jYXtL.s:15761  .bss.cerrWrap:00000000 $d
     /tmp/cc5jYXtL.s:15768  .bss.iout:00000000 $d
     /tmp/cc5jYXtL.s:15775  .bss._ZN12_GLOBAL__N_16bufPosE:00000000 $d
     /tmp/cc5jYXtL.s:15779  .bss._ZN12_GLOBAL__N_16bufPosE:00000000 _ZN12_GLOBAL__N_16bufPosE
     /tmp/cc5jYXtL.s:15782  .bss.iWrap:00000000 $d
                     .debug_frame:00000010 $d
     /tmp/cc5jYXtL.s:2330   .text._ZN8Handlers15setSpeedHandlerIL4Axis2EEEbPKci:00000124 $t
     /tmp/cc5jYXtL.s:2581   .text._ZN8Handlers15setSpeedHandlerIL4Axis0EEEbPKci:00000124 $t
                           .group:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc75ELb0ELb1ELi300EEED5Ev
                           .group:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc67ELb0ELb1ELi300EEED5Ev
                           .group:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc73ELb0ELb1ELi300EEED5Ev
                           .group:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc69ELb0ELb1ELi300EEED5Ev
                           .group:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc68ELb0ELb1ELi300EEED5Ev
                           .group:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc77ELb1ELb1ELi300EEED5Ev
                           .group:00000000 _ZN4xpcc15IODeviceWrapperI6StreamILc80ELb0ELb1ELi300EEED5Ev
                           .group:00000000 _ZN4xpcc15IODeviceWrapperINS_5stm3214BufferedUsart2EED5Ev

UNDEFINED SYMBOLS
_ZN7Pattern7runningE
_ZN7Pattern6pausedE
_ZTVN4xpcc8IODeviceE
_ZN4xpcc5stm3214BufferedUsart24readERh
_ZN4xpcc5stm3214BufferedUsart25writeEh
_ZdlPv
_ZN7Trigger12forceTriggerEv
_ZN4xpcc8IOStream8writeBinEPKc
_ZN4xpcc8IOStream8writeHexEPKc
_ZN4xpcc8IOStream8writeBinEh
_ZN4xpcc8IOStream8writeHexEh
_ZN4xpcc8IOStream12writeIntegerEl
_ZN7ControlIL4Axis0EE13getIsPositionEv
__aeabi_f2d
__aeabi_dcmpgt
__aeabi_dcmplt
__aeabi_dmul
__aeabi_d2iz
_Z5atof2PKcif
_ZN5Utils19startLoggingControlEv
_ZN7ControlIL4Axis5EE21enablePositionControlEb
_ZN7ControlIL4Axis5EE18enableSpeedControlEb
_ZN7ControlIL4Axis2EE13getIsPositionEv
_ZN5State3setEi
_ZN7Trigger12setThresholdEi
_Z5atoi2PKcii
_ZN5Utils14disableSystickEv
_ZN5Utils13enableSystickEv
_ZN5Laser12getLastErrorEv
_ZN7Trigger6enableEb
_ZN5Laser4execEPKc
_ZN7ControlIL4Axis5EE11resetPosPidEv
_ZN7ControlIL4Axis5EE9resetVPidEv
_ZN4xpcc8IOStream10writeFloatERKf
_ZN7ControlIL4Axis5EE11setMaxSpeedEf
_ZN4xpcc5stm3212SysTickTimer6enableEm
_delay_ms
_ZN5MotorIL4Axis2EE8setSpeedEi
_ZN5MotorIL4Axis0EE8setSpeedEi
_Z5atof2PKcPS0_f
_Z5atoi2PKcPS0_
_ZN16QuadrangleZigZag6sampleEv
_ZN7Pattern4funcE
_ZN16QuadrangleZigZag10configure2Effffi
_ZN11LinePattern9configureEP5Point
_ZN11LinePattern6sampleEv
_ZN7Trigger12getThresholdEv
_ZN16QuadrangleZigZag9configureEP5Pointi
_ZN10Quadrangle9configureEffff
_ZN10Quadrangle6sampleEv
_ZN16QuadrangleZigZag9configureEffffi
_ZN4xpcc5stm3214BufferedUsart213configurePinsENS1_7MappingE
_ZN4xpcc5stm3214BufferedUsart211setBaudrateEmmb
__dso_handle
__aeabi_atexit
_ZN4xpcc8IOStreamC1ERNS_8IODeviceE
