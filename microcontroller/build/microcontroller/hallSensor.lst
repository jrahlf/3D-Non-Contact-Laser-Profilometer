   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 2
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"hallSensor.cpp"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text._ZN10HallSensorIL4Axis5EE4initEv,"ax",%progbits
  20              		.align	2
  21              		.global	_ZN10HallSensorIL4Axis5EE4initEv
  22              		.thumb
  23              		.thumb_func
  25              	_ZN10HallSensorIL4Axis5EE4initEv:
  26              	.LFB1024:
  27              		.file 1 "hallSensor.cpp"
   1:hallSensor.cpp **** /*
   2:hallSensor.cpp ****  * hallSensor.cpp
   3:hallSensor.cpp ****  *
   4:hallSensor.cpp ****  *  Created on: Dec 23, 2013
   5:hallSensor.cpp ****  *      Author: jonas
   6:hallSensor.cpp ****  */
   7:hallSensor.cpp **** 
   8:hallSensor.cpp **** #include "hallSensor.h"
   9:hallSensor.cpp **** #include <xpcc/architecture.hpp>
  10:hallSensor.cpp **** 
  11:hallSensor.cpp **** //#pragma GCC push_options
  12:hallSensor.cpp **** //#pragma GCC optimize ("O0")
  13:hallSensor.cpp **** 
  14:hallSensor.cpp **** GPIO__INPUT(XFRONT, E, 11);
  15:hallSensor.cpp **** GPIO__INPUT(XEND, E, 7);
  16:hallSensor.cpp **** GPIO__INPUT(YFRONT, D, 8);
  17:hallSensor.cpp **** GPIO__INPUT(YEND, D, 9);
  18:hallSensor.cpp **** 
  19:hallSensor.cpp **** 
  20:hallSensor.cpp **** using namespace xpcc::stm32;
  21:hallSensor.cpp **** 
  22:hallSensor.cpp **** template<>
  23:hallSensor.cpp **** bool HallSensor<ALL>::init(){
  28              		.loc 1 23 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34              	.LBB51:
  35              	.LBB52:
  24:hallSensor.cpp **** 	for(int i = 0; i < 2; i++){
  25:hallSensor.cpp **** 		triggered[i] = false;
  36              		.loc 1 25 0
  37 0000 1749     		ldr	r1, .L2
  38              	.LBE52:
  39              	.LBB53:
  40              	.LBB54:
  41              		.file 2 "hallSensor.h"
   1:hallSensor.h  **** /*
   2:hallSensor.h  ****  * hallSensor.h
   3:hallSensor.h  ****  *
   4:hallSensor.h  ****  *  Created on: Dec 23, 2013
   5:hallSensor.h  ****  *      Author: jonas
   6:hallSensor.h  ****  */
   7:hallSensor.h  **** 
   8:hallSensor.h  **** #ifndef HALLSENSOR_H_
   9:hallSensor.h  **** #define HALLSENSOR_H_
  10:hallSensor.h  **** 
  11:hallSensor.h  **** //#pragma GCC push_options
  12:hallSensor.h  **** //#pragma GCC optimize ("O0")
  13:hallSensor.h  **** 
  14:hallSensor.h  **** #include "project.h"
  15:hallSensor.h  **** #include "control.h"
  16:hallSensor.h  **** 
  17:hallSensor.h  **** template<Axis axis>
  18:hallSensor.h  **** class HallSensor{
  19:hallSensor.h  **** private:
  20:hallSensor.h  **** 	static volatile bool triggered[2];
  21:hallSensor.h  **** 	static volatile bool state[2]; //the real current state
  22:hallSensor.h  **** 	static volatile int triggeredPosition[2];
  23:hallSensor.h  **** 
  24:hallSensor.h  **** 	GPIO__INPUT(XFRONT, E, 11);
  42              		.loc 2 24 0
  43 0002 184A     		ldr	r2, .L2+4
  44              	.LBE54:
  45              	.LBE53:
  46              	.LBB56:
  47              	.LBB57:
  25:hallSensor.h  **** 	GPIO__INPUT(XEND, E, 7);
  26:hallSensor.h  **** 	GPIO__INPUT(YFRONT, D, 8);
  48              		.loc 2 26 0
  49 0004 184B     		ldr	r3, .L2+8
  50              	.LBE57:
  51              	.LBE56:
  52              	.LBB59:
  53              		.loc 1 25 0
  54 0006 0020     		movs	r0, #0
  55 0008 0870     		strb	r0, [r1, #0]
  56              	.LVL1:
  57 000a 4870     		strb	r0, [r1, #1]
  58              	.LVL2:
  59              	.LBE59:
  60              	.LBB60:
  61              	.LBB55:
  24:hallSensor.h  **** 	GPIO__INPUT(XFRONT, E, 11);
  62              		.loc 2 24 0
  63 000c 1168     		ldr	r1, [r2, #0]
  64 000e 21F44001 		bic	r1, r1, #12582912
  65 0012 1160     		str	r1, [r2, #0]
  66 0014 D168     		ldr	r1, [r2, #12]
  67 0016 21F44001 		bic	r1, r1, #12582912
  68 001a 41F48001 		orr	r1, r1, #4194304
  69 001e D160     		str	r1, [r2, #12]
  70              	.LVL3:
  71              	.LBE55:
  72              	.LBE60:
  73              	.LBB61:
  74              	.LBB62:
  25:hallSensor.h  **** 	GPIO__INPUT(XEND, E, 7);
  75              		.loc 2 25 0
  76 0020 1168     		ldr	r1, [r2, #0]
  77 0022 21F44041 		bic	r1, r1, #49152
  78 0026 1160     		str	r1, [r2, #0]
  79 0028 D168     		ldr	r1, [r2, #12]
  80 002a 21F44041 		bic	r1, r1, #49152
  81 002e 41F48041 		orr	r1, r1, #16384
  82 0032 D160     		str	r1, [r2, #12]
  83              	.LVL4:
  84              	.LBE62:
  85              	.LBE61:
  86              	.LBB63:
  87              	.LBB58:
  88              		.loc 2 26 0
  89 0034 1A68     		ldr	r2, [r3, #0]
  90 0036 22F44032 		bic	r2, r2, #196608
  91 003a 1A60     		str	r2, [r3, #0]
  92 003c DA68     		ldr	r2, [r3, #12]
  93 003e 22F44032 		bic	r2, r2, #196608
  94 0042 42F48032 		orr	r2, r2, #65536
  95 0046 DA60     		str	r2, [r3, #12]
  96              	.LVL5:
  97              	.LBE58:
  98              	.LBE63:
  99              	.LBB64:
 100              	.LBB65:
  27:hallSensor.h  **** 	GPIO__INPUT(YEND, D, 9);
 101              		.loc 2 27 0
 102 0048 1A68     		ldr	r2, [r3, #0]
 103 004a 22F44022 		bic	r2, r2, #786432
 104 004e 1A60     		str	r2, [r3, #0]
 105 0050 DA68     		ldr	r2, [r3, #12]
 106 0052 22F44022 		bic	r2, r2, #786432
 107 0056 42F48022 		orr	r2, r2, #262144
 108 005a DA60     		str	r2, [r3, #12]
 109              	.LBE65:
 110              	.LBE64:
 111              	.LBE51:
  26:hallSensor.cpp **** 		//state array will be initialized with real values
  27:hallSensor.cpp **** 	}
  28:hallSensor.cpp **** 	XFRONT::setInput(xpcc::stm32::PULLUP);
  29:hallSensor.cpp **** 	XEND::setInput(xpcc::stm32::PULLUP);
  30:hallSensor.cpp **** 	YFRONT::setInput(xpcc::stm32::PULLUP);
  31:hallSensor.cpp **** 	YEND::setInput(xpcc::stm32::PULLUP);
  32:hallSensor.cpp **** 	return true;
  33:hallSensor.cpp **** 
  34:hallSensor.cpp **** 	//xpcc::delay_ms(50); //important to prevent race condition!!
  35:hallSensor.cpp **** #if 1
  36:hallSensor.cpp **** 	//should not be necessary but still..
  37:hallSensor.cpp **** 	/*HallSensor<X>::setFrontState(XFRONT::read());
  38:hallSensor.cpp **** 	HallSensor<X>::setEndState(XEND::read());
  39:hallSensor.cpp **** 	HallSensor<Y>::setFrontState(YFRONT::read());
  40:hallSensor.cpp **** 	HallSensor<Y>::setEndState(YEND::read());*/
  41:hallSensor.cpp **** 
  42:hallSensor.cpp **** 	ExtInt::enable(ExtInt::Pin::PE11);
  43:hallSensor.cpp **** 	ExtInt::setMode(ExtInt::Pin::PE11, ExtInt::Mode::RisingFalling);
  44:hallSensor.cpp **** 	ExtInt::enableInterrupt(ExtInt::Pin::PE11);
  45:hallSensor.cpp **** 	ExtInt::enableInterruptVector(ExtInt::Pin::PE11, 6);
  46:hallSensor.cpp **** 
  47:hallSensor.cpp **** 	ExtInt::enable(ExtInt::Pin::PE7);
  48:hallSensor.cpp **** 	ExtInt::setMode(ExtInt::Pin::PE7, ExtInt::Mode::RisingFalling);
  49:hallSensor.cpp **** 	ExtInt::enableInterrupt(ExtInt::Pin::PE7);
  50:hallSensor.cpp **** 	ExtInt::enableInterruptVector(ExtInt::Pin::PE7, 6);
  51:hallSensor.cpp **** 
  52:hallSensor.cpp **** 	ExtInt::enable(ExtInt::Pin::PD8);
  53:hallSensor.cpp **** 	ExtInt::setMode(ExtInt::Pin::PD8, ExtInt::Mode::RisingFalling);
  54:hallSensor.cpp **** 	ExtInt::enableInterrupt(ExtInt::Pin::PD8);
  55:hallSensor.cpp **** 	ExtInt::enableInterruptVector(ExtInt::Pin::PD8, 6);
  56:hallSensor.cpp **** 
  57:hallSensor.cpp **** 	ExtInt::enable(ExtInt::Pin::PD9);
  58:hallSensor.cpp **** 	ExtInt::setMode(ExtInt::Pin::PD9, ExtInt::Mode::RisingFalling);
  59:hallSensor.cpp **** 	ExtInt::enableInterrupt(ExtInt::Pin::PD9);
  60:hallSensor.cpp **** 	ExtInt::enableInterruptVector(ExtInt::Pin::PD9, 6);
  61:hallSensor.cpp **** 	return true;
  62:hallSensor.cpp **** }
 112              		.loc 1 62 0
 113 005c 0120     		movs	r0, #1
 114 005e 7047     		bx	lr
 115              	.L3:
 116              		.align	2
 117              	.L2:
 118 0060 00000000 		.word	_ZN10HallSensorIL4Axis5EE9triggeredE
 119 0064 00100240 		.word	1073876992
 120 0068 000C0240 		.word	1073875968
 121              		.cfi_endproc
 122              	.LFE1024:
 124              		.section	.text.EXTI11_IRQHandler,"ax",%progbits
 125              		.align	2
 126              		.global	EXTI11_IRQHandler
 127              		.thumb
 128              		.thumb_func
 130              	EXTI11_IRQHandler:
 131              	.LFB1025:
  63:hallSensor.cpp **** 
  64:hallSensor.cpp **** extern "C" void
  65:hallSensor.cpp **** EXTI11_IRQHandler(void) {
 132              		.loc 1 65 0
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 0
 135              		@ frame_needed = 0, uses_anonymous_args = 0
 136              	.LVL6:
 137 0000 08B5     		push	{r3, lr}
 138              	.LCFI0:
 139              		.cfi_def_cfa_offset 8
 140              		.cfi_offset 3, -8
 141              		.cfi_offset 14, -4
 142              	.LBB66:
 143              	.LBB67:
 144              		.file 3 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/ex
   1:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** #ifndef XPCC_STM32__EXTI_HPP
   2:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** #define XPCC_STM32__EXTI_HPP
   3:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 
   4:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** #include <stdint.h>
   5:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** #include "device.h"
   6:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 
   7:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** namespace xpcc
   8:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** {
   9:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 	namespace stm32
  10:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 	{
  11:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		/**
  12:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		 * \brief	External Interrupts from GPIO pins
  13:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		 *
  14:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		 * This class simplifies the usage of external interrupts from
  15:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		 * GPIO pins. Keep the restrictions of the STM32 External
  16:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		 * Interrupts in mind!
  17:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		 *
  18:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		 * Although each GPIO pin can generate an interrupt, there are
  19:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		 * 16 interrupt lines and only seven interrupts handlers that
  20:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		 * are shared by all GPIO pins.
  21:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		 *
  22:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		 * Each of the 16 interrupt lines can only be connected to one
  23:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		 * GPIO pin at the same time. Interrupt line 0 can only be
  24:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		 * connected to one of PA0, PB0, PC0, ..., PI0.
  25:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		 * The same is true for interrupt line 1 which can only be
  26:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		 * connected to one of PA1, PB1, PC1, ..., PI1, et cetera.
  27:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		 *
  28:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		 * Interrupt lines 0 to 4 will trigger
  29:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		 *   EXTI0_IRQHandler
  30:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		 *   EXTI1_IRQHandler
  31:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		 *   EXTI2_IRQHandler
  32:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		 *   EXTI3_IRQHandler
  33:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		 *   EXTI4_IRQHandler, respectively.
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		 * interrupt lines 5 to 9 will trigger
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		 *   EXTI9_5_IRQHandler
  36:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		 * and interrupt lines 10 to 15 will trigger
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		 *   EXTI15_10_IRQHandler
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		 *
  39:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		 * When PA0 should generate an interrupt PB0 cannot as both pins
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		 * share the same interrupt line 0.
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		 *
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		 * Usage:
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		 *
  44:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		 * 	ExtInt::enable(ExtInt::Pin::PE11);
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		 * 	ExtInt::setMode(ExtInt::Pin::PE11, ExtInt::Mode::Rising);
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		 * 	ExtInt::enableInterrupt(ExtInt::Pin::PE11);
  47:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		 * 	ExtInt::enableInterruptVector(ExtInt::Pin::PE11, 14);
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		 *
  49:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		 * 	Declare the appropriate interrupt handler.
  50:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		 * 	You must manually choose the interrupt handler that serves
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		 * 	the interrupt line you implicitly chose with the GPIO pin.
  52:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		 *
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		 * 	extern "C" void
  54:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		 * 	EXTI15_10_IRQHandler(void)
  55:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		 * 	{
  56:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		 * 		// Reset interrupt after it triggered
  57:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		 * 		ExtInt::resetInterruptFlag(ExtInt::Pin::PE11);
  58:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		 * 	}
  59:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		 *
  60:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		 */
  61:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		class ExtInt
  62:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		{
  63:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		public:
  64:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 			enum class Line : uint_fast8_t /* IRQn_Type */
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 			{
  66:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 				LINE0 = EXTI0_IRQn,
  67:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 				LINE1 = EXTI1_IRQn,
  68:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 				LINE2 = EXTI2_IRQn,
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 				LINE3 = EXTI3_IRQn,
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 				LINE4 = EXTI4_IRQn,
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 				LINE9_5 = EXTI9_5_IRQn,
  72:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 				LINE15_10 = EXTI15_10_IRQn,
  73:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 			};
  74:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 
  75:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 			enum class Pin : uint_fast8_t /* Line */
  76:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 			{
  77:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 				PA0, PA1, PA2, PA3,	PA4, PA5, PA6, PA7, PA8, PA9, PA10, PA11, PA12, PA13, PA14, PA15,
  78:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 				PB0, PB1, PB2, PB3,	PB4, PB5, PB6, PB7, PB8, PB9, PB10, PB11, PB12, PB13, PB14, PB15,
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 				PC0, PC1, PC2, PC3,	PC4, PC5, PC6, PC7, PC8, PC9, PC10, PC11, PC12, PC13, PC14, PC15,
  80:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 				PD0, PD1, PD2, PD3,	PD4, PD5, PD6, PD7, PD8, PD9, PD10, PD11, PD12, PD13, PD14, PD15,
  81:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 				PE0, PE1, PE2, PE3,	PE4, PE5, PE6, PE7, PE8, PE9, PE10, PE11, PE12, PE13, PE14, PE15,
  82:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 				PF0, PF1, PF2, PF3,	PF4, PF5, PF6, PF7, PF8, PF9, PF10, PF11, PF12, PF13, PF14, PF15,
  83:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 				PG0, PG1, PG2, PG3,	PG4, PG5, PG6, PG7, PG8, PG9, PG10, PG11, PG12, PG13, PG14, PG15,
  84:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 				PH0, PH1, PH2, PH3,	PH4, PH5, PH6, PH7, PH8, PH9, PH10, PH11, PH12, PH13, PH14, PH15,
  85:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 				PI0, PI1, PI2, PI3,	PI4, PI5, PI6, PI7, PI8, PI9, PI10, PI11, PI12, PI13, PI14, PI15,
  86:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 			};
  87:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 
  88:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 			enum class Mode : uint8_t
  89:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 			{
  90:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 				Rising,
  91:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 				Falling,
  92:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 				RisingFalling,
  93:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 			};
  94:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 
  95:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		public:
  96:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 			/**	\brief	Enables the External Interrupt for a pin
  97:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 			 *
  98:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 			 */
  99:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 			static inline void
 100:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 			enable(const Pin pin)
 101:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 			{
 102:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 				const uint_fast8_t pinnr = getPinnrFromPin(pin);
 103:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 
 104:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 				// PA[x], x =  0 ..  3 maps to EXTICR[0]
 105:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 				// PA[x], x =  4 ..  7 maps to EXTICR[1]
 106:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 				// PA[x], x =  8 .. 11 maps to EXTICR[2]
 107:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 				// PA[x], x = 12 .. 15 maps to EXTICR[3]
 108:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 
 109:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 				const uint_fast8_t idx = (pinnr & 0x0f) >> 2;
 110:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 				const uint16_t mask = ((pinnr & 0xf0) >> 4) << ( (pinnr & 0x03)  << 2);
 111:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 
 112:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** #if		defined(STM32F10X_CL) || \
 113:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		defined(STM32F10X_LD)    || defined(STM32F10X_MD)    || defined(STM32F10X_HD)    || defined(STM32
 114:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		defined(STM32F10X_LD_VL) || defined(STM32F10X_MD_VL) || defined(STM32F10X_HD_VL)
 115:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 				// Enable AFIO
 116:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 				RCC->APB2ENR |= RCC_APB2ENR_AFIOEN;
 117:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 				AFIO->EXTICR[idx] |= mask;
 118:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** #elif	defined(STM32F2XX) || defined(STM32F4XX)
 119:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 				// Enable SYSCFG
 120:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 				RCC->APB2ENR |= RCC_APB2ENR_SYSCFGEN;
 121:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 				SYSCFG->EXTICR[idx] |= mask;
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** #endif
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 			}
 124:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 			static inline void
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 			setMode(const Pin pin, const Mode mode)
 127:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 			{
 128:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 				const uint32_t mask = getLineMaskFromPin(pin);
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 				switch (mode)
 130:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 				{
 131:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 				case Mode::Rising:
 132:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 					EXTI->RTSR |=  (mask);
 133:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 					EXTI->FTSR &= ~(mask);
 134:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 					break;
 135:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 				case Mode::Falling:
 136:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 					EXTI->RTSR &= ~(mask);
 137:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 					EXTI->FTSR |=  (mask);
 138:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 					break;
 139:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 				case Mode::RisingFalling:
 140:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 					EXTI->RTSR |=  (mask);
 141:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 					EXTI->FTSR |=  (mask);
 142:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 					break;
 143:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 				}
 144:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 			}
 145:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 
 146:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 			static inline void
 147:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 			enableInterruptVector(const Pin pin, const uint32_t priority)
 148:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 			{
 149:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 				const IRQn_Type irq = getIrqnFromPin(pin);
 150:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 
 151:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 				// Set priority for the interrupt vector
 152:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 				NVIC_SetPriority(irq, priority);
 153:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 
 154:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 				// register IRQ at the NVIC
 155:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 				NVIC_EnableIRQ(irq);
 156:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 			}
 157:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 
 158:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 			static inline void
 159:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 			disableInterruptVector(const Pin pin)
 160:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 			{
 161:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 				const IRQn_Type irq = getIrqnFromPin(pin);
 162:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 
 163:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 				NVIC_DisableIRQ(irq);
 164:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 			}
 165:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 
 166:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 			static inline void
 167:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 			enableInterrupt(const Pin pin)
 168:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 			{
 169:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 				EXTI->IMR |=  (getLineMaskFromPin(pin));
 170:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 			}
 171:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 
 172:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 			static void
 173:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 			disableInterrupt(const Pin pin)
 174:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 			{
 175:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 				EXTI->IMR &= ~(getLineMaskFromPin(pin));
 176:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 			}
 177:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 
 178:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 		public:
 179:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 			static inline bool
 180:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 			getInterruptFlag(const Pin pin)
 181:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 			{
 182:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 				return (EXTI->PR & (getLineMaskFromPin(pin)));
 145              		.loc 3 182 0
 146 0002 074B     		ldr	r3, .L10
 147 0004 5A69     		ldr	r2, [r3, #20]
 148              	.LVL7:
 149              	.LBE67:
 150              	.LBE66:
  66:hallSensor.cpp **** 	if (xpcc::stm32::ExtInt::getInterruptFlag(ExtInt::Pin::PE11)) {
 151              		.loc 1 66 0
 152 0006 1205     		lsls	r2, r2, #20
 153 0008 03D5     		bpl	.L5
 154              	.LVL8:
 155              	.LBB68:
 156              	.LBB69:
 183:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 			}
 184:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 
 185:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 			/**	\brief	Reset the interrupt flag in the interrupt routine. */
 186:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 			static inline void
 187:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 			resetInterruptFlag(const Pin pin)
 188:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 			{
 189:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 				// Flags are cleared by writing a one to the flag position.
 190:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 				EXTI->PR |= (getLineMaskFromPin(pin));
 157              		.loc 3 190 0
 158 000a 5A69     		ldr	r2, [r3, #20]
 159 000c 42F40062 		orr	r2, r2, #2048
 160 0010 5A61     		str	r2, [r3, #20]
 161              	.LVL9:
 162              	.L5:
 163              	.LBE69:
 164              	.LBE68:
  67:hallSensor.cpp **** 		ExtInt::resetInterruptFlag(ExtInt::Pin::PE11);
  68:hallSensor.cpp **** 		//HallSensor<X>::setFrontState(XFRONT::read());
  69:hallSensor.cpp **** 		//State::setBlue(!XFRONT::read());
  70:hallSensor.cpp **** 	}
  71:hallSensor.cpp **** 	Motor<X>::setSpeed(0);
 165              		.loc 1 71 0
 166 0012 0020     		movs	r0, #0
 167 0014 034B     		ldr	r3, .L10+4
 168 0016 9847     		blx	r3
 169              	.LVL10:
  72:hallSensor.cpp **** 	Motor<Y>::setSpeed(0);
 170              		.loc 1 72 0
 171 0018 0020     		movs	r0, #0
 172 001a 034B     		ldr	r3, .L10+8
 173 001c 9847     		blx	r3
 174              	.LVL11:
 175 001e 08BD     		pop	{r3, pc}
 176              	.L11:
 177              		.align	2
 178              	.L10:
 179 0020 003C0140 		.word	1073822720
 180 0024 00000000 		.word	_ZN5MotorIL4Axis0EE8setSpeedEi
 181 0028 00000000 		.word	_ZN5MotorIL4Axis2EE8setSpeedEi
 182              		.cfi_endproc
 183              	.LFE1025:
 185              		.section	.text.EXTI9_5_IRQHandler,"ax",%progbits
 186              		.align	2
 187              		.global	EXTI9_5_IRQHandler
 188              		.thumb
 189              		.thumb_func
 191              	EXTI9_5_IRQHandler:
 192              	.LFB1026:
  73:hallSensor.cpp **** 
  74:hallSensor.cpp **** }
  75:hallSensor.cpp **** 
  76:hallSensor.cpp **** extern "C" void
  77:hallSensor.cpp **** EXTI9_5_IRQHandler(void) {
 193              		.loc 1 77 0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197              	.LVL12:
 198 0000 08B5     		push	{r3, lr}
 199              	.LCFI1:
 200              		.cfi_def_cfa_offset 8
 201              		.cfi_offset 3, -8
 202              		.cfi_offset 14, -4
 203              	.LBB70:
 204              	.LBB71:
 182:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/exti.hpp **** 				return (EXTI->PR & (getLineMaskFromPin(pin)));
 205              		.loc 3 182 0
 206 0002 0F4B     		ldr	r3, .L21
 207 0004 5A69     		ldr	r2, [r3, #20]
 208              	.LVL13:
 209              	.LBE71:
 210              	.LBE70:
  78:hallSensor.cpp **** 	if (xpcc::stm32::ExtInt::getInterruptFlag(ExtInt::Pin::PE7)) {
 211              		.loc 1 78 0
 212 0006 12F0800F 		tst	r2, #128
 213              	.LBB72:
 214              	.LBB73:
 215              		.loc 3 190 0
 216 000a 5A69     		ldr	r2, [r3, #20]
 217              	.LBE73:
 218              	.LBE72:
 219              		.loc 1 78 0
 220 000c 14D1     		bne	.L19
 221              	.LVL14:
  79:hallSensor.cpp **** 		ExtInt::resetInterruptFlag(ExtInt::Pin::PE7);
  80:hallSensor.cpp **** 		//HallSensor<X>::setEndState(XEND::read());
  81:hallSensor.cpp **** 		//State::setRed(!XEND::read());
  82:hallSensor.cpp **** 	}
  83:hallSensor.cpp **** 	else if (xpcc::stm32::ExtInt::getInterruptFlag(ExtInt::Pin::PD8)) {
 222              		.loc 1 83 0
 223 000e 12F4807F 		tst	r2, #256
 224              	.LBB75:
 225              	.LBB76:
 226              		.loc 3 190 0
 227 0012 5A69     		ldr	r2, [r3, #20]
 228              	.LBE76:
 229              	.LBE75:
 230              		.loc 1 83 0
 231 0014 0CD1     		bne	.L20
 232              	.LVL15:
  84:hallSensor.cpp **** 		ExtInt::resetInterruptFlag(ExtInt::Pin::PD8);
  85:hallSensor.cpp **** 		//HallSensor<Y>::setFrontState(YFRONT::read());
  86:hallSensor.cpp **** 		//State::setBlue(!YFRONT::read());
  87:hallSensor.cpp **** 	}
  88:hallSensor.cpp **** 	else if (xpcc::stm32::ExtInt::getInterruptFlag(ExtInt::Pin::PD9)) {
 233              		.loc 1 88 0
 234 0016 9105     		lsls	r1, r2, #22
 235 0018 03D5     		bpl	.L14
 236              	.LVL16:
 237              	.LBB78:
 238              	.LBB79:
 239              		.loc 3 190 0
 240 001a 5A69     		ldr	r2, [r3, #20]
 241 001c 42F40072 		orr	r2, r2, #512
 242 0020 5A61     		str	r2, [r3, #20]
 243              	.LVL17:
 244              	.L14:
 245              	.LBE79:
 246              	.LBE78:
  89:hallSensor.cpp **** 		ExtInt::resetInterruptFlag(ExtInt::Pin::PD9);
  90:hallSensor.cpp **** 		//HallSensor<Y>::setEndState(YEND::read());
  91:hallSensor.cpp **** 		//State::setRed(!YEND::read());
  92:hallSensor.cpp **** 	}
  93:hallSensor.cpp **** 
  94:hallSensor.cpp **** 	Motor<X>::setSpeed(0);
 247              		.loc 1 94 0
 248 0022 0020     		movs	r0, #0
 249 0024 074B     		ldr	r3, .L21+4
 250 0026 9847     		blx	r3
 251              	.LVL18:
  95:hallSensor.cpp **** 	Motor<Y>::setSpeed(0);
 252              		.loc 1 95 0
 253 0028 0020     		movs	r0, #0
 254 002a 074B     		ldr	r3, .L21+8
 255 002c 9847     		blx	r3
 256              	.LVL19:
 257 002e 08BD     		pop	{r3, pc}
 258              	.LVL20:
 259              	.L20:
 260              	.LBB80:
 261              	.LBB77:
 262              		.loc 3 190 0
 263 0030 42F48072 		orr	r2, r2, #256
 264 0034 5A61     		str	r2, [r3, #20]
 265 0036 F4E7     		b	.L14
 266              	.LVL21:
 267              	.L19:
 268              	.LBE77:
 269              	.LBE80:
 270              	.LBB81:
 271              	.LBB74:
 272 0038 42F08002 		orr	r2, r2, #128
 273 003c 5A61     		str	r2, [r3, #20]
 274 003e F0E7     		b	.L14
 275              	.L22:
 276              		.align	2
 277              	.L21:
 278 0040 003C0140 		.word	1073822720
 279 0044 00000000 		.word	_ZN5MotorIL4Axis0EE8setSpeedEi
 280 0048 00000000 		.word	_ZN5MotorIL4Axis2EE8setSpeedEi
 281              	.LBE74:
 282              	.LBE81:
 283              		.cfi_endproc
 284              	.LFE1026:
 286              		.weak	_ZN10HallSensorIL4Axis5EE9triggeredE
 287              		.section	.bss._ZN10HallSensorIL4Axis5EE9triggeredE,"awG",%nobits,_ZN10HallSensorIL4Axis5EE9trigger
 288              		.align	2
 291              	_ZN10HallSensorIL4Axis5EE9triggeredE:
 292 0000 0000     		.space	2
 293 0002 0000     		.text
 294              	.Letext0:
 295              		.file 4 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/std
 296              		.file 5 "/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Device/ST/STM32F4xx/Inclu
 297              		.file 6 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/co
 298              		.file 7 "project.h"
 299              		.file 8 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/st
 300              		.file 9 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/gpio.hpp"
 301              		.file 10 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/f
 302              		.file 11 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/connectivity/i2c/constants.hpp"
 303              		.file 12 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/atomic.hpp"
 304              		.file 13 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp"
 305              		.file 14 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/connectivity/can/message.hpp"
 306              		.file 15 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/template_metaprogramming.hpp"
 307              		.file 16 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/include/stddef.h"
 308              		.file 17 "<built-in>"
 309              		.file 18 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c+
 310              		.file 19 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c+
 311              		.file 20 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/st
 312              		.file 21 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/st
 313              		.file 22 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c+
 314              		.file 23 "/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 hallSensor.cpp
     /tmp/ccWgjNGf.s:20     .text._ZN10HallSensorIL4Axis5EE4initEv:00000000 $t
     /tmp/ccWgjNGf.s:25     .text._ZN10HallSensorIL4Axis5EE4initEv:00000000 _ZN10HallSensorIL4Axis5EE4initEv
     /tmp/ccWgjNGf.s:118    .text._ZN10HallSensorIL4Axis5EE4initEv:00000060 $d
     /tmp/ccWgjNGf.s:291    .bss._ZN10HallSensorIL4Axis5EE9triggeredE:00000000 _ZN10HallSensorIL4Axis5EE9triggeredE
     /tmp/ccWgjNGf.s:125    .text.EXTI11_IRQHandler:00000000 $t
     /tmp/ccWgjNGf.s:130    .text.EXTI11_IRQHandler:00000000 EXTI11_IRQHandler
     /tmp/ccWgjNGf.s:179    .text.EXTI11_IRQHandler:00000020 $d
     /tmp/ccWgjNGf.s:186    .text.EXTI9_5_IRQHandler:00000000 $t
     /tmp/ccWgjNGf.s:191    .text.EXTI9_5_IRQHandler:00000000 EXTI9_5_IRQHandler
     /tmp/ccWgjNGf.s:278    .text.EXTI9_5_IRQHandler:00000040 $d
     /tmp/ccWgjNGf.s:288    .bss._ZN10HallSensorIL4Axis5EE9triggeredE:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
_ZN5MotorIL4Axis0EE8setSpeedEi
_ZN5MotorIL4Axis2EE8setSpeedEi
