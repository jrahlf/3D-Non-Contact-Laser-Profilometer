   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 2
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"quadrangleZigZag.cpp"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text._ZN16QuadrangleZigZag7isAtEndEv,"ax",%progbits
  20              		.align	2
  21              		.global	_ZN16QuadrangleZigZag7isAtEndEv
  22              		.thumb
  23              		.thumb_func
  25              	_ZN16QuadrangleZigZag7isAtEndEv:
  26              	.LFB1034:
  27              		.file 1 "quadrangleZigZag.cpp"
   1:quadrangleZigZag.cpp **** /*
   2:quadrangleZigZag.cpp ****  * RectangleZigZag.cpp
   3:quadrangleZigZag.cpp ****  *
   4:quadrangleZigZag.cpp ****  *  Created on: Jan 18, 2014
   5:quadrangleZigZag.cpp ****  *      Author: jonas
   6:quadrangleZigZag.cpp ****  */
   7:quadrangleZigZag.cpp **** 
   8:quadrangleZigZag.cpp **** #include "quadrangleZigZag.h"
   9:quadrangleZigZag.cpp **** #include "transform.h"
  10:quadrangleZigZag.cpp **** #include "Trigger.h"
  11:quadrangleZigZag.cpp **** #include <xpcc/workflow/timeout.hpp>
  12:quadrangleZigZag.cpp **** 
  13:quadrangleZigZag.cpp **** /**
  14:quadrangleZigZag.cpp ****  * ^
  15:quadrangleZigZag.cpp ****  * |
  16:quadrangleZigZag.cpp ****  * |
  17:quadrangleZigZag.cpp ****  * |
  18:quadrangleZigZag.cpp ****  * |
  19:quadrangleZigZag.cpp ****  * y x------>
  20:quadrangleZigZag.cpp ****  *
  21:quadrangleZigZag.cpp ****  *
  22:quadrangleZigZag.cpp ****  * ^-> ->
  23:quadrangleZigZag.cpp ****  * | | | |
  24:quadrangleZigZag.cpp ****  * | | | |
  25:quadrangleZigZag.cpp ****  * | | | |
  26:quadrangleZigZag.cpp ****  * | | | |
  27:quadrangleZigZag.cpp ****  * | | | |
  28:quadrangleZigZag.cpp ****  * | -> ->
  29:quadrangleZigZag.cpp ****  */
  30:quadrangleZigZag.cpp **** 
  31:quadrangleZigZag.cpp **** namespace{
  32:quadrangleZigZag.cpp **** 
  33:quadrangleZigZag.cpp **** inline int nextX(){
  34:quadrangleZigZag.cpp **** 	return Control<X>::getShallPosition();
  35:quadrangleZigZag.cpp **** }
  36:quadrangleZigZag.cpp **** 
  37:quadrangleZigZag.cpp **** inline int nextY(){
  38:quadrangleZigZag.cpp **** 	return Control<Y>::getShallPosition();
  39:quadrangleZigZag.cpp **** }
  40:quadrangleZigZag.cpp **** bool approachingX;
  41:quadrangleZigZag.cpp **** int yDirection;
  42:quadrangleZigZag.cpp **** int xDirection;
  43:quadrangleZigZag.cpp **** bool yIsLongSide = true;
  44:quadrangleZigZag.cpp **** }
  45:quadrangleZigZag.cpp **** 
  46:quadrangleZigZag.cpp **** int QuadrangleZigZag::startX;
  47:quadrangleZigZag.cpp **** int QuadrangleZigZag::stopX;
  48:quadrangleZigZag.cpp **** int QuadrangleZigZag::startY;
  49:quadrangleZigZag.cpp **** int QuadrangleZigZag::stopY;
  50:quadrangleZigZag.cpp **** int QuadrangleZigZag::samplingResolution;
  51:quadrangleZigZag.cpp **** 
  52:quadrangleZigZag.cpp **** bool QuadrangleZigZag::isAtEnd(){
  28              		.loc 1 52 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LBB96:
  33              	.LBB97:
  34              	.LBB98:
  35              		.file 2 "control.h"
   1:control.h     **** /*
   2:control.h     ****  * control.h
   3:control.h     ****  *
   4:control.h     ****  *  Created on: Nov 24, 2013
   5:control.h     ****  *      Author: jonas
   6:control.h     ****  */
   7:control.h     **** 
   8:control.h     **** #ifndef CONTROL_H_
   9:control.h     **** #define CONTROL_H_
  10:control.h     **** 
  11:control.h     **** #include "project.h"
  12:control.h     **** #include <xpcc/math/filter/pid.hpp>
  13:control.h     **** 
  14:control.h     **** 
  15:control.h     **** template<Axis axis>
  16:control.h     **** class Control{
  17:control.h     **** 
  18:control.h     **** 	friend class Control<ALL>;
  19:control.h     **** 
  20:control.h     **** private:
  21:control.h     **** 	static volatile int pos_shall;
  22:control.h     **** 	static volatile int v_is; // velocity in pulses/s
  23:control.h     **** 	static volatile int v_shall;
  24:control.h     **** 
  25:control.h     **** 	static float maxSpeed;
  26:control.h     **** 	static xpcc::Pid<float, 1> v_pid;
  27:control.h     **** 	static xpcc::Pid<float, 1> pos_pid;
  28:control.h     **** 	static int v_u; // speed controller output
  29:control.h     **** 	static int v_ureal;
  30:control.h     **** 	static int last_pos; //position when the last control loop was executed
  31:control.h     **** 
  32:control.h     **** 	static bool positionControlEnabled;
  33:control.h     **** 	static bool speedControlEnabled;
  34:control.h     **** 
  35:control.h     **** public:
  36:control.h     **** 
  37:control.h     **** 	static bool init();
  38:control.h     **** 	static void enablePositionControl(bool enable);
  39:control.h     **** 	static void enableSpeedControl(bool enable);
  40:control.h     **** 	static void setShallPosition(int x);
  41:control.h     **** 	/**
  42:control.h     **** 	 * Also disables the position controller
  43:control.h     **** 	 * @param speed [-1,1]
  44:control.h     **** 	 */
  45:control.h     **** 	static void setShallSpeed(double speed);
  46:control.h     **** 	static int getSpeedErrorSum();
  47:control.h     **** 	static int getPositionErrorSum();
  48:control.h     **** 	static int32_t getIsPosition();
  49:control.h     **** 	static inline int getShallSpeed(){ return v_shall; }
  50:control.h     **** 	static inline int getIsSpeed(){ return v_is; }
  51:control.h     **** 	static inline int getShallPosition(){ return pos_shall; }
  36              		.loc 2 51 0
  37 0000 0B4B     		ldr	r3, .L6
  38 0002 1A68     		ldr	r2, [r3, #0]
  39              	.LBE98:
  40              	.LBE97:
  41              	.LBE96:
  53:quadrangleZigZag.cpp **** 	return abs(nextX()-stopX) <= RECTANGLE_ZIGZAG_THRESHOLD
  42              		.loc 1 53 0
  43 0004 0B4B     		ldr	r3, .L6+4
  44 0006 1B68     		ldr	r3, [r3, #0]
  45 0008 D31A     		subs	r3, r2, r3
  46 000a 002B     		cmp	r3, #0
  47 000c B8BF     		it	lt
  48 000e 5B42     		rsblt	r3, r3, #0
  54:quadrangleZigZag.cpp **** 			&& stopY - Control<Y>::getIsPosition() <= RECTANGLE_ZIGZAG_THRESHOLD;
  49              		.loc 1 54 0
  50 0010 012B     		cmp	r3, #1
  52:quadrangleZigZag.cpp **** bool QuadrangleZigZag::isAtEnd(){
  51              		.loc 1 52 0
  52 0012 10B5     		push	{r4, lr}
  53              	.LCFI0:
  54              		.cfi_def_cfa_offset 8
  55              		.cfi_offset 4, -8
  56              		.cfi_offset 14, -4
  57              		.loc 1 54 0
  58 0014 01DD     		ble	.L5
  59 0016 0020     		movs	r0, #0
  55:quadrangleZigZag.cpp **** }
  60              		.loc 1 55 0
  61 0018 10BD     		pop	{r4, pc}
  62              	.L5:
  54:quadrangleZigZag.cpp **** 			&& stopY - Control<Y>::getIsPosition() <= RECTANGLE_ZIGZAG_THRESHOLD;
  63              		.loc 1 54 0 discriminator 1
  64 001a 074B     		ldr	r3, .L6+8
  65 001c 1C68     		ldr	r4, [r3, #0]
  66 001e 074B     		ldr	r3, .L6+12
  67 0020 9847     		blx	r3
  68              	.LVL0:
  69 0022 201A     		subs	r0, r4, r0
  70 0024 0128     		cmp	r0, #1
  71 0026 CCBF     		ite	gt
  72 0028 0020     		movgt	r0, #0
  73 002a 0120     		movle	r0, #1
  74 002c 10BD     		pop	{r4, pc}
  75              	.L7:
  76 002e 00BF     		.align	2
  77              	.L6:
  78 0030 00000000 		.word	_ZN7ControlIL4Axis0EE9pos_shallE
  79 0034 00000000 		.word	.LANCHOR0
  80 0038 00000000 		.word	.LANCHOR1
  81 003c 00000000 		.word	_ZN7ControlIL4Axis2EE13getIsPositionEv
  82              		.cfi_endproc
  83              	.LFE1034:
  85              		.section	.text._ZN16QuadrangleZigZag6sampleEv,"ax",%progbits
  86              		.align	2
  87              		.global	_ZN16QuadrangleZigZag6sampleEv
  88              		.thumb
  89              		.thumb_func
  91              	_ZN16QuadrangleZigZag6sampleEv:
  92              	.LFB1040:
  56:quadrangleZigZag.cpp **** 
  57:quadrangleZigZag.cpp **** static inline bool reachedPointX(int x){
  58:quadrangleZigZag.cpp **** 	return abs(x-nextX()) <= RECTANGLE_ZIGZAG_THRESHOLD;
  59:quadrangleZigZag.cpp **** }
  60:quadrangleZigZag.cpp **** 
  61:quadrangleZigZag.cpp **** static inline bool reachedPointY(int y){
  62:quadrangleZigZag.cpp **** 	return abs(y-nextY()) <= RECTANGLE_ZIGZAG_THRESHOLD;
  63:quadrangleZigZag.cpp **** }
  64:quadrangleZigZag.cpp **** 
  65:quadrangleZigZag.cpp **** static inline bool reachedPointX(){
  66:quadrangleZigZag.cpp **** 	return abs(Control<X>::getShallPosition() - Control<X>::getIsPosition()) <= RECTANGLE_ZIGZAG_THRES
  67:quadrangleZigZag.cpp **** }
  68:quadrangleZigZag.cpp **** 
  69:quadrangleZigZag.cpp **** static inline bool reachedPointY(){
  70:quadrangleZigZag.cpp **** 	return abs(Control<Y>::getShallPosition() - Control<Y>::getIsPosition()) <= RECTANGLE_ZIGZAG_THRES
  71:quadrangleZigZag.cpp **** }
  72:quadrangleZigZag.cpp **** 
  73:quadrangleZigZag.cpp **** static int i = 0;
  74:quadrangleZigZag.cpp **** static xpcc::Timeout<> timeout;
  75:quadrangleZigZag.cpp **** static bool timerRunning = false;
  76:quadrangleZigZag.cpp **** static int pointsCounter = 0;
  77:quadrangleZigZag.cpp **** static float maxSpeed;
  78:quadrangleZigZag.cpp **** static bool approachingStart = false;
  79:quadrangleZigZag.cpp **** 
  80:quadrangleZigZag.cpp **** #if 0
  81:quadrangleZigZag.cpp **** inline void QuadrangleZigZag::yLongSample(){
  82:quadrangleZigZag.cpp **** 	int x = Control<X>::getIsPosition();
  83:quadrangleZigZag.cpp **** 	int y = Control<Y>::getIsPosition();
  84:quadrangleZigZag.cpp **** 	int nextPosY;
  85:quadrangleZigZag.cpp **** 	int nextPosX;
  86:quadrangleZigZag.cpp **** 	if(approachingX && reachedPointX(x)){
  87:quadrangleZigZag.cpp **** 		//system should be in rest
  88:quadrangleZigZag.cpp **** 		if(Control<X>::getIsSpeed() !=0 ){
  89:quadrangleZigZag.cpp **** 			i = 0;
  90:quadrangleZigZag.cpp **** 			return;
  91:quadrangleZigZag.cpp **** 		}
  92:quadrangleZigZag.cpp **** 		i++;
  93:quadrangleZigZag.cpp **** 		if(i < 50000){
  94:quadrangleZigZag.cpp **** 			return;
  95:quadrangleZigZag.cpp **** 		}
  96:quadrangleZigZag.cpp **** 		nextPosY = yDirection == 1 ? stopY : startY;
  97:quadrangleZigZag.cpp **** 		yDirection *= -1;
  98:quadrangleZigZag.cpp **** 		Control<Y>::setShallPosition(nextPosY);
  99:quadrangleZigZag.cpp **** 		approachingX = false;
 100:quadrangleZigZag.cpp **** 	}else if(!approachingX && reachedPointY(y)){
 101:quadrangleZigZag.cpp **** 		nextPosX = nextX()+samplingResolution;
 102:quadrangleZigZag.cpp **** 		Control<X>::setShallPosition(nextPosX);
 103:quadrangleZigZag.cpp **** 		approachingX = true;
 104:quadrangleZigZag.cpp **** 	}
 105:quadrangleZigZag.cpp **** }
 106:quadrangleZigZag.cpp **** 
 107:quadrangleZigZag.cpp **** #endif
 108:quadrangleZigZag.cpp **** 
 109:quadrangleZigZag.cpp **** #define ZIGZAG 1
 110:quadrangleZigZag.cpp **** #if ZIGZAG
 111:quadrangleZigZag.cpp **** 
 112:quadrangleZigZag.cpp **** inline void QuadrangleZigZag::xLongSample(){
 113:quadrangleZigZag.cpp **** 	int x = Control<X>::getIsPosition();
 114:quadrangleZigZag.cpp **** 	int y = Control<Y>::getIsPosition();
 115:quadrangleZigZag.cpp **** 	int nextPosY;
 116:quadrangleZigZag.cpp **** 	int nextPosX;
 117:quadrangleZigZag.cpp **** 	if(approachingX && reachedPointX(x)){
 118:quadrangleZigZag.cpp **** 		nextPosY = nextY()+samplingResolution;
 119:quadrangleZigZag.cpp **** 		Control<Y>::setShallPosition(nextPosY);
 120:quadrangleZigZag.cpp **** 		approachingX = false;
 121:quadrangleZigZag.cpp **** 	}else if(!approachingX && reachedPointY(y)){
 122:quadrangleZigZag.cpp **** 		if(!timerRunning){
 123:quadrangleZigZag.cpp **** 			timeout.restart(RECTANGLE_ZIGZAG_TIMEOUT);
 124:quadrangleZigZag.cpp **** 			timerRunning = true;
 125:quadrangleZigZag.cpp **** 		}
 126:quadrangleZigZag.cpp **** 
 127:quadrangleZigZag.cpp **** 		if(timeout.isExpired()){
 128:quadrangleZigZag.cpp **** 			if(Control<Y>::getIsSpeed() !=0 ){
 129:quadrangleZigZag.cpp **** 				i = 0;
 130:quadrangleZigZag.cpp **** 				return;
 131:quadrangleZigZag.cpp **** 			}
 132:quadrangleZigZag.cpp **** 			i++;
 133:quadrangleZigZag.cpp **** 			if(i < 50000){
 134:quadrangleZigZag.cpp **** 				return;
 135:quadrangleZigZag.cpp **** 			}
 136:quadrangleZigZag.cpp **** 		}
 137:quadrangleZigZag.cpp **** 		//timeout reached or system is in rest
 138:quadrangleZigZag.cpp **** 		timerRunning = false;
 139:quadrangleZigZag.cpp **** 		timeout.stop();
 140:quadrangleZigZag.cpp **** 		nextPosX = xDirection == 1 ? stopX : startX;
 141:quadrangleZigZag.cpp **** 		xDirection *= -1;
 142:quadrangleZigZag.cpp **** 		Control<X>::setShallPosition(nextPosX);
 143:quadrangleZigZag.cpp **** 		approachingX = true;
 144:quadrangleZigZag.cpp **** 	}
 145:quadrangleZigZag.cpp **** }
 146:quadrangleZigZag.cpp **** #else
 147:quadrangleZigZag.cpp **** 
 148:quadrangleZigZag.cpp **** inline void QuadrangleZigZag::xLongSample(){
 149:quadrangleZigZag.cpp **** 	int x = Control<X>::getIsPosition();
 150:quadrangleZigZag.cpp **** 	int y = Control<Y>::getIsPosition();
 151:quadrangleZigZag.cpp **** 	int nextPosY;
 152:quadrangleZigZag.cpp **** 	int nextPosX;
 153:quadrangleZigZag.cpp **** 	if(approachingX && reachedPointX(x)){
 154:quadrangleZigZag.cpp **** 		Control<ALL>::setMaxSpeed(0.8);
 155:quadrangleZigZag.cpp **** 		Trigger::enable(false);
 156:quadrangleZigZag.cpp **** 		nextPosY = nextY()+samplingResolution;
 157:quadrangleZigZag.cpp **** 		Control<Y>::setShallPosition(nextPosY);
 158:quadrangleZigZag.cpp **** 		nextPosX = startX;
 159:quadrangleZigZag.cpp **** 		Control<X>::setShallPosition(nextPosX);
 160:quadrangleZigZag.cpp **** 		approachingX = false;
 161:quadrangleZigZag.cpp **** 	}else if(!approachingX && reachedPointY(y) && reachedPointX(x)){
 162:quadrangleZigZag.cpp **** 		//system should be in rest
 163:quadrangleZigZag.cpp **** 		if(!timerRunning){
 164:quadrangleZigZag.cpp **** 			timeout.restart(RECTANGLE_ZIGZAG_TIMEOUT);
 165:quadrangleZigZag.cpp **** 			timerRunning = true;
 166:quadrangleZigZag.cpp **** 		}
 167:quadrangleZigZag.cpp **** 
 168:quadrangleZigZag.cpp **** 		if(timeout.isExpired()){
 169:quadrangleZigZag.cpp **** 			if(Control<Y>::getIsSpeed() !=0 ){
 170:quadrangleZigZag.cpp **** 				i = 0;
 171:quadrangleZigZag.cpp **** 				return;
 172:quadrangleZigZag.cpp **** 			}
 173:quadrangleZigZag.cpp **** 			i++;
 174:quadrangleZigZag.cpp **** 			if(i < 50000){
 175:quadrangleZigZag.cpp **** 				return;
 176:quadrangleZigZag.cpp **** 			}
 177:quadrangleZigZag.cpp **** 		}
 178:quadrangleZigZag.cpp **** 		//timeout reached or system is in rest
 179:quadrangleZigZag.cpp **** 		timerRunning = false;
 180:quadrangleZigZag.cpp **** 		timeout.stop();
 181:quadrangleZigZag.cpp **** 
 182:quadrangleZigZag.cpp **** 		Control<ALL>::setMaxSpeed(maxSpeed);
 183:quadrangleZigZag.cpp **** 		Trigger::enable(true);
 184:quadrangleZigZag.cpp **** 		nextPosX = stopX;
 185:quadrangleZigZag.cpp **** 		Control<X>::setShallPosition(nextPosX);
 186:quadrangleZigZag.cpp **** 		approachingX = true;
 187:quadrangleZigZag.cpp **** 	}
 188:quadrangleZigZag.cpp **** }
 189:quadrangleZigZag.cpp **** 
 190:quadrangleZigZag.cpp **** #endif
 191:quadrangleZigZag.cpp **** 
 192:quadrangleZigZag.cpp **** 
 193:quadrangleZigZag.cpp **** 
 194:quadrangleZigZag.cpp **** #if 0
 195:quadrangleZigZag.cpp **** inline void QuadrangleZigZag::yLongSample(){
 196:quadrangleZigZag.cpp **** 	int x = Control<X>::getIsPosition();
 197:quadrangleZigZag.cpp **** 	int y = Control<Y>::getIsPosition();
 198:quadrangleZigZag.cpp **** 	int nextPosY;
 199:quadrangleZigZag.cpp **** 	int nextPosX;
 200:quadrangleZigZag.cpp **** 	if(approachingX && reachedPointX(x) && reachedPointY(y)){
 201:quadrangleZigZag.cpp **** 		//system should be in rest
 202:quadrangleZigZag.cpp **** 		if(!timerRunning){
 203:quadrangleZigZag.cpp **** 			timeout.restart(RECTANGLE_ZIGZAG_TIMEOUT);
 204:quadrangleZigZag.cpp **** 			timerRunning = true;
 205:quadrangleZigZag.cpp **** 		}
 206:quadrangleZigZag.cpp **** 
 207:quadrangleZigZag.cpp **** 		if(timeout.isExpired()){
 208:quadrangleZigZag.cpp **** 			if(Control<X>::getIsSpeed() !=0 ){
 209:quadrangleZigZag.cpp **** 				i = 0;
 210:quadrangleZigZag.cpp **** 				return;
 211:quadrangleZigZag.cpp **** 			}
 212:quadrangleZigZag.cpp **** 			i++;
 213:quadrangleZigZag.cpp **** 			if(i < 50000){
 214:quadrangleZigZag.cpp **** 				return;
 215:quadrangleZigZag.cpp **** 			}
 216:quadrangleZigZag.cpp **** 		}
 217:quadrangleZigZag.cpp **** 		//timeout reached or system is in rest
 218:quadrangleZigZag.cpp **** 		timerRunning = false;
 219:quadrangleZigZag.cpp **** 		timeout.stop();
 220:quadrangleZigZag.cpp **** 		//Control<ALL>::setMaxSpeed(maxSpeed);
 221:quadrangleZigZag.cpp **** 		Trigger::enable(true);
 222:quadrangleZigZag.cpp **** 		nextPosY = stopY;
 223:quadrangleZigZag.cpp **** 		Control<Y>::setShallPosition(nextPosY);
 224:quadrangleZigZag.cpp **** 		approachingX = false;
 225:quadrangleZigZag.cpp **** 	}else if(!approachingX && reachedPointY(y)){
 226:quadrangleZigZag.cpp **** 
 227:quadrangleZigZag.cpp **** 		//Control<ALL>::setMaxSpeed(1);
 228:quadrangleZigZag.cpp **** 		Trigger::enable(false);
 229:quadrangleZigZag.cpp **** 		nextPosX = nextX()+samplingResolution;
 230:quadrangleZigZag.cpp **** 		Control<X>::setShallPosition(nextPosX);
 231:quadrangleZigZag.cpp **** 		nextPosY = startY;
 232:quadrangleZigZag.cpp **** 		Control<Y>::setShallPosition(nextPosY);
 233:quadrangleZigZag.cpp **** 		approachingX = true;
 234:quadrangleZigZag.cpp **** 	}
 235:quadrangleZigZag.cpp **** }
 236:quadrangleZigZag.cpp **** 
 237:quadrangleZigZag.cpp **** #endif
 238:quadrangleZigZag.cpp **** 
 239:quadrangleZigZag.cpp **** void QuadrangleZigZag::sample(){
  93              		.loc 1 239 0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  97 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
  98              	.LCFI1:
  99              		.cfi_def_cfa_offset 32
 100              		.cfi_offset 3, -32
 101              		.cfi_offset 4, -28
 102              		.cfi_offset 5, -24
 103              		.cfi_offset 6, -20
 104              		.cfi_offset 7, -16
 105              		.cfi_offset 8, -12
 106              		.cfi_offset 9, -8
 107              		.cfi_offset 14, -4
 108              	.LBB158:
 109              	.LBB159:
 110              	.LBB160:
 111              	.LBB161:
 112              	.LBB162:
 113              		.loc 2 51 0
 114 0004 724C     		ldr	r4, .L57
 115              	.LBE162:
 116              	.LBE161:
 117              	.LBE160:
  53:quadrangleZigZag.cpp **** 	return abs(nextX()-stopX) <= RECTANGLE_ZIGZAG_THRESHOLD
 118              		.loc 1 53 0
 119 0006 734E     		ldr	r6, .L57+4
 120              	.LBB165:
 121              	.LBB164:
 122              	.LBB163:
 123              		.loc 2 51 0
 124 0008 2268     		ldr	r2, [r4, #0]
 125              	.LBE163:
 126              	.LBE164:
 127              	.LBE165:
  53:quadrangleZigZag.cpp **** 	return abs(nextX()-stopX) <= RECTANGLE_ZIGZAG_THRESHOLD
 128              		.loc 1 53 0
 129 000a 3368     		ldr	r3, [r6, #0]
 130 000c D31A     		subs	r3, r2, r3
 131 000e 002B     		cmp	r3, #0
 132 0010 B8BF     		it	lt
 133 0012 5B42     		rsblt	r3, r3, #0
  54:quadrangleZigZag.cpp **** 			&& stopY - Control<Y>::getIsPosition() <= RECTANGLE_ZIGZAG_THRESHOLD;
 134              		.loc 1 54 0
 135 0014 012B     		cmp	r3, #1
 136 0016 74DD     		ble	.L48
 137              	.L16:
 138              	.LBE159:
 139              	.LBE158:
 240:quadrangleZigZag.cpp **** 	if(isAtEnd() && Pattern::isRunning()){
 241:quadrangleZigZag.cpp **** 		Pattern::done();
 242:quadrangleZigZag.cpp **** 	}
 243:quadrangleZigZag.cpp **** 	if(approachingStart){
 140              		.loc 1 243 0
 141 0018 6F4F     		ldr	r7, .L57+8
 142 001a 3B78     		ldrb	r3, [r7, #0]	@ zero_extendqisi2
 143 001c 93B9     		cbnz	r3, .L44
 144 001e DFF81882 		ldr	r8, .L57+104
 145 0022 6E4D     		ldr	r5, .L57+12
 146              	.L18:
 147              	.LBB167:
 148              	.LBB168:
 113:quadrangleZigZag.cpp **** 	int x = Control<X>::getIsPosition();
 149              		.loc 1 113 0
 150 0024 A847     		blx	r5
 151              	.LVL1:
 117:quadrangleZigZag.cpp **** 	if(approachingX && reachedPointX(x)){
 152              		.loc 1 117 0
 153 0026 6E4F     		ldr	r7, .L57+16
 113:quadrangleZigZag.cpp **** 	int x = Control<X>::getIsPosition();
 154              		.loc 1 113 0
 155 0028 0546     		mov	r5, r0
 156              	.LVL2:
 114:quadrangleZigZag.cpp **** 	int y = Control<Y>::getIsPosition();
 157              		.loc 1 114 0
 158 002a C047     		blx	r8
 159              	.LVL3:
 117:quadrangleZigZag.cpp **** 	if(approachingX && reachedPointX(x)){
 160              		.loc 1 117 0
 161 002c 3B78     		ldrb	r3, [r7, #0]	@ zero_extendqisi2
 162 002e E3B1     		cbz	r3, .L21
 163              	.LVL4:
 164              	.LBB169:
 165              	.LBB170:
 166              	.LBB171:
 167              	.LBB172:
 168              	.LBB173:
 169              		.loc 2 51 0
 170 0030 2368     		ldr	r3, [r4, #0]
 171              	.LBE173:
 172              	.LBE172:
 173              	.LBE171:
  58:quadrangleZigZag.cpp **** 	return abs(x-nextX()) <= RECTANGLE_ZIGZAG_THRESHOLD;
 174              		.loc 1 58 0
 175 0032 ED1A     		subs	r5, r5, r3
 176              	.LVL5:
 177 0034 002D     		cmp	r5, #0
 178 0036 B8BF     		it	lt
 179 0038 6D42     		rsblt	r5, r5, #0
 180              	.LBE170:
 181              	.LBE169:
 117:quadrangleZigZag.cpp **** 	if(approachingX && reachedPointX(x)){
 182              		.loc 1 117 0
 183 003a 012D     		cmp	r5, #1
 184 003c 40F3A180 		ble	.L49
 185              	.LVL6:
 186              	.L8:
 187 0040 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 188              	.L44:
 189              	.LBE168:
 190              	.LBE167:
 191              	.LBB211:
 192              	.LBB212:
  66:quadrangleZigZag.cpp **** 	return abs(Control<X>::getShallPosition() - Control<X>::getIsPosition()) <= RECTANGLE_ZIGZAG_THRES
 193              		.loc 1 66 0
 194 0044 654D     		ldr	r5, .L57+12
 195              	.LBB213:
 196              	.LBB214:
 197              		.loc 2 51 0
 198 0046 D4F80080 		ldr	r8, [r4, #0]
 199              	.LBE214:
 200              	.LBE213:
  66:quadrangleZigZag.cpp **** 	return abs(Control<X>::getShallPosition() - Control<X>::getIsPosition()) <= RECTANGLE_ZIGZAG_THRES
 201              		.loc 1 66 0
 202 004a A847     		blx	r5
 203              	.LVL7:
 204 004c C0EB0800 		rsb	r0, r0, r8
 205 0050 80EAE078 		eor	r8, r0, r0, asr #31
 206 0054 A8EBE078 		sub	r8, r8, r0, asr #31
 207              	.LBE212:
 208              	.LBE211:
 244:quadrangleZigZag.cpp **** 		if(reachedPointX() && reachedPointY()){
 209              		.loc 1 244 0
 210 0058 B8F1010F 		cmp	r8, #1
 211 005c 3BDD     		ble	.L50
 212              	.L19:
 245:quadrangleZigZag.cpp **** 			Control<ALL>::setMaxSpeed(maxSpeed);
 246:quadrangleZigZag.cpp **** 			approachingStart  = false;
 247:quadrangleZigZag.cpp **** 		}else{
 248:quadrangleZigZag.cpp **** 			Control<ALL>::setMaxSpeed(1);
 213              		.loc 1 248 0
 214 005e 4FF07E50 		mov	r0, #1065353216
 215 0062 604B     		ldr	r3, .L57+20
 216 0064 9847     		blx	r3
 217              	.LVL8:
 249:quadrangleZigZag.cpp **** 			return;
 218              		.loc 1 249 0
 219 0066 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 220              	.LVL9:
 221              	.L21:
 222              	.LBB215:
 223              	.LBB209:
 224              	.LBB174:
 225              	.LBB175:
 226              	.LBB176:
 227              	.LBB177:
 228              	.LBB178:
 229              		.loc 2 51 0
 230 006a 5F4B     		ldr	r3, .L57+24
 231 006c 1B68     		ldr	r3, [r3, #0]
 232              	.LBE178:
 233              	.LBE177:
 234              	.LBE176:
  62:quadrangleZigZag.cpp **** 	return abs(y-nextY()) <= RECTANGLE_ZIGZAG_THRESHOLD;
 235              		.loc 1 62 0
 236 006e C01A     		subs	r0, r0, r3
 237              	.LVL10:
 238 0070 0028     		cmp	r0, #0
 239 0072 B8BF     		it	lt
 240 0074 4042     		rsblt	r0, r0, #0
 241              	.LBE175:
 242              	.LBE174:
 121:quadrangleZigZag.cpp **** 	}else if(!approachingX && reachedPointY(y)){
 243              		.loc 1 121 0
 244 0076 0128     		cmp	r0, #1
 245 0078 E2DC     		bgt	.L8
 122:quadrangleZigZag.cpp **** 		if(!timerRunning){
 246              		.loc 1 122 0
 247 007a DFF8C081 		ldr	r8, .L57+108
 248 007e 98F80030 		ldrb	r3, [r8, #0]	@ zero_extendqisi2
 249 0082 002B     		cmp	r3, #0
 250 0084 69D0     		beq	.L35
 251              	.LVL11:
 252              	.LBB179:
 253              	.LBB180:
 254              		.file 3 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp"
   1:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** // coding: utf-8
   2:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** // ----------------------------------------------------------------------------
   3:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** /* Copyright (c) 2009, Roboterclub Aachen e.V.
   4:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp ****  * All rights reserved.
   5:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp ****  *
   6:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp ****  * Redistribution and use in source and binary forms, with or without
   7:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp ****  * modification, are permitted provided that the following conditions are met:
   8:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp ****  *
   9:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp ****  *     * Redistributions of source code must retain the above copyright
  10:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp ****  *       notice, this list of conditions and the following disclaimer.
  11:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp ****  *     * Redistributions in binary form must reproduce the above copyright
  12:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp ****  *       notice, this list of conditions and the following disclaimer in the
  13:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp ****  *       documentation and/or other materials provided with the distribution.
  14:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp ****  *     * Neither the name of the Roboterclub Aachen e.V. nor the
  15:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp ****  *       names of its contributors may be used to endorse or promote products
  16:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp ****  *       derived from this software without specific prior written permission.
  17:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp ****  *
  18:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp ****  * THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
  19:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp ****  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  20:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  21:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp ****  * DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
  22:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  23:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  24:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  25:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  26:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  27:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  28:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp ****  */
  29:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** // ----------------------------------------------------------------------------
  30:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 
  31:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** #ifndef	XPCC__TIMEOUT_HPP
  32:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 	#error	"Don't include this file directly, use 'timeout.hpp' instead!"
  33:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** #endif
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** template<typename T>
  36:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** xpcc::Timeout<T>::Timeout() :
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 	endTime(0), state(EXPIRED)
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** {
  39:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** }
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** template<typename T>
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** xpcc::Timeout<T>::Timeout(const Timestamp time) :
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 	endTime(T::now() + time), state(ACTIVE)
  44:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** {
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** }
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 
  47:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** template<typename T>
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** bool
  49:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** xpcc::Timeout<T>::isExpired()
  50:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** {
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 	if (state == ACTIVE)
 255              		.loc 3 51 0
 256 0086 594D     		ldr	r5, .L57+28
 257              	.LVL12:
 258 0088 2B79     		ldrb	r3, [r5, #4]	@ zero_extendqisi2
 259 008a 012B     		cmp	r3, #1
 260 008c 00F09C80 		beq	.L51
 261              	.L29:
 262              	.LBE180:
 263              	.LBE179:
 264              	.LBB184:
 265              	.LBB185:
  50:control.h     **** 	static inline int getIsSpeed(){ return v_is; }
 266              		.loc 2 50 0
 267 0090 574B     		ldr	r3, .L57+32
 268 0092 1B68     		ldr	r3, [r3, #0]
 269              	.LBE185:
 270              	.LBE184:
 128:quadrangleZigZag.cpp **** 			if(Control<Y>::getIsSpeed() !=0 ){
 271              		.loc 1 128 0
 272 0094 002B     		cmp	r3, #0
 273 0096 40F08280 		bne	.L52
 132:quadrangleZigZag.cpp **** 			i++;
 274              		.loc 1 132 0
 275 009a 564A     		ldr	r2, .L57+36
 276 009c 1368     		ldr	r3, [r2, #0]
 277 009e 0133     		adds	r3, r3, #1
 278 00a0 1360     		str	r3, [r2, #0]
 133:quadrangleZigZag.cpp **** 			if(i < 50000){
 279              		.loc 1 133 0
 280 00a2 4CF24F32 		movw	r2, #49999
 281 00a6 9342     		cmp	r3, r2
 282 00a8 40F38C80 		ble	.L53
 283              	.L30:
 140:quadrangleZigZag.cpp **** 		nextPosX = xDirection == 1 ? stopX : startX;
 284              		.loc 1 140 0
 285 00ac 524A     		ldr	r2, .L57+40
 286 00ae 1368     		ldr	r3, [r2, #0]
 138:quadrangleZigZag.cpp **** 		timerRunning = false;
 287              		.loc 1 138 0
 288 00b0 0021     		movs	r1, #0
 140:quadrangleZigZag.cpp **** 		nextPosX = xDirection == 1 ? stopX : startX;
 289              		.loc 1 140 0
 290 00b2 012B     		cmp	r3, #1
 138:quadrangleZigZag.cpp **** 		timerRunning = false;
 291              		.loc 1 138 0
 292 00b4 88F80010 		strb	r1, [r8, #0]
 293              	.LBB186:
 294              	.LBB187:
  52:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 	{
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 		if (T::now() >= endTime)
  54:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 		{
  55:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 			state = EXPIRED;
  56:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 		}
  57:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 		else {
  58:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 			return false;
  59:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 		}
  60:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 	}
  61:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 	
  62:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 	return true;
  63:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** }
  64:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** template<typename T>
  66:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** bool
  67:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** xpcc::Timeout<T>::isActive() const
  68:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** {
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 	return (this->state != STOPPED);
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** }
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 
  72:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** template<typename T>
  73:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** void
  74:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** xpcc::Timeout<T>::stop()
  75:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** {
  76:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 	this->state = STOPPED;
 295              		.loc 3 76 0
 296 00b8 2971     		strb	r1, [r5, #4]
 297              	.LBE187:
 298              	.LBE186:
 140:quadrangleZigZag.cpp **** 		nextPosX = xDirection == 1 ? stopX : startX;
 299              		.loc 1 140 0
 300 00ba 75D0     		beq	.L54
 301 00bc 4F49     		ldr	r1, .L57+44
 302 00be 0D68     		ldr	r5, [r1, #0]
 303              	.L31:
 304              	.LVL13:
 141:quadrangleZigZag.cpp **** 		xDirection *= -1;
 305              		.loc 1 141 0
 306 00c0 5B42     		negs	r3, r3
 307 00c2 1360     		str	r3, [r2, #0]
 308              	.LVL14:
 309              	.LBB188:
 310              	.LBB189:
 311              		.file 4 "control_impl.h"
   1:control_impl.h **** /*
   2:control_impl.h ****  * control.cpp
   3:control_impl.h ****  *
   4:control_impl.h ****  *  Created on: Nov 25, 2013
   5:control_impl.h ****  *      Author: jonas
   6:control_impl.h ****  */
   7:control_impl.h **** 
   8:control_impl.h **** 
   9:control_impl.h **** #include "project.h"
  10:control_impl.h **** #include "control.h"
  11:control_impl.h **** #include "motor.h"
  12:control_impl.h **** #include "hallSensor.h"
  13:control_impl.h **** #include "securityController.h"
  14:control_impl.h **** 
  15:control_impl.h **** template<Axis axis>
  16:control_impl.h **** class Motor;
  17:control_impl.h **** 
  18:control_impl.h **** 
  19:control_impl.h **** template<Axis axis>
  20:control_impl.h **** bool Control<axis>::init(){
  21:control_impl.h **** 	Control<axis>::v_is = 0;
  22:control_impl.h **** 	Control<axis>::v_shall = 0;
  23:control_impl.h **** 	Control<axis>::last_pos = 0;
  24:control_impl.h **** 	Control<axis>::positionControlEnabled = true;
  25:control_impl.h **** 	Control<axis>::speedControlEnabled = true;
  26:control_impl.h **** 	//param order: P, I, D, maxErrorSum, maxOutput
  27:control_impl.h **** 	Control<axis>::pos_pid = xpcc::Pid<float, 1>(CONTROLX_KP, CONTROLX_KI, CONTROLX_KD,
  28:control_impl.h **** 			CONTROLX_MAX_ERRORSUM, CONTROLX_MAX_OUTPUT);
  29:control_impl.h **** 	Control<axis>::v_pid = xpcc::Pid<float, 1>(CONTROLV_KP, CONTROLV_KI, CONTROLV_KD,
  30:control_impl.h **** 			CONTROLV_MAX_ERRORSUM, CONTROLV_MAX_OUTPUT);
  31:control_impl.h **** 	return true;
  32:control_impl.h **** }
  33:control_impl.h **** 
  34:control_impl.h **** 
  35:control_impl.h **** template<Axis axis>
  36:control_impl.h **** void Control<axis>::update(bool externalLimitation){
  37:control_impl.h **** 	int enc = getIsPosition();
  38:control_impl.h **** 
  39:control_impl.h **** 	if(positionControlEnabled){
  40:control_impl.h **** 		pos_pid.update(pos_shall - enc, externalLimitation);
  41:control_impl.h **** 		v_shall = pos_pid.getValue();
  42:control_impl.h **** 		/*if(abs(pos_shall - enc) <= CONTROLX_DEADBAND){
  43:control_impl.h **** 			v_shall = 0;
  44:control_impl.h **** 		}*/
  45:control_impl.h **** 	}
  46:control_impl.h **** 
  47:control_impl.h **** 	v_is = (enc - last_pos)*CONTROL_FREQUENCY;
  48:control_impl.h **** 	last_pos = enc;
  49:control_impl.h **** 
  50:control_impl.h **** 	if(speedControlEnabled){
  51:control_impl.h **** 		v_pid.update(v_shall - v_is);
  52:control_impl.h **** 		v_u = v_pid.getValue();
  53:control_impl.h **** 		v_ureal = v_u;
  54:control_impl.h **** 		SecurityController<axis>::saturate(v_ureal);
  55:control_impl.h **** 		if((abs(pos_shall - enc) <= CONTROLX_DEADBAND && positionControlEnabled)
  56:control_impl.h **** 				|| (!positionControlEnabled && abs(v_shall - v_is) < 1000)){
  57:control_impl.h **** 			v_ureal = 0;
  58:control_impl.h **** 			v_pid.reset();
  59:control_impl.h **** 			pos_pid.reset();
  60:control_impl.h **** 		}
  61:control_impl.h **** 		Motor<axis>::setSpeed(v_ureal);
  62:control_impl.h **** 	}
  63:control_impl.h **** }
  64:control_impl.h **** 
  65:control_impl.h **** template<Axis axis>
  66:control_impl.h **** void Control<axis>::setShallPosition(int position){
  67:control_impl.h **** 	Control<ALL>::resetPosPid();
 312              		.loc 4 67 0
 313 00c4 4E4B     		ldr	r3, .L57+48
 314 00c6 9847     		blx	r3
 315              	.LVL15:
  68:control_impl.h **** 	Control<ALL>::resetVPid();
 316              		.loc 4 68 0
 317 00c8 4E4B     		ldr	r3, .L57+52
 318 00ca 9847     		blx	r3
 319              	.LVL16:
 320              	.LBE189:
 321              	.LBE188:
 143:quadrangleZigZag.cpp **** 		approachingX = true;
 322              		.loc 1 143 0
 323 00cc 0123     		movs	r3, #1
 324              	.LBB191:
 325              	.LBB190:
  69:control_impl.h **** 	pos_shall = position;
 326              		.loc 4 69 0
 327 00ce 2560     		str	r5, [r4, #0]
 328              	.LBE190:
 329              	.LBE191:
 143:quadrangleZigZag.cpp **** 		approachingX = true;
 330              		.loc 1 143 0
 331 00d0 3B70     		strb	r3, [r7, #0]
 332 00d2 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 333              	.LVL17:
 334              	.L50:
 335              	.LBE209:
 336              	.LBE215:
 337              	.LBB216:
 338              	.LBB217:
 339              	.LBB218:
 340              	.LBB219:
 341              		.loc 2 51 0
 342 00d6 444B     		ldr	r3, .L57+24
 343              	.LBE219:
 344              	.LBE218:
  70:quadrangleZigZag.cpp **** 	return abs(Control<Y>::getShallPosition() - Control<Y>::getIsPosition()) <= RECTANGLE_ZIGZAG_THRES
 345              		.loc 1 70 0
 346 00d8 DFF85C81 		ldr	r8, .L57+104
 347              	.LBB221:
 348              	.LBB220:
 349              		.loc 2 51 0
 350 00dc D3F80090 		ldr	r9, [r3, #0]
 351              	.LBE220:
 352              	.LBE221:
  70:quadrangleZigZag.cpp **** 	return abs(Control<Y>::getShallPosition() - Control<Y>::getIsPosition()) <= RECTANGLE_ZIGZAG_THRES
 353              		.loc 1 70 0
 354 00e0 C047     		blx	r8
 355              	.LVL18:
 356 00e2 C0EB0900 		rsb	r0, r0, r9
 357 00e6 80EAE079 		eor	r9, r0, r0, asr #31
 358 00ea A9EBE079 		sub	r9, r9, r0, asr #31
 359              	.LBE217:
 360              	.LBE216:
 244:quadrangleZigZag.cpp **** 		if(reachedPointX() && reachedPointY()){
 361              		.loc 1 244 0
 362 00ee B9F1010F 		cmp	r9, #1
 363 00f2 B4DC     		bgt	.L19
 245:quadrangleZigZag.cpp **** 			Control<ALL>::setMaxSpeed(maxSpeed);
 364              		.loc 1 245 0
 365 00f4 444B     		ldr	r3, .L57+56
 366 00f6 1868     		ldr	r0, [r3, #0]	@ float
 367 00f8 3A4B     		ldr	r3, .L57+20
 368 00fa 9847     		blx	r3
 369              	.LVL19:
 246:quadrangleZigZag.cpp **** 			approachingStart  = false;
 370              		.loc 1 246 0
 371 00fc 0023     		movs	r3, #0
 372 00fe 3B70     		strb	r3, [r7, #0]
 373 0100 90E7     		b	.L18
 374              	.L48:
 375              	.LBB222:
 376              	.LBB166:
  54:quadrangleZigZag.cpp **** 			&& stopY - Control<Y>::getIsPosition() <= RECTANGLE_ZIGZAG_THRESHOLD;
 377              		.loc 1 54 0
 378 0102 424B     		ldr	r3, .L57+60
 379 0104 DFF83081 		ldr	r8, .L57+104
 380 0108 1D68     		ldr	r5, [r3, #0]
 381 010a C047     		blx	r8
 382              	.LVL20:
 383 010c 281A     		subs	r0, r5, r0
 384 010e 0128     		cmp	r0, #1
 385 0110 82DC     		bgt	.L16
 386              	.LBE166:
 387              	.LBE222:
 388              	.LBB223:
 389              	.LBB224:
 390              		.file 5 "pattern.h"
   1:pattern.h     **** /*
   2:pattern.h     ****  * pattern.h
   3:pattern.h     ****  *
   4:pattern.h     ****  *  Created on: Jan 18, 2014
   5:pattern.h     ****  *      Author: jonas
   6:pattern.h     ****  */
   7:pattern.h     **** 
   8:pattern.h     **** #ifndef PATTERN_H_
   9:pattern.h     **** #define PATTERN_H_
  10:pattern.h     **** 
  11:pattern.h     **** #include "control.h"
  12:pattern.h     **** #include "project.h"
  13:pattern.h     **** #include "state.h"
  14:pattern.h     **** #include "pcInterface.h"
  15:pattern.h     **** 
  16:pattern.h     **** class QuadrangleZigZag;
  17:pattern.h     **** 
  18:pattern.h     **** class Pattern{
  19:pattern.h     **** 	static void (*func)(void);
  20:pattern.h     **** 	static bool running;
  21:pattern.h     **** 	static bool paused;
  22:pattern.h     **** public:
  23:pattern.h     **** 	template<class T>
  24:pattern.h     **** 	static void setPattern(T pattern, float maxSpeed = 1){
  25:pattern.h     **** 		(void)pattern;
  26:pattern.h     **** 		//Control<ALL>::setMaxSpeed(maxSpeed);
  27:pattern.h     **** 		func = &T::sample;
  28:pattern.h     **** 	}
  29:pattern.h     **** 	static void follow(){
  30:pattern.h     **** 		if(!running || func == 0){
  31:pattern.h     **** 			return;
  32:pattern.h     **** 		}
  33:pattern.h     **** 		func();
  34:pattern.h     **** 	}
  35:pattern.h     **** 	static void pause(){
  36:pattern.h     **** 		running = false;
  37:pattern.h     **** 		paused = true;
  38:pattern.h     **** 	}
  39:pattern.h     **** 	static void start(){
  40:pattern.h     **** 		running = true;
  41:pattern.h     **** 		paused = false;
  42:pattern.h     **** 		State::set(State::SCANNING_RECTANGLE);
  43:pattern.h     **** 		dout << "Pattern start" << endl;
  44:pattern.h     **** 		commandOut << PC::ucCommand::FLUSH_DATA << endl;
  45:pattern.h     **** 	}
  46:pattern.h     **** 	static void resume(){
  47:pattern.h     **** 		running = true;
  48:pattern.h     **** 		/*if(!paused){
  49:pattern.h     **** 			start();
  50:pattern.h     **** 		}*/
  51:pattern.h     **** 		paused = false;
  52:pattern.h     **** 	}
  53:pattern.h     **** 	static void done(){
  54:pattern.h     **** 		running = 0;
  55:pattern.h     **** 		State::set(State::READY);
  56:pattern.h     **** 		dout << "Pattern done" << endl;
  57:pattern.h     **** 	}
  58:pattern.h     **** 	static int isRunning(){
  59:pattern.h     **** 		return running && !paused;
 391              		.loc 5 59 0
 392 0112 3F4A     		ldr	r2, .L57+64
 393 0114 1378     		ldrb	r3, [r2, #0]	@ zero_extendqisi2
 394 0116 002B     		cmp	r3, #0
 395 0118 3FF47EAF 		beq	.L16
 396 011c 3D4B     		ldr	r3, .L57+68
 397 011e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 398 0120 002B     		cmp	r3, #0
 399 0122 7FF479AF 		bne	.L16
 400              	.LBE224:
 401              	.LBE223:
 402              	.LBB225:
 403              	.LBB226:
 404              	.LBB227:
 405              	.LBB228:
 406              		.file 6 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp"
   1:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** // coding: utf-8
   2:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** // ----------------------------------------------------------------------------
   3:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** /* Copyright (c) 2009, Roboterclub Aachen e.V.
   4:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * All rights reserved.
   5:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *
   6:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * Redistribution and use in source and binary forms, with or without
   7:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * modification, are permitted provided that the following conditions are met:
   8:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * 
   9:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *     * Redistributions of source code must retain the above copyright
  10:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *       notice, this list of conditions and the following disclaimer.
  11:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *     * Redistributions in binary form must reproduce the above copyright
  12:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *       notice, this list of conditions and the following disclaimer in the
  13:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *       documentation and/or other materials provided with the distribution.
  14:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *     * Neither the name of the Roboterclub Aachen e.V. nor the
  15:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *       names of its contributors may be used to endorse or promote products
  16:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *       derived from this software without specific prior written permission.
  17:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *
  18:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
  19:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  20:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  21:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
  22:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  23:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  24:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  25:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  26:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  27:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  28:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  */
  29:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** // ----------------------------------------------------------------------------
  30:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
  31:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #ifndef XPCC__IOSTREAM_HPP
  32:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #define XPCC__IOSTREAM_HPP
  33:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #include <xpcc/architecture/utils.hpp>
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
  36:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #include "iodevice.hpp"
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #include "iodevice_wrapper.hpp"
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
  39:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** namespace xpcc
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** {
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	/**
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	 * \brief 	This Formats all primary types into a string stream for
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	 * 			output or it reads values from a input and converts them to
  44:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	 * 			a given type;
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	 *
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	 * \ingroup io
  47:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	 * \author	Martin Rosekeit <martin.rosekeit@rwth-aachen.de>
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	 */
  49:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	class IOStream
  50:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	{
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	public :
  52:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		/**
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		 * \brief	Constructor
  54:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		 * 
  55:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		 * \param	device	device to write the stream to
  56:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		 * 
  57:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		 * \code
  58:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		 *	MyIODevice device;
  59:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		 *	IOStream stream( device );
  60:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		 * \endcode
  61:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		 */
  62:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		IOStream(IODevice& device);
  63:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
  64:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		inline IOStream&
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		write(char c)
  66:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
  67:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->device->write(c);
  68:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		inline IOStream&
  72:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		flush()
  73:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
  74:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->device->flush();
  75:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->mode = Mode::Ascii;
  76:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
  77:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
  78:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		/// set the output mode to Mode::Binary style for \c char and \c char*
  80:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
  81:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		bin()
  82:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
  83:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->mode = Mode::Binary;
  84:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
  85:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
  86:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
  87:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		/// set the output mode to Mode::Hexadecimal style for \c char and \c char*
  88:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
  89:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		hex()
  90:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
  91:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->mode = Mode::Hexadecimal;
  92:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
  93:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
  94:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
  95:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		/// set the output mode to Mode::Ascii style for \c char and \c char*
  96:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
  97:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ascii()
  98:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
  99:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->mode = Mode::Ascii;
 100:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 101:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 102:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 103:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 104:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		IOStream&
 105:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const unsigned char& v)
 106:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 107:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 108:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeInteger(static_cast<uint16_t>(v));
 109:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 110:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 111:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 112:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 113:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else {
 114:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 115:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 116:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 117:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 118:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
 119:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		IOStream&
 120:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const char& v)
 121:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 124:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 127:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 128:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else {
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 130:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 131:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 132:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 133:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 134:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 135:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const uint16_t& v)
 136:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 137:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 138:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeInteger(v);
 139:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 140:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 141:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v >> 8));
 142:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v & 0xff));
 143:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 144:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else {
 145:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v >> 8));
 146:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v & 0xff));
 147:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 148:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 149:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 150:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
 151:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 152:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const int16_t& v)
 153:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 154:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 155:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeInteger(v);
 156:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 157:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 158:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v >> 8));
 159:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v & 0xff));
 160:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 161:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else {
 162:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v >> 8));
 163:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v & 0xff));
 164:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 165:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 166:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 167:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
 168:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 169:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const uint32_t& v)
 170:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 171:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 172:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeInteger(v);
 173:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 174:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 175:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v >> 24));
 176:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v >> 16));
 177:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v >> 8));
 178:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v & 0xff));
 179:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 180:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else {
 181:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v >> 24));
 182:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v >> 16));
 183:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v >> 8));
 184:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v & 0xff));
 185:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 186:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 187:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 188:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
 189:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 190:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const int32_t& v)
 191:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 192:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 193:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeInteger(v);
 194:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 195:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 196:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v >> 24));
 197:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v >> 16));
 198:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v >> 8));
 199:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v & 0xff));
 200:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 201:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else {
 202:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v >> 24));
 203:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v >> 16));
 204:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v >> 8));
 205:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v & 0xff));
 206:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 207:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 208:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 209:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 210:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #if defined(XPCC__OS_OSX)
 211:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		// For APPLE 'int64_t' is of type 'int'. Therefore there is no
 212:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		// function here for the default type 'long int'. As 'long int' has the same
 213:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		// width as 'int64_t' we just use a typedef here.
 214:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 215:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const long int& v)
 216:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 217:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int64_t>(v));
 218:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 219:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 220:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 221:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 222:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const long unsigned int& v)
 223:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 224:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<uint64_t>(v));
 225:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 226:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 227:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #endif
 228:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 229:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #if defined(XPCC__CPU_ARM) || defined(XPCC__CPU_AVR32)
 230:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		// For ARM 'int32_t' is of type 'long'. Therefore there is no
 231:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		// function here for the default type 'int'. As 'int' has the same
 232:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		// width as 'int32_t' we just use a typedef here.
 233:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 234:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const int& v)
 235:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 237:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 238:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 239:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 240:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 241:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const unsigned int& v)
 242:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 243:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<uint32_t>(v));
 244:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 245:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 246:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #endif
 247:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 248:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** // The 64-bit types on the AVR are extremely slow and are
 249:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** // therefore excluded here
 250:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #if !defined(XPCC__CPU_AVR)
 251:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 252:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const uint64_t& v)
 253:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 254:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(v);
 255:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 256:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 257:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 258:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 259:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const int64_t& v)
 260:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 261:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(v);
 262:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 263:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 264:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #endif
 265:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 266:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 267:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const float& v)
 268:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 269:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeFloat(v);
 270:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 271:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 272:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
 273:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 274:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const double& v)
 275:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 276:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #if defined(XPCC__CPU_AVR)
 277:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeFloat(static_cast<float>(v));
 278:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #else
 279:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeDouble(v);
 280:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #endif
 281:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 282:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 283:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
 284:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		IOStream&
 285:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const char* s)
 286:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 407              		.loc 6 287 0
 408 0126 3C4D     		ldr	r5, .L57+72
 409              	.LBE228:
 410              	.LBE227:
  54:pattern.h     **** 		running = 0;
 411              		.loc 5 54 0
 412 0128 1370     		strb	r3, [r2, #0]
  55:pattern.h     **** 		State::set(State::READY);
 413              		.loc 5 55 0
 414 012a 0120     		movs	r0, #1
 415 012c 3B4B     		ldr	r3, .L57+76
 416 012e 9847     		blx	r3
 417              	.LVL21:
 418              	.LBB233:
 419              	.LBB231:
 420              		.loc 6 287 0
 421 0130 6B68     		ldr	r3, [r5, #4]
 422 0132 002B     		cmp	r3, #0
 423 0134 3AD0     		beq	.L55
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 289:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 424              		.loc 6 290 0
 425 0136 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 426              		.loc 6 291 0
 427 0138 2846     		mov	r0, r5
 428 013a 3949     		ldr	r1, .L57+80
 429 013c 0CBF     		ite	eq
 430 013e 394B     		ldreq	r3, .L57+84
 292:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 293:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else {
 294:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(s);
 431              		.loc 6 294 0
 432 0140 394B     		ldrne	r3, .L57+88
 433 0142 9847     		blx	r3
 434              	.LVL22:
 435              	.L13:
 436              	.LBE231:
 437              	.LBE233:
 438              	.LBB234:
 439              	.LBB235:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 440              		.loc 6 122 0
 441 0144 6B68     		ldr	r3, [r5, #4]
 442 0146 3448     		ldr	r0, .L57+72
 443 0148 002B     		cmp	r3, #0
 444 014a 35D0     		beq	.L56
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 445              		.loc 6 126 0
 446 014c 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 447              		.loc 6 125 0
 448 014e 022B     		cmp	r3, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 449              		.loc 6 126 0
 450 0150 0CBF     		ite	eq
 451 0152 364B     		ldreq	r3, .L57+92
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 452              		.loc 6 129 0
 453 0154 364B     		ldrne	r3, .L57+96
 454 0156 9847     		blx	r3
 455              	.LVL23:
 456 0158 5EE7     		b	.L16
 457              	.LVL24:
 458              	.L35:
 459              	.LBE235:
 460              	.LBE234:
 461              	.LBE226:
 462              	.LBE225:
 463              	.LBB242:
 464              	.LBB210:
 465              	.LBB192:
 466              	.LBB193:
  77:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** }
  78:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 
  80:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** template<typename T>
  81:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** void
  82:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** xpcc::Timeout<T>::restart(Timestamp time)
  83:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** {
  84:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 	endTime = T::now() + time;
 467              		.loc 3 84 0
 468 015a DFF8E490 		ldr	r9, .L57+112
 469              	.LBE193:
 470 015e 234D     		ldr	r5, .L57+28
 471              	.LVL25:
 472              	.LBB196:
 473 0160 C847     		blx	r9
 474              	.LVL26:
  85:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 	state = ACTIVE;
 475              		.loc 3 85 0
 476 0162 0123     		movs	r3, #1
 477              	.LBB194:
 478              	.LBB195:
 479              		.file 7 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp"
   1:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** // coding: utf-8
   2:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** // ----------------------------------------------------------------------------
   3:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** /* Copyright (c) 2009, Roboterclub Aachen e.V.
   4:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  * All rights reserved.
   5:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  *
   6:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  * Redistribution and use in source and binary forms, with or without
   7:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  * modification, are permitted provided that the following conditions are met:
   8:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  * 
   9:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  *     * Redistributions of source code must retain the above copyright
  10:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  *       notice, this list of conditions and the following disclaimer.
  11:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  *     * Redistributions in binary form must reproduce the above copyright
  12:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  *       notice, this list of conditions and the following disclaimer in the
  13:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  *       documentation and/or other materials provided with the distribution.
  14:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  *     * Neither the name of the Roboterclub Aachen e.V. nor the
  15:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  *       names of its contributors may be used to endorse or promote products
  16:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  *       derived from this software without specific prior written permission.
  17:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  *
  18:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  * THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
  19:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  20:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  21:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  * DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
  22:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  23:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  24:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  25:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  26:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  27:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  28:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  */
  29:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** // ----------------------------------------------------------------------------
  30:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 
  31:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** #ifndef	XPCC__TIMESTAMP_HPP
  32:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** #define	XPCC__TIMESTAMP_HPP
  33:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** #include <stdint.h>
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 
  36:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** #include <xpcc/io/iostream.hpp>
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** #include <xpcc/utils/arithmetic_traits.hpp>
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 
  39:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** namespace xpcc
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** {
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 	/**
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 	 * \brief	Simple 16-bit timestamp
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 	 * 
  44:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 	 * The timestamp is calculated in milliseconds.
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 	 *
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 	 * \author	Fabian Greif
  47:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 	 * \ingroup	workflow
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 	 */ 
  49:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 	class Timestamp
  50:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 	{
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 	public:
  52:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		typedef uint_fast16_t Type;
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		
  54:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 	public:
  55:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		///\param time in ms
  56:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		Timestamp(const uint_fast16_t time = 0) : 
  57:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 			time(time)
  58:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		{
  59:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		}
  60:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		
  61:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		inline uint_fast16_t
  62:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		getTime() const
  63:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		{
  64:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 			return this->time;
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		}
  66:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 
  67:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		inline Timestamp
  68:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		operator + (const Timestamp& other) const
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		{
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 			return Timestamp(time + other.time);
 480              		.loc 7 70 0
 481 0164 00F5FA70 		add	r0, r0, #500
 482              	.LVL27:
 483              	.LBE195:
 484              	.LBE194:
 485              	.LBE196:
  84:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 	endTime = T::now() + time;
 486              		.loc 3 84 0
 487 0168 2860     		str	r0, [r5, #0]
 488              	.LBB197:
 489              		.loc 3 85 0
 490 016a 2B71     		strb	r3, [r5, #4]
 491              	.LBE197:
 492              	.LBE192:
 124:quadrangleZigZag.cpp **** 			timerRunning = true;
 493              		.loc 1 124 0
 494 016c 88F80030 		strb	r3, [r8, #0]
 495              	.LVL28:
 496              	.L36:
 497              	.LBB198:
 498              	.LBB183:
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 		if (T::now() >= endTime)
 499              		.loc 3 53 0
 500 0170 C847     		blx	r9
 501              	.LVL29:
 502              	.LBB181:
 503              	.LBB182:
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		}
  72:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		
  73:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		inline Timestamp
  74:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		operator - (const Timestamp& other) const
  75:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		{
  76:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 			return Timestamp(time - other.time);
  77:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		}
  78:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		inline bool
  80:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		operator == (const Timestamp& other) const
  81:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		{
  82:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 			return (time == other.time);
  83:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		}
  84:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		
  85:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		inline bool
  86:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		operator != (const Timestamp& other) const
  87:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		{
  88:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 			return (time != other.time);
  89:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		}
  90:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		
  91:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		inline bool
  92:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		operator < (const Timestamp& other) const
  93:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		{
  94:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 			return ((int_fast16_t) (time - other.time)) < 0;
  95:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		}
  96:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		
  97:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		inline bool
  98:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		operator > (const Timestamp& other) const
  99:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		{
 100:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 			return ((int_fast16_t) (time - other.time)) > 0;
 101:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		}
 102:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		
 103:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		inline bool
 104:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		operator <= (const Timestamp& other) const
 105:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		{
 106:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 			return ((int_fast16_t) (time - other.time)) <= 0;
 107:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		}
 108:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		
 109:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		inline bool
 110:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		operator >= (const Timestamp& other) const
 111:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		{
 112:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 			return ((int_fast16_t) (time - other.time)) >= 0;
 504              		.loc 7 112 0
 505 0172 2B68     		ldr	r3, [r5, #0]
 506 0174 C01A     		subs	r0, r0, r3
 507              	.LBE182:
 508              	.LBE181:
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 		if (T::now() >= endTime)
 509              		.loc 3 53 0
 510 0176 0028     		cmp	r0, #0
 511 0178 98DB     		blt	.L30
  55:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 			state = EXPIRED;
 512              		.loc 3 55 0
 513 017a 1C4B     		ldr	r3, .L57+28
 514 017c 0222     		movs	r2, #2
 515 017e 1A71     		strb	r2, [r3, #4]
 516 0180 86E7     		b	.L29
 517              	.LVL30:
 518              	.L49:
 519              	.LBE183:
 520              	.LBE198:
 521              	.LBB199:
 522              	.LBB200:
 523              	.LBB201:
 524              		.loc 2 51 0
 525 0182 194C     		ldr	r4, .L57+24
 526              	.LBE201:
 527              	.LBE200:
 528              	.LBE199:
 118:quadrangleZigZag.cpp **** 		nextPosY = nextY()+samplingResolution;
 529              		.loc 1 118 0
 530 0184 2B4B     		ldr	r3, .L57+100
 531              	.LBB204:
 532              	.LBB203:
 533              	.LBB202:
 534              		.loc 2 51 0
 535 0186 2568     		ldr	r5, [r4, #0]
 536              	.LBE202:
 537              	.LBE203:
 538              	.LBE204:
 118:quadrangleZigZag.cpp **** 		nextPosY = nextY()+samplingResolution;
 539              		.loc 1 118 0
 540 0188 1B68     		ldr	r3, [r3, #0]
 541 018a ED18     		adds	r5, r5, r3
 542              	.LVL31:
 543              	.LBB205:
 544              	.LBB206:
  67:control_impl.h **** 	Control<ALL>::resetPosPid();
 545              		.loc 4 67 0
 546 018c 1C4B     		ldr	r3, .L57+48
 547 018e 9847     		blx	r3
 548              	.LVL32:
  68:control_impl.h **** 	Control<ALL>::resetVPid();
 549              		.loc 4 68 0
 550 0190 1C4B     		ldr	r3, .L57+52
 551 0192 9847     		blx	r3
 552              	.LVL33:
 553              	.LBE206:
 554              	.LBE205:
 120:quadrangleZigZag.cpp **** 		approachingX = false;
 555              		.loc 1 120 0
 556 0194 0023     		movs	r3, #0
 557              	.LBB208:
 558              	.LBB207:
 559              		.loc 4 69 0
 560 0196 2560     		str	r5, [r4, #0]
 561              	.LBE207:
 562              	.LBE208:
 120:quadrangleZigZag.cpp **** 		approachingX = false;
 563              		.loc 1 120 0
 564 0198 3B70     		strb	r3, [r7, #0]
 565 019a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 566              	.LVL34:
 567              	.L52:
 129:quadrangleZigZag.cpp **** 				i = 0;
 568              		.loc 1 129 0
 569 019e 154B     		ldr	r3, .L57+36
 570 01a0 0022     		movs	r2, #0
 571 01a2 1A60     		str	r2, [r3, #0]
 572 01a4 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 573              	.L54:
 140:quadrangleZigZag.cpp **** 		nextPosX = xDirection == 1 ? stopX : startX;
 574              		.loc 1 140 0
 575 01a8 3568     		ldr	r5, [r6, #0]
 576 01aa 89E7     		b	.L31
 577              	.LVL35:
 578              	.L55:
 579              	.LBE210:
 580              	.LBE242:
 581              	.LBB243:
 582              	.LBB241:
 583              	.LBB239:
 584              	.LBB232:
 585              	.LBB229:
 586              	.LBB230:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 587              		.loc 6 288 0
 588 01ac 2868     		ldr	r0, [r5, #0]
 589 01ae 1C49     		ldr	r1, .L57+80
 590 01b0 0368     		ldr	r3, [r0, #0]
 591 01b2 DB68     		ldr	r3, [r3, #12]
 592 01b4 9847     		blx	r3
 593              	.LVL36:
 594 01b6 C5E7     		b	.L13
 595              	.LVL37:
 596              	.L56:
 597              	.LBE230:
 598              	.LBE229:
 599              	.LBE232:
 600              	.LBE239:
 601              	.LBB240:
 602              	.LBB238:
 603              	.LBB236:
 604              	.LBB237:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 605              		.loc 6 123 0
 606 01b8 0068     		ldr	r0, [r0, #0]
 607 01ba 0368     		ldr	r3, [r0, #0]
 608 01bc 0A21     		movs	r1, #10
 609 01be 9B68     		ldr	r3, [r3, #8]
 610 01c0 9847     		blx	r3
 611              	.LVL38:
 612 01c2 29E7     		b	.L16
 613              	.LVL39:
 614              	.L53:
 615 01c4 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 616              	.L51:
 617 01c8 DFF87490 		ldr	r9, .L57+112
 618 01cc D0E7     		b	.L36
 619              	.L58:
 620 01ce 00BF     		.align	2
 621              	.L57:
 622 01d0 00000000 		.word	_ZN7ControlIL4Axis0EE9pos_shallE
 623 01d4 00000000 		.word	.LANCHOR0
 624 01d8 00000000 		.word	.LANCHOR2
 625 01dc 00000000 		.word	_ZN7ControlIL4Axis0EE13getIsPositionEv
 626 01e0 00000000 		.word	.LANCHOR3
 627 01e4 00000000 		.word	_ZN7ControlIL4Axis5EE11setMaxSpeedEf
 628 01e8 00000000 		.word	_ZN7ControlIL4Axis2EE9pos_shallE
 629 01ec 00000000 		.word	.LANCHOR4
 630 01f0 00000000 		.word	_ZN7ControlIL4Axis2EE4v_isE
 631 01f4 00000000 		.word	.LANCHOR7
 632 01f8 00000000 		.word	.LANCHOR6
 633 01fc 00000000 		.word	.LANCHOR8
 634 0200 00000000 		.word	_ZN7ControlIL4Axis5EE11resetPosPidEv
 635 0204 00000000 		.word	_ZN7ControlIL4Axis5EE9resetVPidEv
 636 0208 00000000 		.word	.LANCHOR9
 637 020c 00000000 		.word	.LANCHOR1
 638 0210 00000000 		.word	_ZN7Pattern7runningE
 639 0214 00000000 		.word	_ZN7Pattern6pausedE
 640 0218 00000000 		.word	dout
 641 021c 00000000 		.word	_ZN5State3setEi
 642 0220 00000000 		.word	.LC0
 643 0224 00000000 		.word	_ZN4xpcc8IOStream8writeBinEPKc
 644 0228 00000000 		.word	_ZN4xpcc8IOStream8writeHexEPKc
 645 022c 00000000 		.word	_ZN4xpcc8IOStream8writeBinEh
 646 0230 00000000 		.word	_ZN4xpcc8IOStream8writeHexEh
 647 0234 00000000 		.word	.LANCHOR10
 648 0238 00000000 		.word	_ZN7ControlIL4Axis2EE13getIsPositionEv
 649 023c 00000000 		.word	.LANCHOR5
 650 0240 00000000 		.word	_ZN4xpcc5Clock3nowEv
 651              	.LBE237:
 652              	.LBE236:
 653              	.LBE238:
 654              	.LBE240:
 655              	.LBE241:
 656              	.LBE243:
 657              		.cfi_endproc
 658              	.LFE1040:
 660              		.section	.text._ZN16QuadrangleZigZag5startEv,"ax",%progbits
 661              		.align	2
 662              		.global	_ZN16QuadrangleZigZag5startEv
 663              		.thumb
 664              		.thumb_func
 666              	_ZN16QuadrangleZigZag5startEv:
 667              	.LFB1041:
 250:quadrangleZigZag.cpp **** 		}
 251:quadrangleZigZag.cpp **** 	}
 252:quadrangleZigZag.cpp **** 
 253:quadrangleZigZag.cpp **** 	xLongSample();
 254:quadrangleZigZag.cpp **** 
 255:quadrangleZigZag.cpp **** 	//if(yIsLongSide){
 256:quadrangleZigZag.cpp **** 	//	yLongSample();
 257:quadrangleZigZag.cpp **** 	//}else{
 258:quadrangleZigZag.cpp **** 	//	xLongSample();
 259:quadrangleZigZag.cpp **** 	//}
 260:quadrangleZigZag.cpp **** 	//sit back and let control do its job
 261:quadrangleZigZag.cpp **** }
 262:quadrangleZigZag.cpp **** 
 263:quadrangleZigZag.cpp **** void QuadrangleZigZag::start(){
 668              		.loc 1 263 0
 669              		.cfi_startproc
 670              		@ args = 0, pretend = 0, frame = 0
 671              		@ frame_needed = 0, uses_anonymous_args = 0
 672 0000 70B5     		push	{r4, r5, r6, lr}
 673              	.LCFI2:
 674              		.cfi_def_cfa_offset 16
 675              		.cfi_offset 4, -16
 676              		.cfi_offset 5, -12
 677              		.cfi_offset 6, -8
 678              		.cfi_offset 14, -4
 264:quadrangleZigZag.cpp **** 	maxSpeed = Control<ALL>::getMaxSpeed();
 679              		.loc 1 264 0
 680 0002 244A     		ldr	r2, .L68
 681              	.LBB264:
 682              	.LBB265:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 683              		.loc 6 287 0
 684 0004 244C     		ldr	r4, .L68+4
 685              	.LBE265:
 686              	.LBE264:
 687              		.loc 1 264 0
 688 0006 1168     		ldr	r1, [r2, #0]	@ float
 689              	.LBB271:
 690              	.LBB268:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 691              		.loc 6 287 0
 692 0008 6368     		ldr	r3, [r4, #4]
 693              	.LBE268:
 694              	.LBE271:
 695              		.loc 1 264 0
 696 000a 244A     		ldr	r2, .L68+8
 697 000c 1160     		str	r1, [r2, #0]	@ float
 698              	.LVL40:
 699              	.LBB272:
 700              	.LBB269:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 701              		.loc 6 287 0
 702 000e 002B     		cmp	r3, #0
 703 0010 33D0     		beq	.L66
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 704              		.loc 6 290 0
 705 0012 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 706              		.loc 6 291 0
 707 0014 2046     		mov	r0, r4
 708 0016 2249     		ldr	r1, .L68+12
 709 0018 0CBF     		ite	eq
 710 001a 224B     		ldreq	r3, .L68+16
 711              		.loc 6 294 0
 712 001c 224B     		ldrne	r3, .L68+20
 713 001e 9847     		blx	r3
 714              	.LVL41:
 715              	.L61:
 716              	.LBE269:
 717              	.LBE272:
 718              	.LBB273:
 719              	.LBB274:
 269:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeFloat(v);
 720              		.loc 6 269 0
 721 0020 1D4D     		ldr	r5, .L68+4
 722 0022 224B     		ldr	r3, .L68+24
 723 0024 1D49     		ldr	r1, .L68+8
 724 0026 2846     		mov	r0, r5
 725 0028 9847     		blx	r3
 726              	.LVL42:
 727              	.LBE274:
 728              	.LBE273:
 729              	.LBB275:
 730              	.LBB276:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 731              		.loc 6 122 0
 732 002a 6368     		ldr	r3, [r4, #4]
 733 002c 002B     		cmp	r3, #0
 734 002e 2AD0     		beq	.L67
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 735              		.loc 6 126 0
 736 0030 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 737              		.loc 6 125 0
 738 0032 022B     		cmp	r3, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 739              		.loc 6 126 0
 740 0034 2846     		mov	r0, r5
 741 0036 0CBF     		ite	eq
 742 0038 1D4B     		ldreq	r3, .L68+28
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 743              		.loc 6 129 0
 744 003a 1E4B     		ldrne	r3, .L68+32
 745 003c 9847     		blx	r3
 746              	.LVL43:
 747              	.L64:
 748              	.LBE276:
 749              	.LBE275:
 265:quadrangleZigZag.cpp **** 	dout << "pattern max speed: " << maxSpeed << endl;
 266:quadrangleZigZag.cpp **** 	Trigger::enable(false);
 750              		.loc 1 266 0
 751 003e 0020     		movs	r0, #0
 752 0040 1D4B     		ldr	r3, .L68+36
 753              	.LBB280:
 754              	.LBB281:
  67:control_impl.h **** 	Control<ALL>::resetPosPid();
 755              		.loc 4 67 0
 756 0042 1E4D     		ldr	r5, .L68+40
  68:control_impl.h **** 	Control<ALL>::resetVPid();
 757              		.loc 4 68 0
 758 0044 1E4C     		ldr	r4, .L68+44
 759              	.LBE281:
 760              	.LBE280:
 761              		.loc 1 266 0
 762 0046 9847     		blx	r3
 763              	.LVL44:
 267:quadrangleZigZag.cpp **** 	yDirection = 1;
 268:quadrangleZigZag.cpp **** 	xDirection = 1;
 269:quadrangleZigZag.cpp **** 	yIsLongSide = (stopY - startY) > (stopX - startX);
 764              		.loc 1 269 0
 765 0048 1E4B     		ldr	r3, .L68+48
 267:quadrangleZigZag.cpp **** 	yDirection = 1;
 766              		.loc 1 267 0
 767 004a 1F49     		ldr	r1, .L68+52
 768              		.loc 1 269 0
 769 004c 1E68     		ldr	r6, [r3, #0]
 267:quadrangleZigZag.cpp **** 	yDirection = 1;
 770              		.loc 1 267 0
 771 004e 0123     		movs	r3, #1
 772 0050 0B60     		str	r3, [r1, #0]
 268:quadrangleZigZag.cpp **** 	xDirection = 1;
 773              		.loc 1 268 0
 774 0052 1E49     		ldr	r1, .L68+56
 775 0054 0B60     		str	r3, [r1, #0]
 270:quadrangleZigZag.cpp **** 	yIsLongSide = false;
 776              		.loc 1 270 0
 777 0056 1E49     		ldr	r1, .L68+60
 778 0058 0022     		movs	r2, #0
 779 005a 0A70     		strb	r2, [r1, #0]
 271:quadrangleZigZag.cpp **** 	approachingX = yIsLongSide;
 780              		.loc 1 271 0
 781 005c 1D49     		ldr	r1, .L68+64
 782 005e 0A70     		strb	r2, [r1, #0]
 272:quadrangleZigZag.cpp **** 	approachingStart = true;
 783              		.loc 1 272 0
 784 0060 1D4A     		ldr	r2, .L68+68
 785 0062 1370     		strb	r3, [r2, #0]
 786              	.LVL45:
 787              	.LBB283:
 788              	.LBB282:
  67:control_impl.h **** 	Control<ALL>::resetPosPid();
 789              		.loc 4 67 0
 790 0064 A847     		blx	r5
 791              	.LVL46:
  68:control_impl.h **** 	Control<ALL>::resetVPid();
 792              		.loc 4 68 0
 793 0066 A047     		blx	r4
 794              	.LVL47:
 795              		.loc 4 69 0
 796 0068 1C4B     		ldr	r3, .L68+72
 797 006a 1E60     		str	r6, [r3, #0]
 798              	.LBE282:
 799              	.LBE283:
 273:quadrangleZigZag.cpp **** 	Control<X>::setShallPosition(startX);
 274:quadrangleZigZag.cpp **** 	Control<Y>::setShallPosition(startY);
 800              		.loc 1 274 0
 801 006c 1C4B     		ldr	r3, .L68+76
 802 006e 1E68     		ldr	r6, [r3, #0]
 803              	.LVL48:
 804              	.LBB284:
 805              	.LBB285:
  67:control_impl.h **** 	Control<ALL>::resetPosPid();
 806              		.loc 4 67 0
 807 0070 A847     		blx	r5
 808              	.LVL49:
  68:control_impl.h **** 	Control<ALL>::resetVPid();
 809              		.loc 4 68 0
 810 0072 A047     		blx	r4
 811              	.LVL50:
 812              		.loc 4 69 0
 813 0074 1B4B     		ldr	r3, .L68+80
 814 0076 1E60     		str	r6, [r3, #0]
 815 0078 70BD     		pop	{r4, r5, r6, pc}
 816              	.LVL51:
 817              	.L66:
 818              	.LBE285:
 819              	.LBE284:
 820              	.LBB286:
 821              	.LBB270:
 822              	.LBB266:
 823              	.LBB267:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 824              		.loc 6 288 0
 825 007a 2068     		ldr	r0, [r4, #0]
 826 007c 0849     		ldr	r1, .L68+12
 827 007e 0368     		ldr	r3, [r0, #0]
 828 0080 DB68     		ldr	r3, [r3, #12]
 829 0082 9847     		blx	r3
 830              	.LVL52:
 831 0084 CCE7     		b	.L61
 832              	.LVL53:
 833              	.L67:
 834              	.LBE267:
 835              	.LBE266:
 836              	.LBE270:
 837              	.LBE286:
 838              	.LBB287:
 839              	.LBB279:
 840              	.LBB277:
 841              	.LBB278:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 842              		.loc 6 123 0
 843 0086 2868     		ldr	r0, [r5, #0]
 844 0088 0368     		ldr	r3, [r0, #0]
 845 008a 0A21     		movs	r1, #10
 846 008c 9B68     		ldr	r3, [r3, #8]
 847 008e 9847     		blx	r3
 848              	.LVL54:
 849 0090 D5E7     		b	.L64
 850              	.L69:
 851 0092 00BF     		.align	2
 852              	.L68:
 853 0094 00000000 		.word	_ZN7ControlIL4Axis5EE8maxSpeedE
 854 0098 00000000 		.word	dout
 855 009c 00000000 		.word	.LANCHOR9
 856 00a0 10000000 		.word	.LC1
 857 00a4 00000000 		.word	_ZN4xpcc8IOStream8writeBinEPKc
 858 00a8 00000000 		.word	_ZN4xpcc8IOStream8writeHexEPKc
 859 00ac 00000000 		.word	_ZN4xpcc8IOStream10writeFloatERKf
 860 00b0 00000000 		.word	_ZN4xpcc8IOStream8writeBinEh
 861 00b4 00000000 		.word	_ZN4xpcc8IOStream8writeHexEh
 862 00b8 00000000 		.word	_ZN7Trigger6enableEb
 863 00bc 00000000 		.word	_ZN7ControlIL4Axis5EE11resetPosPidEv
 864 00c0 00000000 		.word	_ZN7ControlIL4Axis5EE9resetVPidEv
 865 00c4 00000000 		.word	.LANCHOR8
 866 00c8 00000000 		.word	.LANCHOR11
 867 00cc 00000000 		.word	.LANCHOR6
 868 00d0 00000000 		.word	.LANCHOR12
 869 00d4 00000000 		.word	.LANCHOR3
 870 00d8 00000000 		.word	.LANCHOR2
 871 00dc 00000000 		.word	_ZN7ControlIL4Axis0EE9pos_shallE
 872 00e0 00000000 		.word	.LANCHOR13
 873 00e4 00000000 		.word	_ZN7ControlIL4Axis2EE9pos_shallE
 874              	.LBE278:
 875              	.LBE277:
 876              	.LBE279:
 877              	.LBE287:
 878              		.cfi_endproc
 879              	.LFE1041:
 881              		.section	.text._ZN16QuadrangleZigZag9configureEffffi,"ax",%progbits
 882              		.align	2
 883              		.global	_ZN16QuadrangleZigZag9configureEffffi
 884              		.thumb
 885              		.thumb_func
 887              	_ZN16QuadrangleZigZag9configureEffffi:
 888              	.LFB1042:
 275:quadrangleZigZag.cpp **** }
 276:quadrangleZigZag.cpp **** 
 277:quadrangleZigZag.cpp **** void QuadrangleZigZag::configure(float x, float y, float width, float height, int samplingResolutio
 889              		.loc 1 277 0
 890              		.cfi_startproc
 891              		@ args = 4, pretend = 0, frame = 0
 892              		@ frame_needed = 0, uses_anonymous_args = 0
 893              	.LVL55:
 894              	.LBB314:
 895              	.LBB315:
 896              		.file 8 "transform.h"
   1:transform.h   **** /*
   2:transform.h   ****  * transform.h
   3:transform.h   ****  *
   4:transform.h   ****  *  Created on: Jan 23, 2014
   5:transform.h   ****  *      Author: jonas
   6:transform.h   ****  */
   7:transform.h   **** 
   8:transform.h   **** #ifndef TRANSFORM_H_
   9:transform.h   **** #define TRANSFORM_H_
  10:transform.h   **** 
  11:transform.h   **** #include "project.h"
  12:transform.h   **** 
  13:transform.h   **** struct Transform{
  14:transform.h   **** 	static int mmToEncoder(float mm){
  15:transform.h   **** 		return int(MOTOR_ENC_PER_REV*MOTOR_GEAR_RATIO*mm + 0.5f);
 897              		.loc 8 15 0
 898 0000 9FED417A 		flds	s14, .L79
 899 0004 F6EE007A 		fconsts	s15, #96
 900 0008 05EE100A 		fmsr	s10, r0
 901              	.LBE315:
 902              	.LBE314:
 903              	.LBB319:
 904              	.LBB320:
 905 000c 06EE901A 		fmsr	s13, r1
 906              	.LBE320:
 907              	.LBE319:
 908              	.LBB325:
 909              	.LBB316:
 910 0010 F0EE675A 		fcpys	s11, s15
 911 0014 45EE075A 		fmacs	s11, s10, s14
 912              	.LBE316:
 913              	.LBE325:
 914              	.LBB326:
 915              	.LBB321:
 916 0018 B0EE676A 		fcpys	s12, s15
 917              	.LBE321:
 918              	.LBE326:
 919              	.LBB327:
 920              	.LBB328:
 921 001c 05EE102A 		fmsr	s10, r2
 922              	.LBE328:
 923              	.LBE327:
 924              	.LBB332:
 925              	.LBB322:
 926 0020 06EE876A 		fmacs	s12, s13, s14
 927              	.LBE322:
 928              	.LBE332:
 929              	.LBB333:
 930              	.LBB329:
 931 0024 F0EE676A 		fcpys	s13, s15
 932 0028 45EE076A 		fmacs	s13, s10, s14
 933              	.LBE329:
 934              	.LBE333:
 935              	.LBB334:
 936              	.LBB335:
 937 002c 05EE103A 		fmsr	s10, r3
 938 0030 45EE077A 		fmacs	s15, s10, s14
 939              	.LBE335:
 940              	.LBE334:
 941              		.loc 1 277 0
 942 0034 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 943              	.LCFI3:
 944              		.cfi_def_cfa_offset 24
 945              		.cfi_offset 3, -24
 946              		.cfi_offset 4, -20
 947              		.cfi_offset 5, -16
 948              		.cfi_offset 6, -12
 949              		.cfi_offset 7, -8
 950              		.cfi_offset 14, -4
 278:quadrangleZigZag.cpp **** 	QuadrangleZigZag::startX = Transform::mmToEncoder(x);
 279:quadrangleZigZag.cpp **** 	QuadrangleZigZag::startY = Transform::mmToEncoder(y);
 280:quadrangleZigZag.cpp **** 	QuadrangleZigZag::stopX = startX + Transform::mmToEncoder(width);
 281:quadrangleZigZag.cpp **** 	QuadrangleZigZag::stopY = startY + Transform::mmToEncoder(height);
 282:quadrangleZigZag.cpp **** 	QuadrangleZigZag::samplingResolution = samplingResolution;
 951              		.loc 1 282 0
 952 0036 354A     		ldr	r2, .L79+4
 953              	.LVL56:
 954 0038 069B     		ldr	r3, [sp, #24]
 955              	.LVL57:
 956              	.LBB337:
 957              	.LBB338:
 264:quadrangleZigZag.cpp **** 	maxSpeed = Control<ALL>::getMaxSpeed();
 958              		.loc 1 264 0
 959 003a 3548     		ldr	r0, .L79+8
 960              	.LVL58:
 961              	.LBE338:
 962              	.LBE337:
 963              		.loc 1 282 0
 964 003c 1360     		str	r3, [r2, #0]
 965              	.LBB369:
 966              	.LBB323:
 967              		.loc 8 15 0
 968 003e BDEEC66A 		ftosizs	s12, s12
 969              	.LBE323:
 970              	.LBE369:
 971              	.LBB370:
 972              	.LBB336:
 973 0042 FDEEE77A 		ftosizs	s15, s15
 974              	.LBE336:
 975              	.LBE370:
 976              	.LBB371:
 977              	.LBB317:
 978 0046 FDEEE55A 		ftosizs	s11, s11
 979              	.LBE317:
 980              	.LBE371:
 981              	.LBB372:
 982              	.LBB330:
 983 004a FDEEE66A 		ftosizs	s13, s13
 984              	.LBE330:
 985              	.LBE372:
 986              	.LBB373:
 987              	.LBB324:
 988 004e 16EE103A 		fmrs	r3, s12	@ int
 989              	.LBE324:
 990              	.LBE373:
 281:quadrangleZigZag.cpp **** 	QuadrangleZigZag::stopY = startY + Transform::mmToEncoder(height);
 991              		.loc 1 281 0
 992 0052 17EE90CA 		fmrs	ip, s15	@ int
 993              	.LBB374:
 994              	.LBB318:
 995              		.loc 8 15 0
 996 0056 15EE902A 		fmrs	r2, s11	@ int
 997              	.LBE318:
 998              	.LBE374:
 999              	.LBB375:
 1000              	.LBB331:
 1001 005a 16EE905A 		fmrs	r5, s13	@ int
 1002              	.LBE331:
 1003              	.LBE375:
 1004              	.LBB376:
 1005              	.LBB365:
 264:quadrangleZigZag.cpp **** 	maxSpeed = Control<ALL>::getMaxSpeed();
 1006              		.loc 1 264 0
 1007 005e D0F800E0 		ldr	lr, [r0, #0]	@ float
 1008              	.LBB339:
 1009              	.LBB340:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 1010              		.loc 6 287 0
 1011 0062 2C4C     		ldr	r4, .L79+12
 1012              	.LBE340:
 1013              	.LBE339:
 1014              	.LBE365:
 1015              	.LBE376:
 278:quadrangleZigZag.cpp **** 	QuadrangleZigZag::startX = Transform::mmToEncoder(x);
 1016              		.loc 1 278 0
 1017 0064 2C4F     		ldr	r7, .L79+16
 279:quadrangleZigZag.cpp **** 	QuadrangleZigZag::startY = Transform::mmToEncoder(y);
 1018              		.loc 1 279 0
 1019 0066 2D4E     		ldr	r6, .L79+20
 1020              	.LBB377:
 1021              	.LBB366:
 1022              	.LBB346:
 1023              	.LBB343:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 1024              		.loc 6 287 0
 1025 0068 6168     		ldr	r1, [r4, #4]
 1026              	.LVL59:
 1027              	.LBE343:
 1028              	.LBE346:
 1029              	.LBE366:
 1030              	.LBE377:
 281:quadrangleZigZag.cpp **** 	QuadrangleZigZag::stopY = startY + Transform::mmToEncoder(height);
 1031              		.loc 1 281 0
 1032 006a 03EB0C00 		add	r0, r3, ip
 280:quadrangleZigZag.cpp **** 	QuadrangleZigZag::stopX = startX + Transform::mmToEncoder(width);
 1033              		.loc 1 280 0
 1034 006e 2C4B     		ldr	r3, .L79+24
 1035 0070 5519     		adds	r5, r2, r5
 1036 0072 1D60     		str	r5, [r3, #0]
 281:quadrangleZigZag.cpp **** 	QuadrangleZigZag::stopY = startY + Transform::mmToEncoder(height);
 1037              		.loc 1 281 0
 1038 0074 2B4B     		ldr	r3, .L79+28
 1039 0076 1860     		str	r0, [r3, #0]
 1040              	.LBB378:
 1041              	.LBB367:
 264:quadrangleZigZag.cpp **** 	maxSpeed = Control<ALL>::getMaxSpeed();
 1042              		.loc 1 264 0
 1043 0078 2B4B     		ldr	r3, .L79+32
 1044              	.LBE367:
 1045              	.LBE378:
 278:quadrangleZigZag.cpp **** 	QuadrangleZigZag::startX = Transform::mmToEncoder(x);
 1046              		.loc 1 278 0
 1047 007a C7ED005A 		fsts	s11, [r7, #0]	@ int
 1048              	.LVL60:
 279:quadrangleZigZag.cpp **** 	QuadrangleZigZag::startY = Transform::mmToEncoder(y);
 1049              		.loc 1 279 0
 1050 007e 86ED006A 		fsts	s12, [r6, #0]	@ int
 1051              	.LVL61:
 1052              	.LBB379:
 1053              	.LBB368:
 264:quadrangleZigZag.cpp **** 	maxSpeed = Control<ALL>::getMaxSpeed();
 1054              		.loc 1 264 0
 1055 0082 C3F800E0 		str	lr, [r3, #0]	@ float
 1056              	.LVL62:
 1057              	.LBB347:
 1058              	.LBB344:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 1059              		.loc 6 287 0
 1060 0086 0029     		cmp	r1, #0
 1061 0088 31D0     		beq	.L77
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 1062              		.loc 6 290 0
 1063 008a 0229     		cmp	r1, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 1064              		.loc 6 291 0
 1065 008c 2046     		mov	r0, r4
 1066 008e 2749     		ldr	r1, .L79+36
 1067 0090 0CBF     		ite	eq
 1068 0092 274B     		ldreq	r3, .L79+40
 1069              		.loc 6 294 0
 1070 0094 274B     		ldrne	r3, .L79+44
 1071 0096 9847     		blx	r3
 1072              	.LVL63:
 1073              	.L72:
 1074              	.LBE344:
 1075              	.LBE347:
 1076              	.LBB348:
 1077              	.LBB349:
 269:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeFloat(v);
 1078              		.loc 6 269 0
 1079 0098 1E4D     		ldr	r5, .L79+12
 1080 009a 274B     		ldr	r3, .L79+48
 1081 009c 2249     		ldr	r1, .L79+32
 1082 009e 2846     		mov	r0, r5
 1083 00a0 9847     		blx	r3
 1084              	.LVL64:
 1085              	.LBE349:
 1086              	.LBE348:
 1087              	.LBB350:
 1088              	.LBB351:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 1089              		.loc 6 122 0
 1090 00a2 6368     		ldr	r3, [r4, #4]
 1091 00a4 002B     		cmp	r3, #0
 1092 00a6 28D0     		beq	.L78
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 1093              		.loc 6 126 0
 1094 00a8 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 1095              		.loc 6 125 0
 1096 00aa 022B     		cmp	r3, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 1097              		.loc 6 126 0
 1098 00ac 2846     		mov	r0, r5
 1099 00ae 0CBF     		ite	eq
 1100 00b0 224B     		ldreq	r3, .L79+52
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 1101              		.loc 6 129 0
 1102 00b2 234B     		ldrne	r3, .L79+56
 1103 00b4 9847     		blx	r3
 1104              	.LVL65:
 1105              	.L75:
 1106              	.LBE351:
 1107              	.LBE350:
 266:quadrangleZigZag.cpp **** 	Trigger::enable(false);
 1108              		.loc 1 266 0
 1109 00b6 0020     		movs	r0, #0
 1110 00b8 224B     		ldr	r3, .L79+60
 1111              	.LBB355:
 1112              	.LBB356:
  67:control_impl.h **** 	Control<ALL>::resetPosPid();
 1113              		.loc 4 67 0
 1114 00ba 234D     		ldr	r5, .L79+64
  68:control_impl.h **** 	Control<ALL>::resetVPid();
 1115              		.loc 4 68 0
 1116 00bc 234C     		ldr	r4, .L79+68
 1117              	.LBE356:
 1118              	.LBE355:
 266:quadrangleZigZag.cpp **** 	Trigger::enable(false);
 1119              		.loc 1 266 0
 1120 00be 9847     		blx	r3
 1121              	.LVL66:
 267:quadrangleZigZag.cpp **** 	yDirection = 1;
 1122              		.loc 1 267 0
 1123 00c0 2349     		ldr	r1, .L79+72
 269:quadrangleZigZag.cpp **** 	yIsLongSide = (stopY - startY) > (stopX - startX);
 1124              		.loc 1 269 0
 1125 00c2 3F68     		ldr	r7, [r7, #0]
 267:quadrangleZigZag.cpp **** 	yDirection = 1;
 1126              		.loc 1 267 0
 1127 00c4 0123     		movs	r3, #1
 1128 00c6 0B60     		str	r3, [r1, #0]
 268:quadrangleZigZag.cpp **** 	xDirection = 1;
 1129              		.loc 1 268 0
 1130 00c8 2249     		ldr	r1, .L79+76
 1131 00ca 0B60     		str	r3, [r1, #0]
 270:quadrangleZigZag.cpp **** 	yIsLongSide = false;
 1132              		.loc 1 270 0
 1133 00cc 2249     		ldr	r1, .L79+80
 1134 00ce 0022     		movs	r2, #0
 1135 00d0 0A70     		strb	r2, [r1, #0]
 271:quadrangleZigZag.cpp **** 	approachingX = yIsLongSide;
 1136              		.loc 1 271 0
 1137 00d2 2249     		ldr	r1, .L79+84
 1138 00d4 0A70     		strb	r2, [r1, #0]
 272:quadrangleZigZag.cpp **** 	approachingStart = true;
 1139              		.loc 1 272 0
 1140 00d6 224A     		ldr	r2, .L79+88
 1141 00d8 1370     		strb	r3, [r2, #0]
 1142              	.LVL67:
 1143              	.LBB359:
 1144              	.LBB357:
  67:control_impl.h **** 	Control<ALL>::resetPosPid();
 1145              		.loc 4 67 0
 1146 00da A847     		blx	r5
 1147              	.LVL68:
  68:control_impl.h **** 	Control<ALL>::resetVPid();
 1148              		.loc 4 68 0
 1149 00dc A047     		blx	r4
 1150              	.LVL69:
 1151              		.loc 4 69 0
 1152 00de 214B     		ldr	r3, .L79+92
 1153              	.LBE357:
 1154              	.LBE359:
 274:quadrangleZigZag.cpp **** 	Control<Y>::setShallPosition(startY);
 1155              		.loc 1 274 0
 1156 00e0 3668     		ldr	r6, [r6, #0]
 1157              	.LVL70:
 1158              	.LBB360:
 1159              	.LBB358:
 1160              		.loc 4 69 0
 1161 00e2 1F60     		str	r7, [r3, #0]
 1162              	.LBE358:
 1163              	.LBE360:
 1164              	.LBB361:
 1165              	.LBB362:
  67:control_impl.h **** 	Control<ALL>::resetPosPid();
 1166              		.loc 4 67 0
 1167 00e4 A847     		blx	r5
 1168              	.LVL71:
  68:control_impl.h **** 	Control<ALL>::resetVPid();
 1169              		.loc 4 68 0
 1170 00e6 A047     		blx	r4
 1171              	.LVL72:
 1172              		.loc 4 69 0
 1173 00e8 1F4B     		ldr	r3, .L79+96
 1174 00ea 1E60     		str	r6, [r3, #0]
 1175 00ec F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1176              	.LVL73:
 1177              	.L77:
 1178              	.LBE362:
 1179              	.LBE361:
 1180              	.LBB363:
 1181              	.LBB345:
 1182              	.LBB341:
 1183              	.LBB342:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 1184              		.loc 6 288 0
 1185 00ee 2068     		ldr	r0, [r4, #0]
 1186 00f0 0E49     		ldr	r1, .L79+36
 1187 00f2 0368     		ldr	r3, [r0, #0]
 1188 00f4 DB68     		ldr	r3, [r3, #12]
 1189 00f6 9847     		blx	r3
 1190              	.LVL74:
 1191 00f8 CEE7     		b	.L72
 1192              	.LVL75:
 1193              	.L78:
 1194              	.LBE342:
 1195              	.LBE341:
 1196              	.LBE345:
 1197              	.LBE363:
 1198              	.LBB364:
 1199              	.LBB354:
 1200              	.LBB352:
 1201              	.LBB353:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 1202              		.loc 6 123 0
 1203 00fa 2868     		ldr	r0, [r5, #0]
 1204 00fc 0368     		ldr	r3, [r0, #0]
 1205 00fe 0A21     		movs	r1, #10
 1206 0100 9B68     		ldr	r3, [r3, #8]
 1207 0102 9847     		blx	r3
 1208              	.LVL76:
 1209 0104 D7E7     		b	.L75
 1210              	.L80:
 1211 0106 00BF     		.align	2
 1212              	.L79:
 1213 0108 0000FA44 		.word	1157234688
 1214 010c 00000000 		.word	.LANCHOR10
 1215 0110 00000000 		.word	_ZN7ControlIL4Axis5EE8maxSpeedE
 1216 0114 00000000 		.word	dout
 1217 0118 00000000 		.word	.LANCHOR8
 1218 011c 00000000 		.word	.LANCHOR13
 1219 0120 00000000 		.word	.LANCHOR0
 1220 0124 00000000 		.word	.LANCHOR1
 1221 0128 00000000 		.word	.LANCHOR9
 1222 012c 10000000 		.word	.LC1
 1223 0130 00000000 		.word	_ZN4xpcc8IOStream8writeBinEPKc
 1224 0134 00000000 		.word	_ZN4xpcc8IOStream8writeHexEPKc
 1225 0138 00000000 		.word	_ZN4xpcc8IOStream10writeFloatERKf
 1226 013c 00000000 		.word	_ZN4xpcc8IOStream8writeBinEh
 1227 0140 00000000 		.word	_ZN4xpcc8IOStream8writeHexEh
 1228 0144 00000000 		.word	_ZN7Trigger6enableEb
 1229 0148 00000000 		.word	_ZN7ControlIL4Axis5EE11resetPosPidEv
 1230 014c 00000000 		.word	_ZN7ControlIL4Axis5EE9resetVPidEv
 1231 0150 00000000 		.word	.LANCHOR11
 1232 0154 00000000 		.word	.LANCHOR6
 1233 0158 00000000 		.word	.LANCHOR12
 1234 015c 00000000 		.word	.LANCHOR3
 1235 0160 00000000 		.word	.LANCHOR2
 1236 0164 00000000 		.word	_ZN7ControlIL4Axis0EE9pos_shallE
 1237 0168 00000000 		.word	_ZN7ControlIL4Axis2EE9pos_shallE
 1238              	.LBE353:
 1239              	.LBE352:
 1240              	.LBE354:
 1241              	.LBE364:
 1242              	.LBE368:
 1243              	.LBE379:
 1244              		.cfi_endproc
 1245              	.LFE1042:
 1247              		.section	.text._ZN16QuadrangleZigZag10configure2Effffi,"ax",%progbits
 1248              		.align	2
 1249              		.global	_ZN16QuadrangleZigZag10configure2Effffi
 1250              		.thumb
 1251              		.thumb_func
 1253              	_ZN16QuadrangleZigZag10configure2Effffi:
 1254              	.LFB1043:
 283:quadrangleZigZag.cpp **** 	start();
 284:quadrangleZigZag.cpp **** }
 285:quadrangleZigZag.cpp **** 
 286:quadrangleZigZag.cpp **** void QuadrangleZigZag::configure2(float startX, float startY, float stopX, float stopY, int samplin
 1255              		.loc 1 286 0
 1256              		.cfi_startproc
 1257              		@ args = 4, pretend = 0, frame = 0
 1258              		@ frame_needed = 0, uses_anonymous_args = 0
 1259              	.LVL77:
 1260              	.LBB406:
 1261              	.LBB407:
 1262              		.loc 8 15 0
 1263 0000 9FED3B7A 		flds	s14, .L90
 1264 0004 F6EE007A 		fconsts	s15, #96
 1265 0008 05EE100A 		fmsr	s10, r0
 1266              	.LBE407:
 1267              	.LBE406:
 1268              	.LBB411:
 1269              	.LBB412:
 1270 000c 05EE901A 		fmsr	s11, r1
 1271              	.LBE412:
 1272              	.LBE411:
 1273              	.LBB417:
 1274              	.LBB408:
 1275 0010 B0EE676A 		fcpys	s12, s15
 1276 0014 05EE076A 		fmacs	s12, s10, s14
 1277              	.LBE408:
 1278              	.LBE417:
 1279              	.LBB418:
 1280              	.LBB413:
 1281 0018 F0EE676A 		fcpys	s13, s15
 1282              	.LBE413:
 1283              	.LBE418:
 1284              	.LBB419:
 1285              	.LBB420:
 1286 001c 05EE102A 		fmsr	s10, r2
 1287              	.LBE420:
 1288              	.LBE419:
 1289              		.loc 1 286 0
 1290 0020 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1291              	.LCFI4:
 1292              		.cfi_def_cfa_offset 24
 1293              		.cfi_offset 3, -24
 1294              		.cfi_offset 4, -20
 1295              		.cfi_offset 5, -16
 1296              		.cfi_offset 6, -12
 1297              		.cfi_offset 7, -8
 1298              		.cfi_offset 14, -4
 1299              	.LBB425:
 1300              	.LBB414:
 1301              		.loc 8 15 0
 1302 0022 45EE876A 		fmacs	s13, s11, s14
 1303              	.LBE414:
 1304              	.LBE425:
 1305              	.LBB426:
 1306              	.LBB421:
 1307 0026 F0EE675A 		fcpys	s11, s15
 1308 002a 45EE075A 		fmacs	s11, s10, s14
 1309              	.LBE421:
 1310              	.LBE426:
 287:quadrangleZigZag.cpp **** 	QuadrangleZigZag::startX = Transform::mmToEncoder(startX);
 288:quadrangleZigZag.cpp **** 	QuadrangleZigZag::startY = Transform::mmToEncoder(startY);
 289:quadrangleZigZag.cpp **** 	QuadrangleZigZag::stopX = Transform::mmToEncoder(stopX);
 290:quadrangleZigZag.cpp **** 	QuadrangleZigZag::stopY = Transform::mmToEncoder(stopY);
 291:quadrangleZigZag.cpp **** 	QuadrangleZigZag::samplingResolution = samplingResolution;
 1311              		.loc 1 291 0
 1312 002e 3149     		ldr	r1, .L90+4
 1313              	.LVL78:
 1314 0030 069A     		ldr	r2, [sp, #24]
 1315              	.LVL79:
 1316              	.LBB427:
 1317              	.LBB428:
 1318              	.LBB429:
 1319              	.LBB430:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 1320              		.loc 6 287 0
 1321 0032 314C     		ldr	r4, .L90+8
 1322              	.LBE430:
 1323              	.LBE429:
 1324              	.LBE428:
 1325              	.LBE427:
 1326              		.loc 1 291 0
 1327 0034 0A60     		str	r2, [r1, #0]
 1328              	.LBB460:
 1329              	.LBB461:
 1330              		.loc 8 15 0
 1331 0036 05EE103A 		fmsr	s10, r3
 1332              	.LVL80:
 1333              	.LBE461:
 1334              	.LBE460:
 1335              	.LBB466:
 1336              	.LBB455:
 264:quadrangleZigZag.cpp **** 	maxSpeed = Control<ALL>::getMaxSpeed();
 1337              		.loc 1 264 0
 1338 003a 304A     		ldr	r2, .L90+12
 1339              	.LBE455:
 1340              	.LBE466:
 287:quadrangleZigZag.cpp **** 	QuadrangleZigZag::startX = Transform::mmToEncoder(startX);
 1341              		.loc 1 287 0
 1342 003c 304F     		ldr	r7, .L90+16
 1343              	.LBB467:
 1344              	.LBB456:
 264:quadrangleZigZag.cpp **** 	maxSpeed = Control<ALL>::getMaxSpeed();
 1345              		.loc 1 264 0
 1346 003e 1168     		ldr	r1, [r2, #0]	@ float
 1347              	.LBE456:
 1348              	.LBE467:
 1349              	.LBB468:
 1350              	.LBB422:
 1351              		.loc 8 15 0
 1352 0040 304A     		ldr	r2, .L90+20
 1353              	.LBE422:
 1354              	.LBE468:
 288:quadrangleZigZag.cpp **** 	QuadrangleZigZag::startY = Transform::mmToEncoder(startY);
 1355              		.loc 1 288 0
 1356 0042 314E     		ldr	r6, .L90+24
 1357              	.LBB469:
 1358              	.LBB457:
 1359              	.LBB436:
 1360              	.LBB433:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 1361              		.loc 6 287 0
 1362 0044 6368     		ldr	r3, [r4, #4]
 1363              	.LVL81:
 1364              	.LBE433:
 1365              	.LBE436:
 1366              	.LBE457:
 1367              	.LBE469:
 1368              	.LBB470:
 1369              	.LBB462:
 1370              		.loc 8 15 0
 1371 0046 45EE077A 		fmacs	s15, s10, s14
 1372              	.LBE462:
 1373              	.LBE470:
 1374              	.LBB471:
 1375              	.LBB423:
 1376 004a BDEEE57A 		ftosizs	s14, s11
 1377              	.LBE423:
 1378              	.LBE471:
 1379              	.LBB472:
 1380              	.LBB463:
 1381 004e FDEEE77A 		ftosizs	s15, s15
 1382              	.LBE463:
 1383              	.LBE472:
 1384              	.LBB473:
 1385              	.LBB424:
 1386 0052 82ED007A 		fsts	s14, [r2, #0]	@ int
 1387              	.LBE424:
 1388              	.LBE473:
 1389              	.LBB474:
 1390              	.LBB464:
 1391 0056 2D4A     		ldr	r2, .L90+28
 1392              	.LBE464:
 1393              	.LBE474:
 1394              	.LBB475:
 1395              	.LBB409:
 1396 0058 BDEEC66A 		ftosizs	s12, s12
 1397              	.LBE409:
 1398              	.LBE475:
 1399              	.LBB476:
 1400              	.LBB465:
 1401 005c C2ED007A 		fsts	s15, [r2, #0]	@ int
 1402              	.LBE465:
 1403              	.LBE476:
 1404              	.LBB477:
 1405              	.LBB415:
 1406 0060 FDEEE66A 		ftosizs	s13, s13
 1407              	.LBE415:
 1408              	.LBE477:
 1409              	.LBB478:
 1410              	.LBB458:
 264:quadrangleZigZag.cpp **** 	maxSpeed = Control<ALL>::getMaxSpeed();
 1411              		.loc 1 264 0
 1412 0064 2A4A     		ldr	r2, .L90+32
 1413              	.LBE458:
 1414              	.LBE478:
 1415              	.LBB479:
 1416              	.LBB410:
 1417              		.loc 8 15 0
 1418 0066 87ED006A 		fsts	s12, [r7, #0]	@ int
 1419              	.LVL82:
 1420              	.LBE410:
 1421              	.LBE479:
 1422              	.LBB480:
 1423              	.LBB416:
 1424 006a C6ED006A 		fsts	s13, [r6, #0]	@ int
 1425              	.LVL83:
 1426              	.LBE416:
 1427              	.LBE480:
 1428              	.LBB481:
 1429              	.LBB459:
 264:quadrangleZigZag.cpp **** 	maxSpeed = Control<ALL>::getMaxSpeed();
 1430              		.loc 1 264 0
 1431 006e 1160     		str	r1, [r2, #0]	@ float
 1432              	.LVL84:
 1433              	.LBB437:
 1434              	.LBB434:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 1435              		.loc 6 287 0
 1436 0070 002B     		cmp	r3, #0
 1437 0072 31D0     		beq	.L88
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 1438              		.loc 6 290 0
 1439 0074 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 1440              		.loc 6 291 0
 1441 0076 2046     		mov	r0, r4
 1442              	.LVL85:
 1443 0078 2649     		ldr	r1, .L90+36
 1444 007a 0CBF     		ite	eq
 1445 007c 264B     		ldreq	r3, .L90+40
 1446              		.loc 6 294 0
 1447 007e 274B     		ldrne	r3, .L90+44
 1448 0080 9847     		blx	r3
 1449              	.LVL86:
 1450              	.L83:
 1451              	.LBE434:
 1452              	.LBE437:
 1453              	.LBB438:
 1454              	.LBB439:
 269:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeFloat(v);
 1455              		.loc 6 269 0
 1456 0082 1D4D     		ldr	r5, .L90+8
 1457 0084 264B     		ldr	r3, .L90+48
 1458 0086 2249     		ldr	r1, .L90+32
 1459 0088 2846     		mov	r0, r5
 1460 008a 9847     		blx	r3
 1461              	.LVL87:
 1462              	.LBE439:
 1463              	.LBE438:
 1464              	.LBB440:
 1465              	.LBB441:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 1466              		.loc 6 122 0
 1467 008c 6368     		ldr	r3, [r4, #4]
 1468 008e 002B     		cmp	r3, #0
 1469 0090 28D0     		beq	.L89
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 1470              		.loc 6 126 0
 1471 0092 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 1472              		.loc 6 125 0
 1473 0094 022B     		cmp	r3, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 1474              		.loc 6 126 0
 1475 0096 2846     		mov	r0, r5
 1476 0098 0CBF     		ite	eq
 1477 009a 224B     		ldreq	r3, .L90+52
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 1478              		.loc 6 129 0
 1479 009c 224B     		ldrne	r3, .L90+56
 1480 009e 9847     		blx	r3
 1481              	.LVL88:
 1482              	.L86:
 1483              	.LBE441:
 1484              	.LBE440:
 266:quadrangleZigZag.cpp **** 	Trigger::enable(false);
 1485              		.loc 1 266 0
 1486 00a0 0020     		movs	r0, #0
 1487 00a2 224B     		ldr	r3, .L90+60
 1488              	.LBB445:
 1489              	.LBB446:
  67:control_impl.h **** 	Control<ALL>::resetPosPid();
 1490              		.loc 4 67 0
 1491 00a4 224D     		ldr	r5, .L90+64
  68:control_impl.h **** 	Control<ALL>::resetVPid();
 1492              		.loc 4 68 0
 1493 00a6 234C     		ldr	r4, .L90+68
 1494              	.LBE446:
 1495              	.LBE445:
 266:quadrangleZigZag.cpp **** 	Trigger::enable(false);
 1496              		.loc 1 266 0
 1497 00a8 9847     		blx	r3
 1498              	.LVL89:
 267:quadrangleZigZag.cpp **** 	yDirection = 1;
 1499              		.loc 1 267 0
 1500 00aa 2349     		ldr	r1, .L90+72
 269:quadrangleZigZag.cpp **** 	yIsLongSide = (stopY - startY) > (stopX - startX);
 1501              		.loc 1 269 0
 1502 00ac 3F68     		ldr	r7, [r7, #0]
 267:quadrangleZigZag.cpp **** 	yDirection = 1;
 1503              		.loc 1 267 0
 1504 00ae 0123     		movs	r3, #1
 1505 00b0 0B60     		str	r3, [r1, #0]
 268:quadrangleZigZag.cpp **** 	xDirection = 1;
 1506              		.loc 1 268 0
 1507 00b2 2249     		ldr	r1, .L90+76
 1508 00b4 0B60     		str	r3, [r1, #0]
 270:quadrangleZigZag.cpp **** 	yIsLongSide = false;
 1509              		.loc 1 270 0
 1510 00b6 2249     		ldr	r1, .L90+80
 1511 00b8 0022     		movs	r2, #0
 1512 00ba 0A70     		strb	r2, [r1, #0]
 271:quadrangleZigZag.cpp **** 	approachingX = yIsLongSide;
 1513              		.loc 1 271 0
 1514 00bc 2149     		ldr	r1, .L90+84
 1515 00be 0A70     		strb	r2, [r1, #0]
 272:quadrangleZigZag.cpp **** 	approachingStart = true;
 1516              		.loc 1 272 0
 1517 00c0 214A     		ldr	r2, .L90+88
 1518 00c2 1370     		strb	r3, [r2, #0]
 1519              	.LVL90:
 1520              	.LBB449:
 1521              	.LBB447:
  67:control_impl.h **** 	Control<ALL>::resetPosPid();
 1522              		.loc 4 67 0
 1523 00c4 A847     		blx	r5
 1524              	.LVL91:
  68:control_impl.h **** 	Control<ALL>::resetVPid();
 1525              		.loc 4 68 0
 1526 00c6 A047     		blx	r4
 1527              	.LVL92:
 1528              		.loc 4 69 0
 1529 00c8 204B     		ldr	r3, .L90+92
 1530              	.LBE447:
 1531              	.LBE449:
 274:quadrangleZigZag.cpp **** 	Control<Y>::setShallPosition(startY);
 1532              		.loc 1 274 0
 1533 00ca 3668     		ldr	r6, [r6, #0]
 1534              	.LVL93:
 1535              	.LBB450:
 1536              	.LBB448:
 1537              		.loc 4 69 0
 1538 00cc 1F60     		str	r7, [r3, #0]
 1539              	.LBE448:
 1540              	.LBE450:
 1541              	.LBB451:
 1542              	.LBB452:
  67:control_impl.h **** 	Control<ALL>::resetPosPid();
 1543              		.loc 4 67 0
 1544 00ce A847     		blx	r5
 1545              	.LVL94:
  68:control_impl.h **** 	Control<ALL>::resetVPid();
 1546              		.loc 4 68 0
 1547 00d0 A047     		blx	r4
 1548              	.LVL95:
 1549              		.loc 4 69 0
 1550 00d2 1F4B     		ldr	r3, .L90+96
 1551 00d4 1E60     		str	r6, [r3, #0]
 1552 00d6 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1553              	.LVL96:
 1554              	.L88:
 1555              	.LBE452:
 1556              	.LBE451:
 1557              	.LBB453:
 1558              	.LBB435:
 1559              	.LBB431:
 1560              	.LBB432:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 1561              		.loc 6 288 0
 1562 00d8 2068     		ldr	r0, [r4, #0]
 1563              	.LVL97:
 1564 00da 0E49     		ldr	r1, .L90+36
 1565 00dc 0368     		ldr	r3, [r0, #0]
 1566 00de DB68     		ldr	r3, [r3, #12]
 1567 00e0 9847     		blx	r3
 1568              	.LVL98:
 1569 00e2 CEE7     		b	.L83
 1570              	.LVL99:
 1571              	.L89:
 1572              	.LBE432:
 1573              	.LBE431:
 1574              	.LBE435:
 1575              	.LBE453:
 1576              	.LBB454:
 1577              	.LBB444:
 1578              	.LBB442:
 1579              	.LBB443:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 1580              		.loc 6 123 0
 1581 00e4 2868     		ldr	r0, [r5, #0]
 1582 00e6 0368     		ldr	r3, [r0, #0]
 1583 00e8 0A21     		movs	r1, #10
 1584 00ea 9B68     		ldr	r3, [r3, #8]
 1585 00ec 9847     		blx	r3
 1586              	.LVL100:
 1587 00ee D7E7     		b	.L86
 1588              	.L91:
 1589              		.align	2
 1590              	.L90:
 1591 00f0 0000FA44 		.word	1157234688
 1592 00f4 00000000 		.word	.LANCHOR10
 1593 00f8 00000000 		.word	dout
 1594 00fc 00000000 		.word	_ZN7ControlIL4Axis5EE8maxSpeedE
 1595 0100 00000000 		.word	.LANCHOR8
 1596 0104 00000000 		.word	.LANCHOR0
 1597 0108 00000000 		.word	.LANCHOR13
 1598 010c 00000000 		.word	.LANCHOR1
 1599 0110 00000000 		.word	.LANCHOR9
 1600 0114 10000000 		.word	.LC1
 1601 0118 00000000 		.word	_ZN4xpcc8IOStream8writeBinEPKc
 1602 011c 00000000 		.word	_ZN4xpcc8IOStream8writeHexEPKc
 1603 0120 00000000 		.word	_ZN4xpcc8IOStream10writeFloatERKf
 1604 0124 00000000 		.word	_ZN4xpcc8IOStream8writeBinEh
 1605 0128 00000000 		.word	_ZN4xpcc8IOStream8writeHexEh
 1606 012c 00000000 		.word	_ZN7Trigger6enableEb
 1607 0130 00000000 		.word	_ZN7ControlIL4Axis5EE11resetPosPidEv
 1608 0134 00000000 		.word	_ZN7ControlIL4Axis5EE9resetVPidEv
 1609 0138 00000000 		.word	.LANCHOR11
 1610 013c 00000000 		.word	.LANCHOR6
 1611 0140 00000000 		.word	.LANCHOR12
 1612 0144 00000000 		.word	.LANCHOR3
 1613 0148 00000000 		.word	.LANCHOR2
 1614 014c 00000000 		.word	_ZN7ControlIL4Axis0EE9pos_shallE
 1615 0150 00000000 		.word	_ZN7ControlIL4Axis2EE9pos_shallE
 1616              	.LBE443:
 1617              	.LBE442:
 1618              	.LBE444:
 1619              	.LBE454:
 1620              	.LBE459:
 1621              	.LBE481:
 1622              		.cfi_endproc
 1623              	.LFE1043:
 1625              		.section	.text._ZN16QuadrangleZigZag9configureEP5Pointi,"ax",%progbits
 1626              		.align	2
 1627              		.global	_ZN16QuadrangleZigZag9configureEP5Pointi
 1628              		.thumb
 1629              		.thumb_func
 1631              	_ZN16QuadrangleZigZag9configureEP5Pointi:
 1632              	.LFB1044:
 292:quadrangleZigZag.cpp **** 	start();
 293:quadrangleZigZag.cpp **** }
 294:quadrangleZigZag.cpp **** 
 295:quadrangleZigZag.cpp **** void QuadrangleZigZag::configure(Point points[4], int samplingResolution){
 1633              		.loc 1 295 0
 1634              		.cfi_startproc
 1635              		@ args = 0, pretend = 0, frame = 0
 1636              		@ frame_needed = 0, uses_anonymous_args = 0
 1637              	.LVL101:
 1638              	.LBB503:
 296:quadrangleZigZag.cpp **** 	QuadrangleZigZag::samplingResolution = samplingResolution;
 1639              		.loc 1 296 0
 1640 0000 3D4A     		ldr	r2, .L108
 1641              	.LBE503:
 295:quadrangleZigZag.cpp **** void QuadrangleZigZag::configure(Point points[4], int samplingResolution){
 1642              		.loc 1 295 0
 1643 0002 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1644              	.LCFI5:
 1645              		.cfi_def_cfa_offset 32
 1646              		.cfi_offset 3, -32
 1647              		.cfi_offset 4, -28
 1648              		.cfi_offset 5, -24
 1649              		.cfi_offset 6, -20
 1650              		.cfi_offset 7, -16
 1651              		.cfi_offset 8, -12
 1652              		.cfi_offset 9, -8
 1653              		.cfi_offset 14, -4
 1654              	.LBB534:
 297:quadrangleZigZag.cpp **** 	startX = XSTAGE_LENGTH_ENCODER;
 1655              		.loc 1 297 0
 1656 0006 3D4B     		ldr	r3, .L108+4
 1657 0008 3D4F     		ldr	r7, .L108+8
 298:quadrangleZigZag.cpp **** 	startY = YSTAGE_LENGTH_ENCODER;
 1658              		.loc 1 298 0
 1659 000a 3E4E     		ldr	r6, .L108+12
 299:quadrangleZigZag.cpp **** 	stopX = 0;
 1660              		.loc 1 299 0
 1661 000c DFF84491 		ldr	r9, .L108+92
 300:quadrangleZigZag.cpp **** 	stopY = 0;
 1662              		.loc 1 300 0
 1663 0010 DFF84481 		ldr	r8, .L108+96
 296:quadrangleZigZag.cpp **** 	QuadrangleZigZag::samplingResolution = samplingResolution;
 1664              		.loc 1 296 0
 1665 0014 1160     		str	r1, [r2, #0]
 299:quadrangleZigZag.cpp **** 	stopX = 0;
 1666              		.loc 1 299 0
 1667 0016 0022     		movs	r2, #0
 1668              		.loc 1 300 0
 1669 0018 1D46     		mov	r5, r3
 297:quadrangleZigZag.cpp **** 	startX = XSTAGE_LENGTH_ENCODER;
 1670              		.loc 1 297 0
 1671 001a 3B60     		str	r3, [r7, #0]
 298:quadrangleZigZag.cpp **** 	startY = YSTAGE_LENGTH_ENCODER;
 1672              		.loc 1 298 0
 1673 001c 3360     		str	r3, [r6, #0]
 1674              		.loc 1 300 0
 1675 001e 9E46     		mov	lr, r3
 1676 0020 1446     		mov	r4, r2
 299:quadrangleZigZag.cpp **** 	stopX = 0;
 1677              		.loc 1 299 0
 1678 0022 C9F80020 		str	r2, [r9, #0]
 1679              		.loc 1 300 0
 1680 0026 C8F80020 		str	r2, [r8, #0]
 1681              	.LVL102:
 1682 002a 9446     		mov	ip, r2
 301:quadrangleZigZag.cpp **** 
 302:quadrangleZigZag.cpp **** 	for(int i = 0; i < 4; i++){
 1683              		.loc 1 302 0
 1684 002c 1346     		mov	r3, r2
 1685              	.LVL103:
 1686              	.L98:
 1687              	.LBB504:
 1688              	.LBB505:
 303:quadrangleZigZag.cpp **** 		int x = points[i].x;
 1689              		.loc 1 303 0
 1690 002e 50F83310 		ldr	r1, [r0, r3, lsl #3]
 1691              	.LVL104:
 1692 0032 00EBC302 		add	r2, r0, r3, lsl #3
 304:quadrangleZigZag.cpp **** 		int y = points[i].y;
 1693              		.loc 1 304 0
 1694 0036 0133     		adds	r3, r3, #1
 1695              	.LVL105:
 1696 0038 5268     		ldr	r2, [r2, #4]
 1697              	.LVL106:
 305:quadrangleZigZag.cpp **** 		if(x < startX){
 1698              		.loc 1 305 0
 1699 003a 8E45     		cmp	lr, r1
 306:quadrangleZigZag.cpp **** 			startX = x;
 1700              		.loc 1 306 0
 1701 003c C8BF     		it	gt
 1702 003e 3960     		strgt	r1, [r7, #0]
 307:quadrangleZigZag.cpp **** 		}
 308:quadrangleZigZag.cpp **** 		if(x > stopX){
 1703              		.loc 1 308 0
 1704 0040 6145     		cmp	r1, ip
 309:quadrangleZigZag.cpp **** 			stopX = x;
 1705              		.loc 1 309 0
 1706 0042 C8BF     		it	gt
 1707 0044 C9F80010 		strgt	r1, [r9, #0]
 310:quadrangleZigZag.cpp **** 		}
 311:quadrangleZigZag.cpp **** 		if(y < startY){
 1708              		.loc 1 311 0
 1709 0048 AA42     		cmp	r2, r5
 312:quadrangleZigZag.cpp **** 			startY = y;
 1710              		.loc 1 312 0
 1711 004a B8BF     		it	lt
 1712 004c 3260     		strlt	r2, [r6, #0]
 313:quadrangleZigZag.cpp **** 		}
 314:quadrangleZigZag.cpp **** 		if(y > stopY){
 1713              		.loc 1 314 0
 1714 004e A242     		cmp	r2, r4
 315:quadrangleZigZag.cpp **** 			stopY = y;
 1715              		.loc 1 315 0
 1716 0050 C8BF     		it	gt
 1717 0052 C8F80020 		strgt	r2, [r8, #0]
 1718              	.LBE505:
 302:quadrangleZigZag.cpp **** 	for(int i = 0; i < 4; i++){
 1719              		.loc 1 302 0
 1720 0056 042B     		cmp	r3, #4
 1721 0058 07D0     		beq	.L97
 1722 005a D7F800E0 		ldr	lr, [r7, #0]
 1723 005e D9F800C0 		ldr	ip, [r9, #0]
 1724 0062 3568     		ldr	r5, [r6, #0]
 1725 0064 D8F80040 		ldr	r4, [r8, #0]
 1726 0068 E1E7     		b	.L98
 1727              	.L97:
 1728              	.LBE504:
 1729              	.LBB506:
 1730              	.LBB507:
 264:quadrangleZigZag.cpp **** 	maxSpeed = Control<ALL>::getMaxSpeed();
 1731              		.loc 1 264 0
 1732 006a 274A     		ldr	r2, .L108+16
 1733              	.LVL107:
 1734              	.LBB508:
 1735              	.LBB509:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 1736              		.loc 6 287 0
 1737 006c 274C     		ldr	r4, .L108+20
 1738              	.LBE509:
 1739              	.LBE508:
 264:quadrangleZigZag.cpp **** 	maxSpeed = Control<ALL>::getMaxSpeed();
 1740              		.loc 1 264 0
 1741 006e 1168     		ldr	r1, [r2, #0]	@ float
 1742              	.LVL108:
 1743              	.LBB515:
 1744              	.LBB512:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 1745              		.loc 6 287 0
 1746 0070 6368     		ldr	r3, [r4, #4]
 1747              	.LVL109:
 1748              	.LBE512:
 1749              	.LBE515:
 264:quadrangleZigZag.cpp **** 	maxSpeed = Control<ALL>::getMaxSpeed();
 1750              		.loc 1 264 0
 1751 0072 274A     		ldr	r2, .L108+24
 1752 0074 1160     		str	r1, [r2, #0]	@ float
 1753              	.LVL110:
 1754              	.LBB516:
 1755              	.LBB513:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 1756              		.loc 6 287 0
 1757 0076 002B     		cmp	r3, #0
 1758 0078 32D0     		beq	.L106
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 1759              		.loc 6 290 0
 1760 007a 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 1761              		.loc 6 291 0
 1762 007c 2046     		mov	r0, r4
 1763              	.LVL111:
 1764 007e 2549     		ldr	r1, .L108+28
 1765 0080 0CBF     		ite	eq
 1766 0082 254B     		ldreq	r3, .L108+32
 1767              		.loc 6 294 0
 1768 0084 254B     		ldrne	r3, .L108+36
 1769 0086 9847     		blx	r3
 1770              	.LVL112:
 1771              	.L100:
 1772              	.LBE513:
 1773              	.LBE516:
 1774              	.LBB517:
 1775              	.LBB518:
 269:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeFloat(v);
 1776              		.loc 6 269 0
 1777 0088 204D     		ldr	r5, .L108+20
 1778 008a 254B     		ldr	r3, .L108+40
 1779 008c 2049     		ldr	r1, .L108+24
 1780 008e 2846     		mov	r0, r5
 1781 0090 9847     		blx	r3
 1782              	.LVL113:
 1783              	.LBE518:
 1784              	.LBE517:
 1785              	.LBB519:
 1786              	.LBB520:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 1787              		.loc 6 122 0
 1788 0092 6368     		ldr	r3, [r4, #4]
 1789 0094 002B     		cmp	r3, #0
 1790 0096 29D0     		beq	.L107
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 1791              		.loc 6 126 0
 1792 0098 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 1793              		.loc 6 125 0
 1794 009a 022B     		cmp	r3, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 1795              		.loc 6 126 0
 1796 009c 2846     		mov	r0, r5
 1797 009e 0CBF     		ite	eq
 1798 00a0 204B     		ldreq	r3, .L108+44
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 1799              		.loc 6 129 0
 1800 00a2 214B     		ldrne	r3, .L108+48
 1801 00a4 9847     		blx	r3
 1802              	.LVL114:
 1803              	.L103:
 1804              	.LBE520:
 1805              	.LBE519:
 266:quadrangleZigZag.cpp **** 	Trigger::enable(false);
 1806              		.loc 1 266 0
 1807 00a6 0020     		movs	r0, #0
 1808 00a8 204B     		ldr	r3, .L108+52
 1809              	.LBB524:
 1810              	.LBB525:
  67:control_impl.h **** 	Control<ALL>::resetPosPid();
 1811              		.loc 4 67 0
 1812 00aa 214D     		ldr	r5, .L108+56
  68:control_impl.h **** 	Control<ALL>::resetVPid();
 1813              		.loc 4 68 0
 1814 00ac 214C     		ldr	r4, .L108+60
 1815              	.LBE525:
 1816              	.LBE524:
 266:quadrangleZigZag.cpp **** 	Trigger::enable(false);
 1817              		.loc 1 266 0
 1818 00ae 9847     		blx	r3
 1819              	.LVL115:
 267:quadrangleZigZag.cpp **** 	yDirection = 1;
 1820              		.loc 1 267 0
 1821 00b0 2149     		ldr	r1, .L108+64
 269:quadrangleZigZag.cpp **** 	yIsLongSide = (stopY - startY) > (stopX - startX);
 1822              		.loc 1 269 0
 1823 00b2 3F68     		ldr	r7, [r7, #0]
 267:quadrangleZigZag.cpp **** 	yDirection = 1;
 1824              		.loc 1 267 0
 1825 00b4 0123     		movs	r3, #1
 1826 00b6 0B60     		str	r3, [r1, #0]
 268:quadrangleZigZag.cpp **** 	xDirection = 1;
 1827              		.loc 1 268 0
 1828 00b8 2049     		ldr	r1, .L108+68
 1829 00ba 0B60     		str	r3, [r1, #0]
 270:quadrangleZigZag.cpp **** 	yIsLongSide = false;
 1830              		.loc 1 270 0
 1831 00bc 2049     		ldr	r1, .L108+72
 1832 00be 0022     		movs	r2, #0
 1833 00c0 0A70     		strb	r2, [r1, #0]
 271:quadrangleZigZag.cpp **** 	approachingX = yIsLongSide;
 1834              		.loc 1 271 0
 1835 00c2 2049     		ldr	r1, .L108+76
 1836 00c4 0A70     		strb	r2, [r1, #0]
 272:quadrangleZigZag.cpp **** 	approachingStart = true;
 1837              		.loc 1 272 0
 1838 00c6 204A     		ldr	r2, .L108+80
 1839 00c8 1370     		strb	r3, [r2, #0]
 1840              	.LVL116:
 1841              	.LBB528:
 1842              	.LBB526:
  67:control_impl.h **** 	Control<ALL>::resetPosPid();
 1843              		.loc 4 67 0
 1844 00ca A847     		blx	r5
 1845              	.LVL117:
  68:control_impl.h **** 	Control<ALL>::resetVPid();
 1846              		.loc 4 68 0
 1847 00cc A047     		blx	r4
 1848              	.LVL118:
 1849              		.loc 4 69 0
 1850 00ce 1F4B     		ldr	r3, .L108+84
 1851              	.LBE526:
 1852              	.LBE528:
 274:quadrangleZigZag.cpp **** 	Control<Y>::setShallPosition(startY);
 1853              		.loc 1 274 0
 1854 00d0 3668     		ldr	r6, [r6, #0]
 1855              	.LVL119:
 1856              	.LBB529:
 1857              	.LBB527:
 1858              		.loc 4 69 0
 1859 00d2 1F60     		str	r7, [r3, #0]
 1860              	.LBE527:
 1861              	.LBE529:
 1862              	.LBB530:
 1863              	.LBB531:
  67:control_impl.h **** 	Control<ALL>::resetPosPid();
 1864              		.loc 4 67 0
 1865 00d4 A847     		blx	r5
 1866              	.LVL120:
  68:control_impl.h **** 	Control<ALL>::resetVPid();
 1867              		.loc 4 68 0
 1868 00d6 A047     		blx	r4
 1869              	.LVL121:
 1870              		.loc 4 69 0
 1871 00d8 1D4B     		ldr	r3, .L108+88
 1872 00da 1E60     		str	r6, [r3, #0]
 1873 00dc BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1874              	.LVL122:
 1875              	.L106:
 1876              	.LBE531:
 1877              	.LBE530:
 1878              	.LBB532:
 1879              	.LBB514:
 1880              	.LBB510:
 1881              	.LBB511:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 1882              		.loc 6 288 0
 1883 00e0 2068     		ldr	r0, [r4, #0]
 1884              	.LVL123:
 1885 00e2 0C49     		ldr	r1, .L108+28
 1886 00e4 0368     		ldr	r3, [r0, #0]
 1887 00e6 DB68     		ldr	r3, [r3, #12]
 1888 00e8 9847     		blx	r3
 1889              	.LVL124:
 1890 00ea CDE7     		b	.L100
 1891              	.LVL125:
 1892              	.L107:
 1893              	.LBE511:
 1894              	.LBE510:
 1895              	.LBE514:
 1896              	.LBE532:
 1897              	.LBB533:
 1898              	.LBB523:
 1899              	.LBB521:
 1900              	.LBB522:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 1901              		.loc 6 123 0
 1902 00ec 2868     		ldr	r0, [r5, #0]
 1903 00ee 0368     		ldr	r3, [r0, #0]
 1904 00f0 0A21     		movs	r1, #10
 1905 00f2 9B68     		ldr	r3, [r3, #8]
 1906 00f4 9847     		blx	r3
 1907              	.LVL126:
 1908 00f6 D6E7     		b	.L103
 1909              	.L109:
 1910              		.align	2
 1911              	.L108:
 1912 00f8 00000000 		.word	.LANCHOR10
 1913 00fc 400D0300 		.word	200000
 1914 0100 00000000 		.word	.LANCHOR8
 1915 0104 00000000 		.word	.LANCHOR13
 1916 0108 00000000 		.word	_ZN7ControlIL4Axis5EE8maxSpeedE
 1917 010c 00000000 		.word	dout
 1918 0110 00000000 		.word	.LANCHOR9
 1919 0114 10000000 		.word	.LC1
 1920 0118 00000000 		.word	_ZN4xpcc8IOStream8writeBinEPKc
 1921 011c 00000000 		.word	_ZN4xpcc8IOStream8writeHexEPKc
 1922 0120 00000000 		.word	_ZN4xpcc8IOStream10writeFloatERKf
 1923 0124 00000000 		.word	_ZN4xpcc8IOStream8writeBinEh
 1924 0128 00000000 		.word	_ZN4xpcc8IOStream8writeHexEh
 1925 012c 00000000 		.word	_ZN7Trigger6enableEb
 1926 0130 00000000 		.word	_ZN7ControlIL4Axis5EE11resetPosPidEv
 1927 0134 00000000 		.word	_ZN7ControlIL4Axis5EE9resetVPidEv
 1928 0138 00000000 		.word	.LANCHOR11
 1929 013c 00000000 		.word	.LANCHOR6
 1930 0140 00000000 		.word	.LANCHOR12
 1931 0144 00000000 		.word	.LANCHOR3
 1932 0148 00000000 		.word	.LANCHOR2
 1933 014c 00000000 		.word	_ZN7ControlIL4Axis0EE9pos_shallE
 1934 0150 00000000 		.word	_ZN7ControlIL4Axis2EE9pos_shallE
 1935 0154 00000000 		.word	.LANCHOR0
 1936 0158 00000000 		.word	.LANCHOR1
 1937              	.LBE522:
 1938              	.LBE521:
 1939              	.LBE523:
 1940              	.LBE533:
 1941              	.LBE507:
 1942              	.LBE506:
 1943              	.LBE534:
 1944              		.cfi_endproc
 1945              	.LFE1044:
 1947              		.section	.text.startup._GLOBAL__sub_I__ZN16QuadrangleZigZag6startXE,"ax",%progbits
 1948              		.align	2
 1949              		.thumb
 1950              		.thumb_func
 1952              	_GLOBAL__sub_I__ZN16QuadrangleZigZag6startXE:
 1953              	.LFB1084:
 316:quadrangleZigZag.cpp **** 		}
 317:quadrangleZigZag.cpp **** 	}
 318:quadrangleZigZag.cpp **** 
 319:quadrangleZigZag.cpp **** 	start();
 320:quadrangleZigZag.cpp **** }
 1954              		.loc 1 320 0
 1955              		.cfi_startproc
 1956              		@ args = 0, pretend = 0, frame = 0
 1957              		@ frame_needed = 0, uses_anonymous_args = 0
 1958              		@ link register save eliminated.
 1959              	.LVL127:
 1960              	.LBB535:
 1961              	.LBB536:
 1962              	.LBB537:
 1963              	.LBB538:
 1964              	.LBB539:
  57:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 			time(time)
 1965              		.loc 7 57 0
 1966 0000 024B     		ldr	r3, .L111
 1967 0002 0022     		movs	r2, #0
 1968 0004 1A60     		str	r2, [r3, #0]
 1969              	.LBE539:
 1970              	.LBE538:
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 	endTime(0), state(EXPIRED)
 1971              		.loc 3 37 0
 1972 0006 0222     		movs	r2, #2
 1973 0008 1A71     		strb	r2, [r3, #4]
 1974 000a 7047     		bx	lr
 1975              	.L112:
 1976              		.align	2
 1977              	.L111:
 1978 000c 00000000 		.word	.LANCHOR4
 1979              	.LBE537:
 1980              	.LBE536:
 1981              	.LBE535:
 1982              		.cfi_endproc
 1983              	.LFE1084:
 1985              		.section	.init_array,"aw",%init_array
 1986              		.align	2
 1987 0000 00000000 		.word	_GLOBAL__sub_I__ZN16QuadrangleZigZag6startXE(target1)
 1988              		.weak	_ZN7ControlIL4Axis2EE4v_isE
 1989              		.section	.bss._ZN7ControlIL4Axis2EE4v_isE,"awG",%nobits,_ZN7ControlIL4Axis2EE4v_isE,comdat
 1990              		.align	2
 1993              	_ZN7ControlIL4Axis2EE4v_isE:
 1994 0000 00000000 		.space	4
 1995              		.weak	_ZN7ControlIL4Axis2EE9pos_shallE
 1996              		.section	.bss._ZN7ControlIL4Axis2EE9pos_shallE,"awG",%nobits,_ZN7ControlIL4Axis2EE9pos_shallE,comd
 1997              		.align	2
 2000              	_ZN7ControlIL4Axis2EE9pos_shallE:
 2001 0000 00000000 		.space	4
 2002              		.weak	_ZN7ControlIL4Axis0EE9pos_shallE
 2003              		.section	.bss._ZN7ControlIL4Axis0EE9pos_shallE,"awG",%nobits,_ZN7ControlIL4Axis0EE9pos_shallE,comd
 2004              		.align	2
 2007              	_ZN7ControlIL4Axis0EE9pos_shallE:
 2008 0000 00000000 		.space	4
 2009              		.global	_ZN16QuadrangleZigZag18samplingResolutionE
 2010              		.global	_ZN16QuadrangleZigZag5stopYE
 2011              		.global	_ZN16QuadrangleZigZag6startYE
 2012              		.global	_ZN16QuadrangleZigZag5stopXE
 2013              		.global	_ZN16QuadrangleZigZag6startXE
 2014              		.weak	_ZN7ControlIL4Axis5EE8maxSpeedE
 2015              		.section	.bss._ZN7ControlIL4Axis5EE8maxSpeedE,"awG",%nobits,_ZN7ControlIL4Axis5EE8maxSpeedE,comdat
 2016              		.align	2
 2019              	_ZN7ControlIL4Axis5EE8maxSpeedE:
 2020 0000 00000000 		.space	4
 2021              		.section	.bss._ZL16approachingStart,"aw",%nobits
 2022              		.set	.LANCHOR2,. + 0
 2025              	_ZL16approachingStart:
 2026 0000 00       		.space	1
 2027              		.section	.bss._ZL8maxSpeed,"aw",%nobits
 2028              		.align	2
 2029              		.set	.LANCHOR9,. + 0
 2032              	_ZL8maxSpeed:
 2033 0000 00000000 		.space	4
 2034              		.section	.data._ZN12_GLOBAL__N_111yIsLongSideE,"aw",%progbits
 2035              		.set	.LANCHOR12,. + 0
 2038              	_ZN12_GLOBAL__N_111yIsLongSideE:
 2039 0000 01       		.byte	1
 2040              		.section	.bss._ZL12timerRunning,"aw",%nobits
 2041              		.set	.LANCHOR5,. + 0
 2044              	_ZL12timerRunning:
 2045 0000 00       		.space	1
 2046              		.section	.bss._ZN12_GLOBAL__N_112approachingXE,"aw",%nobits
 2047              		.set	.LANCHOR3,. + 0
 2050              	_ZN12_GLOBAL__N_112approachingXE:
 2051 0000 00       		.space	1
 2052              		.section	.bss._ZN16QuadrangleZigZag6startYE,"aw",%nobits
 2053              		.align	2
 2054              		.set	.LANCHOR13,. + 0
 2057              	_ZN16QuadrangleZigZag6startYE:
 2058 0000 00000000 		.space	4
 2059              		.section	.rodata.str1.4,"aMS",%progbits,1
 2060              		.align	2
 2061              	.LC0:
 2062 0000 50617474 		.ascii	"Pattern done\000"
 2062      65726E20 
 2062      646F6E65 
 2062      00
 2063 000d 000000   		.space	3
 2064              	.LC1:
 2065 0010 70617474 		.ascii	"pattern max speed: \000"
 2065      65726E20 
 2065      6D617820 
 2065      73706565 
 2065      643A2000 
 2066              		.section	.bss._ZL7timeout,"aw",%nobits
 2067              		.align	2
 2068              		.set	.LANCHOR4,. + 0
 2071              	_ZL7timeout:
 2072 0000 00000000 		.space	8
 2072      00000000 
 2073              		.section	.bss._ZN12_GLOBAL__N_110yDirectionE,"aw",%nobits
 2074              		.align	2
 2075              		.set	.LANCHOR11,. + 0
 2078              	_ZN12_GLOBAL__N_110yDirectionE:
 2079 0000 00000000 		.space	4
 2080              		.section	.bss._ZN16QuadrangleZigZag5stopXE,"aw",%nobits
 2081              		.align	2
 2082              		.set	.LANCHOR0,. + 0
 2085              	_ZN16QuadrangleZigZag5stopXE:
 2086 0000 00000000 		.space	4
 2087              		.section	.bss._ZN16QuadrangleZigZag6startXE,"aw",%nobits
 2088              		.align	2
 2089              		.set	.LANCHOR8,. + 0
 2092              	_ZN16QuadrangleZigZag6startXE:
 2093 0000 00000000 		.space	4
 2094              		.section	.bss._ZL1i,"aw",%nobits
 2095              		.align	2
 2096              		.set	.LANCHOR7,. + 0
 2099              	_ZL1i:
 2100 0000 00000000 		.space	4
 2101              		.section	.bss._ZN16QuadrangleZigZag5stopYE,"aw",%nobits
 2102              		.align	2
 2103              		.set	.LANCHOR1,. + 0
 2106              	_ZN16QuadrangleZigZag5stopYE:
 2107 0000 00000000 		.space	4
 2108              		.section	.bss._ZN16QuadrangleZigZag18samplingResolutionE,"aw",%nobits
 2109              		.align	2
 2110              		.set	.LANCHOR10,. + 0
 2113              	_ZN16QuadrangleZigZag18samplingResolutionE:
 2114 0000 00000000 		.space	4
 2115              		.section	.bss._ZN12_GLOBAL__N_110xDirectionE,"aw",%nobits
 2116              		.align	2
 2117              		.set	.LANCHOR6,. + 0
 2120              	_ZN12_GLOBAL__N_110xDirectionE:
 2121 0000 00000000 		.space	4
 2122              		.text
 2123              	.Letext0:
 2124              		.file 9 "project.h"
 2125              		.file 10 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/st
 2126              		.file 11 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/c
 2127              		.file 12 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/u
 2128              		.file 13 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/u
 2129              		.file 14 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/gpio.hpp"
 2130              		.file 15 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/f
 2131              		.file 16 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/connectivity/i2c/constants.hpp"
 2132              		.file 17 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/atomic.hpp"
 2133              		.file 18 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp"
 2134              		.file 19 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/connectivity/can/message.hpp"
 2135              		.file 20 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/template_metaprogramming.hpp"
 2136              		.file 21 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/clock.hpp"
 2137              		.file 22 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/accessor/ram.hpp"
 2138              		.file 23 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout.hpp"
 2139              		.file 24 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/include/stddef.h"
 2140              		.file 25 "<built-in>"
 2141              		.file 26 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c+
 2142              		.file 27 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c+
 2143              		.file 28 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/st
 2144              		.file 29 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/st
 2145              		.file 30 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c+
 2146              		.file 31 "quadrangleZigZag.h"
 2147              		.file 32 "/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h"
 2148              		.file 33 "pcInterface.h"
DEFINED SYMBOLS
                            *ABS*:00000000 quadrangleZigZag.cpp
     /tmp/ccDa4X02.s:20     .text._ZN16QuadrangleZigZag7isAtEndEv:00000000 $t
     /tmp/ccDa4X02.s:25     .text._ZN16QuadrangleZigZag7isAtEndEv:00000000 _ZN16QuadrangleZigZag7isAtEndEv
     /tmp/ccDa4X02.s:78     .text._ZN16QuadrangleZigZag7isAtEndEv:00000030 $d
     /tmp/ccDa4X02.s:2007   .bss._ZN7ControlIL4Axis0EE9pos_shallE:00000000 _ZN7ControlIL4Axis0EE9pos_shallE
     /tmp/ccDa4X02.s:86     .text._ZN16QuadrangleZigZag6sampleEv:00000000 $t
     /tmp/ccDa4X02.s:91     .text._ZN16QuadrangleZigZag6sampleEv:00000000 _ZN16QuadrangleZigZag6sampleEv
     /tmp/ccDa4X02.s:622    .text._ZN16QuadrangleZigZag6sampleEv:000001d0 $d
     /tmp/ccDa4X02.s:2000   .bss._ZN7ControlIL4Axis2EE9pos_shallE:00000000 _ZN7ControlIL4Axis2EE9pos_shallE
     /tmp/ccDa4X02.s:1993   .bss._ZN7ControlIL4Axis2EE4v_isE:00000000 _ZN7ControlIL4Axis2EE4v_isE
     /tmp/ccDa4X02.s:661    .text._ZN16QuadrangleZigZag5startEv:00000000 $t
     /tmp/ccDa4X02.s:666    .text._ZN16QuadrangleZigZag5startEv:00000000 _ZN16QuadrangleZigZag5startEv
     /tmp/ccDa4X02.s:853    .text._ZN16QuadrangleZigZag5startEv:00000094 $d
     /tmp/ccDa4X02.s:2019   .bss._ZN7ControlIL4Axis5EE8maxSpeedE:00000000 _ZN7ControlIL4Axis5EE8maxSpeedE
     /tmp/ccDa4X02.s:882    .text._ZN16QuadrangleZigZag9configureEffffi:00000000 $t
     /tmp/ccDa4X02.s:887    .text._ZN16QuadrangleZigZag9configureEffffi:00000000 _ZN16QuadrangleZigZag9configureEffffi
     /tmp/ccDa4X02.s:1213   .text._ZN16QuadrangleZigZag9configureEffffi:00000108 $d
     /tmp/ccDa4X02.s:1248   .text._ZN16QuadrangleZigZag10configure2Effffi:00000000 $t
     /tmp/ccDa4X02.s:1253   .text._ZN16QuadrangleZigZag10configure2Effffi:00000000 _ZN16QuadrangleZigZag10configure2Effffi
     /tmp/ccDa4X02.s:1591   .text._ZN16QuadrangleZigZag10configure2Effffi:000000f0 $d
     /tmp/ccDa4X02.s:1626   .text._ZN16QuadrangleZigZag9configureEP5Pointi:00000000 $t
     /tmp/ccDa4X02.s:1631   .text._ZN16QuadrangleZigZag9configureEP5Pointi:00000000 _ZN16QuadrangleZigZag9configureEP5Pointi
     /tmp/ccDa4X02.s:1912   .text._ZN16QuadrangleZigZag9configureEP5Pointi:000000f8 $d
     /tmp/ccDa4X02.s:1948   .text.startup._GLOBAL__sub_I__ZN16QuadrangleZigZag6startXE:00000000 $t
     /tmp/ccDa4X02.s:1952   .text.startup._GLOBAL__sub_I__ZN16QuadrangleZigZag6startXE:00000000 _GLOBAL__sub_I__ZN16QuadrangleZigZag6startXE
     /tmp/ccDa4X02.s:1978   .text.startup._GLOBAL__sub_I__ZN16QuadrangleZigZag6startXE:0000000c $d
     /tmp/ccDa4X02.s:1986   .init_array:00000000 $d
     /tmp/ccDa4X02.s:1990   .bss._ZN7ControlIL4Axis2EE4v_isE:00000000 $d
     /tmp/ccDa4X02.s:1997   .bss._ZN7ControlIL4Axis2EE9pos_shallE:00000000 $d
     /tmp/ccDa4X02.s:2004   .bss._ZN7ControlIL4Axis0EE9pos_shallE:00000000 $d
     /tmp/ccDa4X02.s:2113   .bss._ZN16QuadrangleZigZag18samplingResolutionE:00000000 _ZN16QuadrangleZigZag18samplingResolutionE
     /tmp/ccDa4X02.s:2106   .bss._ZN16QuadrangleZigZag5stopYE:00000000 _ZN16QuadrangleZigZag5stopYE
     /tmp/ccDa4X02.s:2057   .bss._ZN16QuadrangleZigZag6startYE:00000000 _ZN16QuadrangleZigZag6startYE
     /tmp/ccDa4X02.s:2085   .bss._ZN16QuadrangleZigZag5stopXE:00000000 _ZN16QuadrangleZigZag5stopXE
     /tmp/ccDa4X02.s:2092   .bss._ZN16QuadrangleZigZag6startXE:00000000 _ZN16QuadrangleZigZag6startXE
     /tmp/ccDa4X02.s:2016   .bss._ZN7ControlIL4Axis5EE8maxSpeedE:00000000 $d
     /tmp/ccDa4X02.s:2025   .bss._ZL16approachingStart:00000000 _ZL16approachingStart
     /tmp/ccDa4X02.s:2026   .bss._ZL16approachingStart:00000000 $d
     /tmp/ccDa4X02.s:2028   .bss._ZL8maxSpeed:00000000 $d
     /tmp/ccDa4X02.s:2032   .bss._ZL8maxSpeed:00000000 _ZL8maxSpeed
     /tmp/ccDa4X02.s:2038   .data._ZN12_GLOBAL__N_111yIsLongSideE:00000000 _ZN12_GLOBAL__N_111yIsLongSideE
     /tmp/ccDa4X02.s:2044   .bss._ZL12timerRunning:00000000 _ZL12timerRunning
     /tmp/ccDa4X02.s:2045   .bss._ZL12timerRunning:00000000 $d
     /tmp/ccDa4X02.s:2050   .bss._ZN12_GLOBAL__N_112approachingXE:00000000 _ZN12_GLOBAL__N_112approachingXE
     /tmp/ccDa4X02.s:2051   .bss._ZN12_GLOBAL__N_112approachingXE:00000000 $d
     /tmp/ccDa4X02.s:2053   .bss._ZN16QuadrangleZigZag6startYE:00000000 $d
     /tmp/ccDa4X02.s:2060   .rodata.str1.4:00000000 $d
     /tmp/ccDa4X02.s:2067   .bss._ZL7timeout:00000000 $d
     /tmp/ccDa4X02.s:2071   .bss._ZL7timeout:00000000 _ZL7timeout
     /tmp/ccDa4X02.s:2074   .bss._ZN12_GLOBAL__N_110yDirectionE:00000000 $d
     /tmp/ccDa4X02.s:2078   .bss._ZN12_GLOBAL__N_110yDirectionE:00000000 _ZN12_GLOBAL__N_110yDirectionE
     /tmp/ccDa4X02.s:2081   .bss._ZN16QuadrangleZigZag5stopXE:00000000 $d
     /tmp/ccDa4X02.s:2088   .bss._ZN16QuadrangleZigZag6startXE:00000000 $d
     /tmp/ccDa4X02.s:2095   .bss._ZL1i:00000000 $d
     /tmp/ccDa4X02.s:2099   .bss._ZL1i:00000000 _ZL1i
     /tmp/ccDa4X02.s:2102   .bss._ZN16QuadrangleZigZag5stopYE:00000000 $d
     /tmp/ccDa4X02.s:2109   .bss._ZN16QuadrangleZigZag18samplingResolutionE:00000000 $d
     /tmp/ccDa4X02.s:2116   .bss._ZN12_GLOBAL__N_110xDirectionE:00000000 $d
     /tmp/ccDa4X02.s:2120   .bss._ZN12_GLOBAL__N_110xDirectionE:00000000 _ZN12_GLOBAL__N_110xDirectionE
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
_ZN7ControlIL4Axis2EE13getIsPositionEv
_ZN7ControlIL4Axis0EE13getIsPositionEv
_ZN7ControlIL4Axis5EE11setMaxSpeedEf
_ZN7ControlIL4Axis5EE11resetPosPidEv
_ZN7ControlIL4Axis5EE9resetVPidEv
_ZN7Pattern7runningE
_ZN7Pattern6pausedE
dout
_ZN5State3setEi
_ZN4xpcc8IOStream8writeBinEPKc
_ZN4xpcc8IOStream8writeHexEPKc
_ZN4xpcc8IOStream8writeBinEh
_ZN4xpcc8IOStream8writeHexEh
_ZN4xpcc5Clock3nowEv
_ZN4xpcc8IOStream10writeFloatERKf
_ZN7Trigger6enableEb
