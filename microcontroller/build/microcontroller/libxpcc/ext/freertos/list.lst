   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 2
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"list.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.vListInitialise,"ax",%progbits
  20              		.align	2
  21              		.global	vListInitialise
  22              		.thumb
  23              		.thumb_func
  25              	vListInitialise:
  26              	.LFB2:
  27              		.file 1 "/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c"
   1:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** /*
   2:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c ****     FreeRTOS V7.0.1 - Copyright (C) 2011 Real Time Engineers Ltd.
   3:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	
   4:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 
   5:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	FreeRTOS supports many tools and architectures. V7.0.0 is sponsored by:
   6:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	Atollic AB - Atollic provides professional embedded systems development 
   7:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	tools for C/C++ development, code analysis and test automation.  
   8:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	See http://www.atollic.com
   9:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	
  10:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 
  11:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c ****     ***************************************************************************
  12:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c ****      *                                                                       *
  13:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c ****      *    FreeRTOS tutorial books are available in pdf and paperback.        *
  14:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c ****      *    Complete, revised, and edited pdf reference manuals are also       *
  15:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c ****      *    available.                                                         *
  16:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c ****      *                                                                       *
  17:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c ****      *    Purchasing FreeRTOS documentation will not only help you, by       *
  18:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c ****      *    ensuring you get running as quickly as possible and with an        *
  19:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c ****      *    in-depth knowledge of how to use FreeRTOS, it will also help       *
  20:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c ****      *    the FreeRTOS project to continue with its mission of providing     *
  21:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c ****      *    professional grade, cross platform, de facto standard solutions    *
  22:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c ****      *    for microcontrollers - completely free of charge!                  *
  23:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c ****      *                                                                       *
  24:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c ****      *    >>> See http://www.FreeRTOS.org/Documentation for details. <<<     *
  25:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c ****      *                                                                       *
  26:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c ****      *    Thank you for using FreeRTOS, and thank you for your support!      *
  27:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c ****      *                                                                       *
  28:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c ****     ***************************************************************************
  29:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 
  30:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 
  31:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c ****     This file is part of the FreeRTOS distribution.
  32:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 
  33:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  34:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c ****     the terms of the GNU General Public License (version 2) as published by the
  35:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c ****     Free Software Foundation AND MODIFIED BY the FreeRTOS exception.
  36:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c ****     >>>NOTE<<< The modification to the GPL is included to allow you to
  37:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c ****     distribute a combined work that includes FreeRTOS without being obliged to
  38:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c ****     provide the source code for proprietary components outside of the FreeRTOS
  39:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c ****     kernel.  FreeRTOS is distributed in the hope that it will be useful, but
  40:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c ****     WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
  41:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c ****     or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
  42:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c ****     more details. You should have received a copy of the GNU General Public
  43:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c ****     License and the FreeRTOS license exception along with FreeRTOS; if not it
  44:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c ****     can be viewed here: http://www.freertos.org/a00114.html and also obtained
  45:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c ****     by writing to Richard Barry, contact details for whom are available on the
  46:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c ****     FreeRTOS WEB site.
  47:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 
  48:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c ****     1 tab == 4 spaces!
  49:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 
  50:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c ****     http://www.FreeRTOS.org - Documentation, latest information, license and
  51:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c ****     contact details.
  52:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 
  53:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c ****     http://www.SafeRTOS.com - A version that is certified for use in safety
  54:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c ****     critical systems.
  55:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 
  56:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c ****     http://www.OpenRTOS.com - Commercial support, development, porting,
  57:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c ****     licensing and training services.
  58:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** */
  59:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 
  60:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 
  61:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** #include <stdlib.h>
  62:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** #include "FreeRTOS.h"
  63:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** #include "list.h"
  64:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 
  65:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** /*-----------------------------------------------------------
  66:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c ****  * PUBLIC LIST API documented in list.h
  67:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c ****  *----------------------------------------------------------*/
  68:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 
  69:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** void vListInitialise( xList *pxList )
  70:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** {
  28              		.loc 1 70 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  71:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	/* The list structure contains a list item which is used to mark the
  72:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	end of the list.  To initialise the list the list end is inserted
  73:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	as the only list entry. */
  74:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	pxList->pxIndex = ( xListItem * ) &( pxList->xListEnd );
  34              		.loc 1 74 0
  35 0000 00F10803 		add	r3, r0, #8
  75:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 
  76:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	/* The list end value is the highest possible value in the list to
  77:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	ensure it remains at the end of the list. */
  78:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	pxList->xListEnd.xItemValue = portMAX_DELAY;
  36              		.loc 1 78 0
  37 0004 4FF0FF32 		mov	r2, #-1
  38 0008 8260     		str	r2, [r0, #8]
  74:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	pxList->pxIndex = ( xListItem * ) &( pxList->xListEnd );
  39              		.loc 1 74 0
  40 000a 4360     		str	r3, [r0, #4]
  79:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 
  80:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	/* The list end next and previous pointers point to itself so we know
  81:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	when the list is empty. */
  82:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	pxList->xListEnd.pxNext = ( xListItem * ) &( pxList->xListEnd );
  41              		.loc 1 82 0
  42 000c C360     		str	r3, [r0, #12]
  83:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	pxList->xListEnd.pxPrevious = ( xListItem * ) &( pxList->xListEnd );
  43              		.loc 1 83 0
  44 000e 0361     		str	r3, [r0, #16]
  84:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 
  85:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	pxList->uxNumberOfItems = ( unsigned portBASE_TYPE ) 0U;
  45              		.loc 1 85 0
  46 0010 0023     		movs	r3, #0
  47 0012 0360     		str	r3, [r0, #0]
  48 0014 7047     		bx	lr
  49              		.cfi_endproc
  50              	.LFE2:
  52 0016 00BF     		.section	.text.vListInitialiseItem,"ax",%progbits
  53              		.align	2
  54              		.global	vListInitialiseItem
  55              		.thumb
  56              		.thumb_func
  58              	vListInitialiseItem:
  59              	.LFB3:
  86:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** }
  87:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** /*-----------------------------------------------------------*/
  88:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 
  89:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** void vListInitialiseItem( xListItem *pxItem )
  90:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** {
  60              		.loc 1 90 0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 0, uses_anonymous_args = 0
  64              		@ link register save eliminated.
  65              	.LVL1:
  91:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	/* Make sure the list item is not recorded as being on a list. */
  92:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	pxItem->pvContainer = NULL;
  66              		.loc 1 92 0
  67 0000 0023     		movs	r3, #0
  68 0002 0361     		str	r3, [r0, #16]
  69 0004 7047     		bx	lr
  70              		.cfi_endproc
  71              	.LFE3:
  73 0006 00BF     		.section	.text.vListInsertEnd,"ax",%progbits
  74              		.align	2
  75              		.global	vListInsertEnd
  76              		.thumb
  77              		.thumb_func
  79              	vListInsertEnd:
  80              	.LFB4:
  93:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** }
  94:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** /*-----------------------------------------------------------*/
  95:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 
  96:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** void vListInsertEnd( xList *pxList, xListItem *pxNewListItem )
  97:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** {
  81              		.loc 1 97 0
  82              		.cfi_startproc
  83              		@ args = 0, pretend = 0, frame = 0
  84              		@ frame_needed = 0, uses_anonymous_args = 0
  85              		@ link register save eliminated.
  86              	.LVL2:
  98:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** volatile xListItem * pxIndex;
  99:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 
 100:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	/* Insert a new list item into pxList, but rather than sort the list,
 101:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	makes the new list item the last item to be removed by a call to
 102:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	pvListGetOwnerOfNextEntry.  This means it has to be the item pointed to by
 103:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	the pxIndex member. */
 104:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	pxIndex = pxList->pxIndex;
  87              		.loc 1 104 0
  88 0000 4368     		ldr	r3, [r0, #4]
  89              	.LVL3:
 105:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 
 106:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	pxNewListItem->pxNext = pxIndex->pxNext;
  90              		.loc 1 106 0
  91 0002 5A68     		ldr	r2, [r3, #4]
 107:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	pxNewListItem->pxPrevious = pxList->pxIndex;
  92              		.loc 1 107 0
  93 0004 8B60     		str	r3, [r1, #8]
 106:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	pxNewListItem->pxNext = pxIndex->pxNext;
  94              		.loc 1 106 0
  95 0006 4A60     		str	r2, [r1, #4]
 108:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	pxIndex->pxNext->pxPrevious = ( volatile xListItem * ) pxNewListItem;
  96              		.loc 1 108 0
  97 0008 5A68     		ldr	r2, [r3, #4]
  98 000a 9160     		str	r1, [r2, #8]
 109:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	pxIndex->pxNext = ( volatile xListItem * ) pxNewListItem;
  99              		.loc 1 109 0
 100 000c 5960     		str	r1, [r3, #4]
 110:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	pxList->pxIndex = ( volatile xListItem * ) pxNewListItem;
 111:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 
 112:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	/* Remember which list the item is in. */
 113:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	pxNewListItem->pvContainer = ( void * ) pxList;
 114:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 
 115:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	( pxList->uxNumberOfItems )++;
 101              		.loc 1 115 0
 102 000e 0368     		ldr	r3, [r0, #0]
 103              	.LVL4:
 110:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	pxList->pxIndex = ( volatile xListItem * ) pxNewListItem;
 104              		.loc 1 110 0
 105 0010 4160     		str	r1, [r0, #4]
 106              		.loc 1 115 0
 107 0012 0133     		adds	r3, r3, #1
 113:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	pxNewListItem->pvContainer = ( void * ) pxList;
 108              		.loc 1 113 0
 109 0014 0861     		str	r0, [r1, #16]
 110              		.loc 1 115 0
 111 0016 0360     		str	r3, [r0, #0]
 112 0018 7047     		bx	lr
 113              		.cfi_endproc
 114              	.LFE4:
 116 001a 00BF     		.section	.text.vListInsert,"ax",%progbits
 117              		.align	2
 118              		.global	vListInsert
 119              		.thumb
 120              		.thumb_func
 122              	vListInsert:
 123              	.LFB5:
 116:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** }
 117:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** /*-----------------------------------------------------------*/
 118:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 
 119:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** void vListInsert( xList *pxList, xListItem *pxNewListItem )
 120:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** {
 124              		.loc 1 120 0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128              		@ link register save eliminated.
 129              	.LVL5:
 130 0000 10B4     		push	{r4}
 131              	.LCFI0:
 132              		.cfi_def_cfa_offset 4
 133              		.cfi_offset 4, -4
 121:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** volatile xListItem *pxIterator;
 122:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** portTickType xValueOfInsertion;
 123:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 
 124:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	/* Insert the new list item into the list, sorted in ulListItem order. */
 125:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	xValueOfInsertion = pxNewListItem->xItemValue;
 134              		.loc 1 125 0
 135 0002 0C68     		ldr	r4, [r1, #0]
 136              	.LVL6:
 126:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 
 127:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	/* If the list already contains a list item with the same item value then
 128:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	the new list item should be placed after it.  This ensures that TCB's which
 129:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	are stored in ready lists (all of which have the same ulListItem value)
 130:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	get an equal share of the CPU.  However, if the xItemValue is the same as
 131:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	the back marker the iteration loop below will not end.  This means we need
 132:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	to guard against this by checking the value first and modifying the
 133:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	algorithm slightly if necessary. */
 134:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	if( xValueOfInsertion == portMAX_DELAY )
 137              		.loc 1 134 0
 138 0004 631C     		adds	r3, r4, #1
 139 0006 15D0     		beq	.L11
 135:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	{
 136:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 		pxIterator = pxList->xListEnd.pxPrevious;
 137:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	}
 138:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	else
 139:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	{
 140:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 		/* *** NOTE ***********************************************************
 141:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 		If you find your application is crashing here then likely causes are:
 142:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 			1) Stack overflow -
 143:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 			   see http://www.freertos.org/Stacks-and-stack-overflow-checking.html
 144:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 			2) Incorrect interrupt priority assignment, especially on Cortex-M3
 145:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 			   parts where numerically high priority values denote low actual
 146:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 			   interrupt priories, which can seem counter intuitive.  See
 147:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 			   configMAX_SYSCALL_INTERRUPT_PRIORITY on http://www.freertos.org/a00110.html
 148:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 			3) Calling an API function from within a critical section or when
 149:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 			   the scheduler is suspended.
 150:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 			4) Using a queue or semaphore before it has been initialised or
 151:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 			   before the scheduler has been started (are interrupts firing
 152:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 			   before vTaskStartScheduler() has been called?).
 153:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 		See http://www.freertos.org/FAQHelp.html for more tips.
 154:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 		**********************************************************************/
 155:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 		
 156:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 		for( pxIterator = ( xListItem * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValue
 140              		.loc 1 156 0
 141 0008 C368     		ldr	r3, [r0, #12]
 142 000a 1A68     		ldr	r2, [r3, #0]
 143 000c 9442     		cmp	r4, r2
 144 000e 00F10803 		add	r3, r0, #8
 145              	.LVL7:
 146 0012 04D3     		bcc	.L6
 147              	.L8:
 148              		.loc 1 156 0 is_stmt 0 discriminator 2
 149 0014 5B68     		ldr	r3, [r3, #4]
 150              	.LVL8:
 151 0016 5A68     		ldr	r2, [r3, #4]
 152 0018 1268     		ldr	r2, [r2, #0]
 153 001a 9442     		cmp	r4, r2
 154 001c FAD2     		bcs	.L8
 155              	.L6:
 157:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 		{
 158:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 			/* There is nothing to do here, we are just iterating to the
 159:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 			wanted insertion position. */
 160:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 		}
 161:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	}
 162:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 
 163:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	pxNewListItem->pxNext = pxIterator->pxNext;
 156              		.loc 1 163 0 is_stmt 1
 157 001e 5A68     		ldr	r2, [r3, #4]
 164:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	pxNewListItem->pxNext->pxPrevious = ( volatile xListItem * ) pxNewListItem;
 165:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	pxNewListItem->pxPrevious = pxIterator;
 166:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	pxIterator->pxNext = ( volatile xListItem * ) pxNewListItem;
 167:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 
 168:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	/* Remember which list the item is in.  This allows fast removal of the
 169:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	item later. */
 170:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	pxNewListItem->pvContainer = ( void * ) pxList;
 158              		.loc 1 170 0
 159 0020 0861     		str	r0, [r1, #16]
 164:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	pxNewListItem->pxNext->pxPrevious = ( volatile xListItem * ) pxNewListItem;
 160              		.loc 1 164 0
 161 0022 9160     		str	r1, [r2, #8]
 163:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	pxNewListItem->pxNext = pxIterator->pxNext;
 162              		.loc 1 163 0
 163 0024 4A60     		str	r2, [r1, #4]
 166:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	pxIterator->pxNext = ( volatile xListItem * ) pxNewListItem;
 164              		.loc 1 166 0
 165 0026 5960     		str	r1, [r3, #4]
 171:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 
 172:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	( pxList->uxNumberOfItems )++;
 166              		.loc 1 172 0
 167 0028 0268     		ldr	r2, [r0, #0]
 165:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	pxNewListItem->pxPrevious = pxIterator;
 168              		.loc 1 165 0
 169 002a 8B60     		str	r3, [r1, #8]
 170              		.loc 1 172 0
 171 002c 531C     		adds	r3, r2, #1
 172              	.LVL9:
 173 002e 0360     		str	r3, [r0, #0]
 173:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** }
 174              		.loc 1 173 0
 175 0030 10BC     		pop	{r4}
 176 0032 7047     		bx	lr
 177              	.LVL10:
 178              	.L11:
 136:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 		pxIterator = pxList->xListEnd.pxPrevious;
 179              		.loc 1 136 0
 180 0034 0369     		ldr	r3, [r0, #16]
 181              	.LVL11:
 182 0036 F2E7     		b	.L6
 183              		.cfi_endproc
 184              	.LFE5:
 186              		.section	.text.vListRemove,"ax",%progbits
 187              		.align	2
 188              		.global	vListRemove
 189              		.thumb
 190              		.thumb_func
 192              	vListRemove:
 193              	.LFB6:
 174:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** /*-----------------------------------------------------------*/
 175:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 
 176:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** void vListRemove( xListItem *pxItemToRemove )
 177:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** {
 194              		.loc 1 177 0
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 0
 197              		@ frame_needed = 0, uses_anonymous_args = 0
 198              		@ link register save eliminated.
 199              	.LVL12:
 178:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** xList * pxList;
 179:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 
 180:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 200              		.loc 1 180 0
 201 0000 4268     		ldr	r2, [r0, #4]
 202 0002 8168     		ldr	r1, [r0, #8]
 181:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 182:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	
 183:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	/* The list item knows which list it is in.  Obtain the list from the list
 184:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	item. */
 185:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	pxList = ( xList * ) pxItemToRemove->pvContainer;
 203              		.loc 1 185 0
 204 0004 0369     		ldr	r3, [r0, #16]
 205              	.LVL13:
 177:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** {
 206              		.loc 1 177 0
 207 0006 10B4     		push	{r4}
 208              	.LCFI1:
 209              		.cfi_def_cfa_offset 4
 210              		.cfi_offset 4, -4
 180:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 211              		.loc 1 180 0
 212 0008 9160     		str	r1, [r2, #8]
 181:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 213              		.loc 1 181 0
 214 000a 8168     		ldr	r1, [r0, #8]
 186:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 
 187:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	/* Make sure the index is left pointing to a valid item. */
 188:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	if( pxList->pxIndex == pxItemToRemove )
 215              		.loc 1 188 0
 216 000c 5C68     		ldr	r4, [r3, #4]
 181:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 217              		.loc 1 181 0
 218 000e 4A60     		str	r2, [r1, #4]
 189:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	{
 190:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 		pxList->pxIndex = pxItemToRemove->pxPrevious;
 191:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	}
 192:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 
 193:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	pxItemToRemove->pvContainer = NULL;
 194:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	( pxList->uxNumberOfItems )--;
 219              		.loc 1 194 0
 220 0010 1A68     		ldr	r2, [r3, #0]
 188:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	if( pxList->pxIndex == pxItemToRemove )
 221              		.loc 1 188 0
 222 0012 8442     		cmp	r4, r0
 190:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 		pxList->pxIndex = pxItemToRemove->pxPrevious;
 223              		.loc 1 190 0
 224 0014 08BF     		it	eq
 225 0016 5960     		streq	r1, [r3, #4]
 226              		.loc 1 194 0
 227 0018 013A     		subs	r2, r2, #1
 193:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** 	pxItemToRemove->pvContainer = NULL;
 228              		.loc 1 193 0
 229 001a 0021     		movs	r1, #0
 230 001c 0161     		str	r1, [r0, #16]
 231              		.loc 1 194 0
 232 001e 1A60     		str	r2, [r3, #0]
 195:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.c **** }
 233              		.loc 1 195 0
 234 0020 10BC     		pop	{r4}
 235 0022 7047     		bx	lr
 236              		.cfi_endproc
 237              	.LFE6:
 239              		.text
 240              	.Letext0:
 241              		.file 2 "/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.h"
 242              		.file 3 "/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h"
DEFINED SYMBOLS
                            *ABS*:00000000 list.c
     /tmp/ccyIUURX.s:20     .text.vListInitialise:00000000 $t
     /tmp/ccyIUURX.s:25     .text.vListInitialise:00000000 vListInitialise
     /tmp/ccyIUURX.s:53     .text.vListInitialiseItem:00000000 $t
     /tmp/ccyIUURX.s:58     .text.vListInitialiseItem:00000000 vListInitialiseItem
     /tmp/ccyIUURX.s:74     .text.vListInsertEnd:00000000 $t
     /tmp/ccyIUURX.s:79     .text.vListInsertEnd:00000000 vListInsertEnd
     /tmp/ccyIUURX.s:117    .text.vListInsert:00000000 $t
     /tmp/ccyIUURX.s:122    .text.vListInsert:00000000 vListInsert
     /tmp/ccyIUURX.s:187    .text.vListRemove:00000000 $t
     /tmp/ccyIUURX.s:192    .text.vListRemove:00000000 vListRemove
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
