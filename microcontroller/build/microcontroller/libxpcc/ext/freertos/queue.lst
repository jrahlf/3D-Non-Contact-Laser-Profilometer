   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 2
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"queue.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.xQueueCreate,"ax",%progbits
  20              		.align	2
  21              		.global	xQueueCreate
  22              		.thumb
  23              		.thumb_func
  25              	xQueueCreate:
  26              	.LFB2:
  27              		.file 1 "/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c"
   1:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** /*
   2:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****     FreeRTOS V7.0.1 - Copyright (C) 2011 Real Time Engineers Ltd.
   3:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	
   4:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
   5:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	FreeRTOS supports many tools and architectures. V7.0.0 is sponsored by:
   6:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	Atollic AB - Atollic provides professional embedded systems development 
   7:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	tools for C/C++ development, code analysis and test automation.  
   8:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	See http://www.atollic.com
   9:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	
  10:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
  11:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****     ***************************************************************************
  12:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****      *                                                                       *
  13:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****      *    FreeRTOS tutorial books are available in pdf and paperback.        *
  14:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****      *    Complete, revised, and edited pdf reference manuals are also       *
  15:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****      *    available.                                                         *
  16:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****      *                                                                       *
  17:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****      *    Purchasing FreeRTOS documentation will not only help you, by       *
  18:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****      *    ensuring you get running as quickly as possible and with an        *
  19:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****      *    in-depth knowledge of how to use FreeRTOS, it will also help       *
  20:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****      *    the FreeRTOS project to continue with its mission of providing     *
  21:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****      *    professional grade, cross platform, de facto standard solutions    *
  22:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****      *    for microcontrollers - completely free of charge!                  *
  23:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****      *                                                                       *
  24:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****      *    >>> See http://www.FreeRTOS.org/Documentation for details. <<<     *
  25:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****      *                                                                       *
  26:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****      *    Thank you for using FreeRTOS, and thank you for your support!      *
  27:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****      *                                                                       *
  28:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****     ***************************************************************************
  29:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
  30:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
  31:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****     This file is part of the FreeRTOS distribution.
  32:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
  33:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  34:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****     the terms of the GNU General Public License (version 2) as published by the
  35:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****     Free Software Foundation AND MODIFIED BY the FreeRTOS exception.
  36:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****     >>>NOTE<<< The modification to the GPL is included to allow you to
  37:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****     distribute a combined work that includes FreeRTOS without being obliged to
  38:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****     provide the source code for proprietary components outside of the FreeRTOS
  39:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****     kernel.  FreeRTOS is distributed in the hope that it will be useful, but
  40:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****     WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
  41:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****     or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
  42:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****     more details. You should have received a copy of the GNU General Public
  43:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****     License and the FreeRTOS license exception along with FreeRTOS; if not it
  44:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****     can be viewed here: http://www.freertos.org/a00114.html and also obtained
  45:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****     by writing to Richard Barry, contact details for whom are available on the
  46:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****     FreeRTOS WEB site.
  47:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
  48:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****     1 tab == 4 spaces!
  49:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
  50:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****     http://www.FreeRTOS.org - Documentation, latest information, license and
  51:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****     contact details.
  52:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
  53:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****     http://www.SafeRTOS.com - A version that is certified for use in safety
  54:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****     critical systems.
  55:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
  56:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****     http://www.OpenRTOS.com - Commercial support, development, porting,
  57:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****     licensing and training services.
  58:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** */
  59:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
  60:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** #include <stdlib.h>
  61:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** #include <string.h>
  62:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
  63:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  64:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** all the API functions to use the MPU wrappers.  That should only be done when
  65:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** task.h is included from an application file. */
  66:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  67:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
  68:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** #include "FreeRTOS.h"
  69:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** #include "task.h"
  70:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** #include "croutine.h"
  71:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
  72:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  73:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
  74:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** /*-----------------------------------------------------------
  75:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****  * PUBLIC LIST API documented in list.h
  76:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****  *----------------------------------------------------------*/
  77:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
  78:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** /* Constants used with the cRxLock and cTxLock structure members. */
  79:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** #define queueUNLOCKED					( ( signed portBASE_TYPE ) -1 )
  80:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** #define queueLOCKED_UNMODIFIED			( ( signed portBASE_TYPE ) 0 )
  81:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
  82:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** #define queueERRONEOUS_UNBLOCK			( -1 )
  83:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
  84:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** /* For internal use only. */
  85:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** #define	queueSEND_TO_BACK				( 0 )
  86:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** #define	queueSEND_TO_FRONT				( 1 )
  87:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
  88:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** /* Effectively make a union out of the xQUEUE structure. */
  89:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** #define pxMutexHolder					pcTail
  90:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** #define uxQueueType						pcHead
  91:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** #define uxRecursiveCallCount			pcReadFrom
  92:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** #define queueQUEUE_IS_MUTEX				NULL
  93:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
  94:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** /* Semaphores do not actually store or copy data, so have an items size of
  95:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** zero. */
  96:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** #define queueSEMAPHORE_QUEUE_ITEM_LENGTH ( 0 )
  97:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** #define queueDONT_BLOCK					 ( ( portTickType ) 0 )
  98:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** #define queueMUTEX_GIVE_BLOCK_TIME		 ( ( portTickType ) 0 )
  99:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 100:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** /*
 101:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****  * Definition of the queue used by the scheduler.
 102:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****  * Items are queued by copy, not reference.
 103:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****  */
 104:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** typedef struct QueueDefinition
 105:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** {
 106:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	signed char *pcHead;				/*< Points to the beginning of the queue storage area. */
 107:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	signed char *pcTail;				/*< Points to the byte at the end of the queue storage area.  Once more by
 108:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 109:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	signed char *pcWriteTo;				/*< Points to the free next place in the storage area. */
 110:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	signed char *pcReadFrom;			/*< Points to the last place that a queued item was read from. */
 111:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 112:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	xList xTasksWaitingToSend;				/*< List of tasks that are blocked waiting to post onto this queue. 
 113:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	xList xTasksWaitingToReceive;			/*< List of tasks that are blocked waiting to read from this queue
 114:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 115:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	volatile unsigned portBASE_TYPE uxMessagesWaiting;/*< The number of items currently in the queue. 
 116:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	unsigned portBASE_TYPE uxLength;		/*< The length of the queue defined as the number of items it wi
 117:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	unsigned portBASE_TYPE uxItemSize;		/*< The size of each items that the queue will hold. */
 118:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 119:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	signed portBASE_TYPE xRxLock;			/*< Stores the number of items received from the queue (removed fr
 120:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	signed portBASE_TYPE xTxLock;			/*< Stores the number of items transmitted to the queue (added to 
 121:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 122:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** } xQUEUE;
 123:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** /*-----------------------------------------------------------*/
 124:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 125:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** /*
 126:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****  * Inside this file xQueueHandle is a pointer to a xQUEUE structure.
 127:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****  * To keep the definition private the API header file defines it as a
 128:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****  * pointer to void.
 129:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****  */
 130:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** typedef xQUEUE * xQueueHandle;
 131:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 132:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** /*
 133:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****  * Prototypes for public functions are included here so we don't have to
 134:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****  * include the API header file (as it defines xQueueHandle differently).  These
 135:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****  * functions are documented in the API header file.
 136:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****  */
 137:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** xQueueHandle xQueueCreate( unsigned portBASE_TYPE uxQueueLength, unsigned portBASE_TYPE uxItemSize 
 138:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** signed portBASE_TYPE xQueueGenericSend( xQueueHandle xQueue, const void * const pvItemToQueue, port
 139:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** unsigned portBASE_TYPE uxQueueMessagesWaiting( const xQueueHandle pxQueue ) PRIVILEGED_FUNCTION;
 140:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** void vQueueDelete( xQueueHandle xQueue ) PRIVILEGED_FUNCTION;
 141:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** signed portBASE_TYPE xQueueGenericSendFromISR( xQueueHandle pxQueue, const void * const pvItemToQue
 142:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** signed portBASE_TYPE xQueueGenericReceive( xQueueHandle pxQueue, void * const pvBuffer, portTickTyp
 143:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** signed portBASE_TYPE xQueueReceiveFromISR( xQueueHandle pxQueue, void * const pvBuffer, signed port
 144:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** xQueueHandle xQueueCreateMutex( void ) PRIVILEGED_FUNCTION;
 145:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** xQueueHandle xQueueCreateCountingSemaphore( unsigned portBASE_TYPE uxCountValue, unsigned portBASE_
 146:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** portBASE_TYPE xQueueTakeMutexRecursive( xQueueHandle xMutex, portTickType xBlockTime ) PRIVILEGED_F
 147:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** portBASE_TYPE xQueueGiveMutexRecursive( xQueueHandle xMutex ) PRIVILEGED_FUNCTION;
 148:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** signed portBASE_TYPE xQueueAltGenericSend( xQueueHandle pxQueue, const void * const pvItemToQueue, 
 149:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** signed portBASE_TYPE xQueueAltGenericReceive( xQueueHandle pxQueue, void * const pvBuffer, portTick
 150:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** signed portBASE_TYPE xQueueIsQueueEmptyFromISR( const xQueueHandle pxQueue ) PRIVILEGED_FUNCTION;
 151:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** signed portBASE_TYPE xQueueIsQueueFullFromISR( const xQueueHandle pxQueue ) PRIVILEGED_FUNCTION;
 152:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** unsigned portBASE_TYPE uxQueueMessagesWaitingFromISR( const xQueueHandle pxQueue ) PRIVILEGED_FUNCT
 153:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** void vQueueWaitForMessageRestricted( xQueueHandle pxQueue, portTickType xTicksToWait ) PRIVILEGED_F
 154:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 155:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** /*
 156:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****  * Co-routine queue functions differ from task queue functions.  Co-routines are
 157:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****  * an optional component.
 158:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****  */
 159:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** #if configUSE_CO_ROUTINES == 1
 160:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	signed portBASE_TYPE xQueueCRSendFromISR( xQueueHandle pxQueue, const void *pvItemToQueue, signed 
 161:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	signed portBASE_TYPE xQueueCRReceiveFromISR( xQueueHandle pxQueue, void *pvBuffer, signed portBASE
 162:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	signed portBASE_TYPE xQueueCRSend( xQueueHandle pxQueue, const void *pvItemToQueue, portTickType x
 163:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	signed portBASE_TYPE xQueueCRReceive( xQueueHandle pxQueue, void *pvBuffer, portTickType xTicksToW
 164:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** #endif
 165:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 166:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** /*
 167:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****  * The queue registry is just a means for kernel aware debuggers to locate
 168:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****  * queue structures.  It has no other purpose so is an optional component.
 169:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****  */
 170:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** #if configQUEUE_REGISTRY_SIZE > 0
 171:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 172:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	/* The type stored within the queue registry array.  This allows a name
 173:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	to be assigned to each queue making kernel aware debugging a little
 174:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	more user friendly. */
 175:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	typedef struct QUEUE_REGISTRY_ITEM
 176:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	{
 177:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		signed char *pcQueueName;
 178:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		xQueueHandle xHandle;
 179:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	} xQueueRegistryItem;
 180:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 181:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	/* The queue registry is simply an array of xQueueRegistryItem structures.
 182:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	The pcQueueName member of a structure being NULL is indicative of the
 183:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	array position being vacant. */
 184:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	xQueueRegistryItem xQueueRegistry[ configQUEUE_REGISTRY_SIZE ];
 185:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 186:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	/* Removes a queue from the registry by simply setting the pcQueueName
 187:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	member to NULL. */
 188:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	static void vQueueUnregisterQueue( xQueueHandle xQueue ) PRIVILEGED_FUNCTION;
 189:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	void vQueueAddToRegistry( xQueueHandle xQueue, signed char *pcQueueName ) PRIVILEGED_FUNCTION;
 190:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** #endif
 191:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 192:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** /*
 193:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****  * Unlocks a queue locked by a call to prvLockQueue.  Locking a queue does not
 194:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****  * prevent an ISR from adding or removing items to the queue, but does prevent
 195:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****  * an ISR from removing tasks from the queue event lists.  If an ISR finds a
 196:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****  * queue is locked it will instead increment the appropriate queue lock count
 197:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****  * to indicate that a task may require unblocking.  When the queue in unlocked
 198:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****  * these lock counts are inspected, and the appropriate action taken.
 199:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****  */
 200:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** static void prvUnlockQueue( xQueueHandle pxQueue ) PRIVILEGED_FUNCTION;
 201:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 202:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** /*
 203:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****  * Uses a critical section to determine if there is any data in a queue.
 204:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****  *
 205:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****  * @return pdTRUE if the queue contains no items, otherwise pdFALSE.
 206:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****  */
 207:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** static signed portBASE_TYPE prvIsQueueEmpty( const xQueueHandle pxQueue ) PRIVILEGED_FUNCTION;
 208:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 209:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** /*
 210:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****  * Uses a critical section to determine if there is any space in a queue.
 211:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****  *
 212:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****  * @return pdTRUE if there is no space, otherwise pdFALSE;
 213:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****  */
 214:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** static signed portBASE_TYPE prvIsQueueFull( const xQueueHandle pxQueue ) PRIVILEGED_FUNCTION;
 215:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 216:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** /*
 217:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****  * Copies an item into the queue, either at the front of the queue or the
 218:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****  * back of the queue.
 219:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****  */
 220:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** static void prvCopyDataToQueue( xQUEUE *pxQueue, const void *pvItemToQueue, portBASE_TYPE xPosition
 221:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 222:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** /*
 223:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****  * Copies an item out of a queue.
 224:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****  */
 225:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** static void prvCopyDataFromQueue( xQUEUE * const pxQueue, const void *pvBuffer ) PRIVILEGED_FUNCTIO
 226:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** /*-----------------------------------------------------------*/
 227:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 228:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** /*
 229:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****  * Macro to mark a queue as locked.  Locking a queue prevents an ISR from
 230:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****  * accessing the queue event lists.
 231:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****  */
 232:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** #define prvLockQueue( pxQueue )								\
 233:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskENTER_CRITICAL();									\
 234:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	{														\
 235:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		if( ( pxQueue )->xRxLock == queueUNLOCKED )			\
 236:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		{													\
 237:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			( pxQueue )->xRxLock = queueLOCKED_UNMODIFIED;	\
 238:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		}													\
 239:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		if( ( pxQueue )->xTxLock == queueUNLOCKED )			\
 240:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		{													\
 241:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			( pxQueue )->xTxLock = queueLOCKED_UNMODIFIED;	\
 242:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		}													\
 243:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	}														\
 244:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskEXIT_CRITICAL()
 245:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** /*-----------------------------------------------------------*/
 246:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 247:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 248:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** /*-----------------------------------------------------------
 249:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****  * PUBLIC QUEUE MANAGEMENT API documented in queue.h
 250:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c ****  *----------------------------------------------------------*/
 251:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 252:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** xQueueHandle xQueueCreate( unsigned portBASE_TYPE uxQueueLength, unsigned portBASE_TYPE uxItemSize 
 253:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** {
  28              		.loc 1 253 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 32
  36              		.cfi_offset 3, -32
  37              		.cfi_offset 4, -28
  38              		.cfi_offset 5, -24
  39              		.cfi_offset 6, -20
  40              		.cfi_offset 7, -16
  41              		.cfi_offset 8, -12
  42              		.cfi_offset 9, -8
  43              		.cfi_offset 14, -4
 254:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** xQUEUE *pxNewQueue;
 255:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** size_t xQueueSizeInBytes;
 256:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** xQueueHandle xReturn = NULL;
 257:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 258:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	/* Allocate the new queue structure. */
 259:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	if( uxQueueLength > ( unsigned portBASE_TYPE ) 0 )
  44              		.loc 1 259 0
  45 0004 0646     		mov	r6, r0
 253:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** {
  46              		.loc 1 253 0
  47 0006 0F46     		mov	r7, r1
  48              		.loc 1 259 0
  49 0008 38B3     		cbz	r0, .L4
 260:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	{
 261:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		pxNewQueue = ( xQUEUE * ) pvPortMalloc( sizeof( xQUEUE ) );
  50              		.loc 1 261 0
  51 000a 4C20     		movs	r0, #76
  52              	.LVL1:
  53 000c 174D     		ldr	r5, .L10
  54 000e A847     		blx	r5
  55              	.LVL2:
 262:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		if( pxNewQueue != NULL )
  56              		.loc 1 262 0
  57 0010 0446     		mov	r4, r0
  58 0012 10B3     		cbz	r0, .L4
 263:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		{
 264:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			/* Create the list of pointers to queue items.  The queue is one byte
 265:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			longer than asked for to make wrap checking easier/faster. */
 266:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ) + ( size_t ) 1;
  59              		.loc 1 266 0
  60 0014 06FB07F8 		mul	r8, r6, r7
  61              	.LVL3:
 267:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 268:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			pxNewQueue->pcHead = ( signed char * ) pvPortMalloc( xQueueSizeInBytes );
  62              		.loc 1 268 0
  63 0018 08F10100 		add	r0, r8, #1
  64              	.LVL4:
  65 001c A847     		blx	r5
  66              	.LVL5:
  67 001e 0546     		mov	r5, r0
  68 0020 2060     		str	r0, [r4, #0]
 269:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( pxNewQueue->pcHead != NULL )
  69              		.loc 1 269 0
  70 0022 E8B1     		cbz	r0, .L5
 270:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			{
 271:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				/* Initialise the queue members as described above where the
 272:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				queue type is defined. */
 273:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				pxNewQueue->pcTail = pxNewQueue->pcHead + ( uxQueueLength * uxItemSize );
  71              		.loc 1 273 0
  72 0024 00EB0801 		add	r1, r0, r8
 274:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				pxNewQueue->uxMessagesWaiting = ( unsigned portBASE_TYPE ) 0U;
 275:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				pxNewQueue->pcWriteTo = pxNewQueue->pcHead;
 276:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				pxNewQueue->pcReadFrom = pxNewQueue->pcHead + ( ( uxQueueLength - ( unsigned portBASE_TYPE ) 1U
  73              		.loc 1 276 0
  74 0028 721E     		subs	r2, r6, #1
  75 002a 07FB0202 		mla	r2, r7, r2, r0
 277:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				pxNewQueue->uxLength = uxQueueLength;
 278:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				pxNewQueue->uxItemSize = uxItemSize;
 279:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				pxNewQueue->xRxLock = queueUNLOCKED;
  76              		.loc 1 279 0
  77 002e 4FF0FF33 		mov	r3, #-1
 273:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				pxNewQueue->pcTail = pxNewQueue->pcHead + ( uxQueueLength * uxItemSize );
  78              		.loc 1 273 0
  79 0032 6160     		str	r1, [r4, #4]
 274:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				pxNewQueue->uxMessagesWaiting = ( unsigned portBASE_TYPE ) 0U;
  80              		.loc 1 274 0
  81 0034 0021     		movs	r1, #0
 280:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				pxNewQueue->xTxLock = queueUNLOCKED;
 281:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 282:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				/* Likewise ensure the event queues start with the correct state. */
 283:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				vListInitialise( &( pxNewQueue->xTasksWaitingToSend ) );
  82              		.loc 1 283 0
  83 0036 04F11000 		add	r0, r4, #16
  84 003a DFF83890 		ldr	r9, .L10+8
 274:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				pxNewQueue->uxMessagesWaiting = ( unsigned portBASE_TYPE ) 0U;
  85              		.loc 1 274 0
  86 003e A163     		str	r1, [r4, #56]
 276:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				pxNewQueue->pcReadFrom = pxNewQueue->pcHead + ( ( uxQueueLength - ( unsigned portBASE_TYPE ) 1U
  87              		.loc 1 276 0
  88 0040 E260     		str	r2, [r4, #12]
 279:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				pxNewQueue->xRxLock = queueUNLOCKED;
  89              		.loc 1 279 0
  90 0042 6364     		str	r3, [r4, #68]
 280:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				pxNewQueue->xTxLock = queueUNLOCKED;
  91              		.loc 1 280 0
  92 0044 A364     		str	r3, [r4, #72]
 275:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				pxNewQueue->pcWriteTo = pxNewQueue->pcHead;
  93              		.loc 1 275 0
  94 0046 A560     		str	r5, [r4, #8]
 277:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				pxNewQueue->uxLength = uxQueueLength;
  95              		.loc 1 277 0
  96 0048 E663     		str	r6, [r4, #60]
 278:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				pxNewQueue->uxItemSize = uxItemSize;
  97              		.loc 1 278 0
  98 004a 2764     		str	r7, [r4, #64]
  99              		.loc 1 283 0
 100 004c C847     		blx	r9
 101              	.LVL6:
 284:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				vListInitialise( &( pxNewQueue->xTasksWaitingToReceive ) );
 102              		.loc 1 284 0
 103 004e 04F12400 		add	r0, r4, #36
 104 0052 C847     		blx	r9
 105              	.LVL7:
 106 0054 2046     		mov	r0, r4
 107 0056 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 108              	.LVL8:
 109              	.L4:
 256:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** xQueueHandle xReturn = NULL;
 110              		.loc 1 256 0
 111 005a 0020     		movs	r0, #0
 112 005c BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 113              	.LVL9:
 114              	.L5:
 285:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 286:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				traceQUEUE_CREATE( pxNewQueue );
 287:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				xReturn = pxNewQueue;
 288:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			}
 289:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			else
 290:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			{
 291:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				traceQUEUE_CREATE_FAILED();
 292:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				vPortFree( pxNewQueue );
 115              		.loc 1 292 0
 116 0060 2046     		mov	r0, r4
 117 0062 034B     		ldr	r3, .L10+4
 118 0064 9847     		blx	r3
 119              	.LVL10:
 256:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** xQueueHandle xReturn = NULL;
 120              		.loc 1 256 0
 121 0066 2846     		mov	r0, r5
 122              	.LVL11:
 293:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			}
 294:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		}
 295:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	}
 296:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 297:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	configASSERT( xReturn );
 298:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 299:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	return xReturn;
 300:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** }
 123              		.loc 1 300 0
 124 0068 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 125              	.L11:
 126              		.align	2
 127              	.L10:
 128 006c 00000000 		.word	pvPortMalloc
 129 0070 00000000 		.word	vPortFree
 130 0074 00000000 		.word	vListInitialise
 131              		.cfi_endproc
 132              	.LFE2:
 134              		.section	.text.xQueueCreateMutex,"ax",%progbits
 135              		.align	2
 136              		.global	xQueueCreateMutex
 137              		.thumb
 138              		.thumb_func
 140              	xQueueCreateMutex:
 141              	.LFB3:
 301:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** /*-----------------------------------------------------------*/
 302:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 303:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** #if ( configUSE_MUTEXES == 1 )
 304:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 305:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	xQueueHandle xQueueCreateMutex( void )
 306:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	{
 142              		.loc 1 306 0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 16
 145              		@ frame_needed = 0, uses_anonymous_args = 0
 146 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 147              	.LCFI1:
 148              		.cfi_def_cfa_offset 36
 149              		.cfi_offset 4, -36
 150              		.cfi_offset 5, -32
 151              		.cfi_offset 6, -28
 152              		.cfi_offset 7, -24
 153              		.cfi_offset 8, -20
 154              		.cfi_offset 9, -16
 155              		.cfi_offset 10, -12
 156              		.cfi_offset 11, -8
 157              		.cfi_offset 14, -4
 307:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	xQUEUE *pxNewQueue;
 308:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 309:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		/* Allocate the new queue structure. */
 310:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		pxNewQueue = ( xQUEUE * ) pvPortMalloc( sizeof( xQUEUE ) );
 158              		.loc 1 310 0
 159 0004 4C20     		movs	r0, #76
 306:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	{
 160              		.loc 1 306 0
 161 0006 85B0     		sub	sp, sp, #20
 162              	.LCFI2:
 163              		.cfi_def_cfa_offset 56
 164              		.loc 1 310 0
 165 0008 8B4B     		ldr	r3, .L118
 166 000a 9847     		blx	r3
 167              	.LVL12:
 311:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		if( pxNewQueue != NULL )
 168              		.loc 1 311 0
 169 000c 0446     		mov	r4, r0
 170 000e 0028     		cmp	r0, #0
 171 0010 00F0B680 		beq	.L13
 312:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		{
 313:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			/* Information required for priority inheritance. */
 314:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			pxNewQueue->pxMutexHolder = NULL;
 172              		.loc 1 314 0
 173 0014 4FF00008 		mov	r8, #0
 315:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 316:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 317:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			/* Queues used as a mutex no data is actually copied into or out
 318:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			of the queue. */
 319:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			pxNewQueue->pcWriteTo = NULL;
 320:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			pxNewQueue->pcReadFrom = NULL;
 321:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 322:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			/* Each mutex has a length of 1 (like a binary semaphore) and
 323:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			an item size of 0 as nothing is actually copied into or out
 324:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			of the mutex. */
 325:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			pxNewQueue->uxMessagesWaiting = ( unsigned portBASE_TYPE ) 0U;
 326:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			pxNewQueue->uxLength = ( unsigned portBASE_TYPE ) 1U;
 327:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			pxNewQueue->uxItemSize = ( unsigned portBASE_TYPE ) 0U;
 328:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			pxNewQueue->xRxLock = queueUNLOCKED;
 174              		.loc 1 328 0
 175 0018 4FF0FF33 		mov	r3, #-1
 326:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			pxNewQueue->uxLength = ( unsigned portBASE_TYPE ) 1U;
 176              		.loc 1 326 0
 177 001c 0122     		movs	r2, #1
 329:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			pxNewQueue->xTxLock = queueUNLOCKED;
 330:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 331:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			/* Ensure the event queues start with the correct state. */
 332:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			vListInitialise( &( pxNewQueue->xTasksWaitingToSend ) );
 178              		.loc 1 332 0
 179 001e 00F11006 		add	r6, r0, #16
 326:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			pxNewQueue->uxLength = ( unsigned portBASE_TYPE ) 1U;
 180              		.loc 1 326 0
 181 0022 E263     		str	r2, [r4, #60]
 328:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			pxNewQueue->xRxLock = queueUNLOCKED;
 182              		.loc 1 328 0
 183 0024 6364     		str	r3, [r4, #68]
 329:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			pxNewQueue->xTxLock = queueUNLOCKED;
 184              		.loc 1 329 0
 185 0026 A364     		str	r3, [r4, #72]
 186              		.loc 1 332 0
 187 0028 844D     		ldr	r5, .L118+4
 314:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			pxNewQueue->pxMutexHolder = NULL;
 188              		.loc 1 314 0
 189 002a C4F80480 		str	r8, [r4, #4]
 190              		.loc 1 332 0
 191 002e 3046     		mov	r0, r6
 192              	.LVL13:
 315:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 193              		.loc 1 315 0
 194 0030 C4F80080 		str	r8, [r4, #0]
 319:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			pxNewQueue->pcWriteTo = NULL;
 195              		.loc 1 319 0
 196 0034 C4F80880 		str	r8, [r4, #8]
 320:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			pxNewQueue->pcReadFrom = NULL;
 197              		.loc 1 320 0
 198 0038 C4F80C80 		str	r8, [r4, #12]
 325:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			pxNewQueue->uxMessagesWaiting = ( unsigned portBASE_TYPE ) 0U;
 199              		.loc 1 325 0
 200 003c C4F83880 		str	r8, [r4, #56]
 327:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			pxNewQueue->uxItemSize = ( unsigned portBASE_TYPE ) 0U;
 201              		.loc 1 327 0
 202 0040 C4F84080 		str	r8, [r4, #64]
 333:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			vListInitialise( &( pxNewQueue->xTasksWaitingToReceive ) );
 203              		.loc 1 333 0
 204 0044 04F12407 		add	r7, r4, #36
 332:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			vListInitialise( &( pxNewQueue->xTasksWaitingToSend ) );
 205              		.loc 1 332 0
 206 0048 A847     		blx	r5
 207              	.LVL14:
 208 004a DFF80092 		ldr	r9, .L118+20
 209              		.loc 1 333 0
 210 004e 3846     		mov	r0, r7
 211 0050 A847     		blx	r5
 212              	.LVL15:
 213 0052 CDF80480 		str	r8, [sp, #4]
 214              	.LVL16:
 215              	.LBB22:
 216              	.LBB23:
 334:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 335:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			/* Start with the semaphore in the expected state. */
 336:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			xQueueGenericSend( pxNewQueue, NULL, ( portTickType ) 0U, queueSEND_TO_BACK );
 337:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 338:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			traceCREATE_MUTEX( pxNewQueue );
 339:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		}
 340:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		else
 341:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		{
 342:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			traceCREATE_MUTEX_FAILED();
 343:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		}
 344:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 345:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		configASSERT( pxNewQueue );
 346:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		return pxNewQueue;
 347:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	}
 348:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 349:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** #endif /* configUSE_MUTEXES */
 350:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** /*-----------------------------------------------------------*/
 351:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 352:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** #if configUSE_RECURSIVE_MUTEXES == 1
 353:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 354:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	portBASE_TYPE xQueueGiveMutexRecursive( xQueueHandle pxMutex )
 355:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	{
 356:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	portBASE_TYPE xReturn;
 357:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 358:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		configASSERT( pxMutex );
 359:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 360:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		/* If this is the task that holds the mutex then pxMutexHolder will not
 361:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		change outside of this task.  If this task does not hold the mutex then
 362:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		pxMutexHolder can never coincidentally equal the tasks handle, and as
 363:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		this is the only condition we are interested in it does not matter if
 364:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		pxMutexHolder is accessed simultaneously by another task.  Therefore no
 365:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		mutual exclusion is required to test the pxMutexHolder variable. */
 366:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		if( pxMutex->pxMutexHolder == xTaskGetCurrentTaskHandle() )
 367:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		{
 368:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			traceGIVE_MUTEX_RECURSIVE( pxMutex );
 369:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 370:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			/* uxRecursiveCallCount cannot be zero if pxMutexHolder is equal to
 371:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			the task handle, therefore no underflow check is required.  Also,
 372:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			uxRecursiveCallCount is only modified by the mutex holder, and as
 373:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			there can only be one, no mutual exclusion is required to modify the
 374:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			uxRecursiveCallCount member. */
 375:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			( pxMutex->uxRecursiveCallCount )--;
 376:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 377:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			/* Have we unwound the call count? */
 378:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( pxMutex->uxRecursiveCallCount == 0 )
 379:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			{
 380:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				/* Return the mutex.  This will automatically unblock any other
 381:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				task that might be waiting to access the mutex. */
 382:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
 383:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			}
 384:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 385:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			xReturn = pdPASS;
 386:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		}
 387:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		else
 388:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		{
 389:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			/* We cannot give the mutex because we are not the holder. */
 390:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			xReturn = pdFAIL;
 391:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 392:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			traceGIVE_MUTEX_RECURSIVE_FAILED( pxMutex );
 393:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		}
 394:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 395:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		return xReturn;
 396:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	}
 397:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 398:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 399:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** /*-----------------------------------------------------------*/
 400:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 401:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** #if configUSE_RECURSIVE_MUTEXES == 1
 402:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 403:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	portBASE_TYPE xQueueTakeMutexRecursive( xQueueHandle pxMutex, portTickType xBlockTime )
 404:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	{
 405:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	portBASE_TYPE xReturn;
 406:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 407:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		configASSERT( pxMutex );
 408:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 409:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		/* Comments regarding mutual exclusion as per those within
 410:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		xQueueGiveMutexRecursive(). */
 411:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 412:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		traceTAKE_MUTEX_RECURSIVE( pxMutex );
 413:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 414:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		if( pxMutex->pxMutexHolder == xTaskGetCurrentTaskHandle() )
 415:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		{
 416:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			( pxMutex->uxRecursiveCallCount )++;
 417:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			xReturn = pdPASS;
 418:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		}
 419:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		else
 420:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		{
 421:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			xReturn = xQueueGenericReceive( pxMutex, NULL, xBlockTime, pdFALSE );
 422:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 423:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			/* pdPASS will only be returned if we successfully obtained the mutex,
 424:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			we may have blocked to reach here. */
 425:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( xReturn == pdPASS )
 426:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			{
 427:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				( pxMutex->uxRecursiveCallCount )++;
 428:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			}
 429:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			else
 430:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			{
 431:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				traceTAKE_MUTEX_RECURSIVE_FAILED( pxMutex );
 432:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			}
 433:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		}
 434:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 435:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		return xReturn;
 436:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	}
 437:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 438:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 439:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** /*-----------------------------------------------------------*/
 440:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 441:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** #if configUSE_COUNTING_SEMAPHORES == 1
 442:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 443:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	xQueueHandle xQueueCreateCountingSemaphore( unsigned portBASE_TYPE uxCountValue, unsigned portBASE
 444:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	{
 445:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	xQueueHandle pxHandle;
 446:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 447:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		pxHandle = xQueueCreate( ( unsigned portBASE_TYPE ) uxCountValue, queueSEMAPHORE_QUEUE_ITEM_LENGT
 448:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 449:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		if( pxHandle != NULL )
 450:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		{
 451:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			pxHandle->uxMessagesWaiting = uxInitialCount;
 452:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 453:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 454:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		}
 455:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		else
 456:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		{
 457:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 458:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		}
 459:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 460:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		configASSERT( pxHandle );
 461:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		return pxHandle;
 462:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	}
 463:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 464:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** #endif /* configUSE_COUNTING_SEMAPHORES */
 465:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** /*-----------------------------------------------------------*/
 466:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 467:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** signed portBASE_TYPE xQueueGenericSend( xQueueHandle pxQueue, const void * const pvItemToQueue, por
 468:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** {
 469:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** signed portBASE_TYPE xEntryTimeSet = pdFALSE;
 470:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** xTimeOutType xTimeOut;
 471:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 472:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	configASSERT( pxQueue );
 473:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( unsigned portBASE_TYPE ) 
 474:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 475:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
 476:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	statements within the function itself.  This is done in the interest
 477:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	of execution time efficiency. */
 478:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	for( ;; )
 479:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	{
 480:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		taskENTER_CRITICAL();
 217              		.loc 1 480 0
 218 0056 C847     		blx	r9
 219              	.LVL17:
 481:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		{
 482:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			/* Is there room on the queue now?  To be running we must be
 483:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			the highest priority task wanting to access the queue. */
 484:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
 220              		.loc 1 484 0
 221 0058 A26B     		ldr	r2, [r4, #56]
 222 005a E36B     		ldr	r3, [r4, #60]
 223 005c 9A42     		cmp	r2, r3
 224              	.LBE23:
 225              	.LBE22:
 469:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** signed portBASE_TYPE xEntryTimeSet = pdFALSE;
 226              		.loc 1 469 0
 227 005e 4546     		mov	r5, r8
 228 0060 DFF8E481 		ldr	r8, .L118+16
 229              	.LVL18:
 230              	.LBB38:
 231              	.LBB36:
 232              		.loc 1 484 0
 233 0064 6FD3     		bcc	.L111
 234              	.L15:
 485:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			{
 486:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				traceQUEUE_SEND( pxQueue );
 487:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 488:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 489:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				/* If there was a task waiting for data to arrive on the
 490:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				queue then unblock it now. */
 491:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 492:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				{
 493:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) == pdTRUE )
 494:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					{
 495:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						/* The unblocked task has a priority higher than
 496:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						our own so yield immediately.  Yes it is ok to do
 497:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						this from within the critical section - the kernel
 498:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						takes care of that. */
 499:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						portYIELD_WITHIN_API();
 500:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					}
 501:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				}
 502:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 503:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				taskEXIT_CRITICAL();
 504:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 505:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				/* Return to the original privilege level before exiting the
 506:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				function. */
 507:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				return pdPASS;
 508:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			}
 509:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			else
 510:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			{
 511:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				if( xTicksToWait == ( portTickType ) 0 )
 235              		.loc 1 511 0
 236 0066 019B     		ldr	r3, [sp, #4]
 237 0068 002B     		cmp	r3, #0
 238 006a 00F08880 		beq	.L21
 512:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				{
 513:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					/* The queue was full and no block time is specified (or
 514:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					the block time has expired) so leave now. */
 515:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					taskEXIT_CRITICAL();
 516:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 517:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					/* Return to the original privilege level before exiting
 518:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					the function. */
 519:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					traceQUEUE_SEND_FAILED( pxQueue );
 520:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					return errQUEUE_FULL;
 521:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				}
 522:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
 239              		.loc 1 522 0
 240 006e 002D     		cmp	r5, #0
 241 0070 00F0CE80 		beq	.L110
 242 0074 02AD     		add	r5, sp, #8
 243              	.LVL19:
 244              	.L24:
 523:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				{
 524:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					/* The queue was full and a block time was specified so
 525:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					configure the timeout structure. */
 526:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					vTaskSetTimeOutState( &xTimeOut );
 527:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					xEntryTimeSet = pdTRUE;
 528:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				}
 529:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			}
 530:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		}
 531:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		taskEXIT_CRITICAL();
 245              		.loc 1 531 0
 246 0076 C047     		blx	r8
 247              	.LVL20:
 532:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 533:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
 534:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		now the critical section has been exited. */
 535:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 536:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		vTaskSuspendAll();
 248              		.loc 1 536 0
 249 0078 714B     		ldr	r3, .L118+8
 250 007a 9847     		blx	r3
 251              	.LVL21:
 537:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		prvLockQueue( pxQueue );
 252              		.loc 1 537 0
 253 007c C847     		blx	r9
 254              	.LVL22:
 255 007e 636C     		ldr	r3, [r4, #68]
 256 0080 0133     		adds	r3, r3, #1
 257 0082 00F0CD80 		beq	.L112
 258              	.L25:
 259 0086 A36C     		ldr	r3, [r4, #72]
 260 0088 0133     		adds	r3, r3, #1
 261 008a 00F0C680 		beq	.L113
 262              	.L26:
 263 008e C047     		blx	r8
 264              	.LVL23:
 538:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 539:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
 540:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 265              		.loc 1 540 0
 266 0090 2846     		mov	r0, r5
 267 0092 01A9     		add	r1, sp, #4
 268 0094 6B4B     		ldr	r3, .L118+12
 269 0096 9847     		blx	r3
 270              	.LVL24:
 271 0098 0028     		cmp	r0, #0
 272 009a 40F0C480 		bne	.L27
 273              	.LVL25:
 274              	.LBB24:
 275              	.LBB25:
 541:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		{
 542:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( prvIsQueueFull( pxQueue ) )
 543:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			{
 544:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				traceBLOCKING_ON_QUEUE_SEND( pxQueue );
 545:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 546:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 547:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				/* Unlocking the queue means queue events can effect the
 548:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				event list.  It is possible	that interrupts occurring now
 549:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				remove this task from the event	list again - but as the
 550:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				scheduler is suspended the task will go onto the pending
 551:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				ready last instead of the actual ready list. */
 552:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				prvUnlockQueue( pxQueue );
 553:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 554:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				/* Resuming the scheduler will move tasks from the pending
 555:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				ready list into the ready list - so it is feasible that this
 556:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				task is already in a ready list before it yields - in which
 557:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				case the yield will not cause a context switch unless there
 558:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				is also a higher priority task in the pending ready list. */
 559:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				if( !xTaskResumeAll() )
 560:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				{
 561:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					portYIELD_WITHIN_API();
 562:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				}
 563:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			}
 564:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			else
 565:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			{
 566:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				/* Try again. */
 567:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				prvUnlockQueue( pxQueue );
 568:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				( void ) xTaskResumeAll();
 569:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			}
 570:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		}
 571:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		else
 572:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		{
 573:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			/* The timeout has expired. */
 574:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			prvUnlockQueue( pxQueue );
 575:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			( void ) xTaskResumeAll();
 576:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 577:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			/* Return to the original privilege level before exiting the
 578:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			function. */
 579:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			traceQUEUE_SEND_FAILED( pxQueue );
 580:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			return errQUEUE_FULL;
 581:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		}
 582:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	}
 583:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** }
 584:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** /*-----------------------------------------------------------*/
 585:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 586:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** #if configUSE_ALTERNATIVE_API == 1
 587:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 588:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	signed portBASE_TYPE xQueueAltGenericSend( xQueueHandle pxQueue, const void * const pvItemToQueue,
 589:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	{
 590:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	signed portBASE_TYPE xEntryTimeSet = pdFALSE;
 591:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	xTimeOutType xTimeOut;
 592:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 593:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		configASSERT( pxQueue );
 594:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( unsigned portBASE_TYPE )
 595:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 596:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		for( ;; )
 597:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		{
 598:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			taskENTER_CRITICAL();
 599:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			{
 600:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				/* Is there room on the queue now?  To be running we must be
 601:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				the highest priority task wanting to access the queue. */
 602:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
 603:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				{
 604:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					traceQUEUE_SEND( pxQueue );
 605:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 606:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 607:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					/* If there was a task waiting for data to arrive on the
 608:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					queue then unblock it now. */
 609:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 610:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					{
 611:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) == pdTRUE )
 612:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						{
 613:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 							/* The unblocked task has a priority higher than
 614:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 							our own so yield immediately. */
 615:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 							portYIELD_WITHIN_API();
 616:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						}
 617:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					}
 618:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 619:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					taskEXIT_CRITICAL();
 620:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					return pdPASS;
 621:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				}
 622:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				else
 623:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				{
 624:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					if( xTicksToWait == ( portTickType ) 0 )
 625:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					{
 626:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						taskEXIT_CRITICAL();
 627:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						return errQUEUE_FULL;
 628:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					}
 629:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					else if( xEntryTimeSet == pdFALSE )
 630:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					{
 631:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						vTaskSetTimeOutState( &xTimeOut );
 632:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						xEntryTimeSet = pdTRUE;
 633:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					}
 634:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				}
 635:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			}
 636:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			taskEXIT_CRITICAL();
 637:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 638:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			taskENTER_CRITICAL();
 639:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			{
 640:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 641:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				{
 642:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					if( prvIsQueueFull( pxQueue ) )
 643:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					{
 644:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						traceBLOCKING_ON_QUEUE_SEND( pxQueue );
 645:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 646:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						portYIELD_WITHIN_API();
 647:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					}
 648:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				}
 649:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				else
 650:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				{
 651:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					taskEXIT_CRITICAL();
 652:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					traceQUEUE_SEND_FAILED( pxQueue );
 653:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					return errQUEUE_FULL;
 654:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				}
 655:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			}
 656:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			taskEXIT_CRITICAL();
 657:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		}
 658:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	}
 659:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 660:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** #endif /* configUSE_ALTERNATIVE_API */
 661:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** /*-----------------------------------------------------------*/
 662:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 663:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** #if configUSE_ALTERNATIVE_API == 1
 664:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 665:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	signed portBASE_TYPE xQueueAltGenericReceive( xQueueHandle pxQueue, void * const pvBuffer, portTic
 666:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	{
 667:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	signed portBASE_TYPE xEntryTimeSet = pdFALSE;
 668:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	xTimeOutType xTimeOut;
 669:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	signed char *pcOriginalReadPosition;
 670:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 671:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		configASSERT( pxQueue );
 672:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( unsigned portBASE_TYPE ) 0U )
 673:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 674:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		for( ;; )
 675:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		{
 676:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			taskENTER_CRITICAL();
 677:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			{
 678:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				if( pxQueue->uxMessagesWaiting > ( unsigned portBASE_TYPE ) 0 )
 679:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				{
 680:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					/* Remember our read position in case we are just peeking. */
 681:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					pcOriginalReadPosition = pxQueue->pcReadFrom;
 682:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 683:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					prvCopyDataFromQueue( pxQueue, pvBuffer );
 684:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 685:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					if( xJustPeeking == pdFALSE )
 686:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					{
 687:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						traceQUEUE_RECEIVE( pxQueue );
 688:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 689:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						/* We are actually removing data. */
 690:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						--( pxQueue->uxMessagesWaiting );
 691:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 692:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						#if ( configUSE_MUTEXES == 1 )
 693:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						{
 694:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 							if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 695:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 							{
 696:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 								/* Record the information required to implement
 697:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 								priority inheritance should it become necessary. */
 698:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 								pxQueue->pxMutexHolder = xTaskGetCurrentTaskHandle();
 699:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 							}
 700:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						}
 701:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						#endif
 702:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 703:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 704:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						{
 705:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) == pdTRUE )
 706:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 							{
 707:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 								portYIELD_WITHIN_API();
 708:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 							}
 709:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						}
 710:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					}
 711:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					else
 712:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					{
 713:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						traceQUEUE_PEEK( pxQueue );
 714:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 715:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						/* We are not removing the data, so reset our read
 716:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						pointer. */
 717:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						pxQueue->pcReadFrom = pcOriginalReadPosition;
 718:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 719:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						/* The data is being left in the queue, so see if there are
 720:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						any other tasks waiting for the data. */
 721:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 722:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						{
 723:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 							/* Tasks that are removed from the event list will get added to
 724:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 							the pending ready list as the scheduler is still suspended. */
 725:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 726:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 							{
 727:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 								/* The task waiting has a higher priority than this task. */
 728:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 								portYIELD_WITHIN_API();
 729:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 							}
 730:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						}
 731:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 732:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					}
 733:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 734:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					taskEXIT_CRITICAL();
 735:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					return pdPASS;
 736:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				}
 737:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				else
 738:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				{
 739:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					if( xTicksToWait == ( portTickType ) 0 )
 740:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					{
 741:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						taskEXIT_CRITICAL();
 742:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						traceQUEUE_RECEIVE_FAILED( pxQueue );
 743:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						return errQUEUE_EMPTY;
 744:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					}
 745:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					else if( xEntryTimeSet == pdFALSE )
 746:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					{
 747:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						vTaskSetTimeOutState( &xTimeOut );
 748:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						xEntryTimeSet = pdTRUE;
 749:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					}
 750:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				}
 751:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			}
 752:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			taskEXIT_CRITICAL();
 753:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 754:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			taskENTER_CRITICAL();
 755:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			{
 756:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 757:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				{
 758:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					if( prvIsQueueEmpty( pxQueue ) )
 759:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					{
 760:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
 761:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 762:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						#if ( configUSE_MUTEXES == 1 )
 763:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						{
 764:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 							if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 765:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 							{
 766:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 								portENTER_CRITICAL();
 767:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 									vTaskPriorityInherit( ( void * ) pxQueue->pxMutexHolder );
 768:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 								portEXIT_CRITICAL();
 769:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 							}
 770:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						}
 771:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						#endif
 772:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 773:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 774:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						portYIELD_WITHIN_API();
 775:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					}
 776:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				}
 777:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				else
 778:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				{
 779:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					taskEXIT_CRITICAL();
 780:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
 781:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					return errQUEUE_EMPTY;
 782:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				}
 783:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			}
 784:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			taskEXIT_CRITICAL();
 785:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		}
 786:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	}
 787:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 788:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 789:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** #endif /* configUSE_ALTERNATIVE_API */
 790:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** /*-----------------------------------------------------------*/
 791:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 792:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** signed portBASE_TYPE xQueueGenericSendFromISR( xQueueHandle pxQueue, const void * const pvItemToQue
 793:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** {
 794:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** signed portBASE_TYPE xReturn;
 795:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** unsigned portBASE_TYPE uxSavedInterruptStatus;
 796:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 797:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	configASSERT( pxQueue );
 798:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	configASSERT( pxHigherPriorityTaskWoken );
 799:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( unsigned portBASE_TYPE ) 
 800:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 801:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	/* Similar to xQueueGenericSend, except we don't block if there is no room
 802:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	in the queue.  Also we don't directly wake a task that was blocked on a
 803:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	queue read, instead we return a flag to say whether a context switch is
 804:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	required or not (i.e. has a task with a higher priority than us been woken
 805:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	by this	post). */
 806:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 807:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	{
 808:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
 809:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		{
 810:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
 811:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 812:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 813:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 814:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			/* If the queue is locked we do not alter the event list.  This will
 815:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			be done when the queue is unlocked later. */
 816:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( pxQueue->xTxLock == queueUNLOCKED )
 817:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			{
 818:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 819:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				{
 820:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 821:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					{
 822:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						/* The task waiting has a higher priority so record that a
 823:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						context	switch is required. */
 824:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
 825:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					}
 826:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				}
 827:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			}
 828:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			else
 829:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			{
 830:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
 831:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				knows that data was posted while it was locked. */
 832:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				++( pxQueue->xTxLock );
 833:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			}
 834:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 835:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			xReturn = pdPASS;
 836:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		}
 837:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		else
 838:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		{
 839:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
 840:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			xReturn = errQUEUE_FULL;
 841:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		}
 842:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	}
 843:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
 844:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 845:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	return xReturn;
 846:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** }
 847:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** /*-----------------------------------------------------------*/
 848:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 849:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** signed portBASE_TYPE xQueueGenericReceive( xQueueHandle pxQueue, void * const pvBuffer, portTickTyp
 850:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** {
 851:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** signed portBASE_TYPE xEntryTimeSet = pdFALSE;
 852:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** xTimeOutType xTimeOut;
 853:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** signed char *pcOriginalReadPosition;
 854:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 855:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	configASSERT( pxQueue );
 856:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( unsigned portBASE_TYPE ) 0U ) 
 857:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 858:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
 859:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	statements within the function itself.  This is done in the interest
 860:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	of execution time efficiency. */
 861:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 862:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	for( ;; )
 863:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	{
 864:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		taskENTER_CRITICAL();
 865:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		{
 866:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			/* Is there data in the queue now?  To be running we must be
 867:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			the highest priority task wanting to access the queue. */
 868:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( pxQueue->uxMessagesWaiting > ( unsigned portBASE_TYPE ) 0 )
 869:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			{
 870:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				/* Remember our read position in case we are just peeking. */
 871:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				pcOriginalReadPosition = pxQueue->pcReadFrom;
 872:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 873:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
 874:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 875:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				if( xJustPeeking == pdFALSE )
 876:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				{
 877:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					traceQUEUE_RECEIVE( pxQueue );
 878:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 879:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					/* We are actually removing data. */
 880:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					--( pxQueue->uxMessagesWaiting );
 881:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 882:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					#if ( configUSE_MUTEXES == 1 )
 883:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					{
 884:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 885:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						{
 886:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 							/* Record the information required to implement
 887:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 							priority inheritance should it become necessary. */
 888:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 							pxQueue->pxMutexHolder = xTaskGetCurrentTaskHandle();
 889:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						}
 890:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					}
 891:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					#endif
 892:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 893:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 894:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					{
 895:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) == pdTRUE )
 896:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						{
 897:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 							portYIELD_WITHIN_API();
 898:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						}
 899:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					}
 900:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				}
 901:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				else
 902:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				{
 903:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					traceQUEUE_PEEK( pxQueue );
 904:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 905:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					/* We are not removing the data, so reset our read
 906:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					pointer. */
 907:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					pxQueue->pcReadFrom = pcOriginalReadPosition;
 908:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 909:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					/* The data is being left in the queue, so see if there are
 910:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					any other tasks waiting for the data. */
 911:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 912:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					{
 913:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						/* Tasks that are removed from the event list will get added to
 914:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						the pending ready list as the scheduler is still suspended. */
 915:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 916:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						{
 917:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 							/* The task waiting has a higher priority than this task. */
 918:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 							portYIELD_WITHIN_API();
 919:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						}
 920:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					}
 921:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 922:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				}
 923:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 924:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				taskEXIT_CRITICAL();
 925:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				return pdPASS;
 926:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			}
 927:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			else
 928:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			{
 929:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				if( xTicksToWait == ( portTickType ) 0 )
 930:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				{
 931:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					/* The queue was empty and no block time is specified (or
 932:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					the block time has expired) so leave now. */
 933:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					taskEXIT_CRITICAL();
 934:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
 935:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					return errQUEUE_EMPTY;
 936:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				}
 937:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
 938:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				{
 939:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					/* The queue was empty and a block time was specified so
 940:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					configure the timeout structure. */
 941:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					vTaskSetTimeOutState( &xTimeOut );
 942:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					xEntryTimeSet = pdTRUE;
 943:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				}
 944:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			}
 945:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		}
 946:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		taskEXIT_CRITICAL();
 947:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 948:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
 949:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		now the critical section has been exited. */
 950:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 951:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		vTaskSuspendAll();
 952:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		prvLockQueue( pxQueue );
 953:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 954:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
 955:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 956:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		{
 957:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) )
 958:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			{
 959:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
 960:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 961:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
 962:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				{
 963:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 964:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					{
 965:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						portENTER_CRITICAL();
 966:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						{
 967:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 							vTaskPriorityInherit( ( void * ) pxQueue->pxMutexHolder );
 968:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						}
 969:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						portEXIT_CRITICAL();
 970:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					}
 971:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				}
 972:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				#endif
 973:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 974:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 975:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				prvUnlockQueue( pxQueue );
 976:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				if( !xTaskResumeAll() )
 977:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				{
 978:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					portYIELD_WITHIN_API();
 979:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				}
 980:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			}
 981:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			else
 982:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			{
 983:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				/* Try again. */
 984:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				prvUnlockQueue( pxQueue );
 985:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				( void ) xTaskResumeAll();
 986:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			}
 987:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		}
 988:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		else
 989:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		{
 990:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			prvUnlockQueue( pxQueue );
 991:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			( void ) xTaskResumeAll();
 992:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			traceQUEUE_RECEIVE_FAILED( pxQueue );
 993:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			return errQUEUE_EMPTY;
 994:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		}
 995:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	}
 996:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** }
 997:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** /*-----------------------------------------------------------*/
 998:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
 999:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** signed portBASE_TYPE xQueueReceiveFromISR( xQueueHandle pxQueue, void * const pvBuffer, signed port
1000:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** {
1001:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** signed portBASE_TYPE xReturn;
1002:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** unsigned portBASE_TYPE uxSavedInterruptStatus;
1003:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
1004:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	configASSERT( pxQueue );
1005:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	configASSERT( pxTaskWoken );
1006:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( unsigned portBASE_TYPE ) 0U ) 
1007:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
1008:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1009:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	{
1010:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		/* We cannot block from an ISR, so check there is data available. */
1011:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( unsigned portBASE_TYPE ) 0 )
1012:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		{
1013:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR( pxQueue );
1014:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
1015:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
1016:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			--( pxQueue->uxMessagesWaiting );
1017:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
1018:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			/* If the queue is locked we will not modify the event list.  Instead
1019:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			we update the lock count so the task that unlocks the queue will know
1020:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			that an ISR has removed data while the queue was locked. */
1021:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( pxQueue->xRxLock == queueUNLOCKED )
1022:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			{
1023:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1024:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				{
1025:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1026:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					{
1027:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						/* The task waiting has a higher priority than us so
1028:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						force a context switch. */
1029:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						*pxTaskWoken = pdTRUE;
1030:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					}
1031:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				}
1032:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			}
1033:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			else
1034:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			{
1035:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1036:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				knows that data was removed while it was locked. */
1037:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				++( pxQueue->xRxLock );
1038:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			}
1039:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
1040:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			xReturn = pdPASS;
1041:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		}
1042:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		else
1043:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		{
1044:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			xReturn = pdFAIL;
1045:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
1046:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		}
1047:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	}
1048:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1049:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
1050:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	return xReturn;
1051:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** }
1052:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** /*-----------------------------------------------------------*/
1053:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
1054:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** unsigned portBASE_TYPE uxQueueMessagesWaiting( const xQueueHandle pxQueue )
1055:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** {
1056:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** unsigned portBASE_TYPE uxReturn;
1057:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
1058:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	configASSERT( pxQueue );
1059:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
1060:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskENTER_CRITICAL();
1061:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		uxReturn = pxQueue->uxMessagesWaiting;
1062:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskEXIT_CRITICAL();
1063:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
1064:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	return uxReturn;
1065:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** }
1066:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** /*-----------------------------------------------------------*/
1067:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
1068:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** unsigned portBASE_TYPE uxQueueMessagesWaitingFromISR( const xQueueHandle pxQueue )
1069:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** {
1070:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** unsigned portBASE_TYPE uxReturn;
1071:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
1072:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	configASSERT( pxQueue );
1073:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
1074:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	uxReturn = pxQueue->uxMessagesWaiting;
1075:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
1076:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	return uxReturn;
1077:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** }
1078:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** /*-----------------------------------------------------------*/
1079:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
1080:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** void vQueueDelete( xQueueHandle pxQueue )
1081:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** {
1082:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	configASSERT( pxQueue );
1083:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
1084:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	traceQUEUE_DELETE( pxQueue );
1085:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	vQueueUnregisterQueue( pxQueue );
1086:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	vPortFree( pxQueue->pcHead );
1087:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	vPortFree( pxQueue );
1088:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** }
1089:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** /*-----------------------------------------------------------*/
1090:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
1091:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** static void prvCopyDataToQueue( xQUEUE *pxQueue, const void *pvItemToQueue, portBASE_TYPE xPosition
1092:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** {
1093:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	if( pxQueue->uxItemSize == ( unsigned portBASE_TYPE ) 0 )
1094:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	{
1095:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		#if ( configUSE_MUTEXES == 1 )
1096:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		{
1097:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1098:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			{
1099:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				/* The mutex is no longer being held. */
1100:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				vTaskPriorityDisinherit( ( void * ) pxQueue->pxMutexHolder );
1101:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				pxQueue->pxMutexHolder = NULL;
1102:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			}
1103:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		}
1104:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		#endif
1105:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	}
1106:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	else if( xPosition == queueSEND_TO_BACK )
1107:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	{
1108:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( unsigned ) pxQueue->uxItemSize );
1109:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
1110:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail )
1111:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		{
1112:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			pxQueue->pcWriteTo = pxQueue->pcHead;
1113:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		}
1114:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	}
1115:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	else
1116:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	{
1117:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		memcpy( ( void * ) pxQueue->pcReadFrom, pvItemToQueue, ( unsigned ) pxQueue->uxItemSize );
1118:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		pxQueue->pcReadFrom -= pxQueue->uxItemSize;
1119:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		if( pxQueue->pcReadFrom < pxQueue->pcHead )
1120:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		{
1121:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			pxQueue->pcReadFrom = ( pxQueue->pcTail - pxQueue->uxItemSize );
1122:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		}
1123:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	}
1124:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
1125:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	++( pxQueue->uxMessagesWaiting );
1126:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** }
1127:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** /*-----------------------------------------------------------*/
1128:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
1129:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** static void prvCopyDataFromQueue( xQUEUE * const pxQueue, const void *pvBuffer )
1130:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** {
1131:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	if( pxQueue->uxQueueType != queueQUEUE_IS_MUTEX )
1132:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	{
1133:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		pxQueue->pcReadFrom += pxQueue->uxItemSize;
1134:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		if( pxQueue->pcReadFrom >= pxQueue->pcTail )
1135:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		{
1136:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			pxQueue->pcReadFrom = pxQueue->pcHead;
1137:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		}
1138:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->pcReadFrom, ( unsigned ) pxQueue->uxItemSize );
1139:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	}
1140:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** }
1141:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** /*-----------------------------------------------------------*/
1142:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
1143:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** static void prvUnlockQueue( xQueueHandle pxQueue )
1144:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** {
1145:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
1146:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
1147:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	/* The lock counts contains the number of extra data items placed or
1148:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	removed from the queue while the queue was locked.  When a queue is
1149:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	locked items can be added or removed, but the event lists cannot be
1150:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	updated. */
1151:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskENTER_CRITICAL();
1152:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	{
1153:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		/* See if data was added to the queue while it was locked. */
1154:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
1155:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		{
1156:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			/* Data was posted while the queue was locked.  Are any tasks
1157:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			blocked waiting for data to become available? */
1158:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1159:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			{
1160:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				/* Tasks that are removed from the event list will get added to
1161:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				the pending ready list as the scheduler is still suspended. */
1162:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1163:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				{
1164:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					/* The task waiting has a higher priority so record that a
1165:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					context	switch is required. */
1166:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					vTaskMissedYield();
1167:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				}
1168:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
1169:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xTxLock );
1170:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			}
1171:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			else
1172:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			{
1173:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				break;
1174:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			}
1175:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		}
1176:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
1177:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		pxQueue->xTxLock = queueUNLOCKED;
1178:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	}
1179:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskEXIT_CRITICAL();
1180:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
1181:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	/* Do the same for the Rx lock. */
1182:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskENTER_CRITICAL();
1183:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	{
1184:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
1185:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		{
1186:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1187:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			{
1188:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1189:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				{
1190:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					vTaskMissedYield();
1191:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				}
1192:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
1193:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xRxLock );
1194:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			}
1195:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			else
1196:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			{
1197:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				break;
1198:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			}
1199:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		}
1200:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
1201:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		pxQueue->xRxLock = queueUNLOCKED;
1202:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	}
1203:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskEXIT_CRITICAL();
1204:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** }
1205:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** /*-----------------------------------------------------------*/
1206:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
1207:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** static signed portBASE_TYPE prvIsQueueEmpty( const xQueueHandle pxQueue )
1208:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** {
1209:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** signed portBASE_TYPE xReturn;
1210:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
1211:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskENTER_CRITICAL();
1212:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		xReturn = ( pxQueue->uxMessagesWaiting == ( unsigned portBASE_TYPE ) 0 );
1213:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskEXIT_CRITICAL();
1214:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
1215:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	return xReturn;
1216:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** }
1217:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** /*-----------------------------------------------------------*/
1218:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
1219:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** signed portBASE_TYPE xQueueIsQueueEmptyFromISR( const xQueueHandle pxQueue )
1220:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** {
1221:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** signed portBASE_TYPE xReturn;
1222:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
1223:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	configASSERT( pxQueue );
1224:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	xReturn = ( pxQueue->uxMessagesWaiting == ( unsigned portBASE_TYPE ) 0 );
1225:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
1226:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	return xReturn;
1227:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** }
1228:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** /*-----------------------------------------------------------*/
1229:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
1230:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** static signed portBASE_TYPE prvIsQueueFull( const xQueueHandle pxQueue )
1231:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** {
1232:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** signed portBASE_TYPE xReturn;
1233:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
1234:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskENTER_CRITICAL();
 276              		.loc 1 1234 0
 277 009e C847     		blx	r9
 278              	.LVL26:
1235:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		xReturn = ( pxQueue->uxMessagesWaiting == pxQueue->uxLength );
 279              		.loc 1 1235 0
 280 00a0 D4F838B0 		ldr	fp, [r4, #56]
 281 00a4 D4F83CA0 		ldr	sl, [r4, #60]
 282              	.LVL27:
1236:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskEXIT_CRITICAL();
 283              		.loc 1 1236 0
 284 00a8 674B     		ldr	r3, .L118+16
1234:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskENTER_CRITICAL();
 285              		.loc 1 1234 0
 286 00aa 684D     		ldr	r5, .L118+20
 287              		.loc 1 1236 0
 288 00ac 9847     		blx	r3
 289              	.LVL28:
 290              	.LBE25:
 291              	.LBE24:
 542:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( prvIsQueueFull( pxQueue ) )
 292              		.loc 1 542 0
 293 00ae D345     		cmp	fp, sl
 294 00b0 6ED1     		bne	.L28
 545:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 295              		.loc 1 545 0
 296 00b2 674B     		ldr	r3, .L118+24
 297 00b4 0199     		ldr	r1, [sp, #4]
 298 00b6 3046     		mov	r0, r6
 299 00b8 9847     		blx	r3
 300              	.LVL29:
 301              	.LBB26:
 302              	.LBB27:
1151:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskENTER_CRITICAL();
 303              		.loc 1 1151 0
 304 00ba A847     		blx	r5
 305              	.LVL30:
1154:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
 306              		.loc 1 1154 0
 307 00bc A36C     		ldr	r3, [r4, #72]
 308 00be 002B     		cmp	r3, #0
 309 00c0 15DD     		ble	.L33
1158:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 310              		.loc 1 1158 0
 311 00c2 636A     		ldr	r3, [r4, #36]
 312 00c4 9BB1     		cbz	r3, .L33
 313 00c6 634D     		ldr	r5, .L118+28
 314 00c8 06E0     		b	.L32
 315              	.L34:
1169:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xTxLock );
 316              		.loc 1 1169 0
 317 00ca A36C     		ldr	r3, [r4, #72]
 318 00cc 013B     		subs	r3, r3, #1
1154:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
 319              		.loc 1 1154 0
 320 00ce 002B     		cmp	r3, #0
1169:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xTxLock );
 321              		.loc 1 1169 0
 322 00d0 A364     		str	r3, [r4, #72]
1154:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
 323              		.loc 1 1154 0
 324 00d2 0CDD     		ble	.L33
 325              	.L35:
1158:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 326              		.loc 1 1158 0
 327 00d4 636A     		ldr	r3, [r4, #36]
 328 00d6 53B1     		cbz	r3, .L33
 329              	.L32:
1162:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 330              		.loc 1 1162 0
 331 00d8 3846     		mov	r0, r7
 332 00da A847     		blx	r5
 333              	.LVL31:
 334 00dc 0028     		cmp	r0, #0
 335 00de F4D0     		beq	.L34
1166:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					vTaskMissedYield();
 336              		.loc 1 1166 0
 337 00e0 5D4B     		ldr	r3, .L118+32
 338 00e2 9847     		blx	r3
 339              	.LVL32:
1169:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xTxLock );
 340              		.loc 1 1169 0
 341 00e4 A36C     		ldr	r3, [r4, #72]
 342 00e6 013B     		subs	r3, r3, #1
1154:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
 343              		.loc 1 1154 0
 344 00e8 002B     		cmp	r3, #0
1169:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xTxLock );
 345              		.loc 1 1169 0
 346 00ea A364     		str	r3, [r4, #72]
1154:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
 347              		.loc 1 1154 0
 348 00ec F2DC     		bgt	.L35
 349              	.L33:
1177:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		pxQueue->xTxLock = queueUNLOCKED;
 350              		.loc 1 1177 0
 351 00ee 4FF0FF33 		mov	r3, #-1
 352 00f2 A364     		str	r3, [r4, #72]
1179:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskEXIT_CRITICAL();
 353              		.loc 1 1179 0
 354 00f4 C047     		blx	r8
 355              	.LVL33:
1182:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskENTER_CRITICAL();
 356              		.loc 1 1182 0
 357 00f6 C847     		blx	r9
 358              	.LVL34:
1184:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
 359              		.loc 1 1184 0
 360 00f8 636C     		ldr	r3, [r4, #68]
 361 00fa 002B     		cmp	r3, #0
 362 00fc 15DD     		ble	.L31
1186:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 363              		.loc 1 1186 0
 364 00fe 2369     		ldr	r3, [r4, #16]
 365 0100 9BB1     		cbz	r3, .L31
 366 0102 544D     		ldr	r5, .L118+28
 367 0104 06E0     		b	.L38
 368              	.L39:
1193:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xRxLock );
 369              		.loc 1 1193 0
 370 0106 636C     		ldr	r3, [r4, #68]
 371 0108 013B     		subs	r3, r3, #1
1184:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
 372              		.loc 1 1184 0
 373 010a 002B     		cmp	r3, #0
1193:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xRxLock );
 374              		.loc 1 1193 0
 375 010c 6364     		str	r3, [r4, #68]
1184:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
 376              		.loc 1 1184 0
 377 010e 0CDD     		ble	.L31
 378              	.L40:
1186:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 379              		.loc 1 1186 0
 380 0110 2369     		ldr	r3, [r4, #16]
 381 0112 53B1     		cbz	r3, .L31
 382              	.L38:
1188:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 383              		.loc 1 1188 0
 384 0114 3046     		mov	r0, r6
 385 0116 A847     		blx	r5
 386              	.LVL35:
 387 0118 0028     		cmp	r0, #0
 388 011a F4D0     		beq	.L39
1190:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					vTaskMissedYield();
 389              		.loc 1 1190 0
 390 011c 4E4B     		ldr	r3, .L118+32
 391 011e 9847     		blx	r3
 392              	.LVL36:
1193:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xRxLock );
 393              		.loc 1 1193 0
 394 0120 636C     		ldr	r3, [r4, #68]
 395 0122 013B     		subs	r3, r3, #1
1184:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
 396              		.loc 1 1184 0
 397 0124 002B     		cmp	r3, #0
1193:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xRxLock );
 398              		.loc 1 1193 0
 399 0126 6364     		str	r3, [r4, #68]
1184:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
 400              		.loc 1 1184 0
 401 0128 F2DC     		bgt	.L40
 402              	.L31:
1201:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		pxQueue->xRxLock = queueUNLOCKED;
 403              		.loc 1 1201 0
 404 012a 4FF0FF33 		mov	r3, #-1
 405 012e 6364     		str	r3, [r4, #68]
1203:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskEXIT_CRITICAL();
 406              		.loc 1 1203 0
 407 0130 C047     		blx	r8
 408              	.LVL37:
 409              	.LBE27:
 410              	.LBE26:
 559:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				if( !xTaskResumeAll() )
 411              		.loc 1 559 0
 412 0132 4A4B     		ldr	r3, .L118+36
 413 0134 9847     		blx	r3
 414              	.LVL38:
 415 0136 0028     		cmp	r0, #0
 416 0138 26D0     		beq	.L114
 417 013a 0125     		movs	r5, #1
 418              	.LVL39:
 419              	.L117:
 480:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		taskENTER_CRITICAL();
 420              		.loc 1 480 0
 421 013c C847     		blx	r9
 422              	.LVL40:
 484:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
 423              		.loc 1 484 0
 424 013e A26B     		ldr	r2, [r4, #56]
 425 0140 E36B     		ldr	r3, [r4, #60]
 426 0142 9A42     		cmp	r2, r3
 427 0144 8FD2     		bcs	.L15
 428              	.LVL41:
 429              	.L111:
 430              	.LBB28:
 431              	.LBB29:
1093:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	if( pxQueue->uxItemSize == ( unsigned portBASE_TYPE ) 0 )
 432              		.loc 1 1093 0
 433 0146 226C     		ldr	r2, [r4, #64]
 434 0148 002A     		cmp	r2, #0
 435 014a 00F0C680 		beq	.L115
1108:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( unsigned ) pxQueue->uxItemSize );
 436              		.loc 1 1108 0
 437 014e 0021     		movs	r1, #0
 438 0150 434B     		ldr	r3, .L118+40
 439 0152 A068     		ldr	r0, [r4, #8]
 440 0154 9847     		blx	r3
 441              	.LVL42:
1109:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
 442              		.loc 1 1109 0
 443 0156 A168     		ldr	r1, [r4, #8]
 444 0158 236C     		ldr	r3, [r4, #64]
1110:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail )
 445              		.loc 1 1110 0
 446 015a 6268     		ldr	r2, [r4, #4]
1109:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
 447              		.loc 1 1109 0
 448 015c CB18     		adds	r3, r1, r3
1110:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail )
 449              		.loc 1 1110 0
 450 015e 9342     		cmp	r3, r2
1109:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
 451              		.loc 1 1109 0
 452 0160 A360     		str	r3, [r4, #8]
1112:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			pxQueue->pcWriteTo = pxQueue->pcHead;
 453              		.loc 1 1112 0
 454 0162 24BF     		itt	cs
 455 0164 2368     		ldrcs	r3, [r4, #0]
 456 0166 A360     		strcs	r3, [r4, #8]
 457              	.LVL43:
 458              	.L18:
1125:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	++( pxQueue->uxMessagesWaiting );
 459              		.loc 1 1125 0
 460 0168 A36B     		ldr	r3, [r4, #56]
 461 016a 0133     		adds	r3, r3, #1
 462 016c A363     		str	r3, [r4, #56]
 463              	.LBE29:
 464              	.LBE28:
 491:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 465              		.loc 1 491 0
 466 016e 636A     		ldr	r3, [r4, #36]
 467 0170 2BB1     		cbz	r3, .L21
 493:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) == pdTRUE )
 468              		.loc 1 493 0
 469 0172 3846     		mov	r0, r7
 470 0174 374B     		ldr	r3, .L118+28
 471 0176 9847     		blx	r3
 472              	.LVL44:
 473 0178 0128     		cmp	r0, #1
 474 017a 00F0B780 		beq	.L116
 475              	.LVL45:
 476              	.L21:
 503:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				taskEXIT_CRITICAL();
 477              		.loc 1 503 0
 478 017e C047     		blx	r8
 479              	.LVL46:
 480              	.L13:
 481              	.LBE36:
 482              	.LBE38:
 347:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	}
 483              		.loc 1 347 0
 484 0180 2046     		mov	r0, r4
 485 0182 05B0     		add	sp, sp, #20
 486 0184 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 487              	.LVL47:
 488              	.L114:
 489              	.LBB39:
 490              	.LBB37:
 561:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					portYIELD_WITHIN_API();
 491              		.loc 1 561 0
 492 0188 364B     		ldr	r3, .L118+44
 493 018a 9847     		blx	r3
 494              	.LVL48:
 495 018c 0125     		movs	r5, #1
 496 018e D5E7     		b	.L117
 497              	.LVL49:
 498              	.L28:
 499              	.LBB31:
 500              	.LBB32:
1151:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskENTER_CRITICAL();
 501              		.loc 1 1151 0
 502 0190 A847     		blx	r5
 503              	.LVL50:
1154:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
 504              		.loc 1 1154 0
 505 0192 A36C     		ldr	r3, [r4, #72]
 506 0194 002B     		cmp	r3, #0
 507 0196 15DD     		ble	.L45
1158:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 508              		.loc 1 1158 0
 509 0198 636A     		ldr	r3, [r4, #36]
 510 019a 9BB1     		cbz	r3, .L45
 511 019c 2D4D     		ldr	r5, .L118+28
 512 019e 06E0     		b	.L44
 513              	.L46:
1169:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xTxLock );
 514              		.loc 1 1169 0
 515 01a0 A36C     		ldr	r3, [r4, #72]
 516 01a2 013B     		subs	r3, r3, #1
1154:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
 517              		.loc 1 1154 0
 518 01a4 002B     		cmp	r3, #0
1169:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xTxLock );
 519              		.loc 1 1169 0
 520 01a6 A364     		str	r3, [r4, #72]
1154:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
 521              		.loc 1 1154 0
 522 01a8 0CDD     		ble	.L45
 523              	.L47:
1158:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 524              		.loc 1 1158 0
 525 01aa 636A     		ldr	r3, [r4, #36]
 526 01ac 53B1     		cbz	r3, .L45
 527              	.L44:
1162:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 528              		.loc 1 1162 0
 529 01ae 3846     		mov	r0, r7
 530 01b0 A847     		blx	r5
 531              	.LVL51:
 532 01b2 0028     		cmp	r0, #0
 533 01b4 F4D0     		beq	.L46
1166:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					vTaskMissedYield();
 534              		.loc 1 1166 0
 535 01b6 284B     		ldr	r3, .L118+32
 536 01b8 9847     		blx	r3
 537              	.LVL52:
1169:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xTxLock );
 538              		.loc 1 1169 0
 539 01ba A36C     		ldr	r3, [r4, #72]
 540 01bc 013B     		subs	r3, r3, #1
1154:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
 541              		.loc 1 1154 0
 542 01be 002B     		cmp	r3, #0
1169:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xTxLock );
 543              		.loc 1 1169 0
 544 01c0 A364     		str	r3, [r4, #72]
1154:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
 545              		.loc 1 1154 0
 546 01c2 F2DC     		bgt	.L47
 547              	.L45:
1177:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		pxQueue->xTxLock = queueUNLOCKED;
 548              		.loc 1 1177 0
 549 01c4 4FF0FF33 		mov	r3, #-1
 550 01c8 A364     		str	r3, [r4, #72]
1179:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskEXIT_CRITICAL();
 551              		.loc 1 1179 0
 552 01ca C047     		blx	r8
 553              	.LVL53:
1182:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskENTER_CRITICAL();
 554              		.loc 1 1182 0
 555 01cc C847     		blx	r9
 556              	.LVL54:
1184:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
 557              		.loc 1 1184 0
 558 01ce 636C     		ldr	r3, [r4, #68]
 559 01d0 002B     		cmp	r3, #0
 560 01d2 15DD     		ble	.L43
1186:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 561              		.loc 1 1186 0
 562 01d4 2369     		ldr	r3, [r4, #16]
 563 01d6 9BB1     		cbz	r3, .L43
 564 01d8 1E4D     		ldr	r5, .L118+28
 565 01da 06E0     		b	.L48
 566              	.L49:
1193:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xRxLock );
 567              		.loc 1 1193 0
 568 01dc 636C     		ldr	r3, [r4, #68]
 569 01de 013B     		subs	r3, r3, #1
1184:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
 570              		.loc 1 1184 0
 571 01e0 002B     		cmp	r3, #0
1193:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xRxLock );
 572              		.loc 1 1193 0
 573 01e2 6364     		str	r3, [r4, #68]
1184:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
 574              		.loc 1 1184 0
 575 01e4 0CDD     		ble	.L43
 576              	.L50:
1186:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 577              		.loc 1 1186 0
 578 01e6 2369     		ldr	r3, [r4, #16]
 579 01e8 53B1     		cbz	r3, .L43
 580              	.L48:
1188:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 581              		.loc 1 1188 0
 582 01ea 3046     		mov	r0, r6
 583 01ec A847     		blx	r5
 584              	.LVL55:
 585 01ee 0028     		cmp	r0, #0
 586 01f0 F4D0     		beq	.L49
1190:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					vTaskMissedYield();
 587              		.loc 1 1190 0
 588 01f2 194B     		ldr	r3, .L118+32
 589 01f4 9847     		blx	r3
 590              	.LVL56:
1193:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xRxLock );
 591              		.loc 1 1193 0
 592 01f6 636C     		ldr	r3, [r4, #68]
 593 01f8 013B     		subs	r3, r3, #1
1184:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
 594              		.loc 1 1184 0
 595 01fa 002B     		cmp	r3, #0
1193:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xRxLock );
 596              		.loc 1 1193 0
 597 01fc 6364     		str	r3, [r4, #68]
1184:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
 598              		.loc 1 1184 0
 599 01fe F2DC     		bgt	.L50
 600              	.L43:
1201:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		pxQueue->xRxLock = queueUNLOCKED;
 601              		.loc 1 1201 0
 602 0200 4FF0FF33 		mov	r3, #-1
 603 0204 6364     		str	r3, [r4, #68]
1203:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskEXIT_CRITICAL();
 604              		.loc 1 1203 0
 605 0206 C047     		blx	r8
 606              	.LVL57:
 607              	.LBE32:
 608              	.LBE31:
 568:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				( void ) xTaskResumeAll();
 609              		.loc 1 568 0
 610 0208 144B     		ldr	r3, .L118+36
 611 020a 9847     		blx	r3
 612              	.LVL58:
 613 020c 0125     		movs	r5, #1
 614 020e 95E7     		b	.L117
 615              	.LVL59:
 616              	.L110:
 526:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					vTaskSetTimeOutState( &xTimeOut );
 617              		.loc 1 526 0
 618 0210 02AD     		add	r5, sp, #8
 619              	.LVL60:
 620 0212 2846     		mov	r0, r5
 621 0214 144B     		ldr	r3, .L118+48
 622              	.LVL61:
 623 0216 9847     		blx	r3
 624              	.LVL62:
 625 0218 2DE7     		b	.L24
 626              	.L113:
 537:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		prvLockQueue( pxQueue );
 627              		.loc 1 537 0
 628 021a 0023     		movs	r3, #0
 629 021c A364     		str	r3, [r4, #72]
 630 021e 36E7     		b	.L26
 631              	.L112:
 632 0220 0023     		movs	r3, #0
 633 0222 6364     		str	r3, [r4, #68]
 634 0224 2FE7     		b	.L25
 635              	.L27:
 636              	.LVL63:
 637              	.LBB33:
 638              	.LBB34:
1151:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskENTER_CRITICAL();
 639              		.loc 1 1151 0
 640 0226 C847     		blx	r9
 641              	.LVL64:
1154:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
 642              		.loc 1 1154 0
 643 0228 A36C     		ldr	r3, [r4, #72]
 644 022a 002B     		cmp	r3, #0
 645 022c 30DD     		ble	.L55
1158:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 646              		.loc 1 1158 0
 647 022e 636A     		ldr	r3, [r4, #36]
 648 0230 73B3     		cbz	r3, .L55
 649 0232 084D     		ldr	r5, .L118+28
 650 0234 21E0     		b	.L54
 651              	.L119:
 652 0236 00BF     		.align	2
 653              	.L118:
 654 0238 00000000 		.word	pvPortMalloc
 655 023c 00000000 		.word	vListInitialise
 656 0240 00000000 		.word	vTaskSuspendAll
 657 0244 00000000 		.word	xTaskCheckForTimeOut
 658 0248 00000000 		.word	vPortExitCritical
 659 024c 00000000 		.word	vPortEnterCritical
 660 0250 00000000 		.word	vTaskPlaceOnEventList
 661 0254 00000000 		.word	xTaskRemoveFromEventList
 662 0258 00000000 		.word	vTaskMissedYield
 663 025c 00000000 		.word	xTaskResumeAll
 664 0260 00000000 		.word	memcpy
 665 0264 00000000 		.word	vPortYieldFromISR
 666 0268 00000000 		.word	vTaskSetTimeOutState
 667              	.L56:
1169:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xTxLock );
 668              		.loc 1 1169 0
 669 026c A36C     		ldr	r3, [r4, #72]
 670 026e 013B     		subs	r3, r3, #1
1154:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
 671              		.loc 1 1154 0
 672 0270 002B     		cmp	r3, #0
1169:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xTxLock );
 673              		.loc 1 1169 0
 674 0272 A364     		str	r3, [r4, #72]
1154:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
 675              		.loc 1 1154 0
 676 0274 0CDD     		ble	.L55
 677              	.L57:
1158:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 678              		.loc 1 1158 0
 679 0276 636A     		ldr	r3, [r4, #36]
 680 0278 53B1     		cbz	r3, .L55
 681              	.L54:
1162:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 682              		.loc 1 1162 0
 683 027a 3846     		mov	r0, r7
 684 027c A847     		blx	r5
 685              	.LVL65:
 686 027e 0028     		cmp	r0, #0
 687 0280 F4D0     		beq	.L56
1166:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					vTaskMissedYield();
 688              		.loc 1 1166 0
 689 0282 1C4B     		ldr	r3, .L120
 690 0284 9847     		blx	r3
 691              	.LVL66:
1169:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xTxLock );
 692              		.loc 1 1169 0
 693 0286 A36C     		ldr	r3, [r4, #72]
 694 0288 013B     		subs	r3, r3, #1
1154:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
 695              		.loc 1 1154 0
 696 028a 002B     		cmp	r3, #0
1169:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xTxLock );
 697              		.loc 1 1169 0
 698 028c A364     		str	r3, [r4, #72]
1154:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
 699              		.loc 1 1154 0
 700 028e F2DC     		bgt	.L57
 701              	.L55:
1177:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		pxQueue->xTxLock = queueUNLOCKED;
 702              		.loc 1 1177 0
 703 0290 4FF0FF33 		mov	r3, #-1
 704 0294 A364     		str	r3, [r4, #72]
1179:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskEXIT_CRITICAL();
 705              		.loc 1 1179 0
 706 0296 C047     		blx	r8
 707              	.LVL67:
1182:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskENTER_CRITICAL();
 708              		.loc 1 1182 0
 709 0298 C847     		blx	r9
 710              	.LVL68:
1184:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
 711              		.loc 1 1184 0
 712 029a 636C     		ldr	r3, [r4, #68]
 713 029c 002B     		cmp	r3, #0
 714 029e 15DD     		ble	.L53
1186:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 715              		.loc 1 1186 0
 716 02a0 2369     		ldr	r3, [r4, #16]
 717 02a2 9BB1     		cbz	r3, .L53
 718 02a4 144D     		ldr	r5, .L120+4
 719 02a6 06E0     		b	.L58
 720              	.L59:
1193:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xRxLock );
 721              		.loc 1 1193 0
 722 02a8 636C     		ldr	r3, [r4, #68]
 723 02aa 013B     		subs	r3, r3, #1
1184:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
 724              		.loc 1 1184 0
 725 02ac 002B     		cmp	r3, #0
1193:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xRxLock );
 726              		.loc 1 1193 0
 727 02ae 6364     		str	r3, [r4, #68]
1184:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
 728              		.loc 1 1184 0
 729 02b0 0CDD     		ble	.L53
 730              	.L60:
1186:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 731              		.loc 1 1186 0
 732 02b2 2369     		ldr	r3, [r4, #16]
 733 02b4 53B1     		cbz	r3, .L53
 734              	.L58:
1188:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 735              		.loc 1 1188 0
 736 02b6 3046     		mov	r0, r6
 737 02b8 A847     		blx	r5
 738              	.LVL69:
 739 02ba 0028     		cmp	r0, #0
 740 02bc F4D0     		beq	.L59
1190:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					vTaskMissedYield();
 741              		.loc 1 1190 0
 742 02be 0D4B     		ldr	r3, .L120
 743 02c0 9847     		blx	r3
 744              	.LVL70:
1193:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xRxLock );
 745              		.loc 1 1193 0
 746 02c2 636C     		ldr	r3, [r4, #68]
 747 02c4 013B     		subs	r3, r3, #1
1184:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
 748              		.loc 1 1184 0
 749 02c6 002B     		cmp	r3, #0
1193:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xRxLock );
 750              		.loc 1 1193 0
 751 02c8 6364     		str	r3, [r4, #68]
1184:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
 752              		.loc 1 1184 0
 753 02ca F2DC     		bgt	.L60
 754              	.L53:
1201:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		pxQueue->xRxLock = queueUNLOCKED;
 755              		.loc 1 1201 0
 756 02cc 4FF0FF33 		mov	r3, #-1
 757 02d0 6364     		str	r3, [r4, #68]
1203:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskEXIT_CRITICAL();
 758              		.loc 1 1203 0
 759 02d2 C047     		blx	r8
 760              	.LVL71:
 761              	.LBE34:
 762              	.LBE33:
 575:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			( void ) xTaskResumeAll();
 763              		.loc 1 575 0
 764 02d4 094B     		ldr	r3, .L120+8
 765 02d6 9847     		blx	r3
 766              	.LVL72:
 767 02d8 52E7     		b	.L13
 768              	.LVL73:
 769              	.L115:
 770              	.LBB35:
 771              	.LBB30:
1097:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 772              		.loc 1 1097 0
 773 02da 2568     		ldr	r5, [r4, #0]
 774              	.LVL74:
 775 02dc 002D     		cmp	r5, #0
 776 02de 7FF443AF 		bne	.L18
1100:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				vTaskPriorityDisinherit( ( void * ) pxQueue->pxMutexHolder );
 777              		.loc 1 1100 0
 778 02e2 6068     		ldr	r0, [r4, #4]
 779 02e4 064B     		ldr	r3, .L120+12
 780 02e6 9847     		blx	r3
 781              	.LVL75:
1101:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				pxQueue->pxMutexHolder = NULL;
 782              		.loc 1 1101 0
 783 02e8 6560     		str	r5, [r4, #4]
 784 02ea 3DE7     		b	.L18
 785              	.L116:
 786              	.LBE30:
 787              	.LBE35:
 499:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						portYIELD_WITHIN_API();
 788              		.loc 1 499 0
 789 02ec 054B     		ldr	r3, .L120+16
 790 02ee 9847     		blx	r3
 791              	.LVL76:
 792 02f0 45E7     		b	.L21
 793              	.L121:
 794 02f2 00BF     		.align	2
 795              	.L120:
 796 02f4 00000000 		.word	vTaskMissedYield
 797 02f8 00000000 		.word	xTaskRemoveFromEventList
 798 02fc 00000000 		.word	xTaskResumeAll
 799 0300 00000000 		.word	vTaskPriorityDisinherit
 800 0304 00000000 		.word	vPortYieldFromISR
 801              	.LBE37:
 802              	.LBE39:
 803              		.cfi_endproc
 804              	.LFE3:
 806              		.section	.text.xQueueCreateCountingSemaphore,"ax",%progbits
 807              		.align	2
 808              		.global	xQueueCreateCountingSemaphore
 809              		.thumb
 810              		.thumb_func
 812              	xQueueCreateCountingSemaphore:
 813              	.LFB4:
 444:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	{
 814              		.loc 1 444 0
 815              		.cfi_startproc
 816              		@ args = 0, pretend = 0, frame = 0
 817              		@ frame_needed = 0, uses_anonymous_args = 0
 818              	.LVL77:
 819 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 820              	.LCFI3:
 821              		.cfi_def_cfa_offset 24
 822              		.cfi_offset 4, -24
 823              		.cfi_offset 5, -20
 824              		.cfi_offset 6, -16
 825              		.cfi_offset 7, -12
 826              		.cfi_offset 8, -8
 827              		.cfi_offset 14, -4
 828              	.LBB42:
 829              	.LBB43:
 259:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	if( uxQueueLength > ( unsigned portBASE_TYPE ) 0 )
 830              		.loc 1 259 0
 831 0004 0546     		mov	r5, r0
 832              	.LBE43:
 833              	.LBE42:
 444:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	{
 834              		.loc 1 444 0
 835 0006 8846     		mov	r8, r1
 836              	.LBB46:
 837              	.LBB44:
 259:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	if( uxQueueLength > ( unsigned portBASE_TYPE ) 0 )
 838              		.loc 1 259 0
 839 0008 18B3     		cbz	r0, .L126
 261:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		pxNewQueue = ( xQUEUE * ) pvPortMalloc( sizeof( xQUEUE ) );
 840              		.loc 1 261 0
 841 000a 4C20     		movs	r0, #76
 842              	.LVL78:
 843 000c 134E     		ldr	r6, .L134
 844 000e B047     		blx	r6
 845              	.LVL79:
 262:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		if( pxNewQueue != NULL )
 846              		.loc 1 262 0
 847 0010 0446     		mov	r4, r0
 848 0012 F0B1     		cbz	r0, .L126
 849              	.LVL80:
 268:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			pxNewQueue->pcHead = ( signed char * ) pvPortMalloc( xQueueSizeInBytes );
 850              		.loc 1 268 0
 851 0014 0120     		movs	r0, #1
 852              	.LVL81:
 853 0016 B047     		blx	r6
 854              	.LVL82:
 855 0018 0346     		mov	r3, r0
 856 001a 2060     		str	r0, [r4, #0]
 269:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( pxNewQueue->pcHead != NULL )
 857              		.loc 1 269 0
 858 001c B0B1     		cbz	r0, .L124
 279:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				pxNewQueue->xRxLock = queueUNLOCKED;
 859              		.loc 1 279 0
 860 001e 4FF0FF32 		mov	r2, #-1
 274:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				pxNewQueue->uxMessagesWaiting = ( unsigned portBASE_TYPE ) 0U;
 861              		.loc 1 274 0
 862 0022 0027     		movs	r7, #0
 283:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				vListInitialise( &( pxNewQueue->xTasksWaitingToSend ) );
 863              		.loc 1 283 0
 864 0024 04F11000 		add	r0, r4, #16
 865 0028 0D4E     		ldr	r6, .L134+4
 273:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				pxNewQueue->pcTail = pxNewQueue->pcHead + ( uxQueueLength * uxItemSize );
 866              		.loc 1 273 0
 867 002a 6360     		str	r3, [r4, #4]
 275:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				pxNewQueue->pcWriteTo = pxNewQueue->pcHead;
 868              		.loc 1 275 0
 869 002c A360     		str	r3, [r4, #8]
 276:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				pxNewQueue->pcReadFrom = pxNewQueue->pcHead + ( ( uxQueueLength - ( unsigned portBASE_TYPE ) 1U
 870              		.loc 1 276 0
 871 002e E360     		str	r3, [r4, #12]
 279:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				pxNewQueue->xRxLock = queueUNLOCKED;
 872              		.loc 1 279 0
 873 0030 6264     		str	r2, [r4, #68]
 280:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				pxNewQueue->xTxLock = queueUNLOCKED;
 874              		.loc 1 280 0
 875 0032 A264     		str	r2, [r4, #72]
 274:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				pxNewQueue->uxMessagesWaiting = ( unsigned portBASE_TYPE ) 0U;
 876              		.loc 1 274 0
 877 0034 A763     		str	r7, [r4, #56]
 277:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				pxNewQueue->uxLength = uxQueueLength;
 878              		.loc 1 277 0
 879 0036 E563     		str	r5, [r4, #60]
 278:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				pxNewQueue->uxItemSize = uxItemSize;
 880              		.loc 1 278 0
 881 0038 2764     		str	r7, [r4, #64]
 283:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				vListInitialise( &( pxNewQueue->xTasksWaitingToSend ) );
 882              		.loc 1 283 0
 883 003a B047     		blx	r6
 884              	.LVL83:
 284:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				vListInitialise( &( pxNewQueue->xTasksWaitingToReceive ) );
 885              		.loc 1 284 0
 886 003c 04F12400 		add	r0, r4, #36
 887 0040 B047     		blx	r6
 888              	.LVL84:
 889              	.LBE44:
 890              	.LBE46:
 451:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			pxHandle->uxMessagesWaiting = uxInitialCount;
 891              		.loc 1 451 0
 892 0042 C4F83880 		str	r8, [r4, #56]
 462:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	}
 893              		.loc 1 462 0
 894 0046 2046     		mov	r0, r4
 895 0048 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 896              	.LVL85:
 897              	.L124:
 898              	.LBB47:
 899              	.LBB45:
 292:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				vPortFree( pxNewQueue );
 900              		.loc 1 292 0
 901 004c 2046     		mov	r0, r4
 902 004e 054B     		ldr	r3, .L134+8
 903 0050 9847     		blx	r3
 904              	.LVL86:
 905              	.L126:
 906              	.LBE45:
 907              	.LBE47:
 444:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	{
 908              		.loc 1 444 0
 909 0052 0024     		movs	r4, #0
 462:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	}
 910              		.loc 1 462 0
 911 0054 2046     		mov	r0, r4
 912 0056 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 913              	.L135:
 914 005a 00BF     		.align	2
 915              	.L134:
 916 005c 00000000 		.word	pvPortMalloc
 917 0060 00000000 		.word	vListInitialise
 918 0064 00000000 		.word	vPortFree
 919              		.cfi_endproc
 920              	.LFE4:
 922              		.section	.text.xQueueGenericSend,"ax",%progbits
 923              		.align	2
 924              		.global	xQueueGenericSend
 925              		.thumb
 926              		.thumb_func
 928              	xQueueGenericSend:
 929              	.LFB5:
 468:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** {
 930              		.loc 1 468 0
 931              		.cfi_startproc
 932              		@ args = 0, pretend = 0, frame = 16
 933              		@ frame_needed = 0, uses_anonymous_args = 0
 934              	.LVL87:
 935 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 936              	.LCFI4:
 937              		.cfi_def_cfa_offset 36
 938              		.cfi_offset 4, -36
 939              		.cfi_offset 5, -32
 940              		.cfi_offset 6, -28
 941              		.cfi_offset 7, -24
 942              		.cfi_offset 8, -20
 943              		.cfi_offset 9, -16
 944              		.cfi_offset 10, -12
 945              		.cfi_offset 11, -8
 946              		.cfi_offset 14, -4
 947 0004 0446     		mov	r4, r0
 948 0006 85B0     		sub	sp, sp, #20
 949              	.LCFI5:
 950              		.cfi_def_cfa_offset 56
 951 0008 884F     		ldr	r7, .L238
 468:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** {
 952              		.loc 1 468 0
 953 000a 0192     		str	r2, [sp, #4]
 954 000c 9A46     		mov	sl, r3
 955 000e 8946     		mov	r9, r1
 480:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		taskENTER_CRITICAL();
 956              		.loc 1 480 0
 957 0010 B847     		blx	r7
 958              	.LVL88:
 484:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
 959              		.loc 1 484 0
 960 0012 A26B     		ldr	r2, [r4, #56]
 961 0014 E36B     		ldr	r3, [r4, #60]
 962 0016 DFF82082 		ldr	r8, .L238+12
 469:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** signed portBASE_TYPE xEntryTimeSet = pdFALSE;
 963              		.loc 1 469 0
 964 001a 0025     		movs	r5, #0
 965              	.LVL89:
 484:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
 966              		.loc 1 484 0
 967 001c 9A42     		cmp	r2, r3
 968 001e 71D3     		bcc	.L230
 969              	.L138:
 511:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				if( xTicksToWait == ( portTickType ) 0 )
 970              		.loc 1 511 0
 971 0020 019E     		ldr	r6, [sp, #4]
 972 0022 002E     		cmp	r6, #0
 973 0024 00F0D380 		beq	.L231
 522:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
 974              		.loc 1 522 0
 975 0028 002D     		cmp	r5, #0
 976 002a 00F0C580 		beq	.L229
 977 002e 02AD     		add	r5, sp, #8
 978              	.LVL90:
 979              	.L149:
 531:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		taskEXIT_CRITICAL();
 980              		.loc 1 531 0
 981 0030 C047     		blx	r8
 982              	.LVL91:
 536:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		vTaskSuspendAll();
 983              		.loc 1 536 0
 984 0032 7F4B     		ldr	r3, .L238+4
 985 0034 9847     		blx	r3
 986              	.LVL92:
 537:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		prvLockQueue( pxQueue );
 987              		.loc 1 537 0
 988 0036 B847     		blx	r7
 989              	.LVL93:
 990 0038 636C     		ldr	r3, [r4, #68]
 991 003a 0133     		adds	r3, r3, #1
 992 003c 00F0C480 		beq	.L232
 993              	.L150:
 537:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		prvLockQueue( pxQueue );
 994              		.loc 1 537 0 is_stmt 0 discriminator 2
 995 0040 A36C     		ldr	r3, [r4, #72]
 996 0042 0133     		adds	r3, r3, #1
 997 0044 00F0BD80 		beq	.L233
 998              	.L151:
 537:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		prvLockQueue( pxQueue );
 999              		.loc 1 537 0 discriminator 4
 1000 0048 C047     		blx	r8
 1001              	.LVL94:
 540:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 1002              		.loc 1 540 0 is_stmt 1 discriminator 4
 1003 004a 2846     		mov	r0, r5
 1004 004c 01A9     		add	r1, sp, #4
 1005 004e 794B     		ldr	r3, .L238+8
 1006 0050 9847     		blx	r3
 1007              	.LVL95:
 1008 0052 0028     		cmp	r0, #0
 1009 0054 40F0C080 		bne	.L152
 1010              	.LVL96:
 1011              	.LBB58:
 1012              	.LBB59:
1234:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskENTER_CRITICAL();
 1013              		.loc 1 1234 0
 1014 0058 B847     		blx	r7
 1015              	.LVL97:
1235:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		xReturn = ( pxQueue->uxMessagesWaiting == pxQueue->uxLength );
 1016              		.loc 1 1235 0
 1017 005a D4F838B0 		ldr	fp, [r4, #56]
 1018 005e E66B     		ldr	r6, [r4, #60]
 1019              	.LVL98:
 1020              		.loc 1 1236 0
 1021 0060 754B     		ldr	r3, .L238+12
1234:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskENTER_CRITICAL();
 1022              		.loc 1 1234 0
 1023 0062 724D     		ldr	r5, .L238
 1024              		.loc 1 1236 0
 1025 0064 9847     		blx	r3
 1026              	.LVL99:
 1027              	.LBE59:
 1028              	.LBE58:
 542:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( prvIsQueueFull( pxQueue ) )
 1029              		.loc 1 542 0
 1030 0066 B345     		cmp	fp, r6
 1031 0068 62D1     		bne	.L153
 545:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 1032              		.loc 1 545 0
 1033 006a 04F11006 		add	r6, r4, #16
 1034              	.LVL100:
 1035 006e 734B     		ldr	r3, .L238+16
 1036 0070 0199     		ldr	r1, [sp, #4]
 1037 0072 3046     		mov	r0, r6
 1038 0074 9847     		blx	r3
 1039              	.LVL101:
 1040              	.LBB60:
 1041              	.LBB61:
1151:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskENTER_CRITICAL();
 1042              		.loc 1 1151 0
 1043 0076 A847     		blx	r5
 1044              	.LVL102:
1154:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
 1045              		.loc 1 1154 0
 1046 0078 A36C     		ldr	r3, [r4, #72]
 1047 007a 002B     		cmp	r3, #0
 1048 007c 17DD     		ble	.L158
1158:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 1049              		.loc 1 1158 0
 1050 007e 636A     		ldr	r3, [r4, #36]
 1051 0080 ABB1     		cbz	r3, .L158
 1052 0082 04F1240B 		add	fp, r4, #36
 1053 0086 6E4D     		ldr	r5, .L238+20
 1054 0088 06E0     		b	.L157
 1055              	.L159:
1169:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xTxLock );
 1056              		.loc 1 1169 0
 1057 008a A36C     		ldr	r3, [r4, #72]
 1058 008c 013B     		subs	r3, r3, #1
1154:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
 1059              		.loc 1 1154 0
 1060 008e 002B     		cmp	r3, #0
1169:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xTxLock );
 1061              		.loc 1 1169 0
 1062 0090 A364     		str	r3, [r4, #72]
1154:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
 1063              		.loc 1 1154 0
 1064 0092 0CDD     		ble	.L158
 1065              	.L160:
1158:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 1066              		.loc 1 1158 0
 1067 0094 636A     		ldr	r3, [r4, #36]
 1068 0096 53B1     		cbz	r3, .L158
 1069              	.L157:
1162:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 1070              		.loc 1 1162 0
 1071 0098 5846     		mov	r0, fp
 1072 009a A847     		blx	r5
 1073              	.LVL103:
 1074 009c 0028     		cmp	r0, #0
 1075 009e F4D0     		beq	.L159
1166:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					vTaskMissedYield();
 1076              		.loc 1 1166 0
 1077 00a0 684B     		ldr	r3, .L238+24
 1078 00a2 9847     		blx	r3
 1079              	.LVL104:
1169:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xTxLock );
 1080              		.loc 1 1169 0
 1081 00a4 A36C     		ldr	r3, [r4, #72]
 1082 00a6 013B     		subs	r3, r3, #1
1154:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
 1083              		.loc 1 1154 0
 1084 00a8 002B     		cmp	r3, #0
1169:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xTxLock );
 1085              		.loc 1 1169 0
 1086 00aa A364     		str	r3, [r4, #72]
1154:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
 1087              		.loc 1 1154 0
 1088 00ac F2DC     		bgt	.L160
 1089              	.L158:
1177:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		pxQueue->xTxLock = queueUNLOCKED;
 1090              		.loc 1 1177 0
 1091 00ae 4FF0FF33 		mov	r3, #-1
 1092 00b2 A364     		str	r3, [r4, #72]
1179:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskEXIT_CRITICAL();
 1093              		.loc 1 1179 0
 1094 00b4 C047     		blx	r8
 1095              	.LVL105:
1182:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskENTER_CRITICAL();
 1096              		.loc 1 1182 0
 1097 00b6 B847     		blx	r7
 1098              	.LVL106:
1184:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
 1099              		.loc 1 1184 0
 1100 00b8 636C     		ldr	r3, [r4, #68]
 1101 00ba 002B     		cmp	r3, #0
 1102 00bc 15DD     		ble	.L156
1186:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 1103              		.loc 1 1186 0
 1104 00be 2369     		ldr	r3, [r4, #16]
 1105 00c0 9BB1     		cbz	r3, .L156
 1106 00c2 5F4D     		ldr	r5, .L238+20
 1107 00c4 06E0     		b	.L163
 1108              	.L164:
1193:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xRxLock );
 1109              		.loc 1 1193 0
 1110 00c6 636C     		ldr	r3, [r4, #68]
 1111 00c8 013B     		subs	r3, r3, #1
1184:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
 1112              		.loc 1 1184 0
 1113 00ca 002B     		cmp	r3, #0
1193:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xRxLock );
 1114              		.loc 1 1193 0
 1115 00cc 6364     		str	r3, [r4, #68]
1184:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
 1116              		.loc 1 1184 0
 1117 00ce 0CDD     		ble	.L156
 1118              	.L165:
1186:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 1119              		.loc 1 1186 0
 1120 00d0 2369     		ldr	r3, [r4, #16]
 1121 00d2 53B1     		cbz	r3, .L156
 1122              	.L163:
1188:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 1123              		.loc 1 1188 0
 1124 00d4 3046     		mov	r0, r6
 1125 00d6 A847     		blx	r5
 1126              	.LVL107:
 1127 00d8 0028     		cmp	r0, #0
 1128 00da F4D0     		beq	.L164
1190:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					vTaskMissedYield();
 1129              		.loc 1 1190 0
 1130 00dc 594B     		ldr	r3, .L238+24
 1131 00de 9847     		blx	r3
 1132              	.LVL108:
1193:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xRxLock );
 1133              		.loc 1 1193 0
 1134 00e0 636C     		ldr	r3, [r4, #68]
 1135 00e2 013B     		subs	r3, r3, #1
1184:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
 1136              		.loc 1 1184 0
 1137 00e4 002B     		cmp	r3, #0
1193:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xRxLock );
 1138              		.loc 1 1193 0
 1139 00e6 6364     		str	r3, [r4, #68]
1184:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
 1140              		.loc 1 1184 0
 1141 00e8 F2DC     		bgt	.L165
 1142              	.L156:
1201:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		pxQueue->xRxLock = queueUNLOCKED;
 1143              		.loc 1 1201 0
 1144 00ea 4FF0FF33 		mov	r3, #-1
 1145 00ee 6364     		str	r3, [r4, #68]
1203:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskEXIT_CRITICAL();
 1146              		.loc 1 1203 0
 1147 00f0 C047     		blx	r8
 1148              	.LVL109:
 1149              	.LBE61:
 1150              	.LBE60:
 559:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				if( !xTaskResumeAll() )
 1151              		.loc 1 559 0
 1152 00f2 554B     		ldr	r3, .L238+28
 1153 00f4 9847     		blx	r3
 1154              	.LVL110:
 1155 00f6 B8B1     		cbz	r0, .L234
 1156 00f8 0125     		movs	r5, #1
 1157              	.LVL111:
 1158              	.L237:
 480:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		taskENTER_CRITICAL();
 1159              		.loc 1 480 0
 1160 00fa B847     		blx	r7
 1161              	.LVL112:
 484:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
 1162              		.loc 1 484 0
 1163 00fc A26B     		ldr	r2, [r4, #56]
 1164 00fe E36B     		ldr	r3, [r4, #60]
 1165 0100 9A42     		cmp	r2, r3
 1166 0102 8DD2     		bcs	.L138
 1167              	.LVL113:
 1168              	.L230:
 1169              	.LBB62:
 1170              	.LBB63:
1093:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	if( pxQueue->uxItemSize == ( unsigned portBASE_TYPE ) 0 )
 1171              		.loc 1 1093 0
 1172 0104 226C     		ldr	r2, [r4, #64]
 1173 0106 002A     		cmp	r2, #0
 1174 0108 40F0BE80 		bne	.L139
1097:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 1175              		.loc 1 1097 0
 1176 010c 2568     		ldr	r5, [r4, #0]
 1177              	.LVL114:
 1178 010e 002D     		cmp	r5, #0
 1179 0110 00F0E780 		beq	.L235
 1180              	.L141:
1125:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	++( pxQueue->uxMessagesWaiting );
 1181              		.loc 1 1125 0
 1182 0114 A36B     		ldr	r3, [r4, #56]
 1183 0116 0133     		adds	r3, r3, #1
 1184 0118 A363     		str	r3, [r4, #56]
 1185              	.LBE63:
 1186              	.LBE62:
 491:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 1187              		.loc 1 491 0
 1188 011a 636A     		ldr	r3, [r4, #36]
 1189 011c 002B     		cmp	r3, #0
 1190 011e 40F0C580 		bne	.L236
 1191              	.L145:
 503:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				taskEXIT_CRITICAL();
 1192              		.loc 1 503 0
 1193 0122 C047     		blx	r8
 1194              	.LVL115:
 507:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				return pdPASS;
 1195              		.loc 1 507 0
 1196 0124 0120     		movs	r0, #1
 1197 0126 54E0     		b	.L147
 1198              	.LVL116:
 1199              	.L234:
 561:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					portYIELD_WITHIN_API();
 1200              		.loc 1 561 0
 1201 0128 484B     		ldr	r3, .L238+32
 1202 012a 9847     		blx	r3
 1203              	.LVL117:
 1204 012c 0125     		movs	r5, #1
 1205 012e E4E7     		b	.L237
 1206              	.LVL118:
 1207              	.L153:
 1208              	.LBB66:
 1209              	.LBB67:
1151:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskENTER_CRITICAL();
 1210              		.loc 1 1151 0
 1211 0130 A847     		blx	r5
 1212              	.LVL119:
1154:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
 1213              		.loc 1 1154 0
 1214 0132 A36C     		ldr	r3, [r4, #72]
 1215 0134 002B     		cmp	r3, #0
 1216 0136 17DD     		ble	.L170
1158:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 1217              		.loc 1 1158 0
 1218 0138 636A     		ldr	r3, [r4, #36]
 1219 013a ABB1     		cbz	r3, .L170
 1220 013c 04F1240B 		add	fp, r4, #36
 1221              	.LVL120:
 1222 0140 3F4D     		ldr	r5, .L238+20
 1223 0142 06E0     		b	.L169
 1224              	.L171:
1169:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xTxLock );
 1225              		.loc 1 1169 0
 1226 0144 A36C     		ldr	r3, [r4, #72]
 1227 0146 013B     		subs	r3, r3, #1
1154:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
 1228              		.loc 1 1154 0
 1229 0148 002B     		cmp	r3, #0
1169:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xTxLock );
 1230              		.loc 1 1169 0
 1231 014a A364     		str	r3, [r4, #72]
1154:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
 1232              		.loc 1 1154 0
 1233 014c 0CDD     		ble	.L170
 1234              	.L172:
1158:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 1235              		.loc 1 1158 0
 1236 014e 636A     		ldr	r3, [r4, #36]
 1237 0150 53B1     		cbz	r3, .L170
 1238              	.L169:
1162:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 1239              		.loc 1 1162 0
 1240 0152 5846     		mov	r0, fp
 1241 0154 A847     		blx	r5
 1242              	.LVL121:
 1243 0156 0028     		cmp	r0, #0
 1244 0158 F4D0     		beq	.L171
1166:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					vTaskMissedYield();
 1245              		.loc 1 1166 0
 1246 015a 3A4B     		ldr	r3, .L238+24
 1247 015c 9847     		blx	r3
 1248              	.LVL122:
1169:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xTxLock );
 1249              		.loc 1 1169 0
 1250 015e A36C     		ldr	r3, [r4, #72]
 1251 0160 013B     		subs	r3, r3, #1
1154:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
 1252              		.loc 1 1154 0
 1253 0162 002B     		cmp	r3, #0
1169:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xTxLock );
 1254              		.loc 1 1169 0
 1255 0164 A364     		str	r3, [r4, #72]
1154:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
 1256              		.loc 1 1154 0
 1257 0166 F2DC     		bgt	.L172
 1258              	.L170:
1177:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		pxQueue->xTxLock = queueUNLOCKED;
 1259              		.loc 1 1177 0
 1260 0168 4FF0FF33 		mov	r3, #-1
 1261 016c A364     		str	r3, [r4, #72]
1179:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskEXIT_CRITICAL();
 1262              		.loc 1 1179 0
 1263 016e C047     		blx	r8
 1264              	.LVL123:
1182:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskENTER_CRITICAL();
 1265              		.loc 1 1182 0
 1266 0170 B847     		blx	r7
 1267              	.LVL124:
1184:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
 1268              		.loc 1 1184 0
 1269 0172 636C     		ldr	r3, [r4, #68]
 1270 0174 002B     		cmp	r3, #0
 1271 0176 17DD     		ble	.L168
1186:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 1272              		.loc 1 1186 0
 1273 0178 2369     		ldr	r3, [r4, #16]
 1274 017a ABB1     		cbz	r3, .L168
 1275 017c 304D     		ldr	r5, .L238+20
 1276 017e 04F11006 		add	r6, r4, #16
 1277 0182 06E0     		b	.L173
 1278              	.L174:
1193:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xRxLock );
 1279              		.loc 1 1193 0
 1280 0184 626C     		ldr	r2, [r4, #68]
 1281 0186 013A     		subs	r2, r2, #1
1184:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
 1282              		.loc 1 1184 0
 1283 0188 002A     		cmp	r2, #0
1193:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xRxLock );
 1284              		.loc 1 1193 0
 1285 018a 6264     		str	r2, [r4, #68]
1184:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
 1286              		.loc 1 1184 0
 1287 018c 0CDD     		ble	.L168
 1288              	.L175:
1186:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 1289              		.loc 1 1186 0
 1290 018e 2369     		ldr	r3, [r4, #16]
 1291 0190 53B1     		cbz	r3, .L168
 1292              	.L173:
1188:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 1293              		.loc 1 1188 0
 1294 0192 3046     		mov	r0, r6
 1295 0194 A847     		blx	r5
 1296              	.LVL125:
 1297 0196 0028     		cmp	r0, #0
 1298 0198 F4D0     		beq	.L174
1190:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					vTaskMissedYield();
 1299              		.loc 1 1190 0
 1300 019a 2A4B     		ldr	r3, .L238+24
 1301 019c 9847     		blx	r3
 1302              	.LVL126:
1193:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xRxLock );
 1303              		.loc 1 1193 0
 1304 019e 626C     		ldr	r2, [r4, #68]
 1305 01a0 013A     		subs	r2, r2, #1
1184:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
 1306              		.loc 1 1184 0
 1307 01a2 002A     		cmp	r2, #0
1193:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xRxLock );
 1308              		.loc 1 1193 0
 1309 01a4 6264     		str	r2, [r4, #68]
1184:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
 1310              		.loc 1 1184 0
 1311 01a6 F2DC     		bgt	.L175
 1312              	.L168:
1201:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		pxQueue->xRxLock = queueUNLOCKED;
 1313              		.loc 1 1201 0
 1314 01a8 4FF0FF33 		mov	r3, #-1
 1315 01ac 6364     		str	r3, [r4, #68]
1203:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskEXIT_CRITICAL();
 1316              		.loc 1 1203 0
 1317 01ae C047     		blx	r8
 1318              	.LVL127:
 1319              	.LBE67:
 1320              	.LBE66:
 568:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				( void ) xTaskResumeAll();
 1321              		.loc 1 568 0
 1322 01b0 254B     		ldr	r3, .L238+28
 1323 01b2 9847     		blx	r3
 1324              	.LVL128:
 1325 01b4 0125     		movs	r5, #1
 1326 01b6 A0E7     		b	.L237
 1327              	.LVL129:
 1328              	.L229:
 526:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					vTaskSetTimeOutState( &xTimeOut );
 1329              		.loc 1 526 0
 1330 01b8 02AD     		add	r5, sp, #8
 1331              	.LVL130:
 1332 01ba 2846     		mov	r0, r5
 1333 01bc 244B     		ldr	r3, .L238+36
 1334 01be 9847     		blx	r3
 1335              	.LVL131:
 1336 01c0 36E7     		b	.L149
 1337              	.L233:
 537:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		prvLockQueue( pxQueue );
 1338              		.loc 1 537 0 discriminator 3
 1339 01c2 0023     		movs	r3, #0
 1340 01c4 A364     		str	r3, [r4, #72]
 1341 01c6 3FE7     		b	.L151
 1342              	.L232:
 537:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		prvLockQueue( pxQueue );
 1343              		.loc 1 537 0 is_stmt 0 discriminator 1
 1344 01c8 0023     		movs	r3, #0
 1345 01ca 6364     		str	r3, [r4, #68]
 1346 01cc 38E7     		b	.L150
 1347              	.LVL132:
 1348              	.L231:
 515:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					taskEXIT_CRITICAL();
 1349              		.loc 1 515 0 is_stmt 1
 1350 01ce C047     		blx	r8
 1351              	.LVL133:
 520:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					return errQUEUE_FULL;
 1352              		.loc 1 520 0
 1353 01d0 3046     		mov	r0, r6
 1354              	.LVL134:
 1355              	.L147:
 583:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** }
 1356              		.loc 1 583 0
 1357 01d2 05B0     		add	sp, sp, #20
 1358 01d4 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 1359              	.LVL135:
 1360              	.L152:
 1361              	.LBB68:
 1362              	.LBB69:
1151:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskENTER_CRITICAL();
 1363              		.loc 1 1151 0
 1364 01d8 B847     		blx	r7
 1365              	.LVL136:
1154:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
 1366              		.loc 1 1154 0
 1367 01da A36C     		ldr	r3, [r4, #72]
 1368 01dc 002B     		cmp	r3, #0
 1369 01de 17DD     		ble	.L180
1158:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 1370              		.loc 1 1158 0
 1371 01e0 636A     		ldr	r3, [r4, #36]
 1372 01e2 ABB1     		cbz	r3, .L180
 1373 01e4 04F1240B 		add	fp, r4, #36
 1374 01e8 154D     		ldr	r5, .L238+20
 1375 01ea 06E0     		b	.L179
 1376              	.L181:
1169:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xTxLock );
 1377              		.loc 1 1169 0
 1378 01ec A36C     		ldr	r3, [r4, #72]
 1379 01ee 013B     		subs	r3, r3, #1
1154:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
 1380              		.loc 1 1154 0
 1381 01f0 002B     		cmp	r3, #0
1169:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xTxLock );
 1382              		.loc 1 1169 0
 1383 01f2 A364     		str	r3, [r4, #72]
1154:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
 1384              		.loc 1 1154 0
 1385 01f4 0CDD     		ble	.L180
 1386              	.L182:
1158:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 1387              		.loc 1 1158 0
 1388 01f6 636A     		ldr	r3, [r4, #36]
 1389 01f8 53B1     		cbz	r3, .L180
 1390              	.L179:
1162:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 1391              		.loc 1 1162 0
 1392 01fa 5846     		mov	r0, fp
 1393 01fc A847     		blx	r5
 1394              	.LVL137:
 1395 01fe 0028     		cmp	r0, #0
 1396 0200 F4D0     		beq	.L181
1166:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					vTaskMissedYield();
 1397              		.loc 1 1166 0
 1398 0202 104B     		ldr	r3, .L238+24
 1399 0204 9847     		blx	r3
 1400              	.LVL138:
1169:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xTxLock );
 1401              		.loc 1 1169 0
 1402 0206 A36C     		ldr	r3, [r4, #72]
 1403 0208 013B     		subs	r3, r3, #1
1154:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
 1404              		.loc 1 1154 0
 1405 020a 002B     		cmp	r3, #0
1169:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xTxLock );
 1406              		.loc 1 1169 0
 1407 020c A364     		str	r3, [r4, #72]
1154:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
 1408              		.loc 1 1154 0
 1409 020e F2DC     		bgt	.L182
 1410              	.L180:
1177:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		pxQueue->xTxLock = queueUNLOCKED;
 1411              		.loc 1 1177 0
 1412 0210 4FF0FF33 		mov	r3, #-1
 1413 0214 A364     		str	r3, [r4, #72]
1179:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskEXIT_CRITICAL();
 1414              		.loc 1 1179 0
 1415 0216 C047     		blx	r8
 1416              	.LVL139:
1182:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskENTER_CRITICAL();
 1417              		.loc 1 1182 0
 1418 0218 B847     		blx	r7
 1419              	.LVL140:
1184:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
 1420              		.loc 1 1184 0
 1421 021a 636C     		ldr	r3, [r4, #68]
 1422 021c 002B     		cmp	r3, #0
 1423 021e 2BDD     		ble	.L178
1186:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 1424              		.loc 1 1186 0
 1425 0220 2369     		ldr	r3, [r4, #16]
 1426 0222 4BB3     		cbz	r3, .L178
 1427 0224 064D     		ldr	r5, .L238+20
 1428 0226 04F11006 		add	r6, r4, #16
 1429 022a 1AE0     		b	.L183
 1430              	.L239:
 1431              		.align	2
 1432              	.L238:
 1433 022c 00000000 		.word	vPortEnterCritical
 1434 0230 00000000 		.word	vTaskSuspendAll
 1435 0234 00000000 		.word	xTaskCheckForTimeOut
 1436 0238 00000000 		.word	vPortExitCritical
 1437 023c 00000000 		.word	vTaskPlaceOnEventList
 1438 0240 00000000 		.word	xTaskRemoveFromEventList
 1439 0244 00000000 		.word	vTaskMissedYield
 1440 0248 00000000 		.word	xTaskResumeAll
 1441 024c 00000000 		.word	vPortYieldFromISR
 1442 0250 00000000 		.word	vTaskSetTimeOutState
 1443              	.L184:
1193:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xRxLock );
 1444              		.loc 1 1193 0
 1445 0254 636C     		ldr	r3, [r4, #68]
 1446 0256 013B     		subs	r3, r3, #1
1184:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
 1447              		.loc 1 1184 0
 1448 0258 002B     		cmp	r3, #0
1193:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xRxLock );
 1449              		.loc 1 1193 0
 1450 025a 6364     		str	r3, [r4, #68]
1184:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
 1451              		.loc 1 1184 0
 1452 025c 0CDD     		ble	.L178
 1453              	.L185:
1186:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 1454              		.loc 1 1186 0
 1455 025e 2369     		ldr	r3, [r4, #16]
 1456 0260 53B1     		cbz	r3, .L178
 1457              	.L183:
1188:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 1458              		.loc 1 1188 0
 1459 0262 3046     		mov	r0, r6
 1460 0264 A847     		blx	r5
 1461              	.LVL141:
 1462 0266 0028     		cmp	r0, #0
 1463 0268 F4D0     		beq	.L184
1190:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					vTaskMissedYield();
 1464              		.loc 1 1190 0
 1465 026a 204B     		ldr	r3, .L240
 1466 026c 9847     		blx	r3
 1467              	.LVL142:
1193:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xRxLock );
 1468              		.loc 1 1193 0
 1469 026e 636C     		ldr	r3, [r4, #68]
 1470 0270 013B     		subs	r3, r3, #1
1184:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
 1471              		.loc 1 1184 0
 1472 0272 002B     		cmp	r3, #0
1193:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xRxLock );
 1473              		.loc 1 1193 0
 1474 0274 6364     		str	r3, [r4, #68]
1184:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
 1475              		.loc 1 1184 0
 1476 0276 F2DC     		bgt	.L185
 1477              	.LVL143:
 1478              	.L178:
1201:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		pxQueue->xRxLock = queueUNLOCKED;
 1479              		.loc 1 1201 0
 1480 0278 4FF0FF33 		mov	r3, #-1
 1481 027c 6364     		str	r3, [r4, #68]
1203:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskEXIT_CRITICAL();
 1482              		.loc 1 1203 0
 1483 027e C047     		blx	r8
 1484              	.LVL144:
 1485              	.LBE69:
 1486              	.LBE68:
 575:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			( void ) xTaskResumeAll();
 1487              		.loc 1 575 0
 1488 0280 1B4B     		ldr	r3, .L240+4
 1489 0282 9847     		blx	r3
 1490              	.LVL145:
 580:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			return errQUEUE_FULL;
 1491              		.loc 1 580 0
 1492 0284 0020     		movs	r0, #0
 1493 0286 A4E7     		b	.L147
 1494              	.LVL146:
 1495              	.L139:
 1496              	.LBB70:
 1497              	.LBB64:
1106:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	else if( xPosition == queueSEND_TO_BACK )
 1498              		.loc 1 1106 0
 1499 0288 BAF1000F 		cmp	sl, #0
 1500 028c 18D1     		bne	.L142
1108:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( unsigned ) pxQueue->uxItemSize );
 1501              		.loc 1 1108 0
 1502 028e 4946     		mov	r1, r9
 1503 0290 184B     		ldr	r3, .L240+8
 1504 0292 A068     		ldr	r0, [r4, #8]
 1505 0294 9847     		blx	r3
 1506              	.LVL147:
1109:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
 1507              		.loc 1 1109 0
 1508 0296 A168     		ldr	r1, [r4, #8]
 1509 0298 236C     		ldr	r3, [r4, #64]
1110:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail )
 1510              		.loc 1 1110 0
 1511 029a 6268     		ldr	r2, [r4, #4]
1109:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
 1512              		.loc 1 1109 0
 1513 029c CB18     		adds	r3, r1, r3
1110:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail )
 1514              		.loc 1 1110 0
 1515 029e 9342     		cmp	r3, r2
1109:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
 1516              		.loc 1 1109 0
 1517 02a0 A360     		str	r3, [r4, #8]
1110:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail )
 1518              		.loc 1 1110 0
 1519 02a2 FFF437AF 		bcc	.L141
1112:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			pxQueue->pcWriteTo = pxQueue->pcHead;
 1520              		.loc 1 1112 0
 1521 02a6 2368     		ldr	r3, [r4, #0]
 1522 02a8 A360     		str	r3, [r4, #8]
 1523 02aa 33E7     		b	.L141
 1524              	.LVL148:
 1525              	.L236:
 1526              	.LBE64:
 1527              	.LBE70:
 493:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) == pdTRUE )
 1528              		.loc 1 493 0
 1529 02ac 04F12400 		add	r0, r4, #36
 1530 02b0 114B     		ldr	r3, .L240+12
 1531 02b2 9847     		blx	r3
 1532              	.LVL149:
 1533 02b4 0128     		cmp	r0, #1
 1534 02b6 7FF434AF 		bne	.L145
 499:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						portYIELD_WITHIN_API();
 1535              		.loc 1 499 0
 1536 02ba 104B     		ldr	r3, .L240+16
 1537 02bc 9847     		blx	r3
 1538              	.LVL150:
 1539 02be 30E7     		b	.L145
 1540              	.LVL151:
 1541              	.L142:
 1542              	.LBB71:
 1543              	.LBB65:
1117:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		memcpy( ( void * ) pxQueue->pcReadFrom, pvItemToQueue, ( unsigned ) pxQueue->uxItemSize );
 1544              		.loc 1 1117 0
 1545 02c0 4946     		mov	r1, r9
 1546 02c2 0C4B     		ldr	r3, .L240+8
 1547 02c4 E068     		ldr	r0, [r4, #12]
 1548 02c6 9847     		blx	r3
 1549              	.LVL152:
1118:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		pxQueue->pcReadFrom -= pxQueue->uxItemSize;
 1550              		.loc 1 1118 0
 1551 02c8 236C     		ldr	r3, [r4, #64]
 1552 02ca E268     		ldr	r2, [r4, #12]
1119:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		if( pxQueue->pcReadFrom < pxQueue->pcHead )
 1553              		.loc 1 1119 0
 1554 02cc 2168     		ldr	r1, [r4, #0]
1118:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		pxQueue->pcReadFrom -= pxQueue->uxItemSize;
 1555              		.loc 1 1118 0
 1556 02ce 5B42     		negs	r3, r3
 1557 02d0 D218     		adds	r2, r2, r3
1119:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		if( pxQueue->pcReadFrom < pxQueue->pcHead )
 1558              		.loc 1 1119 0
 1559 02d2 8A42     		cmp	r2, r1
1118:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		pxQueue->pcReadFrom -= pxQueue->uxItemSize;
 1560              		.loc 1 1118 0
 1561 02d4 E260     		str	r2, [r4, #12]
1119:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		if( pxQueue->pcReadFrom < pxQueue->pcHead )
 1562              		.loc 1 1119 0
 1563 02d6 BFF41DAF 		bcs	.L141
1121:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			pxQueue->pcReadFrom = ( pxQueue->pcTail - pxQueue->uxItemSize );
 1564              		.loc 1 1121 0
 1565 02da 6268     		ldr	r2, [r4, #4]
 1566 02dc D318     		adds	r3, r2, r3
 1567 02de E360     		str	r3, [r4, #12]
 1568 02e0 18E7     		b	.L141
 1569              	.LVL153:
 1570              	.L235:
1100:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				vTaskPriorityDisinherit( ( void * ) pxQueue->pxMutexHolder );
 1571              		.loc 1 1100 0
 1572 02e2 6068     		ldr	r0, [r4, #4]
 1573 02e4 064B     		ldr	r3, .L240+20
 1574 02e6 9847     		blx	r3
 1575              	.LVL154:
1101:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				pxQueue->pxMutexHolder = NULL;
 1576              		.loc 1 1101 0
 1577 02e8 6560     		str	r5, [r4, #4]
 1578 02ea 13E7     		b	.L141
 1579              	.L241:
 1580              		.align	2
 1581              	.L240:
 1582 02ec 00000000 		.word	vTaskMissedYield
 1583 02f0 00000000 		.word	xTaskResumeAll
 1584 02f4 00000000 		.word	memcpy
 1585 02f8 00000000 		.word	xTaskRemoveFromEventList
 1586 02fc 00000000 		.word	vPortYieldFromISR
 1587 0300 00000000 		.word	vTaskPriorityDisinherit
 1588              	.LBE65:
 1589              	.LBE71:
 1590              		.cfi_endproc
 1591              	.LFE5:
 1593              		.section	.text.xQueueGenericSendFromISR,"ax",%progbits
 1594              		.align	2
 1595              		.global	xQueueGenericSendFromISR
 1596              		.thumb
 1597              		.thumb_func
 1599              	xQueueGenericSendFromISR:
 1600              	.LFB6:
 793:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** {
 1601              		.loc 1 793 0
 1602              		.cfi_startproc
 1603              		@ args = 0, pretend = 0, frame = 0
 1604              		@ frame_needed = 0, uses_anonymous_args = 0
 1605              	.LVL155:
 1606 0000 70B5     		push	{r4, r5, r6, lr}
 1607              	.LCFI6:
 1608              		.cfi_def_cfa_offset 16
 1609              		.cfi_offset 4, -16
 1610              		.cfi_offset 5, -12
 1611              		.cfi_offset 6, -8
 1612              		.cfi_offset 14, -4
 793:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** {
 1613              		.loc 1 793 0
 1614 0002 0446     		mov	r4, r0
 1615              	.LVL156:
 1616 0004 1646     		mov	r6, r2
 1617              	.LBB78:
 1618              	.LBB79:
 1619              		.file 2 "/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h"
   1:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** /*
   2:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****     FreeRTOS V7.0.1 - Copyright (C) 2011 Real Time Engineers Ltd.
   3:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 	
   4:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 
   5:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****     ***************************************************************************
   6:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****      *                                                                       *
   7:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****      *    FreeRTOS tutorial books are available in pdf and paperback.        *
   8:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****      *    Complete, revised, and edited pdf reference manuals are also       *
   9:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****      *    available.                                                         *
  10:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****      *                                                                       *
  11:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****      *    Purchasing FreeRTOS documentation will not only help you, by       *
  12:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****      *    ensuring you get running as quickly as possible and with an        *
  13:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****      *    in-depth knowledge of how to use FreeRTOS, it will also help       *
  14:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****      *    the FreeRTOS project to continue with its mission of providing     *
  15:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****      *    professional grade, cross platform, de facto standard solutions    *
  16:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****      *    for microcontrollers - completely free of charge!                  *
  17:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****      *                                                                       *
  18:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****      *    >>> See http://www.FreeRTOS.org/Documentation for details. <<<     *
  19:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****      *                                                                       *
  20:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****      *    Thank you for using FreeRTOS, and thank you for your support!      *
  21:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****      *                                                                       *
  22:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****     ***************************************************************************
  23:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 
  24:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 
  25:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****     This file is part of the FreeRTOS distribution.
  26:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 
  27:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  28:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****     the terms of the GNU General Public License (version 2) as published by the
  29:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****     Free Software Foundation AND MODIFIED BY the FreeRTOS exception.
  30:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****     >>>NOTE<<< The modification to the GPL is included to allow you to
  31:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****     distribute a combined work that includes FreeRTOS without being obliged to
  32:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****     provide the source code for proprietary components outside of the FreeRTOS
  33:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****     kernel.  FreeRTOS is distributed in the hope that it will be useful, but
  34:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****     WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
  35:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****     or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
  36:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****     more details. You should have received a copy of the GNU General Public
  37:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****     License and the FreeRTOS license exception along with FreeRTOS; if not it
  38:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****     can be viewed here: http://www.freertos.org/a00114.html and also obtained
  39:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****     by writing to Richard Barry, contact details for whom are available on the
  40:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****     FreeRTOS WEB site.
  41:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 
  42:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****     1 tab == 4 spaces!
  43:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 
  44:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****     http://www.FreeRTOS.org - Documentation, latest information, license and
  45:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****     contact details.
  46:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 
  47:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****     http://www.SafeRTOS.com - A version that is certified for use in safety
  48:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****     critical systems.
  49:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 
  50:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****     http://www.OpenRTOS.com - Commercial support, development, porting,
  51:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****     licensing and training services.
  52:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** */
  53:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 
  54:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 
  55:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** #ifndef PORTMACRO_H
  56:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** #define PORTMACRO_H
  57:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 
  58:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** #include <stdint.h>
  59:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 
  60:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** #ifdef __cplusplus
  61:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** extern "C" {
  62:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** #endif
  63:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 
  64:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** /*-----------------------------------------------------------
  65:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****  * Port specific definitions.  
  66:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****  *
  67:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  68:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****  * given hardware and compiler.
  69:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****  *
  70:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****  * These settings should not be altered.
  71:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****  *-----------------------------------------------------------
  72:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****  */
  73:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 
  74:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** /* Type definitions. */
  75:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** #define portCHAR		char
  76:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** #define portFLOAT		float
  77:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** #define portDOUBLE		double
  78:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** #define portLONG		long
  79:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** #define portSHORT		short
  80:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** #define portSTACK_TYPE	uint32_t
  81:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** #define portBASE_TYPE	long
  82:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 
  83:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  84:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 	typedef unsigned portSHORT portTickType;
  85:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 	#define portMAX_DELAY ( portTickType ) 0xffff
  86:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** #else
  87:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 	typedef unsigned portLONG portTickType;
  88:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 	#define portMAX_DELAY ( portTickType ) 0xffffffff
  89:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** #endif
  90:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** /*-----------------------------------------------------------*/	
  91:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 
  92:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** /* Architecture specifics. */
  93:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  94:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** #define portTICK_RATE_MS			( ( portTickType ) 1000 / configTICK_RATE_HZ )		
  95:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** #define portBYTE_ALIGNMENT			8
  96:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** /*-----------------------------------------------------------*/	
  97:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 
  98:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 
  99:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** /* Scheduler utilities. */
 100:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** extern void vPortYieldFromISR( void );
 101:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 
 102:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** #define portYIELD()					vPortYieldFromISR()
 103:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 
 104:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) do { if( xSwitchRequired ) { vPortYieldFromISR(); 
 105:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** /*-----------------------------------------------------------*/
 106:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 
 107:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 
 108:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** /* Critical section management. */
 109:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 
 110:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** /* 
 111:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****  * Set basepri to portMAX_SYSCALL_INTERRUPT_PRIORITY without effecting other
 112:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****  * registers.  r0 is clobbered.
 113:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****  */ 
 114:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** static inline void portSET_INTERRUPT_MASK(void)
 115:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** {
 116:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 	uint32_t reg;
 117:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 	asm volatile (
 1620              		.loc 2 117 0
 1621              	@ 117 "/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h" 1
 1622 0006 4FF0B002 		mov	r2, #176			
 1623 000a 82F31188 	msr	basepri, r2		
 1624              	
 1625              	@ 0 "" 2
 1626              	.LVL157:
 1627              		.thumb
 1628              	.LBE79:
 1629              	.LBE78:
 808:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
 1630              		.loc 1 808 0
 1631 000e 856B     		ldr	r5, [r0, #56]
 1632 0010 C06B     		ldr	r0, [r0, #60]
 1633              	.LVL158:
 1634 0012 8542     		cmp	r5, r0
 1635 0014 05D3     		bcc	.L257
 840:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			xReturn = errQUEUE_FULL;
 1636              		.loc 1 840 0
 1637 0016 0020     		movs	r0, #0
 1638              	.LVL159:
 1639              	.L243:
 1640              	.LBB80:
 1641              	.LBB81:
 118:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 		"mov	%0, %1			\n"
 119:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 		"msr	basepri, %0		\n"
 120:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 			: "=&r"(reg)		/* output operands */
 121:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 			: "i"(configMAX_SYSCALL_INTERRUPT_PRIORITY)	/* input operands */
 122:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 			: 					/* clobber list */
 123:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 	);
 124:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** }
 125:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 
 126:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** /*
 127:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****  * Set basepri back to 0 without effective other registers.
 128:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****  * r0 is clobbered.
 129:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****  */
 130:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** static inline void portCLEAR_INTERRUPT_MASK(void)
 131:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** {
 132:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 	uint32_t reg;
 133:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 	asm volatile (
 1642              		.loc 2 133 0
 1643              	@ 133 "/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h" 1
 1644 0018 4FF00003 		mov	r3, #0			
 1645 001c 83F31188 	msr	basepri, r3		
 1646              	
 1647              	@ 0 "" 2
 1648              	.LVL160:
 1649              		.thumb
 1650              	.LBE81:
 1651              	.LBE80:
 846:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** }
 1652              		.loc 1 846 0
 1653 0020 70BD     		pop	{r4, r5, r6, pc}
 1654              	.LVL161:
 1655              	.L257:
 1656              	.LBB82:
 1657              	.LBB83:
1093:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	if( pxQueue->uxItemSize == ( unsigned portBASE_TYPE ) 0 )
 1658              		.loc 1 1093 0
 1659 0022 226C     		ldr	r2, [r4, #64]
 1660 0024 62B9     		cbnz	r2, .L244
1097:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 1661              		.loc 1 1097 0
 1662 0026 2568     		ldr	r5, [r4, #0]
 1663 0028 002D     		cmp	r5, #0
 1664 002a 32D0     		beq	.L258
 1665              	.LVL162:
 1666              	.L246:
1125:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	++( pxQueue->uxMessagesWaiting );
 1667              		.loc 1 1125 0
 1668 002c A26B     		ldr	r2, [r4, #56]
 1669              	.LBE83:
 1670              	.LBE82:
 816:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( pxQueue->xTxLock == queueUNLOCKED )
 1671              		.loc 1 816 0
 1672 002e A36C     		ldr	r3, [r4, #72]
 1673              	.LBB87:
 1674              	.LBB84:
1125:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	++( pxQueue->uxMessagesWaiting );
 1675              		.loc 1 1125 0
 1676 0030 0132     		adds	r2, r2, #1
 1677 0032 A263     		str	r2, [r4, #56]
 1678              	.LBE84:
 1679              	.LBE87:
 816:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( pxQueue->xTxLock == queueUNLOCKED )
 1680              		.loc 1 816 0
 1681 0034 5A1C     		adds	r2, r3, #1
 1682 0036 11D0     		beq	.L259
 832:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				++( pxQueue->xTxLock );
 1683              		.loc 1 832 0
 1684 0038 0133     		adds	r3, r3, #1
 1685 003a A364     		str	r3, [r4, #72]
 1686              	.L256:
 835:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			xReturn = pdPASS;
 1687              		.loc 1 835 0
 1688 003c 0120     		movs	r0, #1
 1689 003e EBE7     		b	.L243
 1690              	.LVL163:
 1691              	.L244:
 1692              	.LBB88:
 1693              	.LBB85:
1106:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	else if( xPosition == queueSEND_TO_BACK )
 1694              		.loc 1 1106 0
 1695 0040 C3B9     		cbnz	r3, .L247
1108:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( unsigned ) pxQueue->uxItemSize );
 1696              		.loc 1 1108 0
 1697 0042 164B     		ldr	r3, .L260
 1698              	.LVL164:
 1699 0044 A068     		ldr	r0, [r4, #8]
 1700 0046 9847     		blx	r3
 1701              	.LVL165:
1109:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
 1702              		.loc 1 1109 0
 1703 0048 A168     		ldr	r1, [r4, #8]
 1704 004a 236C     		ldr	r3, [r4, #64]
1110:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail )
 1705              		.loc 1 1110 0
 1706 004c 6268     		ldr	r2, [r4, #4]
1109:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
 1707              		.loc 1 1109 0
 1708 004e CB18     		adds	r3, r1, r3
1110:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail )
 1709              		.loc 1 1110 0
 1710 0050 9342     		cmp	r3, r2
1109:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
 1711              		.loc 1 1109 0
 1712 0052 A360     		str	r3, [r4, #8]
1110:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail )
 1713              		.loc 1 1110 0
 1714 0054 EAD3     		bcc	.L246
1112:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			pxQueue->pcWriteTo = pxQueue->pcHead;
 1715              		.loc 1 1112 0
 1716 0056 2368     		ldr	r3, [r4, #0]
 1717 0058 A360     		str	r3, [r4, #8]
 1718 005a E7E7     		b	.L246
 1719              	.L259:
 1720              	.LBE85:
 1721              	.LBE88:
 818:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 1722              		.loc 1 818 0
 1723 005c 636A     		ldr	r3, [r4, #36]
 1724 005e 002B     		cmp	r3, #0
 1725 0060 ECD0     		beq	.L256
 820:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 1726              		.loc 1 820 0
 1727 0062 04F12400 		add	r0, r4, #36
 1728 0066 0E4B     		ldr	r3, .L260+4
 1729 0068 9847     		blx	r3
 1730              	.LVL166:
 1731 006a 0028     		cmp	r0, #0
 1732 006c E6D0     		beq	.L256
 824:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
 1733              		.loc 1 824 0
 1734 006e 0120     		movs	r0, #1
 1735 0070 3060     		str	r0, [r6, #0]
 1736 0072 D1E7     		b	.L243
 1737              	.LVL167:
 1738              	.L247:
 1739              	.LBB89:
 1740              	.LBB86:
1117:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		memcpy( ( void * ) pxQueue->pcReadFrom, pvItemToQueue, ( unsigned ) pxQueue->uxItemSize );
 1741              		.loc 1 1117 0
 1742 0074 094B     		ldr	r3, .L260
 1743              	.LVL168:
 1744 0076 E068     		ldr	r0, [r4, #12]
 1745 0078 9847     		blx	r3
 1746              	.LVL169:
1118:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		pxQueue->pcReadFrom -= pxQueue->uxItemSize;
 1747              		.loc 1 1118 0
 1748 007a 226C     		ldr	r2, [r4, #64]
 1749 007c E368     		ldr	r3, [r4, #12]
1119:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		if( pxQueue->pcReadFrom < pxQueue->pcHead )
 1750              		.loc 1 1119 0
 1751 007e 2168     		ldr	r1, [r4, #0]
1118:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		pxQueue->pcReadFrom -= pxQueue->uxItemSize;
 1752              		.loc 1 1118 0
 1753 0080 5242     		negs	r2, r2
 1754 0082 9B18     		adds	r3, r3, r2
1119:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		if( pxQueue->pcReadFrom < pxQueue->pcHead )
 1755              		.loc 1 1119 0
 1756 0084 8B42     		cmp	r3, r1
1118:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		pxQueue->pcReadFrom -= pxQueue->uxItemSize;
 1757              		.loc 1 1118 0
 1758 0086 E360     		str	r3, [r4, #12]
1119:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		if( pxQueue->pcReadFrom < pxQueue->pcHead )
 1759              		.loc 1 1119 0
 1760 0088 D0D2     		bcs	.L246
1121:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			pxQueue->pcReadFrom = ( pxQueue->pcTail - pxQueue->uxItemSize );
 1761              		.loc 1 1121 0
 1762 008a 6368     		ldr	r3, [r4, #4]
 1763 008c 9B18     		adds	r3, r3, r2
 1764 008e E360     		str	r3, [r4, #12]
 1765 0090 CCE7     		b	.L246
 1766              	.LVL170:
 1767              	.L258:
1100:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				vTaskPriorityDisinherit( ( void * ) pxQueue->pxMutexHolder );
 1768              		.loc 1 1100 0
 1769 0092 6068     		ldr	r0, [r4, #4]
 1770 0094 034B     		ldr	r3, .L260+8
 1771              	.LVL171:
 1772 0096 9847     		blx	r3
 1773              	.LVL172:
1101:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				pxQueue->pxMutexHolder = NULL;
 1774              		.loc 1 1101 0
 1775 0098 6560     		str	r5, [r4, #4]
 1776 009a C7E7     		b	.L246
 1777              	.L261:
 1778              		.align	2
 1779              	.L260:
 1780 009c 00000000 		.word	memcpy
 1781 00a0 00000000 		.word	xTaskRemoveFromEventList
 1782 00a4 00000000 		.word	vTaskPriorityDisinherit
 1783              	.LBE86:
 1784              	.LBE89:
 1785              		.cfi_endproc
 1786              	.LFE6:
 1788              		.section	.text.xQueueGenericReceive,"ax",%progbits
 1789              		.align	2
 1790              		.global	xQueueGenericReceive
 1791              		.thumb
 1792              		.thumb_func
 1794              	xQueueGenericReceive:
 1795              	.LFB7:
 850:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** {
 1796              		.loc 1 850 0
 1797              		.cfi_startproc
 1798              		@ args = 0, pretend = 0, frame = 16
 1799              		@ frame_needed = 0, uses_anonymous_args = 0
 1800              	.LVL173:
 1801 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 1802              	.LCFI7:
 1803              		.cfi_def_cfa_offset 36
 1804              		.cfi_offset 4, -36
 1805              		.cfi_offset 5, -32
 1806              		.cfi_offset 6, -28
 1807              		.cfi_offset 7, -24
 1808              		.cfi_offset 8, -20
 1809              		.cfi_offset 9, -16
 1810              		.cfi_offset 10, -12
 1811              		.cfi_offset 11, -8
 1812              		.cfi_offset 14, -4
 1813 0004 0446     		mov	r4, r0
 1814 0006 85B0     		sub	sp, sp, #20
 1815              	.LCFI8:
 1816              		.cfi_def_cfa_offset 56
 1817 0008 874E     		ldr	r6, .L371
 850:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** {
 1818              		.loc 1 850 0
 1819 000a 0192     		str	r2, [sp, #4]
 1820 000c 9846     		mov	r8, r3
 1821 000e 8946     		mov	r9, r1
 864:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		taskENTER_CRITICAL();
 1822              		.loc 1 864 0
 1823 0010 B047     		blx	r6
 1824              	.LVL174:
 868:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( pxQueue->uxMessagesWaiting > ( unsigned portBASE_TYPE ) 0 )
 1825              		.loc 1 868 0
 1826 0012 A36B     		ldr	r3, [r4, #56]
 1827 0014 854F     		ldr	r7, .L371+4
 851:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** signed portBASE_TYPE xEntryTimeSet = pdFALSE;
 1828              		.loc 1 851 0
 1829 0016 4FF0000A 		mov	sl, #0
 1830              	.LVL175:
 868:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( pxQueue->uxMessagesWaiting > ( unsigned portBASE_TYPE ) 0 )
 1831              		.loc 1 868 0
 1832 001a 002B     		cmp	r3, #0
 1833 001c 78D1     		bne	.L363
 1834              	.L264:
 929:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				if( xTicksToWait == ( portTickType ) 0 )
 1835              		.loc 1 929 0
 1836 001e 019D     		ldr	r5, [sp, #4]
 1837 0020 002D     		cmp	r5, #0
 1838 0022 00F0F280 		beq	.L364
 941:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					vTaskSetTimeOutState( &xTimeOut );
 1839              		.loc 1 941 0
 1840 0026 02AD     		add	r5, sp, #8
 937:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
 1841              		.loc 1 937 0
 1842 0028 BAF1000F 		cmp	sl, #0
 1843 002c 00F09780 		beq	.L362
 1844              	.LVL176:
 1845              	.L275:
 946:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		taskEXIT_CRITICAL();
 1846              		.loc 1 946 0
 1847 0030 B847     		blx	r7
 1848              	.LVL177:
 951:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		vTaskSuspendAll();
 1849              		.loc 1 951 0
 1850 0032 7F4B     		ldr	r3, .L371+8
 1851 0034 9847     		blx	r3
 1852              	.LVL178:
 952:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		prvLockQueue( pxQueue );
 1853              		.loc 1 952 0
 1854 0036 B047     		blx	r6
 1855              	.LVL179:
 1856 0038 636C     		ldr	r3, [r4, #68]
 1857 003a 0133     		adds	r3, r3, #1
 1858 003c 00F0D980 		beq	.L365
 1859              	.L276:
 952:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		prvLockQueue( pxQueue );
 1860              		.loc 1 952 0 is_stmt 0 discriminator 2
 1861 0040 A36C     		ldr	r3, [r4, #72]
 1862 0042 0133     		adds	r3, r3, #1
 1863 0044 00F0D280 		beq	.L366
 1864              	.L277:
 952:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		prvLockQueue( pxQueue );
 1865              		.loc 1 952 0 discriminator 4
 1866 0048 B847     		blx	r7
 1867              	.LVL180:
 955:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 1868              		.loc 1 955 0 is_stmt 1 discriminator 4
 1869 004a 2846     		mov	r0, r5
 1870 004c 01A9     		add	r1, sp, #4
 1871 004e 794B     		ldr	r3, .L371+12
 952:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		prvLockQueue( pxQueue );
 1872              		.loc 1 952 0 discriminator 4
 1873 0050 764D     		ldr	r5, .L371+4
 955:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 1874              		.loc 1 955 0 discriminator 4
 1875 0052 9847     		blx	r3
 1876              	.LVL181:
 1877 0054 0028     		cmp	r0, #0
 1878 0056 40F0DD80 		bne	.L278
 1879              	.LVL182:
 1880              	.LBB100:
 1881              	.LBB101:
1211:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskENTER_CRITICAL();
 1882              		.loc 1 1211 0
 1883 005a B047     		blx	r6
 1884              	.LVL183:
1212:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		xReturn = ( pxQueue->uxMessagesWaiting == ( unsigned portBASE_TYPE ) 0 );
 1885              		.loc 1 1212 0
 1886 005c D4F838A0 		ldr	sl, [r4, #56]
 1887              	.LVL184:
1211:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskENTER_CRITICAL();
 1888              		.loc 1 1211 0
 1889 0060 DFF8C4B1 		ldr	fp, .L371
1213:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskEXIT_CRITICAL();
 1890              		.loc 1 1213 0
 1891 0064 A847     		blx	r5
 1892              	.LVL185:
 1893              	.LBE101:
 1894              	.LBE100:
 957:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) )
 1895              		.loc 1 957 0
 1896 0066 BAF1000F 		cmp	sl, #0
 1897 006a 7CD1     		bne	.L279
 963:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 1898              		.loc 1 963 0
 1899 006c 2368     		ldr	r3, [r4, #0]
 1900 006e 002B     		cmp	r3, #0
 1901 0070 00F0C580 		beq	.L367
 1902              	.L280:
 974:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 1903              		.loc 1 974 0
 1904 0074 04F1240A 		add	sl, r4, #36
 1905              	.LVL186:
 1906 0078 6F4B     		ldr	r3, .L371+16
 1907 007a 0199     		ldr	r1, [sp, #4]
 1908 007c 5046     		mov	r0, sl
 1909 007e 9847     		blx	r3
 1910              	.LVL187:
 1911              	.LBB102:
 1912              	.LBB103:
1151:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskENTER_CRITICAL();
 1913              		.loc 1 1151 0
 1914 0080 B047     		blx	r6
 1915              	.LVL188:
1154:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
 1916              		.loc 1 1154 0
 1917 0082 A36C     		ldr	r3, [r4, #72]
 1918 0084 002B     		cmp	r3, #0
 1919 0086 15DD     		ble	.L285
1158:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 1920              		.loc 1 1158 0
 1921 0088 636A     		ldr	r3, [r4, #36]
 1922 008a 9BB1     		cbz	r3, .L285
 1923 008c 6B4D     		ldr	r5, .L371+20
 1924 008e 06E0     		b	.L284
 1925              	.L286:
1169:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xTxLock );
 1926              		.loc 1 1169 0
 1927 0090 A26C     		ldr	r2, [r4, #72]
 1928 0092 013A     		subs	r2, r2, #1
1154:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
 1929              		.loc 1 1154 0
 1930 0094 002A     		cmp	r2, #0
1169:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xTxLock );
 1931              		.loc 1 1169 0
 1932 0096 A264     		str	r2, [r4, #72]
1154:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
 1933              		.loc 1 1154 0
 1934 0098 0CDD     		ble	.L285
 1935              	.L287:
1158:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 1936              		.loc 1 1158 0
 1937 009a 636A     		ldr	r3, [r4, #36]
 1938 009c 53B1     		cbz	r3, .L285
 1939              	.L284:
1162:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 1940              		.loc 1 1162 0
 1941 009e 5046     		mov	r0, sl
 1942 00a0 A847     		blx	r5
 1943              	.LVL189:
 1944 00a2 0028     		cmp	r0, #0
 1945 00a4 F4D0     		beq	.L286
1166:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					vTaskMissedYield();
 1946              		.loc 1 1166 0
 1947 00a6 664B     		ldr	r3, .L371+24
 1948 00a8 9847     		blx	r3
 1949              	.LVL190:
1169:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xTxLock );
 1950              		.loc 1 1169 0
 1951 00aa A26C     		ldr	r2, [r4, #72]
 1952 00ac 013A     		subs	r2, r2, #1
1154:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
 1953              		.loc 1 1154 0
 1954 00ae 002A     		cmp	r2, #0
1169:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xTxLock );
 1955              		.loc 1 1169 0
 1956 00b0 A264     		str	r2, [r4, #72]
1154:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
 1957              		.loc 1 1154 0
 1958 00b2 F2DC     		bgt	.L287
 1959              	.L285:
1177:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		pxQueue->xTxLock = queueUNLOCKED;
 1960              		.loc 1 1177 0
 1961 00b4 4FF0FF33 		mov	r3, #-1
 1962 00b8 A364     		str	r3, [r4, #72]
1179:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskEXIT_CRITICAL();
 1963              		.loc 1 1179 0
 1964 00ba B847     		blx	r7
 1965              	.LVL191:
1182:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskENTER_CRITICAL();
 1966              		.loc 1 1182 0
 1967 00bc B047     		blx	r6
 1968              	.LVL192:
1184:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
 1969              		.loc 1 1184 0
 1970 00be 636C     		ldr	r3, [r4, #68]
 1971 00c0 002B     		cmp	r3, #0
 1972 00c2 17DD     		ble	.L283
1186:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 1973              		.loc 1 1186 0
 1974 00c4 2369     		ldr	r3, [r4, #16]
 1975 00c6 ABB1     		cbz	r3, .L283
 1976 00c8 04F1100A 		add	sl, r4, #16
 1977 00cc 5B4D     		ldr	r5, .L371+20
 1978 00ce 06E0     		b	.L290
 1979              	.L291:
1193:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xRxLock );
 1980              		.loc 1 1193 0
 1981 00d0 626C     		ldr	r2, [r4, #68]
 1982 00d2 013A     		subs	r2, r2, #1
1184:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
 1983              		.loc 1 1184 0
 1984 00d4 002A     		cmp	r2, #0
1193:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xRxLock );
 1985              		.loc 1 1193 0
 1986 00d6 6264     		str	r2, [r4, #68]
1184:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
 1987              		.loc 1 1184 0
 1988 00d8 0CDD     		ble	.L283
 1989              	.L292:
1186:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 1990              		.loc 1 1186 0
 1991 00da 2369     		ldr	r3, [r4, #16]
 1992 00dc 53B1     		cbz	r3, .L283
 1993              	.L290:
1188:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 1994              		.loc 1 1188 0
 1995 00de 5046     		mov	r0, sl
 1996 00e0 A847     		blx	r5
 1997              	.LVL193:
 1998 00e2 0028     		cmp	r0, #0
 1999 00e4 F4D0     		beq	.L291
1190:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					vTaskMissedYield();
 2000              		.loc 1 1190 0
 2001 00e6 564B     		ldr	r3, .L371+24
 2002 00e8 9847     		blx	r3
 2003              	.LVL194:
1193:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xRxLock );
 2004              		.loc 1 1193 0
 2005 00ea 626C     		ldr	r2, [r4, #68]
 2006 00ec 013A     		subs	r2, r2, #1
1184:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
 2007              		.loc 1 1184 0
 2008 00ee 002A     		cmp	r2, #0
1193:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xRxLock );
 2009              		.loc 1 1193 0
 2010 00f0 6264     		str	r2, [r4, #68]
1184:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
 2011              		.loc 1 1184 0
 2012 00f2 F2DC     		bgt	.L292
 2013              	.L283:
1201:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		pxQueue->xRxLock = queueUNLOCKED;
 2014              		.loc 1 1201 0
 2015 00f4 4FF0FF33 		mov	r3, #-1
 2016 00f8 6364     		str	r3, [r4, #68]
1203:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskEXIT_CRITICAL();
 2017              		.loc 1 1203 0
 2018 00fa B847     		blx	r7
 2019              	.LVL195:
 2020              	.LBE103:
 2021              	.LBE102:
 976:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				if( !xTaskResumeAll() )
 2022              		.loc 1 976 0
 2023 00fc 514B     		ldr	r3, .L371+28
 2024 00fe 9847     		blx	r3
 2025              	.LVL196:
 2026 0100 0028     		cmp	r0, #0
 2027 0102 79D0     		beq	.L368
 2028              	.LVL197:
 2029              	.L289:
 864:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		taskENTER_CRITICAL();
 2030              		.loc 1 864 0
 2031 0104 B047     		blx	r6
 2032              	.LVL198:
 868:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( pxQueue->uxMessagesWaiting > ( unsigned portBASE_TYPE ) 0 )
 2033              		.loc 1 868 0
 2034 0106 A36B     		ldr	r3, [r4, #56]
 2035 0108 4FF0010A 		mov	sl, #1
 2036              	.LVL199:
 2037 010c 002B     		cmp	r3, #0
 2038 010e 86D0     		beq	.L264
 2039              	.LVL200:
 2040              	.L363:
 2041              	.LBB104:
 2042              	.LBB105:
1131:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	if( pxQueue->uxQueueType != queueQUEUE_IS_MUTEX )
 2043              		.loc 1 1131 0
 2044 0110 2368     		ldr	r3, [r4, #0]
 2045              	.LBE105:
 2046              	.LBE104:
 871:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				pcOriginalReadPosition = pxQueue->pcReadFrom;
 2047              		.loc 1 871 0
 2048 0112 E568     		ldr	r5, [r4, #12]
 2049              	.LVL201:
 2050              	.LBB107:
 2051              	.LBB106:
1131:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	if( pxQueue->uxQueueType != queueQUEUE_IS_MUTEX )
 2052              		.loc 1 1131 0
 2053 0114 53B1     		cbz	r3, .L265
1133:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		pxQueue->pcReadFrom += pxQueue->uxItemSize;
 2054              		.loc 1 1133 0
 2055 0116 226C     		ldr	r2, [r4, #64]
1134:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		if( pxQueue->pcReadFrom >= pxQueue->pcTail )
 2056              		.loc 1 1134 0
 2057 0118 6068     		ldr	r0, [r4, #4]
1133:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		pxQueue->pcReadFrom += pxQueue->uxItemSize;
 2058              		.loc 1 1133 0
 2059 011a A918     		adds	r1, r5, r2
1134:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		if( pxQueue->pcReadFrom >= pxQueue->pcTail )
 2060              		.loc 1 1134 0
 2061 011c 8142     		cmp	r1, r0
1133:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		pxQueue->pcReadFrom += pxQueue->uxItemSize;
 2062              		.loc 1 1133 0
 2063 011e E160     		str	r1, [r4, #12]
1138:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->pcReadFrom, ( unsigned ) pxQueue->uxItemSize );
 2064              		.loc 1 1138 0
 2065 0120 4846     		mov	r0, r9
1136:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			pxQueue->pcReadFrom = pxQueue->pcHead;
 2066              		.loc 1 1136 0
 2067 0122 24BF     		itt	cs
 2068 0124 E360     		strcs	r3, [r4, #12]
 2069 0126 1946     		movcs	r1, r3
1138:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->pcReadFrom, ( unsigned ) pxQueue->uxItemSize );
 2070              		.loc 1 1138 0
 2071 0128 474B     		ldr	r3, .L371+32
 2072 012a 9847     		blx	r3
 2073              	.LVL202:
 2074              	.L265:
 2075              	.LBE106:
 2076              	.LBE107:
 875:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				if( xJustPeeking == pdFALSE )
 2077              		.loc 1 875 0
 2078 012c B8F1000F 		cmp	r8, #0
 2079 0130 40F0CC80 		bne	.L267
 880:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					--( pxQueue->uxMessagesWaiting );
 2080              		.loc 1 880 0
 2081 0134 A26B     		ldr	r2, [r4, #56]
 884:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 2082              		.loc 1 884 0
 2083 0136 2368     		ldr	r3, [r4, #0]
 880:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					--( pxQueue->uxMessagesWaiting );
 2084              		.loc 1 880 0
 2085 0138 013A     		subs	r2, r2, #1
 2086 013a A263     		str	r2, [r4, #56]
 884:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 2087              		.loc 1 884 0
 2088 013c 002B     		cmp	r3, #0
 2089 013e 00F0D280 		beq	.L369
 2090              	.L268:
 893:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 2091              		.loc 1 893 0
 2092 0142 2369     		ldr	r3, [r4, #16]
 2093 0144 002B     		cmp	r3, #0
 2094 0146 00F0C480 		beq	.L270
 895:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) == pdTRUE )
 2095              		.loc 1 895 0
 2096 014a 04F11000 		add	r0, r4, #16
 2097 014e 3B4B     		ldr	r3, .L371+20
 2098 0150 9847     		blx	r3
 2099              	.LVL203:
 2100 0152 0128     		cmp	r0, #1
 2101 0154 40F0BD80 		bne	.L270
 2102              	.L272:
 897:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 							portYIELD_WITHIN_API();
 2103              		.loc 1 897 0
 2104 0158 3C4B     		ldr	r3, .L371+36
 2105 015a 9847     		blx	r3
 2106              	.LVL204:
 2107 015c B9E0     		b	.L270
 2108              	.LVL205:
 2109              	.L362:
 941:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					vTaskSetTimeOutState( &xTimeOut );
 2110              		.loc 1 941 0
 2111 015e 2846     		mov	r0, r5
 2112 0160 3B4B     		ldr	r3, .L371+40
 2113 0162 9847     		blx	r3
 2114              	.LVL206:
 2115 0164 64E7     		b	.L275
 2116              	.LVL207:
 2117              	.L279:
 2118              	.LBB108:
 2119              	.LBB109:
1151:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskENTER_CRITICAL();
 2120              		.loc 1 1151 0
 2121 0166 D847     		blx	fp
 2122              	.LVL208:
1154:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
 2123              		.loc 1 1154 0
 2124 0168 A36C     		ldr	r3, [r4, #72]
 2125 016a 002B     		cmp	r3, #0
 2126 016c 17DD     		ble	.L297
1158:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 2127              		.loc 1 1158 0
 2128 016e 636A     		ldr	r3, [r4, #36]
 2129 0170 ABB1     		cbz	r3, .L297
 2130 0172 324D     		ldr	r5, .L371+20
 2131 0174 04F1240A 		add	sl, r4, #36
 2132              	.LVL209:
 2133 0178 06E0     		b	.L296
 2134              	.L298:
1169:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xTxLock );
 2135              		.loc 1 1169 0
 2136 017a A36C     		ldr	r3, [r4, #72]
 2137 017c 013B     		subs	r3, r3, #1
1154:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
 2138              		.loc 1 1154 0
 2139 017e 002B     		cmp	r3, #0
1169:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xTxLock );
 2140              		.loc 1 1169 0
 2141 0180 A364     		str	r3, [r4, #72]
1154:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
 2142              		.loc 1 1154 0
 2143 0182 0CDD     		ble	.L297
 2144              	.L299:
1158:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 2145              		.loc 1 1158 0
 2146 0184 636A     		ldr	r3, [r4, #36]
 2147 0186 53B1     		cbz	r3, .L297
 2148              	.L296:
1162:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 2149              		.loc 1 1162 0
 2150 0188 5046     		mov	r0, sl
 2151 018a A847     		blx	r5
 2152              	.LVL210:
 2153 018c 0028     		cmp	r0, #0
 2154 018e F4D0     		beq	.L298
1166:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					vTaskMissedYield();
 2155              		.loc 1 1166 0
 2156 0190 2B4B     		ldr	r3, .L371+24
 2157 0192 9847     		blx	r3
 2158              	.LVL211:
1169:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xTxLock );
 2159              		.loc 1 1169 0
 2160 0194 A36C     		ldr	r3, [r4, #72]
 2161 0196 013B     		subs	r3, r3, #1
1154:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
 2162              		.loc 1 1154 0
 2163 0198 002B     		cmp	r3, #0
1169:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xTxLock );
 2164              		.loc 1 1169 0
 2165 019a A364     		str	r3, [r4, #72]
1154:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
 2166              		.loc 1 1154 0
 2167 019c F2DC     		bgt	.L299
 2168              	.L297:
1177:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		pxQueue->xTxLock = queueUNLOCKED;
 2169              		.loc 1 1177 0
 2170 019e 4FF0FF33 		mov	r3, #-1
 2171 01a2 A364     		str	r3, [r4, #72]
1179:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskEXIT_CRITICAL();
 2172              		.loc 1 1179 0
 2173 01a4 B847     		blx	r7
 2174              	.LVL212:
1182:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskENTER_CRITICAL();
 2175              		.loc 1 1182 0
 2176 01a6 B047     		blx	r6
 2177              	.LVL213:
1184:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
 2178              		.loc 1 1184 0
 2179 01a8 636C     		ldr	r3, [r4, #68]
 2180 01aa 002B     		cmp	r3, #0
 2181 01ac 17DD     		ble	.L295
1186:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 2182              		.loc 1 1186 0
 2183 01ae 2369     		ldr	r3, [r4, #16]
 2184 01b0 ABB1     		cbz	r3, .L295
 2185 01b2 04F1100A 		add	sl, r4, #16
 2186 01b6 214D     		ldr	r5, .L371+20
 2187 01b8 06E0     		b	.L300
 2188              	.L301:
1193:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xRxLock );
 2189              		.loc 1 1193 0
 2190 01ba 636C     		ldr	r3, [r4, #68]
 2191 01bc 013B     		subs	r3, r3, #1
1184:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
 2192              		.loc 1 1184 0
 2193 01be 002B     		cmp	r3, #0
1193:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xRxLock );
 2194              		.loc 1 1193 0
 2195 01c0 6364     		str	r3, [r4, #68]
1184:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
 2196              		.loc 1 1184 0
 2197 01c2 0CDD     		ble	.L295
 2198              	.L302:
1186:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 2199              		.loc 1 1186 0
 2200 01c4 2369     		ldr	r3, [r4, #16]
 2201 01c6 53B1     		cbz	r3, .L295
 2202              	.L300:
1188:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 2203              		.loc 1 1188 0
 2204 01c8 5046     		mov	r0, sl
 2205 01ca A847     		blx	r5
 2206              	.LVL214:
 2207 01cc 0028     		cmp	r0, #0
 2208 01ce F4D0     		beq	.L301
1190:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					vTaskMissedYield();
 2209              		.loc 1 1190 0
 2210 01d0 1B4B     		ldr	r3, .L371+24
 2211 01d2 9847     		blx	r3
 2212              	.LVL215:
1193:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xRxLock );
 2213              		.loc 1 1193 0
 2214 01d4 636C     		ldr	r3, [r4, #68]
 2215 01d6 013B     		subs	r3, r3, #1
1184:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
 2216              		.loc 1 1184 0
 2217 01d8 002B     		cmp	r3, #0
1193:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xRxLock );
 2218              		.loc 1 1193 0
 2219 01da 6364     		str	r3, [r4, #68]
1184:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
 2220              		.loc 1 1184 0
 2221 01dc F2DC     		bgt	.L302
 2222              	.L295:
1201:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		pxQueue->xRxLock = queueUNLOCKED;
 2223              		.loc 1 1201 0
 2224 01de 4FF0FF33 		mov	r3, #-1
 2225 01e2 6364     		str	r3, [r4, #68]
1203:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskEXIT_CRITICAL();
 2226              		.loc 1 1203 0
 2227 01e4 B847     		blx	r7
 2228              	.LVL216:
 2229              	.LBE109:
 2230              	.LBE108:
 985:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				( void ) xTaskResumeAll();
 2231              		.loc 1 985 0
 2232 01e6 174B     		ldr	r3, .L371+28
 2233 01e8 9847     		blx	r3
 2234              	.LVL217:
 2235 01ea 8BE7     		b	.L289
 2236              	.LVL218:
 2237              	.L366:
 952:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		prvLockQueue( pxQueue );
 2238              		.loc 1 952 0 discriminator 3
 2239 01ec 0023     		movs	r3, #0
 2240 01ee A364     		str	r3, [r4, #72]
 2241 01f0 2AE7     		b	.L277
 2242              	.L365:
 952:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		prvLockQueue( pxQueue );
 2243              		.loc 1 952 0 is_stmt 0 discriminator 1
 2244 01f2 0023     		movs	r3, #0
 2245 01f4 6364     		str	r3, [r4, #68]
 2246 01f6 23E7     		b	.L276
 2247              	.LVL219:
 2248              	.L368:
 978:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					portYIELD_WITHIN_API();
 2249              		.loc 1 978 0 is_stmt 1
 2250 01f8 144B     		ldr	r3, .L371+36
 2251 01fa 9847     		blx	r3
 2252              	.LVL220:
 2253 01fc 82E7     		b	.L289
 2254              	.LVL221:
 2255              	.L367:
 965:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						portENTER_CRITICAL();
 2256              		.loc 1 965 0
 2257 01fe D847     		blx	fp
 2258              	.LVL222:
 967:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 							vTaskPriorityInherit( ( void * ) pxQueue->pxMutexHolder );
 2259              		.loc 1 967 0
 2260 0200 6068     		ldr	r0, [r4, #4]
 2261 0202 144B     		ldr	r3, .L371+44
 2262 0204 9847     		blx	r3
 2263              	.LVL223:
 969:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						portEXIT_CRITICAL();
 2264              		.loc 1 969 0
 2265 0206 A847     		blx	r5
 2266              	.LVL224:
 2267 0208 34E7     		b	.L280
 2268              	.LVL225:
 2269              	.L364:
 933:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					taskEXIT_CRITICAL();
 2270              		.loc 1 933 0
 2271 020a B847     		blx	r7
 2272              	.LVL226:
 935:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					return errQUEUE_EMPTY;
 2273              		.loc 1 935 0
 2274 020c 2846     		mov	r0, r5
 2275              	.LVL227:
 2276              	.L273:
 996:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** }
 2277              		.loc 1 996 0
 2278 020e 05B0     		add	sp, sp, #20
 2279 0210 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 2280              	.LVL228:
 2281              	.L278:
 2282              	.LBB110:
 2283              	.LBB111:
1151:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskENTER_CRITICAL();
 2284              		.loc 1 1151 0
 2285 0214 B047     		blx	r6
 2286              	.LVL229:
1154:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
 2287              		.loc 1 1154 0
 2288 0216 A36C     		ldr	r3, [r4, #72]
 2289 0218 002B     		cmp	r3, #0
 2290 021a 2FDD     		ble	.L307
1158:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 2291              		.loc 1 1158 0
 2292 021c 636A     		ldr	r3, [r4, #36]
 2293 021e 6BB3     		cbz	r3, .L307
 2294 0220 064D     		ldr	r5, .L371+20
 2295 0222 04F1240A 		add	sl, r4, #36
 2296 0226 1EE0     		b	.L306
 2297              	.L372:
 2298              		.align	2
 2299              	.L371:
 2300 0228 00000000 		.word	vPortEnterCritical
 2301 022c 00000000 		.word	vPortExitCritical
 2302 0230 00000000 		.word	vTaskSuspendAll
 2303 0234 00000000 		.word	xTaskCheckForTimeOut
 2304 0238 00000000 		.word	vTaskPlaceOnEventList
 2305 023c 00000000 		.word	xTaskRemoveFromEventList
 2306 0240 00000000 		.word	vTaskMissedYield
 2307 0244 00000000 		.word	xTaskResumeAll
 2308 0248 00000000 		.word	memcpy
 2309 024c 00000000 		.word	vPortYieldFromISR
 2310 0250 00000000 		.word	vTaskSetTimeOutState
 2311 0254 00000000 		.word	vTaskPriorityInherit
 2312              	.L308:
1169:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xTxLock );
 2313              		.loc 1 1169 0
 2314 0258 A36C     		ldr	r3, [r4, #72]
 2315 025a 013B     		subs	r3, r3, #1
1154:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
 2316              		.loc 1 1154 0
 2317 025c 002B     		cmp	r3, #0
1169:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xTxLock );
 2318              		.loc 1 1169 0
 2319 025e A364     		str	r3, [r4, #72]
1154:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
 2320              		.loc 1 1154 0
 2321 0260 0CDD     		ble	.L307
 2322              	.L309:
1158:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 2323              		.loc 1 1158 0
 2324 0262 636A     		ldr	r3, [r4, #36]
 2325 0264 53B1     		cbz	r3, .L307
 2326              	.L306:
1162:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 2327              		.loc 1 1162 0
 2328 0266 5046     		mov	r0, sl
 2329 0268 A847     		blx	r5
 2330              	.LVL230:
 2331 026a 0028     		cmp	r0, #0
 2332 026c F4D0     		beq	.L308
1166:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					vTaskMissedYield();
 2333              		.loc 1 1166 0
 2334 026e 204B     		ldr	r3, .L373
 2335 0270 9847     		blx	r3
 2336              	.LVL231:
1169:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xTxLock );
 2337              		.loc 1 1169 0
 2338 0272 A36C     		ldr	r3, [r4, #72]
 2339 0274 013B     		subs	r3, r3, #1
1154:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
 2340              		.loc 1 1154 0
 2341 0276 002B     		cmp	r3, #0
1169:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xTxLock );
 2342              		.loc 1 1169 0
 2343 0278 A364     		str	r3, [r4, #72]
1154:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
 2344              		.loc 1 1154 0
 2345 027a F2DC     		bgt	.L309
 2346              	.L307:
1177:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		pxQueue->xTxLock = queueUNLOCKED;
 2347              		.loc 1 1177 0
 2348 027c 4FF0FF33 		mov	r3, #-1
 2349 0280 A364     		str	r3, [r4, #72]
1179:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskEXIT_CRITICAL();
 2350              		.loc 1 1179 0
 2351 0282 B847     		blx	r7
 2352              	.LVL232:
1182:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskENTER_CRITICAL();
 2353              		.loc 1 1182 0
 2354 0284 B047     		blx	r6
 2355              	.LVL233:
1184:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
 2356              		.loc 1 1184 0
 2357 0286 636C     		ldr	r3, [r4, #68]
 2358 0288 002B     		cmp	r3, #0
 2359 028a 17DD     		ble	.L305
1186:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 2360              		.loc 1 1186 0
 2361 028c 2369     		ldr	r3, [r4, #16]
 2362 028e ABB1     		cbz	r3, .L305
 2363 0290 04F1100A 		add	sl, r4, #16
 2364 0294 174D     		ldr	r5, .L373+4
 2365 0296 06E0     		b	.L310
 2366              	.L311:
1193:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xRxLock );
 2367              		.loc 1 1193 0
 2368 0298 636C     		ldr	r3, [r4, #68]
 2369 029a 013B     		subs	r3, r3, #1
1184:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
 2370              		.loc 1 1184 0
 2371 029c 002B     		cmp	r3, #0
1193:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xRxLock );
 2372              		.loc 1 1193 0
 2373 029e 6364     		str	r3, [r4, #68]
1184:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
 2374              		.loc 1 1184 0
 2375 02a0 0CDD     		ble	.L305
 2376              	.L312:
1186:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 2377              		.loc 1 1186 0
 2378 02a2 2369     		ldr	r3, [r4, #16]
 2379 02a4 53B1     		cbz	r3, .L305
 2380              	.L310:
1188:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 2381              		.loc 1 1188 0
 2382 02a6 5046     		mov	r0, sl
 2383 02a8 A847     		blx	r5
 2384              	.LVL234:
 2385 02aa 0028     		cmp	r0, #0
 2386 02ac F4D0     		beq	.L311
1190:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					vTaskMissedYield();
 2387              		.loc 1 1190 0
 2388 02ae 104B     		ldr	r3, .L373
 2389 02b0 9847     		blx	r3
 2390              	.LVL235:
1193:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xRxLock );
 2391              		.loc 1 1193 0
 2392 02b2 636C     		ldr	r3, [r4, #68]
 2393 02b4 013B     		subs	r3, r3, #1
1184:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
 2394              		.loc 1 1184 0
 2395 02b6 002B     		cmp	r3, #0
1193:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				--( pxQueue->xRxLock );
 2396              		.loc 1 1193 0
 2397 02b8 6364     		str	r3, [r4, #68]
1184:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
 2398              		.loc 1 1184 0
 2399 02ba F2DC     		bgt	.L312
 2400              	.L305:
1201:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		pxQueue->xRxLock = queueUNLOCKED;
 2401              		.loc 1 1201 0
 2402 02bc 4FF0FF33 		mov	r3, #-1
 2403 02c0 6364     		str	r3, [r4, #68]
1203:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskEXIT_CRITICAL();
 2404              		.loc 1 1203 0
 2405 02c2 B847     		blx	r7
 2406              	.LVL236:
 2407              	.LBE111:
 2408              	.LBE110:
 991:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			( void ) xTaskResumeAll();
 2409              		.loc 1 991 0
 2410 02c4 0C4B     		ldr	r3, .L373+8
 2411 02c6 9847     		blx	r3
 2412              	.LVL237:
 993:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			return errQUEUE_EMPTY;
 2413              		.loc 1 993 0
 2414 02c8 0020     		movs	r0, #0
 2415 02ca A0E7     		b	.L273
 2416              	.LVL238:
 2417              	.L267:
 911:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 2418              		.loc 1 911 0
 2419 02cc 636A     		ldr	r3, [r4, #36]
 907:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					pxQueue->pcReadFrom = pcOriginalReadPosition;
 2420              		.loc 1 907 0
 2421 02ce E560     		str	r5, [r4, #12]
 911:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 2422              		.loc 1 911 0
 2423 02d0 13B9     		cbnz	r3, .L370
 2424              	.L270:
 924:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				taskEXIT_CRITICAL();
 2425              		.loc 1 924 0
 2426 02d2 B847     		blx	r7
 2427              	.LVL239:
 925:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				return pdPASS;
 2428              		.loc 1 925 0
 2429 02d4 0120     		movs	r0, #1
 2430 02d6 9AE7     		b	.L273
 2431              	.L370:
 915:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 2432              		.loc 1 915 0
 2433 02d8 04F12400 		add	r0, r4, #36
 2434 02dc 054B     		ldr	r3, .L373+4
 2435 02de 9847     		blx	r3
 2436              	.LVL240:
 2437 02e0 0028     		cmp	r0, #0
 2438 02e2 F6D0     		beq	.L270
 2439 02e4 38E7     		b	.L272
 2440              	.L369:
 888:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 							pxQueue->pxMutexHolder = xTaskGetCurrentTaskHandle();
 2441              		.loc 1 888 0
 2442 02e6 054B     		ldr	r3, .L373+12
 2443 02e8 9847     		blx	r3
 2444              	.LVL241:
 2445 02ea 6060     		str	r0, [r4, #4]
 2446 02ec 29E7     		b	.L268
 2447              	.L374:
 2448 02ee 00BF     		.align	2
 2449              	.L373:
 2450 02f0 00000000 		.word	vTaskMissedYield
 2451 02f4 00000000 		.word	xTaskRemoveFromEventList
 2452 02f8 00000000 		.word	xTaskResumeAll
 2453 02fc 00000000 		.word	xTaskGetCurrentTaskHandle
 2454              		.cfi_endproc
 2455              	.LFE7:
 2457              		.section	.text.xQueueReceiveFromISR,"ax",%progbits
 2458              		.align	2
 2459              		.global	xQueueReceiveFromISR
 2460              		.thumb
 2461              		.thumb_func
 2463              	xQueueReceiveFromISR:
 2464              	.LFB8:
1000:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** {
 2465              		.loc 1 1000 0
 2466              		.cfi_startproc
 2467              		@ args = 0, pretend = 0, frame = 0
 2468              		@ frame_needed = 0, uses_anonymous_args = 0
 2469              	.LVL242:
 2470 0000 70B5     		push	{r4, r5, r6, lr}
 2471              	.LCFI9:
 2472              		.cfi_def_cfa_offset 16
 2473              		.cfi_offset 4, -16
 2474              		.cfi_offset 5, -12
 2475              		.cfi_offset 6, -8
 2476              		.cfi_offset 14, -4
1000:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** {
 2477              		.loc 1 1000 0
 2478 0002 0446     		mov	r4, r0
 2479 0004 1646     		mov	r6, r2
 2480              	.LBB118:
 2481              	.LBB119:
 117:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 	asm volatile (
 2482              		.loc 2 117 0
 2483              	@ 117 "/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h" 1
 2484 0006 4FF0B003 		mov	r3, #176			
 2485 000a 83F31188 	msr	basepri, r3		
 2486              	
 2487              	@ 0 "" 2
 2488              	.LVL243:
 2489              		.thumb
 2490              	.LBE119:
 2491              	.LBE118:
1011:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( unsigned portBASE_TYPE ) 0 )
 2492              		.loc 1 1011 0
 2493 000e 836B     		ldr	r3, [r0, #56]
 2494 0010 2BB9     		cbnz	r3, .L390
1044:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			xReturn = pdFAIL;
 2495              		.loc 1 1044 0
 2496 0012 1846     		mov	r0, r3
 2497              	.LVL244:
 2498              	.L376:
 2499              	.LBB120:
 2500              	.LBB121:
 2501              		.loc 2 133 0
 2502              	@ 133 "/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h" 1
 2503 0014 4FF00003 		mov	r3, #0			
 2504 0018 83F31188 	msr	basepri, r3		
 2505              	
 2506              	@ 0 "" 2
 2507              	.LVL245:
 2508              		.thumb
 2509              	.LBE121:
 2510              	.LBE120:
1051:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** }
 2511              		.loc 1 1051 0
 2512 001c 70BD     		pop	{r4, r5, r6, pc}
 2513              	.LVL246:
 2514              	.L390:
 2515              	.LBB122:
 2516              	.LBB123:
1131:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	if( pxQueue->uxQueueType != queueQUEUE_IS_MUTEX )
 2517              		.loc 1 1131 0
 2518 001e 0068     		ldr	r0, [r0, #0]
 2519              	.LVL247:
 2520 0020 60B1     		cbz	r0, .L377
1133:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		pxQueue->pcReadFrom += pxQueue->uxItemSize;
 2521              		.loc 1 1133 0
 2522 0022 E368     		ldr	r3, [r4, #12]
 2523 0024 226C     		ldr	r2, [r4, #64]
 2524              	.LVL248:
1134:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		if( pxQueue->pcReadFrom >= pxQueue->pcTail )
 2525              		.loc 1 1134 0
 2526 0026 6568     		ldr	r5, [r4, #4]
1133:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		pxQueue->pcReadFrom += pxQueue->uxItemSize;
 2527              		.loc 1 1133 0
 2528 0028 9B18     		adds	r3, r3, r2
1134:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		if( pxQueue->pcReadFrom >= pxQueue->pcTail )
 2529              		.loc 1 1134 0
 2530 002a AB42     		cmp	r3, r5
1133:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		pxQueue->pcReadFrom += pxQueue->uxItemSize;
 2531              		.loc 1 1133 0
 2532 002c E360     		str	r3, [r4, #12]
1136:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			pxQueue->pcReadFrom = pxQueue->pcHead;
 2533              		.loc 1 1136 0
 2534 002e 24BF     		itt	cs
 2535 0030 0346     		movcs	r3, r0
 2536 0032 E060     		strcs	r0, [r4, #12]
1138:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->pcReadFrom, ( unsigned ) pxQueue->uxItemSize );
 2537              		.loc 1 1138 0
 2538 0034 0846     		mov	r0, r1
 2539 0036 1946     		mov	r1, r3
 2540              	.LVL249:
 2541 0038 0B4B     		ldr	r3, .L392
 2542 003a 9847     		blx	r3
 2543              	.LVL250:
 2544              	.L377:
 2545              	.LBE123:
 2546              	.LBE122:
1016:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			--( pxQueue->uxMessagesWaiting );
 2547              		.loc 1 1016 0
 2548 003c A26B     		ldr	r2, [r4, #56]
1021:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( pxQueue->xRxLock == queueUNLOCKED )
 2549              		.loc 1 1021 0
 2550 003e 636C     		ldr	r3, [r4, #68]
1016:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			--( pxQueue->uxMessagesWaiting );
 2551              		.loc 1 1016 0
 2552 0040 013A     		subs	r2, r2, #1
1021:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( pxQueue->xRxLock == queueUNLOCKED )
 2553              		.loc 1 1021 0
 2554 0042 591C     		adds	r1, r3, #1
1016:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			--( pxQueue->uxMessagesWaiting );
 2555              		.loc 1 1016 0
 2556 0044 A263     		str	r2, [r4, #56]
1021:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			if( pxQueue->xRxLock == queueUNLOCKED )
 2557              		.loc 1 1021 0
 2558 0046 03D0     		beq	.L391
1037:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				++( pxQueue->xRxLock );
 2559              		.loc 1 1037 0
 2560 0048 0133     		adds	r3, r3, #1
 2561 004a 6364     		str	r3, [r4, #68]
 2562              	.L389:
1040:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 			xReturn = pdPASS;
 2563              		.loc 1 1040 0
 2564 004c 0120     		movs	r0, #1
 2565 004e E1E7     		b	.L376
 2566              	.L391:
1023:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 2567              		.loc 1 1023 0
 2568 0050 2369     		ldr	r3, [r4, #16]
 2569 0052 002B     		cmp	r3, #0
 2570 0054 FAD0     		beq	.L389
1025:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 2571              		.loc 1 1025 0
 2572 0056 04F11000 		add	r0, r4, #16
 2573 005a 044B     		ldr	r3, .L392+4
 2574 005c 9847     		blx	r3
 2575              	.LVL251:
 2576 005e 0028     		cmp	r0, #0
 2577 0060 F4D0     		beq	.L389
1029:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 						*pxTaskWoken = pdTRUE;
 2578              		.loc 1 1029 0
 2579 0062 0120     		movs	r0, #1
 2580 0064 3060     		str	r0, [r6, #0]
 2581 0066 D5E7     		b	.L376
 2582              	.L393:
 2583              		.align	2
 2584              	.L392:
 2585 0068 00000000 		.word	memcpy
 2586 006c 00000000 		.word	xTaskRemoveFromEventList
 2587              		.cfi_endproc
 2588              	.LFE8:
 2590              		.section	.text.uxQueueMessagesWaiting,"ax",%progbits
 2591              		.align	2
 2592              		.global	uxQueueMessagesWaiting
 2593              		.thumb
 2594              		.thumb_func
 2596              	uxQueueMessagesWaiting:
 2597              	.LFB9:
1055:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** {
 2598              		.loc 1 1055 0
 2599              		.cfi_startproc
 2600              		@ args = 0, pretend = 0, frame = 0
 2601              		@ frame_needed = 0, uses_anonymous_args = 0
 2602              	.LVL252:
 2603 0000 10B5     		push	{r4, lr}
 2604              	.LCFI10:
 2605              		.cfi_def_cfa_offset 8
 2606              		.cfi_offset 4, -8
 2607              		.cfi_offset 14, -4
1055:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** {
 2608              		.loc 1 1055 0
 2609 0002 0446     		mov	r4, r0
1060:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskENTER_CRITICAL();
 2610              		.loc 1 1060 0
 2611 0004 034B     		ldr	r3, .L395
 2612 0006 9847     		blx	r3
 2613              	.LVL253:
1061:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 		uxReturn = pxQueue->uxMessagesWaiting;
 2614              		.loc 1 1061 0
 2615 0008 A46B     		ldr	r4, [r4, #56]
 2616              	.LVL254:
1062:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	taskEXIT_CRITICAL();
 2617              		.loc 1 1062 0
 2618 000a 034B     		ldr	r3, .L395+4
 2619 000c 9847     		blx	r3
 2620              	.LVL255:
1065:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** }
 2621              		.loc 1 1065 0
 2622 000e 2046     		mov	r0, r4
 2623 0010 10BD     		pop	{r4, pc}
 2624              	.L396:
 2625 0012 00BF     		.align	2
 2626              	.L395:
 2627 0014 00000000 		.word	vPortEnterCritical
 2628 0018 00000000 		.word	vPortExitCritical
 2629              		.cfi_endproc
 2630              	.LFE9:
 2632              		.section	.text.uxQueueMessagesWaitingFromISR,"ax",%progbits
 2633              		.align	2
 2634              		.global	uxQueueMessagesWaitingFromISR
 2635              		.thumb
 2636              		.thumb_func
 2638              	uxQueueMessagesWaitingFromISR:
 2639              	.LFB10:
1069:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** {
 2640              		.loc 1 1069 0
 2641              		.cfi_startproc
 2642              		@ args = 0, pretend = 0, frame = 0
 2643              		@ frame_needed = 0, uses_anonymous_args = 0
 2644              		@ link register save eliminated.
 2645              	.LVL256:
1074:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	uxReturn = pxQueue->uxMessagesWaiting;
 2646              		.loc 1 1074 0
 2647 0000 806B     		ldr	r0, [r0, #56]
 2648              	.LVL257:
1077:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** }
 2649              		.loc 1 1077 0
 2650 0002 7047     		bx	lr
 2651              		.cfi_endproc
 2652              	.LFE10:
 2654              		.section	.text.vQueueDelete,"ax",%progbits
 2655              		.align	2
 2656              		.global	vQueueDelete
 2657              		.thumb
 2658              		.thumb_func
 2660              	vQueueDelete:
 2661              	.LFB11:
1081:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** {
 2662              		.loc 1 1081 0
 2663              		.cfi_startproc
 2664              		@ args = 0, pretend = 0, frame = 0
 2665              		@ frame_needed = 0, uses_anonymous_args = 0
 2666              	.LVL258:
 2667 0000 38B5     		push	{r3, r4, r5, lr}
 2668              	.LCFI11:
 2669              		.cfi_def_cfa_offset 16
 2670              		.cfi_offset 3, -16
 2671              		.cfi_offset 4, -12
 2672              		.cfi_offset 5, -8
 2673              		.cfi_offset 14, -4
1081:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** {
 2674              		.loc 1 1081 0
 2675 0002 0546     		mov	r5, r0
1086:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	vPortFree( pxQueue->pcHead );
 2676              		.loc 1 1086 0
 2677 0004 024C     		ldr	r4, .L399
 2678 0006 0068     		ldr	r0, [r0, #0]
 2679              	.LVL259:
 2680 0008 A047     		blx	r4
 2681              	.LVL260:
1087:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	vPortFree( pxQueue );
 2682              		.loc 1 1087 0
 2683 000a 2846     		mov	r0, r5
 2684 000c A047     		blx	r4
 2685              	.LVL261:
 2686 000e 38BD     		pop	{r3, r4, r5, pc}
 2687              	.L400:
 2688              		.align	2
 2689              	.L399:
 2690 0010 00000000 		.word	vPortFree
 2691              		.cfi_endproc
 2692              	.LFE11:
 2694              		.section	.text.xQueueIsQueueEmptyFromISR,"ax",%progbits
 2695              		.align	2
 2696              		.global	xQueueIsQueueEmptyFromISR
 2697              		.thumb
 2698              		.thumb_func
 2700              	xQueueIsQueueEmptyFromISR:
 2701              	.LFB16:
1220:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** {
 2702              		.loc 1 1220 0
 2703              		.cfi_startproc
 2704              		@ args = 0, pretend = 0, frame = 0
 2705              		@ frame_needed = 0, uses_anonymous_args = 0
 2706              		@ link register save eliminated.
 2707              	.LVL262:
1224:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	xReturn = ( pxQueue->uxMessagesWaiting == ( unsigned portBASE_TYPE ) 0 );
 2708              		.loc 1 1224 0
 2709 0000 806B     		ldr	r0, [r0, #56]
 2710              	.LVL263:
1227:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** }
 2711              		.loc 1 1227 0
 2712 0002 D0F10100 		rsbs	r0, r0, #1
 2713              	.LVL264:
 2714 0006 38BF     		it	cc
 2715 0008 0020     		movcc	r0, #0
 2716 000a 7047     		bx	lr
 2717              		.cfi_endproc
 2718              	.LFE16:
 2720              		.section	.text.xQueueIsQueueFullFromISR,"ax",%progbits
 2721              		.align	2
 2722              		.global	xQueueIsQueueFullFromISR
 2723              		.thumb
 2724              		.thumb_func
 2726              	xQueueIsQueueFullFromISR:
 2727              	.LFB18:
1237:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
1238:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	return xReturn;
1239:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** }
1240:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** /*-----------------------------------------------------------*/
1241:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
1242:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** signed portBASE_TYPE xQueueIsQueueFullFromISR( const xQueueHandle pxQueue )
1243:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** {
 2728              		.loc 1 1243 0
 2729              		.cfi_startproc
 2730              		@ args = 0, pretend = 0, frame = 0
 2731              		@ frame_needed = 0, uses_anonymous_args = 0
 2732              		@ link register save eliminated.
 2733              	.LVL265:
1244:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** signed portBASE_TYPE xReturn;
1245:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
1246:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	configASSERT( pxQueue );
1247:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	xReturn = ( pxQueue->uxMessagesWaiting == pxQueue->uxLength );
 2734              		.loc 1 1247 0
 2735 0000 826B     		ldr	r2, [r0, #56]
 2736              	.LVL266:
 2737 0002 C06B     		ldr	r0, [r0, #60]
 2738              	.LVL267:
1248:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 
1249:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** 	return xReturn;
1250:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/queue.c **** }
 2739              		.loc 1 1250 0
 2740 0004 B2EB000C 		subs	ip, r2, r0
 2741 0008 DCF10000 		rsbs	r0, ip, #0
 2742              	.LVL268:
 2743 000c 50EB0C00 		adcs	r0, r0, ip
 2744 0010 7047     		bx	lr
 2745              		.cfi_endproc
 2746              	.LFE18:
 2748 0012 00BF     		.text
 2749              	.Letext0:
 2750              		.file 3 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/include/stddef.h"
 2751              		.file 4 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/std
 2752              		.file 5 "/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.h"
 2753              		.file 6 "/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/task.h"
DEFINED SYMBOLS
                            *ABS*:00000000 queue.c
     /tmp/ccOEn7s2.s:20     .text.xQueueCreate:00000000 $t
     /tmp/ccOEn7s2.s:25     .text.xQueueCreate:00000000 xQueueCreate
     /tmp/ccOEn7s2.s:128    .text.xQueueCreate:0000006c $d
     /tmp/ccOEn7s2.s:135    .text.xQueueCreateMutex:00000000 $t
     /tmp/ccOEn7s2.s:140    .text.xQueueCreateMutex:00000000 xQueueCreateMutex
     /tmp/ccOEn7s2.s:654    .text.xQueueCreateMutex:00000238 $d
     /tmp/ccOEn7s2.s:669    .text.xQueueCreateMutex:0000026c $t
     /tmp/ccOEn7s2.s:796    .text.xQueueCreateMutex:000002f4 $d
     /tmp/ccOEn7s2.s:807    .text.xQueueCreateCountingSemaphore:00000000 $t
     /tmp/ccOEn7s2.s:812    .text.xQueueCreateCountingSemaphore:00000000 xQueueCreateCountingSemaphore
     /tmp/ccOEn7s2.s:916    .text.xQueueCreateCountingSemaphore:0000005c $d
     /tmp/ccOEn7s2.s:923    .text.xQueueGenericSend:00000000 $t
     /tmp/ccOEn7s2.s:928    .text.xQueueGenericSend:00000000 xQueueGenericSend
     /tmp/ccOEn7s2.s:1433   .text.xQueueGenericSend:0000022c $d
     /tmp/ccOEn7s2.s:1445   .text.xQueueGenericSend:00000254 $t
     /tmp/ccOEn7s2.s:1582   .text.xQueueGenericSend:000002ec $d
     /tmp/ccOEn7s2.s:1594   .text.xQueueGenericSendFromISR:00000000 $t
     /tmp/ccOEn7s2.s:1599   .text.xQueueGenericSendFromISR:00000000 xQueueGenericSendFromISR
     /tmp/ccOEn7s2.s:1780   .text.xQueueGenericSendFromISR:0000009c $d
     /tmp/ccOEn7s2.s:1789   .text.xQueueGenericReceive:00000000 $t
     /tmp/ccOEn7s2.s:1794   .text.xQueueGenericReceive:00000000 xQueueGenericReceive
     /tmp/ccOEn7s2.s:2300   .text.xQueueGenericReceive:00000228 $d
     /tmp/ccOEn7s2.s:2314   .text.xQueueGenericReceive:00000258 $t
     /tmp/ccOEn7s2.s:2450   .text.xQueueGenericReceive:000002f0 $d
     /tmp/ccOEn7s2.s:2458   .text.xQueueReceiveFromISR:00000000 $t
     /tmp/ccOEn7s2.s:2463   .text.xQueueReceiveFromISR:00000000 xQueueReceiveFromISR
     /tmp/ccOEn7s2.s:2585   .text.xQueueReceiveFromISR:00000068 $d
     /tmp/ccOEn7s2.s:2591   .text.uxQueueMessagesWaiting:00000000 $t
     /tmp/ccOEn7s2.s:2596   .text.uxQueueMessagesWaiting:00000000 uxQueueMessagesWaiting
     /tmp/ccOEn7s2.s:2627   .text.uxQueueMessagesWaiting:00000014 $d
     /tmp/ccOEn7s2.s:2633   .text.uxQueueMessagesWaitingFromISR:00000000 $t
     /tmp/ccOEn7s2.s:2638   .text.uxQueueMessagesWaitingFromISR:00000000 uxQueueMessagesWaitingFromISR
     /tmp/ccOEn7s2.s:2655   .text.vQueueDelete:00000000 $t
     /tmp/ccOEn7s2.s:2660   .text.vQueueDelete:00000000 vQueueDelete
     /tmp/ccOEn7s2.s:2690   .text.vQueueDelete:00000010 $d
     /tmp/ccOEn7s2.s:2695   .text.xQueueIsQueueEmptyFromISR:00000000 $t
     /tmp/ccOEn7s2.s:2700   .text.xQueueIsQueueEmptyFromISR:00000000 xQueueIsQueueEmptyFromISR
     /tmp/ccOEn7s2.s:2721   .text.xQueueIsQueueFullFromISR:00000000 $t
     /tmp/ccOEn7s2.s:2726   .text.xQueueIsQueueFullFromISR:00000000 xQueueIsQueueFullFromISR
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
pvPortMalloc
vPortFree
vListInitialise
vTaskSuspendAll
xTaskCheckForTimeOut
vPortExitCritical
vPortEnterCritical
vTaskPlaceOnEventList
xTaskRemoveFromEventList
vTaskMissedYield
xTaskResumeAll
memcpy
vPortYieldFromISR
vTaskSetTimeOutState
vTaskPriorityDisinherit
vTaskPriorityInherit
xTaskGetCurrentTaskHandle
