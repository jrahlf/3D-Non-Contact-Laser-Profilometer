   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 2
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"tasks.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.prvIdleTask,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  24              	prvIdleTask:
  25              	.LFB27:
  26              		.file 1 "/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c"
   1:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*
   2:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****     FreeRTOS V7.0.1 - Copyright (C) 2011 Real Time Engineers Ltd.
   3:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	
   4:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
   5:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	FreeRTOS supports many tools and architectures. V7.0.0 is sponsored by:
   6:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	Atollic AB - Atollic provides professional embedded systems development 
   7:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	tools for C/C++ development, code analysis and test automation.  
   8:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	See http://www.atollic.com
   9:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	
  10:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
  11:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****     ***************************************************************************
  12:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****      *                                                                       *
  13:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****      *    FreeRTOS tutorial books are available in pdf and paperback.        *
  14:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****      *    Complete, revised, and edited pdf reference manuals are also       *
  15:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****      *    available.                                                         *
  16:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****      *                                                                       *
  17:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****      *    Purchasing FreeRTOS documentation will not only help you, by       *
  18:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****      *    ensuring you get running as quickly as possible and with an        *
  19:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****      *    in-depth knowledge of how to use FreeRTOS, it will also help       *
  20:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****      *    the FreeRTOS project to continue with its mission of providing     *
  21:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****      *    professional grade, cross platform, de facto standard solutions    *
  22:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****      *    for microcontrollers - completely free of charge!                  *
  23:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****      *                                                                       *
  24:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****      *    >>> See http://www.FreeRTOS.org/Documentation for details. <<<     *
  25:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****      *                                                                       *
  26:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****      *    Thank you for using FreeRTOS, and thank you for your support!      *
  27:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****      *                                                                       *
  28:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****     ***************************************************************************
  29:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
  30:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
  31:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****     This file is part of the FreeRTOS distribution.
  32:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
  33:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  34:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****     the terms of the GNU General Public License (version 2) as published by the
  35:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****     Free Software Foundation AND MODIFIED BY the FreeRTOS exception.
  36:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****     >>>NOTE<<< The modification to the GPL is included to allow you to
  37:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****     distribute a combined work that includes FreeRTOS without being obliged to
  38:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****     provide the source code for proprietary components outside of the FreeRTOS
  39:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****     kernel.  FreeRTOS is distributed in the hope that it will be useful, but
  40:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****     WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
  41:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****     or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
  42:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****     more details. You should have received a copy of the GNU General Public
  43:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****     License and the FreeRTOS license exception along with FreeRTOS; if not it
  44:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****     can be viewed here: http://www.freertos.org/a00114.html and also obtained
  45:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****     by writing to Richard Barry, contact details for whom are available on the
  46:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****     FreeRTOS WEB site.
  47:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
  48:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****     1 tab == 4 spaces!
  49:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
  50:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****     http://www.FreeRTOS.org - Documentation, latest information, license and
  51:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****     contact details.
  52:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
  53:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****     http://www.SafeRTOS.com - A version that is certified for use in safety
  54:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****     critical systems.
  55:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
  56:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****     http://www.OpenRTOS.com - Commercial support, development, porting,
  57:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****     licensing and training services.
  58:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** */
  59:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
  60:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
  61:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #include <stdio.h>
  62:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #include <stdlib.h>
  63:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #include <string.h>
  64:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
  65:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  66:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** all the API functions to use the MPU wrappers.  That should only be done when
  67:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** task.h is included from an application file. */
  68:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  69:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
  70:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #include "FreeRTOS.h"
  71:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #include "task.h"
  72:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #include "timers.h"
  73:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #include "StackMacros.h"
  74:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
  75:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  76:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
  77:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*
  78:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * Macro to define the amount of stack available to the idle task.
  79:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  */
  80:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #define tskIDLE_STACK_SIZE	configMINIMAL_STACK_SIZE
  81:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
  82:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*
  83:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * Task control block.  A task control block (TCB) is allocated to each task,
  84:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * and stores the context of the task.
  85:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  */
  86:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** typedef struct tskTaskControlBlock
  87:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** {
  88:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	volatile portSTACK_TYPE	*pxTopOfStack;		/*< Points to the location of the last item placed on the 
  89:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
  90:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
  91:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		xMPU_SETTINGS xMPUSettings;				/*< The MPU settings are defined as part of the port layer.  THIS 
  92:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	#endif	
  93:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	
  94:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	xListItem				xGenericListItem;	/*< List item used to place the TCB in ready and blocked queues. */
  95:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	xListItem				xEventListItem;		/*< List item used to place the TCB in event lists. */
  96:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	unsigned portBASE_TYPE	uxPriority;			/*< The priority of the task where 0 is the lowest priority. 
  97:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	portSTACK_TYPE			*pxStack;			/*< Points to the start of the stack. */
  98:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	signed char				pcTaskName[ configMAX_TASK_NAME_LEN ];/*< Descriptive name given to the task when c
  99:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 100:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	#if ( portSTACK_GROWTH > 0 )
 101:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		portSTACK_TYPE *pxEndOfStack;			/*< Used for stack overflow checking on architectures where the s
 102:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	#endif
 103:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 104:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 105:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		unsigned portBASE_TYPE uxCriticalNesting;
 106:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	#endif
 107:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 108:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 109:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		unsigned portBASE_TYPE	uxTCBNumber;	/*< This is used for tracing the scheduler and making debuggi
 110:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	#endif
 111:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 112:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 113:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		unsigned portBASE_TYPE uxBasePriority;	/*< The priority last assigned to the task - used by the p
 114:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	#endif
 115:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 116:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 117:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		pdTASK_HOOK_CODE pxTaskTag;
 118:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	#endif
 119:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 120:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	#if ( configGENERATE_RUN_TIME_STATS == 1 )
 121:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		unsigned long ulRunTimeCounter;		/*< Used for calculating how much CPU time each task is utilisin
 122:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	#endif
 123:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 124:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** } tskTCB;
 125:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 126:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 127:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*
 128:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * Some kernel aware debuggers require data to be viewed to be global, rather
 129:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * than file scope.
 130:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  */
 131:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #ifdef portREMOVE_STATIC_QUALIFIER
 132:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	#define static
 133:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #endif
 134:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 135:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*lint -e956 */
 136:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** PRIVILEGED_DATA tskTCB * volatile pxCurrentTCB = NULL;
 137:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 138:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /* Lists for ready and blocked tasks. --------------------*/
 139:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 140:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** PRIVILEGED_DATA static xList pxReadyTasksLists[ configMAX_PRIORITIES ];	/*< Prioritised ready tasks
 141:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** PRIVILEGED_DATA static xList xDelayedTaskList1;							/*< Delayed tasks. */
 142:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** PRIVILEGED_DATA static xList xDelayedTaskList2;							/*< Delayed tasks (two lists are used - one f
 143:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** PRIVILEGED_DATA static xList * volatile pxDelayedTaskList ;				/*< Points to the delayed task list 
 144:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** PRIVILEGED_DATA static xList * volatile pxOverflowDelayedTaskList;		/*< Points to the delayed task 
 145:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** PRIVILEGED_DATA static xList xPendingReadyList;							/*< Tasks that have been readied while the sc
 146:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 147:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 148:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 149:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	PRIVILEGED_DATA static volatile xList xTasksWaitingTermination;		/*< Tasks that have been deleted 
 150:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	PRIVILEGED_DATA static volatile unsigned portBASE_TYPE uxTasksDeleted = ( unsigned portBASE_TYPE )
 151:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 152:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #endif
 153:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 154:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 155:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 156:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	PRIVILEGED_DATA static xList xSuspendedTaskList;					/*< Tasks that are currently suspended. */
 157:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 158:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #endif
 159:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 160:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /* File private variables. --------------------------------*/
 161:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** PRIVILEGED_DATA static volatile unsigned portBASE_TYPE uxCurrentNumberOfTasks 	= ( unsigned portBAS
 162:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** PRIVILEGED_DATA static volatile portTickType xTickCount 						= ( portTickType ) 0;
 163:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** PRIVILEGED_DATA static unsigned portBASE_TYPE uxTopUsedPriority	 				= tskIDLE_PRIORITY;
 164:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** PRIVILEGED_DATA static volatile unsigned portBASE_TYPE uxTopReadyPriority 		= tskIDLE_PRIORITY;
 165:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** PRIVILEGED_DATA static volatile signed portBASE_TYPE xSchedulerRunning 			= pdFALSE;
 166:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** PRIVILEGED_DATA static volatile unsigned portBASE_TYPE uxSchedulerSuspended	 	= ( unsigned portBASE
 167:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** PRIVILEGED_DATA static volatile unsigned portBASE_TYPE uxMissedTicks 			= ( unsigned portBASE_TYPE 
 168:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** PRIVILEGED_DATA static volatile portBASE_TYPE xMissedYield 						= ( portBASE_TYPE ) pdFALSE;
 169:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** PRIVILEGED_DATA static volatile portBASE_TYPE xNumOfOverflows 					= ( portBASE_TYPE ) 0;
 170:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** PRIVILEGED_DATA static unsigned portBASE_TYPE uxTaskNumber 						= ( unsigned portBASE_TYPE ) 0;
 171:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** PRIVILEGED_DATA static portTickType xNextTaskUnblockTime						= ( portTickType ) portMAX_DELAY;
 172:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 173:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #if ( configGENERATE_RUN_TIME_STATS == 1 )
 174:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 175:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	PRIVILEGED_DATA static char pcStatsString[ 50 ] ;
 176:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	PRIVILEGED_DATA static unsigned long ulTaskSwitchedInTime = 0UL;	/*< Holds the value of a timer/co
 177:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	static void prvGenerateRunTimeStatsForTasksInList( const signed char *pcWriteBuffer, xList *pxList
 178:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 179:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #endif
 180:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 181:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /* Debugging and trace facilities private variables and macros. ------------*/
 182:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 183:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*
 184:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * The value used to fill the stack of a task when the task is created.  This
 185:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * is used purely for checking the high water mark for tasks.
 186:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  */
 187:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #define tskSTACK_FILL_BYTE	( 0xa5U )
 188:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 189:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*
 190:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * Macros used by vListTask to indicate which state a task is in.
 191:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  */
 192:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #define tskBLOCKED_CHAR		( ( signed char ) 'B' )
 193:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #define tskREADY_CHAR		( ( signed char ) 'R' )
 194:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #define tskDELETED_CHAR		( ( signed char ) 'D' )
 195:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #define tskSUSPENDED_CHAR	( ( signed char ) 'S' )
 196:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 197:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*
 198:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * Macros and private variables used by the trace facility.
 199:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  */
 200:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 201:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 202:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	#define tskSIZE_OF_EACH_TRACE_LINE			( ( unsigned long ) ( sizeof( unsigned long ) + sizeof( unsig
 203:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	PRIVILEGED_DATA static volatile signed char * volatile pcTraceBuffer;
 204:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	PRIVILEGED_DATA static signed char *pcTraceBufferStart;
 205:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	PRIVILEGED_DATA static signed char *pcTraceBufferEnd;
 206:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	PRIVILEGED_DATA static signed portBASE_TYPE xTracing = pdFALSE;
 207:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	static unsigned portBASE_TYPE uxPreviousTask = 255U;
 208:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	PRIVILEGED_DATA static char pcStatusString[ 50 ];
 209:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 210:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #endif
 211:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 212:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*-----------------------------------------------------------*/
 213:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 214:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*
 215:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * Macro that writes a trace of scheduler activity to a buffer.  This trace
 216:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * shows which task is running when and is very useful as a debugging tool.
 217:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * As this macro is called each context switch it is a good idea to undefine
 218:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * it if not using the facility.
 219:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  */
 220:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 221:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 222:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	#define vWriteTraceToBuffer()																	\
 223:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{																								\
 224:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( xTracing )																				\
 225:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{																							\
 226:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( uxPreviousTask != pxCurrentTCB->uxTCBNumber )										\
 227:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			{																						\
 228:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				if( ( pcTraceBuffer + tskSIZE_OF_EACH_TRACE_LINE ) < pcTraceBufferEnd )				\
 229:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				{																					\
 230:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					uxPreviousTask = pxCurrentTCB->uxTCBNumber;										\
 231:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					*( unsigned long * ) pcTraceBuffer = ( unsigned long ) xTickCount;				\
 232:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					pcTraceBuffer += sizeof( unsigned long );										\
 233:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					*( unsigned long * ) pcTraceBuffer = ( unsigned long ) uxPreviousTask;			\
 234:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					pcTraceBuffer += sizeof( unsigned long );										\
 235:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				}																					\
 236:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				else																				\
 237:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				{																					\
 238:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					xTracing = pdFALSE;																\
 239:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				}																					\
 240:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			}																						\
 241:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}																							\
 242:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
 243:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 244:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #else
 245:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 246:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	#define vWriteTraceToBuffer()
 247:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 248:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #endif
 249:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*-----------------------------------------------------------*/
 250:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 251:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*
 252:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * Place the task represented by pxTCB into the appropriate ready queue for
 253:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * the task.  It is inserted at the end of the list.  One quirk of this is
 254:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * that if the task being inserted is at the same priority as the currently
 255:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * executing task, then it will only be rescheduled after the currently
 256:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * executing task has been rescheduled.
 257:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  */
 258:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #define prvAddTaskToReadyQueue( pxTCB )																					\
 259:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	if( ( pxTCB )->uxPriority > uxTopReadyPriority )																	\
 260:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{																													\
 261:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		uxTopReadyPriority = ( pxTCB )->uxPriority;																		\
 262:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}																													\
 263:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	vListInsertEnd( ( xList * ) &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ), &( ( pxTCB )->xGeneri
 264:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*-----------------------------------------------------------*/
 265:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 266:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*
 267:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * Macro that looks at the list of tasks that are currently delayed to see if
 268:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * any require waking.
 269:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  *
 270:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * Tasks are stored in the queue in the order of their wake time - meaning
 271:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * once one tasks has been found whose timer has not expired we need not look
 272:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * any further down the list.
 273:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  */
 274:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #define prvCheckDelayedTasks()															\
 275:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** {																						\
 276:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** portTickType xItemValue;																\
 277:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 																						\
 278:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	/* Is the tick count greater than or equal to the wake time of the first			\
 279:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	task referenced from the delayed tasks list? */										\
 280:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	if( xTickCount >= xNextTaskUnblockTime )											\
 281:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{																					\
 282:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		for( ;; )																		\
 283:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{																				\
 284:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )						\
 285:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			{																			\
 286:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				/* The delayed list is empty.  Set xNextTaskUnblockTime to the			\
 287:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				maximum possible value so it is extremely unlikely that the				\
 288:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				if( xTickCount >= xNextTaskUnblockTime ) test will pass next			\
 289:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				time through. */														\
 290:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				xNextTaskUnblockTime = portMAX_DELAY;									\
 291:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				break;																	\
 292:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			}																			\
 293:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			else																		\
 294:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			{																			\
 295:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				/* The delayed list is not empty, get the value of the item at			\
 296:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				the head of the delayed list.  This is the time at which the			\
 297:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				task at the head of the delayed list should be removed from				\
 298:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				the Blocked state. */													\
 299:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				pxTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );	\
 300:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xGenericListItem ) );	\
 301:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 																						\
 302:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				if( xTickCount < xItemValue )											\
 303:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				{																		\
 304:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					/* It is not time to unblock this item yet, but the item			\
 305:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					value is the time at which the task at the head of the				\
 306:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					blocked list should be removed from the Blocked state -				\
 307:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					so record the item value in xNextTaskUnblockTime. */				\
 308:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					xNextTaskUnblockTime = xItemValue;									\
 309:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					break;																\
 310:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				}																		\
 311:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 																						\
 312:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				/* It is time to remove the item from the Blocked state. */				\
 313:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				vListRemove( &( pxTCB->xGenericListItem ) );							\
 314:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 																						\
 315:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				/* Is the task waiting on an event also? */								\
 316:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				if( pxTCB->xEventListItem.pvContainer )									\
 317:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				{																		\
 318:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					vListRemove( &( pxTCB->xEventListItem ) );							\
 319:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				}																		\
 320:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				prvAddTaskToReadyQueue( pxTCB );										\
 321:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			}																			\
 322:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}																				\
 323:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}																					\
 324:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** }
 325:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*-----------------------------------------------------------*/
 326:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 327:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*
 328:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * Several functions take an xTaskHandle parameter that can optionally be NULL,
 329:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * where NULL is used to indicate that the handle of the currently executing
 330:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * task should be used in place of the parameter.  This macro simply checks to
 331:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * see if the parameter is NULL and returns a pointer to the appropriate TCB.
 332:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  */
 333:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #define prvGetTCBFromHandle( pxHandle ) ( ( ( pxHandle ) == NULL ) ? ( tskTCB * ) pxCurrentTCB : ( 
 334:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 335:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /* Callback function prototypes. --------------------------*/
 336:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** extern void vApplicationStackOverflowHook( xTaskHandle *pxTask, signed char *pcTaskName );
 337:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** extern void vApplicationTickHook( void );
 338:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		
 339:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /* File private functions. --------------------------------*/
 340:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 341:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*
 342:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * Utility to ready a TCB for a given task.  Mainly just copies the parameters
 343:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * into the TCB structure.
 344:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  */
 345:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** static void prvInitialiseTCBVariables( tskTCB *pxTCB, const signed char * const pcName, unsigned po
 346:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 347:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*
 348:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * Utility to ready all the lists used by the scheduler.  This is called
 349:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * automatically upon the creation of the first task.
 350:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  */
 351:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** static void prvInitialiseTaskLists( void ) PRIVILEGED_FUNCTION;
 352:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 353:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*
 354:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * The idle task, which as all tasks is implemented as a never ending loop.
 355:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * The idle task is automatically created and added to the ready lists upon
 356:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * creation of the first user task.
 357:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  *
 358:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * The portTASK_FUNCTION_PROTO() macro is used to allow port/compiler specific
 359:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
 360:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  *
 361:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * void prvIdleTask( void *pvParameters );
 362:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  *
 363:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  */
 364:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** static portTASK_FUNCTION_PROTO( prvIdleTask, pvParameters );
 365:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 366:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*
 367:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * Utility to free all memory allocated by the scheduler to hold a TCB,
 368:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * including the stack pointed to by the TCB.
 369:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  *
 370:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * This does not free memory allocated by the task itself (i.e. memory
 371:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * allocated by calls to pvPortMalloc from within the tasks application code).
 372:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  */
 373:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #if ( ( INCLUDE_vTaskDelete == 1 ) || ( INCLUDE_vTaskCleanUpResources == 1 ) )
 374:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 375:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	static void prvDeleteTCB( tskTCB *pxTCB ) PRIVILEGED_FUNCTION;
 376:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 377:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #endif
 378:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 379:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*
 380:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * Used only by the idle task.  This checks to see if anything has been placed
 381:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * in the list of tasks waiting to be deleted.  If so the task is cleaned up
 382:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * and its TCB deleted.
 383:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  */
 384:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** static void prvCheckTasksWaitingTermination( void ) PRIVILEGED_FUNCTION;
 385:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 386:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*
 387:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * The currently executing task is entering the Blocked state.  Add the task to
 388:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * either the current or the overflow delayed task list.
 389:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  */
 390:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** static void prvAddCurrentTaskToDelayedList( portTickType xTimeToWake ) PRIVILEGED_FUNCTION;
 391:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 392:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*
 393:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * Allocates memory from the heap for a TCB and associated stack.  Checks the
 394:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * allocation was successful.
 395:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  */
 396:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** static tskTCB *prvAllocateTCBAndStack( unsigned short usStackDepth, portSTACK_TYPE *puxStackBuffer 
 397:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 398:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*
 399:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * Called from vTaskList.  vListTasks details all the tasks currently under
 400:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * control of the scheduler.  The tasks may be in one of a number of lists.
 401:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * prvListTaskWithinSingleList accepts a list and details the tasks from
 402:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * within just that list.
 403:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  *
 404:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * THIS FUNCTION IS INTENDED FOR DEBUGGING ONLY, AND SHOULD NOT BE CALLED FROM
 405:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * NORMAL APPLICATION CODE.
 406:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  */
 407:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 408:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 409:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	static void prvListTaskWithinSingleList( const signed char *pcWriteBuffer, xList *pxList, signed c
 410:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 411:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #endif
 412:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 413:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*
 414:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * When a task is created, the stack of the task is filled with a known value.
 415:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * This function determines the 'high water mark' of the task stack by
 416:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * determining how much of the stack remains at the original preset value.
 417:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  */
 418:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
 419:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 420:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	static unsigned short usTaskCheckFreeStackSpace( const unsigned char * pucStackByte ) PRIVILEGED_F
 421:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 422:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #endif
 423:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 424:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 425:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*lint +e956 */
 426:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 427:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 428:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 429:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*-----------------------------------------------------------
 430:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * TASK CREATION API documented in task.h
 431:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  *----------------------------------------------------------*/
 432:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 433:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** signed portBASE_TYPE xTaskGenericCreate( pdTASK_CODE pxTaskCode, const signed char * const pcName, 
 434:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** {
 435:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** signed portBASE_TYPE xReturn;
 436:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** tskTCB * pxNewTCB;
 437:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 438:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	configASSERT( pxTaskCode );
 439:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	configASSERT( ( uxPriority < configMAX_PRIORITIES ) );
 440:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 441:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	/* Allocate the memory required by the TCB and stack for the new task,
 442:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	checking that the allocation was successful. */
 443:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	pxNewTCB = prvAllocateTCBAndStack( usStackDepth, puxStackBuffer );
 444:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 445:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	if( pxNewTCB != NULL )
 446:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
 447:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		portSTACK_TYPE *pxTopOfStack;
 448:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 449:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		#if( portUSING_MPU_WRAPPERS == 1 )
 450:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			/* Should the task be created in privileged mode? */
 451:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			portBASE_TYPE xRunPrivileged;
 452:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( ( uxPriority & portPRIVILEGE_BIT ) != 0x00 )
 453:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			{
 454:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				xRunPrivileged = pdTRUE;
 455:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			}
 456:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			else
 457:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			{
 458:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				xRunPrivileged = pdFALSE;
 459:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			}
 460:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			uxPriority &= ~portPRIVILEGE_BIT;
 461:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		#endif /* portUSING_MPU_WRAPPERS == 1 */
 462:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 463:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		/* Calculate the top of stack address.  This depends on whether the
 464:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		stack grows from high memory to low (as per the 80x86) or visa versa.
 465:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		portSTACK_GROWTH is used to make the result positive or negative as
 466:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		required by the port. */
 467:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		#if( portSTACK_GROWTH < 0 )
 468:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
 469:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxTopOfStack = pxNewTCB->pxStack + ( usStackDepth - ( unsigned short ) 1 );
 470:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxTopOfStack = ( portSTACK_TYPE * ) ( ( ( unsigned long ) pxTopOfStack ) & ( ( unsigned long ) ~
 471:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 472:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			/* Check the alignment of the calculated top of stack is correct. */
 473:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			configASSERT( ( ( ( unsigned long ) pxTopOfStack & ( unsigned long ) portBYTE_ALIGNMENT_MASK ) =
 474:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
 475:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		#else
 476:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
 477:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxTopOfStack = pxNewTCB->pxStack;
 478:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			
 479:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			/* Check the alignment of the stack buffer is correct. */
 480:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			configASSERT( ( ( ( unsigned long ) pxNewTCB->pxStack & ( unsigned long ) portBYTE_ALIGNMENT_MAS
 481:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 482:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			/* If we want to use stack checking on architectures that use
 483:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			a positive stack growth direction then we also need to store the
 484:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			other extreme of the stack space. */
 485:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( usStackDepth - 1 );
 486:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
 487:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		#endif
 488:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 489:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		/* Setup the newly allocated TCB with the initial state of the task. */
 490:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		prvInitialiseTCBVariables( pxNewTCB, pcName, uxPriority, xRegions, usStackDepth );
 491:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 492:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		/* Initialize the TCB stack to look as if the task was already running,
 493:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		but had been interrupted by the scheduler.  The return address is set
 494:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		to the start of the task function. Once the stack has been initialised
 495:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		the	top of stack variable is updated. */
 496:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		#if( portUSING_MPU_WRAPPERS == 1 )
 497:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
 498:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters, xRunPriv
 499:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
 500:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		#else
 501:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
 502:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 503:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
 504:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		#endif
 505:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 506:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		/* Check the alignment of the initialised stack. */
 507:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		configASSERT( ( ( ( unsigned long ) pxNewTCB->pxTopOfStack & ( unsigned long ) portBYTE_ALIGNMENT
 508:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 509:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( ( void * ) pxCreatedTask != NULL )
 510:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
 511:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			/* Pass the TCB out - in an anonymous way.  The calling function/
 512:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			task can use this as a handle to delete the task later if
 513:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			required.*/
 514:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			*pxCreatedTask = ( xTaskHandle ) pxNewTCB;
 515:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
 516:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		
 517:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		/* We are going to manipulate the task queues to add this task to a
 518:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		ready list, so must make sure no interrupts occur. */
 519:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		taskENTER_CRITICAL();
 520:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
 521:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			uxCurrentNumberOfTasks++;
 522:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( pxCurrentTCB == NULL )
 523:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			{
 524:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				/* There are no other tasks, or all the other tasks are in
 525:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				the suspended state - make this the current task. */
 526:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				pxCurrentTCB =  pxNewTCB;
 527:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 528:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				if( uxCurrentNumberOfTasks == ( unsigned portBASE_TYPE ) 1 )
 529:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				{
 530:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					/* This is the first task to be created so do the preliminary
 531:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					initialisation required.  We will not recover if this call
 532:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					fails, but we will report the failure. */
 533:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					prvInitialiseTaskLists();
 534:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				}
 535:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			}
 536:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			else
 537:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			{
 538:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				/* If the scheduler is not already running, make this task the
 539:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				current task if it is the highest priority task to be created
 540:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				so far. */
 541:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				if( xSchedulerRunning == pdFALSE )
 542:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				{
 543:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					if( pxCurrentTCB->uxPriority <= uxPriority )
 544:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					{
 545:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 						pxCurrentTCB = pxNewTCB;
 546:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					}
 547:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				}
 548:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			}
 549:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 550:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			/* Remember the top priority to make context switching faster.  Use
 551:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			the priority in pxNewTCB as this has been capped to a valid value. */
 552:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( pxNewTCB->uxPriority > uxTopUsedPriority )
 553:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			{
 554:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				uxTopUsedPriority = pxNewTCB->uxPriority;
 555:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			}
 556:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 557:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			#if ( configUSE_TRACE_FACILITY == 1 )
 558:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			{
 559:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				/* Add a counter into the TCB for tracing only. */
 560:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				pxNewTCB->uxTCBNumber = uxTaskNumber;
 561:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			}
 562:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			#endif
 563:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			uxTaskNumber++;
 564:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 565:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			prvAddTaskToReadyQueue( pxNewTCB );
 566:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 567:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			xReturn = pdPASS;
 568:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			traceTASK_CREATE( pxNewTCB );
 569:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
 570:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		taskEXIT_CRITICAL();
 571:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
 572:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	else
 573:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
 574:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 575:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		traceTASK_CREATE_FAILED();
 576:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
 577:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 578:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	if( xReturn == pdPASS )
 579:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
 580:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
 581:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
 582:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			/* If the created task is of a higher priority than the current task
 583:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			then it should run now. */
 584:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( pxCurrentTCB->uxPriority < uxPriority )
 585:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			{
 586:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				portYIELD_WITHIN_API();
 587:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			}
 588:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
 589:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
 590:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 591:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	return xReturn;
 592:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** }
 593:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*-----------------------------------------------------------*/
 594:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 595:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 596:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 597:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	void vTaskDelete( xTaskHandle pxTaskToDelete )
 598:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
 599:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	tskTCB *pxTCB;
 600:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 601:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		taskENTER_CRITICAL();
 602:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
 603:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			/* Ensure a yield is performed if the current task is being
 604:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			deleted. */
 605:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( pxTaskToDelete == pxCurrentTCB )
 606:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			{
 607:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				pxTaskToDelete = NULL;
 608:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			}
 609:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 610:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			/* If null is passed in here then we are deleting ourselves. */
 611:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxTCB = prvGetTCBFromHandle( pxTaskToDelete );
 612:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 613:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			/* Remove task from the ready list and place in the	termination list.
 614:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			This will stop the task from be scheduled.  The idle task will check
 615:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			the termination list and free up any memory allocated by the
 616:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			scheduler for the TCB and stack. */
 617:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			vListRemove( &( pxTCB->xGenericListItem ) );
 618:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 619:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			/* Is the task waiting on an event also? */
 620:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( pxTCB->xEventListItem.pvContainer )
 621:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			{
 622:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				vListRemove( &( pxTCB->xEventListItem ) );
 623:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			}
 624:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 625:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			vListInsertEnd( ( xList * ) &xTasksWaitingTermination, &( pxTCB->xGenericListItem ) );
 626:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 627:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			/* Increment the ucTasksDeleted variable so the idle task knows
 628:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			there is a task that has been deleted and that it should therefore
 629:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			check the xTasksWaitingTermination list. */
 630:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			++uxTasksDeleted;
 631:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 632:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			/* Increment the uxTaskNumberVariable also so kernel aware debuggers
 633:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			can detect that the task lists need re-generating. */
 634:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			uxTaskNumber++;
 635:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 636:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			traceTASK_DELETE( pxTCB );
 637:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
 638:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		taskEXIT_CRITICAL();
 639:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 640:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		/* Force a reschedule if we have just deleted the current task. */
 641:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
 642:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
 643:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( ( void * ) pxTaskToDelete == NULL )
 644:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			{
 645:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				portYIELD_WITHIN_API();
 646:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			}
 647:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
 648:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
 649:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 650:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #endif
 651:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 652:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 653:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 654:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 655:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 656:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 657:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*-----------------------------------------------------------
 658:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * TASK CONTROL API documented in task.h
 659:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  *----------------------------------------------------------*/
 660:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 661:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #if ( INCLUDE_vTaskDelayUntil == 1 )
 662:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 663:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	void vTaskDelayUntil( portTickType * const pxPreviousWakeTime, portTickType xTimeIncrement )
 664:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
 665:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	portTickType xTimeToWake;
 666:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	portBASE_TYPE xAlreadyYielded, xShouldDelay = pdFALSE;
 667:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 668:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		configASSERT( pxPreviousWakeTime );
 669:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		configASSERT( ( xTimeIncrement > 0 ) );
 670:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 671:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		vTaskSuspendAll();
 672:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
 673:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			/* Generate the tick time at which the task wants to wake. */
 674:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
 675:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 676:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( xTickCount < *pxPreviousWakeTime )
 677:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			{
 678:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				/* The tick count has overflowed since this function was
 679:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				lasted called.  In this case the only time we should ever
 680:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				actually delay is if the wake time has also	overflowed,
 681:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				and the wake time is greater than the tick time.  When this
 682:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				is the case it is as if neither time had overflowed. */
 683:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xTickCount ) )
 684:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				{
 685:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					xShouldDelay = pdTRUE;
 686:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				}
 687:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			}
 688:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			else
 689:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			{
 690:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				/* The tick time has not overflowed.  In this case we will
 691:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				delay if either the wake time has overflowed, and/or the
 692:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				tick time is less than the wake time. */
 693:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xTickCount ) )
 694:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				{
 695:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					xShouldDelay = pdTRUE;
 696:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				}
 697:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			}
 698:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 699:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			/* Update the wake time ready for the next call. */
 700:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			*pxPreviousWakeTime = xTimeToWake;
 701:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 702:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( xShouldDelay != pdFALSE )
 703:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			{
 704:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				traceTASK_DELAY_UNTIL();
 705:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 706:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				/* We must remove ourselves from the ready list before adding
 707:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				ourselves to the blocked list as the same list item is used for
 708:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				both lists. */
 709:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				vListRemove( ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) );
 710:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTimeToWake );
 711:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			}
 712:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
 713:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		xAlreadyYielded = xTaskResumeAll();
 714:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 715:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
 716:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		have put ourselves to sleep. */
 717:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( !xAlreadyYielded )
 718:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
 719:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			portYIELD_WITHIN_API();
 720:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
 721:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
 722:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 723:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #endif
 724:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*-----------------------------------------------------------*/
 725:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 726:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #if ( INCLUDE_vTaskDelay == 1 )
 727:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 728:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	void vTaskDelay( portTickType xTicksToDelay )
 729:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
 730:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	portTickType xTimeToWake;
 731:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	signed portBASE_TYPE xAlreadyYielded = pdFALSE;
 732:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 733:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		/* A delay time of zero just forces a reschedule. */
 734:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( xTicksToDelay > ( portTickType ) 0 )
 735:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
 736:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			vTaskSuspendAll();
 737:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			{
 738:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				traceTASK_DELAY();
 739:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 740:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				/* A task that is removed from the event list while the
 741:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				scheduler is suspended will not get placed in the ready
 742:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				list or removed from the blocked list until the scheduler
 743:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				is resumed.
 744:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 745:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				This task cannot be in an event list as it is the currently
 746:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				executing task. */
 747:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 748:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				/* Calculate the time to wake - this may overflow but this is
 749:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				not a problem. */
 750:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				xTimeToWake = xTickCount + xTicksToDelay;
 751:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 752:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				/* We must remove ourselves from the ready list before adding
 753:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				ourselves to the blocked list as the same list item is used for
 754:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				both lists. */
 755:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				vListRemove( ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) );
 756:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTimeToWake );
 757:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			}
 758:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			xAlreadyYielded = xTaskResumeAll();
 759:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
 760:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 761:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
 762:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		have put ourselves to sleep. */
 763:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( !xAlreadyYielded )
 764:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
 765:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			portYIELD_WITHIN_API();
 766:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
 767:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
 768:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 769:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #endif
 770:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*-----------------------------------------------------------*/
 771:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 772:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
 773:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 774:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	unsigned portBASE_TYPE uxTaskPriorityGet( xTaskHandle pxTask )
 775:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
 776:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	tskTCB *pxTCB;
 777:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	unsigned portBASE_TYPE uxReturn;
 778:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 779:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		taskENTER_CRITICAL();
 780:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
 781:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			/* If null is passed in here then we are changing the
 782:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			priority of the calling function. */
 783:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxTCB = prvGetTCBFromHandle( pxTask );
 784:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 785:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
 786:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		taskEXIT_CRITICAL();
 787:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 788:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		return uxReturn;
 789:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
 790:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 791:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #endif
 792:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*-----------------------------------------------------------*/
 793:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 794:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #if ( INCLUDE_vTaskPrioritySet == 1 )
 795:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 796:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	void vTaskPrioritySet( xTaskHandle pxTask, unsigned portBASE_TYPE uxNewPriority )
 797:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
 798:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	tskTCB *pxTCB;
 799:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	unsigned portBASE_TYPE uxCurrentPriority;
 800:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	portBASE_TYPE xYieldRequired = pdFALSE;
 801:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 802:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		configASSERT( ( uxNewPriority < configMAX_PRIORITIES ) );
 803:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 804:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		/* Ensure the new priority is valid. */
 805:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( uxNewPriority >= configMAX_PRIORITIES )
 806:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
 807:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			uxNewPriority = configMAX_PRIORITIES - ( unsigned portBASE_TYPE ) 1U;
 808:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
 809:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 810:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		taskENTER_CRITICAL();
 811:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
 812:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( pxTask == pxCurrentTCB )
 813:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			{
 814:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				pxTask = NULL;
 815:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			}
 816:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 817:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			/* If null is passed in here then we are changing the
 818:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			priority of the calling function. */
 819:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxTCB = prvGetTCBFromHandle( pxTask );
 820:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 821:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			traceTASK_PRIORITY_SET( pxTask, uxNewPriority );
 822:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 823:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			#if ( configUSE_MUTEXES == 1 )
 824:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			{
 825:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				uxCurrentPriority = pxTCB->uxBasePriority;
 826:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			}
 827:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			#else
 828:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			{
 829:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				uxCurrentPriority = pxTCB->uxPriority;
 830:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			}
 831:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			#endif
 832:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 833:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( uxCurrentPriority != uxNewPriority )
 834:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			{
 835:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				/* The priority change may have readied a task of higher
 836:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				priority than the calling task. */
 837:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				if( uxNewPriority > uxCurrentPriority )
 838:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				{
 839:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					if( pxTask != NULL )
 840:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					{
 841:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 						/* The priority of another task is being raised.  If we
 842:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 						were raising the priority of the currently running task
 843:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 						there would be no need to switch as it must have already
 844:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 						been the highest priority task. */
 845:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 						xYieldRequired = pdTRUE;
 846:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					}
 847:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				}
 848:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				else if( pxTask == NULL )
 849:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				{
 850:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					/* Setting our own priority down means there may now be another
 851:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					task of higher priority that is ready to execute. */
 852:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					xYieldRequired = pdTRUE;
 853:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				}
 854:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 855:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 856:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 857:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				#if ( configUSE_MUTEXES == 1 )
 858:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				{
 859:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					/* Only change the priority being used if the task is not
 860:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					currently using an inherited priority. */
 861:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					if( pxTCB->uxBasePriority == pxTCB->uxPriority )
 862:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					{
 863:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 						pxTCB->uxPriority = uxNewPriority;
 864:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					}
 865:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 866:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					/* The base priority gets set whatever. */
 867:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					pxTCB->uxBasePriority = uxNewPriority;
 868:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				}
 869:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				#else
 870:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				{
 871:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					pxTCB->uxPriority = uxNewPriority;
 872:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				}
 873:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				#endif
 874:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 875:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( configMAX_PRIORITIES - ( portTickType ) 
 876:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 877:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				/* If the task is in the blocked or suspended list we need do
 878:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				nothing more than change it's priority variable. However, if
 879:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				the task is in a ready list it needs to be removed and placed
 880:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				in the queue appropriate to its new priority. */
 881:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxCurrentPriority ] ), &( pxTCB->xGenericLis
 882:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				{
 883:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					/* The task is currently in its ready list - remove before adding
 884:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					it to it's new ready list.  As we are in a critical section we
 885:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					can do this even if the scheduler is suspended. */
 886:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					vListRemove( &( pxTCB->xGenericListItem ) );
 887:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					prvAddTaskToReadyQueue( pxTCB );
 888:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				}
 889:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 890:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				if( xYieldRequired == pdTRUE )
 891:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				{
 892:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					portYIELD_WITHIN_API();
 893:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				}
 894:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			}
 895:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
 896:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		taskEXIT_CRITICAL();
 897:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
 898:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 899:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #endif
 900:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*-----------------------------------------------------------*/
 901:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 902:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 903:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 904:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	void vTaskSuspend( xTaskHandle pxTaskToSuspend )
 905:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
 906:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	tskTCB *pxTCB;
 907:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 908:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		taskENTER_CRITICAL();
 909:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
 910:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			/* Ensure a yield is performed if the current task is being
 911:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			suspended. */
 912:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( pxTaskToSuspend == pxCurrentTCB )
 913:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			{
 914:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				pxTaskToSuspend = NULL;
 915:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			}
 916:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 917:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			/* If null is passed in here then we are suspending ourselves. */
 918:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxTCB = prvGetTCBFromHandle( pxTaskToSuspend );
 919:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 920:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			traceTASK_SUSPEND( pxTCB );
 921:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 922:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			/* Remove task from the ready/delayed list and place in the	suspended list. */
 923:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			vListRemove( &( pxTCB->xGenericListItem ) );
 924:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 925:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			/* Is the task waiting on an event also? */
 926:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( pxTCB->xEventListItem.pvContainer )
 927:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			{
 928:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				vListRemove( &( pxTCB->xEventListItem ) );
 929:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			}
 930:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 931:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			vListInsertEnd( ( xList * ) &xSuspendedTaskList, &( pxTCB->xGenericListItem ) );
 932:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
 933:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		taskEXIT_CRITICAL();
 934:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 935:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( ( void * ) pxTaskToSuspend == NULL )
 936:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
 937:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( xSchedulerRunning != pdFALSE )
 938:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			{
 939:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				/* We have just suspended the current task. */
 940:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				portYIELD_WITHIN_API();
 941:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			}
 942:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			else
 943:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			{
 944:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				/* The scheduler is not running, but the task that was pointed
 945:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				to by pxCurrentTCB has just been suspended and pxCurrentTCB
 946:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				must be adjusted to point to a different task. */
 947:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks ) 
 948:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				{
 949:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					/* No other tasks are ready, so set pxCurrentTCB back to
 950:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					NULL so when the next task is created pxCurrentTCB will
 951:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					be set to point to it no matter what its relative priority
 952:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					is. */
 953:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					pxCurrentTCB = NULL;
 954:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				}
 955:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				else
 956:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				{
 957:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					vTaskSwitchContext();
 958:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				}
 959:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			}
 960:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
 961:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
 962:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 963:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #endif
 964:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*-----------------------------------------------------------*/
 965:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 966:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 967:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 968:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	signed portBASE_TYPE xTaskIsTaskSuspended( xTaskHandle xTask )
 969:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
 970:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	portBASE_TYPE xReturn = pdFALSE;
 971:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	const tskTCB * const pxTCB = ( tskTCB * ) xTask;
 972:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 973:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		/* It does not make sense to check if the calling task is suspended. */
 974:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		configASSERT( xTask );
 975:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 976:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		/* Is the task we are attempting to resume actually in the
 977:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		suspended list? */
 978:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xGenericListItem ) ) != pdFALSE )
 979:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
 980:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			/* Has the task already been resumed from within an ISR? */
 981:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) != pdTRUE )
 982:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			{
 983:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				/* Is it in the suspended list because it is in the
 984:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				Suspended state?  It is possible to be in the suspended
 985:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				list because it is blocked on a task with no timeout
 986:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				specified. */
 987:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) == pdTRUE )
 988:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				{
 989:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					xReturn = pdTRUE;
 990:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				}
 991:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			}
 992:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
 993:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 994:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		return xReturn;
 995:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
 996:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
 997:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #endif
 998:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*-----------------------------------------------------------*/
 999:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1000:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1001:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1002:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	void vTaskResume( xTaskHandle pxTaskToResume )
1003:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
1004:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	tskTCB *pxTCB;
1005:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1006:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		/* It does not make sense to resume the calling task. */
1007:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		configASSERT( pxTaskToResume );
1008:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1009:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		/* Remove the task from whichever list it is currently in, and place
1010:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		it in the ready list. */
1011:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		pxTCB = ( tskTCB * ) pxTaskToResume;
1012:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1013:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		/* The parameter cannot be NULL as it is impossible to resume the
1014:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		currently executing task. */
1015:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( ( pxTCB != NULL ) && ( pxTCB != pxCurrentTCB ) )
1016:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
1017:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			taskENTER_CRITICAL();
1018:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			{
1019:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				if( xTaskIsTaskSuspended( pxTCB ) == pdTRUE )
1020:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				{
1021:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					traceTASK_RESUME( pxTCB );
1022:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1023:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					/* As we are in a critical section we can access the ready
1024:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					lists even if the scheduler is suspended. */
1025:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					vListRemove(  &( pxTCB->xGenericListItem ) );
1026:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					prvAddTaskToReadyQueue( pxTCB );
1027:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1028:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					/* We may have just resumed a higher priority task. */
1029:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1030:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					{
1031:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 						/* This yield may not cause the task just resumed to run, but
1032:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 						will leave the lists in the correct state for the next yield. */
1033:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 						portYIELD_WITHIN_API();
1034:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					}
1035:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				}
1036:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			}
1037:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			taskEXIT_CRITICAL();
1038:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
1039:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
1040:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1041:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #endif
1042:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1043:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*-----------------------------------------------------------*/
1044:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1045:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #if ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) )
1046:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1047:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	portBASE_TYPE xTaskResumeFromISR( xTaskHandle pxTaskToResume )
1048:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
1049:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	portBASE_TYPE xYieldRequired = pdFALSE;
1050:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	tskTCB *pxTCB;
1051:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1052:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		configASSERT( pxTaskToResume );
1053:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1054:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		pxTCB = ( tskTCB * ) pxTaskToResume;
1055:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1056:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( xTaskIsTaskSuspended( pxTCB ) == pdTRUE )
1057:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
1058:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			traceTASK_RESUME_FROM_ISR( pxTCB );
1059:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1060:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( uxSchedulerSuspended == ( unsigned portBASE_TYPE ) pdFALSE )
1061:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			{
1062:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				xYieldRequired = ( pxTCB->uxPriority >= pxCurrentTCB->uxPriority );
1063:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				vListRemove(  &( pxTCB->xGenericListItem ) );
1064:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				prvAddTaskToReadyQueue( pxTCB );
1065:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			}
1066:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			else
1067:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			{
1068:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				/* We cannot access the delayed or ready lists, so will hold this
1069:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				task pending until the scheduler is resumed, at which point a
1070:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				yield will be performed if necessary. */
1071:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				vListInsertEnd( ( xList * ) &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
1072:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			}
1073:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
1074:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1075:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		return xYieldRequired;
1076:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
1077:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1078:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #endif
1079:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1080:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1081:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1082:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1083:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*-----------------------------------------------------------
1084:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * PUBLIC SCHEDULER CONTROL documented in task.h
1085:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  *----------------------------------------------------------*/
1086:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1087:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1088:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** void vTaskStartScheduler( void )
1089:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** {
1090:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** portBASE_TYPE xReturn;
1091:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1092:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	/* Add the idle task at the lowest priority. */
1093:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	xReturn = xTaskCreate( prvIdleTask, ( signed char * ) "IDLE", tskIDLE_STACK_SIZE, ( void * ) NULL,
1094:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1095:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	#if ( configUSE_TIMERS == 1 )
1096:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
1097:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( xReturn == pdPASS )
1098:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
1099:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			xReturn = xTimerCreateTimerTask();
1100:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
1101:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
1102:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	#endif
1103:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1104:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	if( xReturn == pdPASS )
1105:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
1106:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		/* Interrupts are turned off here, to ensure a tick does not occur
1107:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		before or during the call to xPortStartScheduler().  The stacks of
1108:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		the created tasks contain a status word with interrupts switched on
1109:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		so interrupts will automatically get re-enabled when the first task
1110:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		starts to run.
1111:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1112:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		STEPPING THROUGH HERE USING A DEBUGGER CAN CAUSE BIG PROBLEMS IF THE
1113:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		DEBUGGER ALLOWS INTERRUPTS TO BE PROCESSED. */
1114:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		portDISABLE_INTERRUPTS();
1115:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1116:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		xSchedulerRunning = pdTRUE;
1117:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		xTickCount = ( portTickType ) 0;
1118:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1119:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		/* If configGENERATE_RUN_TIME_STATS is defined then the following
1120:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		macro must be defined to configure the timer/counter used to generate
1121:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		the run time counter time base. */
1122:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();
1123:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		
1124:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		/* Setting up the timer tick is hardware specific and thus in the
1125:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		portable interface. */
1126:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( xPortStartScheduler() )
1127:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
1128:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			/* Should not reach here as if the scheduler is running the
1129:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			function will not return. */
1130:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
1131:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		else
1132:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
1133:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			/* Should only reach here if a task calls xTaskEndScheduler(). */
1134:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
1135:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
1136:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1137:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	/* This line will only be reached if the kernel could not be started. */
1138:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	configASSERT( xReturn );
1139:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** }
1140:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*-----------------------------------------------------------*/
1141:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1142:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** void vTaskEndScheduler( void )
1143:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** {
1144:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
1145:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	routine so the original ISRs can be restored if necessary.  The port
1146:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	layer must ensure interrupts enable	bit is left in the correct state. */
1147:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	portDISABLE_INTERRUPTS();
1148:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	xSchedulerRunning = pdFALSE;
1149:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	vPortEndScheduler();
1150:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** }
1151:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*----------------------------------------------------------*/
1152:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1153:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** void vTaskSuspendAll( void )
1154:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** {
1155:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	/* A critical section is not required as the variable is of type
1156:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	portBASE_TYPE. */
1157:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	++uxSchedulerSuspended;
1158:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** }
1159:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*----------------------------------------------------------*/
1160:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1161:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** signed portBASE_TYPE xTaskResumeAll( void )
1162:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** {
1163:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** register tskTCB *pxTCB;
1164:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** signed portBASE_TYPE xAlreadyYielded = pdFALSE;
1165:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1166:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	/* If uxSchedulerSuspended is zero then this function does not match a
1167:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	previous call to vTaskSuspendAll(). */
1168:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	configASSERT( uxSchedulerSuspended );
1169:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1170:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	/* It is possible that an ISR caused a task to be removed from an event
1171:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	list while the scheduler was suspended.  If this was the case then the
1172:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	removed task will have been added to the xPendingReadyList.  Once the
1173:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	scheduler has been resumed it is safe to move all the pending ready
1174:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	tasks from this list into their appropriate ready list. */
1175:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	taskENTER_CRITICAL();
1176:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
1177:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		--uxSchedulerSuspended;
1178:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1179:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( uxSchedulerSuspended == ( unsigned portBASE_TYPE ) pdFALSE )
1180:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
1181:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( uxCurrentNumberOfTasks > ( unsigned portBASE_TYPE ) 0 )
1182:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			{
1183:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				portBASE_TYPE xYieldRequired = pdFALSE;
1184:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1185:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				/* Move any readied tasks from the pending list into the
1186:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				appropriate ready list. */
1187:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				while( listLIST_IS_EMPTY( ( xList * ) &xPendingReadyList ) == pdFALSE )
1188:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				{
1189:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					pxTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY(  ( ( xList * ) &xPendingReadyList ) );
1190:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					vListRemove( &( pxTCB->xEventListItem ) );
1191:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					vListRemove( &( pxTCB->xGenericListItem ) );
1192:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					prvAddTaskToReadyQueue( pxTCB );
1193:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1194:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					/* If we have moved a task that has a priority higher than
1195:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					the current task then we should yield. */
1196:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1197:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					{
1198:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 						xYieldRequired = pdTRUE;
1199:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					}
1200:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				}
1201:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1202:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				/* If any ticks occurred while the scheduler was suspended then
1203:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				they should be processed now.  This ensures the tick count does not
1204:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				slip, and that any delayed tasks are resumed at the correct time. */
1205:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				if( uxMissedTicks > ( unsigned portBASE_TYPE ) 0 )
1206:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				{
1207:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					while( uxMissedTicks > ( unsigned portBASE_TYPE ) 0 )
1208:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					{
1209:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 						vTaskIncrementTick();
1210:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 						--uxMissedTicks;
1211:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					}
1212:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1213:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					/* As we have processed some ticks it is appropriate to yield
1214:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					to ensure the highest priority task that is ready to run is
1215:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					the task actually running. */
1216:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					#if configUSE_PREEMPTION == 1
1217:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					{
1218:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 						xYieldRequired = pdTRUE;
1219:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					}
1220:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					#endif
1221:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				}
1222:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1223:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				if( ( xYieldRequired == pdTRUE ) || ( xMissedYield == pdTRUE ) )
1224:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				{
1225:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					xAlreadyYielded = pdTRUE;
1226:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					xMissedYield = pdFALSE;
1227:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					portYIELD_WITHIN_API();
1228:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				}
1229:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			}
1230:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
1231:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
1232:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	taskEXIT_CRITICAL();
1233:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1234:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	return xAlreadyYielded;
1235:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** }
1236:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1237:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1238:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1239:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1240:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1241:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1242:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*-----------------------------------------------------------
1243:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * PUBLIC TASK UTILITIES documented in task.h
1244:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  *----------------------------------------------------------*/
1245:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1246:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1247:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1248:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** portTickType xTaskGetTickCount( void )
1249:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** {
1250:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** portTickType xTicks;
1251:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1252:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	/* Critical section required if running on a 16 bit processor. */
1253:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	taskENTER_CRITICAL();
1254:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
1255:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		xTicks = xTickCount;
1256:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
1257:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	taskEXIT_CRITICAL();
1258:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1259:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	return xTicks;
1260:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** }
1261:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*-----------------------------------------------------------*/
1262:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1263:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** portTickType xTaskGetTickCountFromISR( void )
1264:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** {
1265:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** portTickType xReturn;
1266:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** unsigned portBASE_TYPE uxSavedInterruptStatus;
1267:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1268:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1269:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	xReturn = xTickCount;
1270:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1271:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1272:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	return xReturn;
1273:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** }
1274:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*-----------------------------------------------------------*/
1275:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1276:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** unsigned portBASE_TYPE uxTaskGetNumberOfTasks( void )
1277:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** {
1278:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	/* A critical section is not required because the variables are of type
1279:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	portBASE_TYPE. */
1280:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	return uxCurrentNumberOfTasks;
1281:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** }
1282:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*-----------------------------------------------------------*/
1283:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1284:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1285:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1286:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	void vTaskList( signed char *pcWriteBuffer )
1287:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
1288:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	unsigned portBASE_TYPE uxQueue;
1289:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1290:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		/* This is a VERY costly function that should be used for debug only.
1291:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		It leaves interrupts disabled for a LONG time. */
1292:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1293:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		vTaskSuspendAll();
1294:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
1295:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			/* Run through all the lists that could potentially contain a TCB and
1296:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			report the task name, state and stack high water mark. */
1297:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1298:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			*pcWriteBuffer = ( signed char ) 0x00;
1299:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			strcat( ( char * ) pcWriteBuffer, ( const char * ) "\r\n" );
1300:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1301:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			uxQueue = uxTopUsedPriority + ( unsigned portBASE_TYPE ) 1U;
1302:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1303:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			do
1304:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			{
1305:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				uxQueue--;
1306:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1307:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				if( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxQueue ] ) ) == pdFALSE )
1308:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				{
1309:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					prvListTaskWithinSingleList( pcWriteBuffer, ( xList * ) &( pxReadyTasksLists[ uxQueue ] ), tsk
1310:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				}
1311:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			}while( uxQueue > ( unsigned short ) tskIDLE_PRIORITY );
1312:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1313:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( listLIST_IS_EMPTY( pxDelayedTaskList ) == pdFALSE )
1314:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			{
1315:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				prvListTaskWithinSingleList( pcWriteBuffer, ( xList * ) pxDelayedTaskList, tskBLOCKED_CHAR );
1316:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			}
1317:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1318:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( listLIST_IS_EMPTY( pxOverflowDelayedTaskList ) == pdFALSE )
1319:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			{
1320:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				prvListTaskWithinSingleList( pcWriteBuffer, ( xList * ) pxOverflowDelayedTaskList, tskBLOCKED_C
1321:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			}
1322:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1323:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			#if( INCLUDE_vTaskDelete == 1 )
1324:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			{
1325:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				if( listLIST_IS_EMPTY( &xTasksWaitingTermination ) == pdFALSE )
1326:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				{
1327:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					prvListTaskWithinSingleList( pcWriteBuffer, ( xList * ) &xTasksWaitingTermination, tskDELETED_
1328:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				}
1329:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			}
1330:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			#endif
1331:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1332:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
1333:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			{
1334:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				if( listLIST_IS_EMPTY( &xSuspendedTaskList ) == pdFALSE )
1335:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				{
1336:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					prvListTaskWithinSingleList( pcWriteBuffer, ( xList * ) &xSuspendedTaskList, tskSUSPENDED_CHAR
1337:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				}
1338:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			}
1339:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			#endif
1340:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
1341:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		xTaskResumeAll();
1342:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
1343:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1344:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #endif
1345:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*----------------------------------------------------------*/
1346:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1347:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #if ( configGENERATE_RUN_TIME_STATS == 1 )
1348:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1349:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	void vTaskGetRunTimeStats( signed char *pcWriteBuffer )
1350:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
1351:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	unsigned portBASE_TYPE uxQueue;
1352:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	unsigned long ulTotalRunTime;
1353:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1354:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		/* This is a VERY costly function that should be used for debug only.
1355:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		It leaves interrupts disabled for a LONG time. */
1356:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1357:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		vTaskSuspendAll();
1358:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
1359:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
1360:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				portALT_GET_RUN_TIME_COUNTER_VALUE( ulTotalRunTime );
1361:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			#else
1362:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
1363:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			#endif
1364:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1365:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			/* Divide ulTotalRunTime by 100 to make the percentage caluclations
1366:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			simpler in the prvGenerateRunTimeStatsForTasksInList() function. */
1367:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			ulTotalRunTime /= 100UL;
1368:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			
1369:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			/* Run through all the lists that could potentially contain a TCB,
1370:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			generating a table of run timer percentages in the provided
1371:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			buffer. */
1372:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1373:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			*pcWriteBuffer = ( signed char ) 0x00;
1374:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			strcat( ( char * ) pcWriteBuffer, ( const char * ) "\r\n" );
1375:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1376:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			uxQueue = uxTopUsedPriority + ( unsigned portBASE_TYPE ) 1U;
1377:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1378:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			do
1379:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			{
1380:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				uxQueue--;
1381:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1382:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				if( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxQueue ] ) ) == pdFALSE )
1383:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				{
1384:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					prvGenerateRunTimeStatsForTasksInList( pcWriteBuffer, ( xList * ) &( pxReadyTasksLists[ uxQueu
1385:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				}
1386:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			}while( uxQueue > ( unsigned short ) tskIDLE_PRIORITY );
1387:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1388:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( listLIST_IS_EMPTY( pxDelayedTaskList ) == pdFALSE )
1389:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			{
1390:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				prvGenerateRunTimeStatsForTasksInList( pcWriteBuffer, ( xList * ) pxDelayedTaskList, ulTotalRun
1391:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			}
1392:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1393:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( listLIST_IS_EMPTY( pxOverflowDelayedTaskList ) == pdFALSE )
1394:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			{
1395:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				prvGenerateRunTimeStatsForTasksInList( pcWriteBuffer, ( xList * ) pxOverflowDelayedTaskList, ul
1396:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			}
1397:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1398:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			#if ( INCLUDE_vTaskDelete == 1 )
1399:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			{
1400:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				if( listLIST_IS_EMPTY( &xTasksWaitingTermination ) == pdFALSE )
1401:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				{
1402:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					prvGenerateRunTimeStatsForTasksInList( pcWriteBuffer, ( xList * ) &xTasksWaitingTermination, u
1403:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				}
1404:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			}
1405:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			#endif
1406:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1407:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
1408:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			{
1409:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				if( listLIST_IS_EMPTY( &xSuspendedTaskList ) == pdFALSE )
1410:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				{
1411:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					prvGenerateRunTimeStatsForTasksInList( pcWriteBuffer, ( xList * ) &xSuspendedTaskList, ulTotal
1412:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				}
1413:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			}
1414:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			#endif
1415:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
1416:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		xTaskResumeAll();
1417:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
1418:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1419:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #endif
1420:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*----------------------------------------------------------*/
1421:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1422:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1423:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1424:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	void vTaskStartTrace( signed char * pcBuffer, unsigned long ulBufferSize )
1425:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
1426:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		configASSERT( pcBuffer );
1427:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		configASSERT( ulBufferSize );
1428:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1429:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		taskENTER_CRITICAL();
1430:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
1431:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pcTraceBuffer = ( signed char * )pcBuffer;
1432:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pcTraceBufferStart = pcBuffer;
1433:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pcTraceBufferEnd = pcBuffer + ( ulBufferSize - tskSIZE_OF_EACH_TRACE_LINE );
1434:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			xTracing = pdTRUE;
1435:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
1436:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		taskEXIT_CRITICAL();
1437:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
1438:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1439:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #endif
1440:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*----------------------------------------------------------*/
1441:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1442:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1443:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1444:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	unsigned long ulTaskEndTrace( void )
1445:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
1446:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	unsigned long ulBufferLength;
1447:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1448:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		taskENTER_CRITICAL();
1449:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			xTracing = pdFALSE;
1450:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		taskEXIT_CRITICAL();
1451:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1452:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		ulBufferLength = ( unsigned long ) ( pcTraceBuffer - pcTraceBufferStart );
1453:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1454:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		return ulBufferLength;
1455:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
1456:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1457:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #endif
1458:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1459:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1460:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1461:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*-----------------------------------------------------------
1462:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * SCHEDULER INTERNALS AVAILABLE FOR PORTING PURPOSES
1463:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * documented in task.h
1464:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  *----------------------------------------------------------*/
1465:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1466:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1467:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** void vTaskIncrementTick( void )
1468:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** {
1469:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** tskTCB * pxTCB;
1470:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1471:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	/* Called by the portable layer each time a tick interrupt occurs.
1472:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	Increments the tick then checks to see if the new tick value will cause any
1473:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	tasks to be unblocked. */
1474:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	if( uxSchedulerSuspended == ( unsigned portBASE_TYPE ) pdFALSE )
1475:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
1476:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		++xTickCount;
1477:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( xTickCount == ( portTickType ) 0 )
1478:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
1479:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			xList *pxTemp;
1480:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1481:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			/* Tick count has overflowed so we need to swap the delay lists.
1482:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			If there are any items in pxDelayedTaskList here then there is
1483:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			an error! */
1484:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			configASSERT( ( listLIST_IS_EMPTY( pxDelayedTaskList ) ) );
1485:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			
1486:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxTemp = pxDelayedTaskList;
1487:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxDelayedTaskList = pxOverflowDelayedTaskList;
1488:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxOverflowDelayedTaskList = pxTemp;
1489:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			xNumOfOverflows++;
1490:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	
1491:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
1492:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			{
1493:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				/* The new current delayed list is empty.  Set 
1494:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				xNextTaskUnblockTime to the maximum possible value so it is 
1495:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				extremely unlikely that the	
1496:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				if( xTickCount >= xNextTaskUnblockTime ) test will pass until 
1497:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				there is an item in the delayed list. */
1498:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				xNextTaskUnblockTime = portMAX_DELAY;
1499:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			}
1500:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			else
1501:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			{
1502:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				/* The new current delayed list is not empty, get the value of 
1503:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				the item at the head of the delayed list.  This is the time at 
1504:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				which the task at the head of the delayed list should be removed 
1505:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				from the Blocked state. */
1506:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				pxTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
1507:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( pxTCB->xGenericListItem ) );
1508:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			}
1509:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
1510:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1511:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		/* See if this tick has made a timeout expire. */
1512:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		prvCheckDelayedTasks();
1513:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
1514:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	else
1515:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
1516:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		++uxMissedTicks;
1517:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1518:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		/* The tick hook gets called at regular intervals, even if the
1519:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		scheduler is locked. */
1520:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
1521:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
1522:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			vApplicationTickHook();
1523:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
1524:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		#endif
1525:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
1526:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1527:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	#if ( configUSE_TICK_HOOK == 1 )
1528:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
1529:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		/* Guard against the tick hook being called when the missed tick
1530:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		count is being unwound (when the scheduler is being unlocked. */
1531:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( uxMissedTicks == ( unsigned portBASE_TYPE ) 0U )
1532:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
1533:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			vApplicationTickHook();
1534:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
1535:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
1536:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	#endif
1537:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1538:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	traceTASK_INCREMENT_TICK( xTickCount );
1539:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** }
1540:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*-----------------------------------------------------------*/
1541:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1542:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #if ( ( INCLUDE_vTaskCleanUpResources == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) )
1543:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1544:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	void vTaskCleanUpResources( void )
1545:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
1546:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	unsigned short usQueue;
1547:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	volatile tskTCB *pxTCB;
1548:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1549:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		usQueue = ( unsigned short ) uxTopUsedPriority + ( unsigned short ) 1;
1550:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1551:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		/* Remove any TCB's from the ready queues. */
1552:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		do
1553:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
1554:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			usQueue--;
1555:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1556:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ usQueue ] ) ) == pdFALSE )
1557:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			{
1558:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxTCB, &( pxReadyTasksLists[ usQueue ] ) );
1559:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				vListRemove( ( xListItem * ) &( pxTCB->xGenericListItem ) );
1560:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1561:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				prvDeleteTCB( ( tskTCB * ) pxTCB );
1562:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			}
1563:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}while( usQueue > ( unsigned short ) tskIDLE_PRIORITY );
1564:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1565:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		/* Remove any TCB's from the delayed queue. */
1566:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		while( listLIST_IS_EMPTY( &xDelayedTaskList1 ) == pdFALSE )
1567:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
1568:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxTCB, &xDelayedTaskList1 );
1569:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			vListRemove( ( xListItem * ) &( pxTCB->xGenericListItem ) );
1570:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1571:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			prvDeleteTCB( ( tskTCB * ) pxTCB );
1572:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
1573:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1574:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		/* Remove any TCB's from the overflow delayed queue. */
1575:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		while( listLIST_IS_EMPTY( &xDelayedTaskList2 ) == pdFALSE )
1576:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
1577:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxTCB, &xDelayedTaskList2 );
1578:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			vListRemove( ( xListItem * ) &( pxTCB->xGenericListItem ) );
1579:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1580:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			prvDeleteTCB( ( tskTCB * ) pxTCB );
1581:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
1582:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1583:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		while( listLIST_IS_EMPTY( &xSuspendedTaskList ) == pdFALSE )
1584:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
1585:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxTCB, &xSuspendedTaskList );
1586:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			vListRemove( ( xListItem * ) &( pxTCB->xGenericListItem ) );
1587:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1588:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			prvDeleteTCB( ( tskTCB * ) pxTCB );
1589:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
1590:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
1591:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1592:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #endif
1593:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*-----------------------------------------------------------*/
1594:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1595:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
1596:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1597:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	void vTaskSetApplicationTaskTag( xTaskHandle xTask, pdTASK_HOOK_CODE pxHookFunction )
1598:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
1599:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	tskTCB *xTCB;
1600:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1601:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		/* If xTask is NULL then we are setting our own task hook. */
1602:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( xTask == NULL )
1603:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
1604:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			xTCB = ( tskTCB * ) pxCurrentTCB;
1605:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
1606:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		else
1607:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
1608:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			xTCB = ( tskTCB * ) xTask;
1609:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
1610:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1611:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
1612:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		the value can be accessed from an interrupt. */
1613:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		taskENTER_CRITICAL();
1614:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			xTCB->pxTaskTag = pxHookFunction;
1615:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		taskEXIT_CRITICAL();
1616:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
1617:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1618:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #endif
1619:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*-----------------------------------------------------------*/
1620:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1621:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
1622:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1623:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	pdTASK_HOOK_CODE xTaskGetApplicationTaskTag( xTaskHandle xTask )
1624:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
1625:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	tskTCB *xTCB;
1626:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	pdTASK_HOOK_CODE xReturn;
1627:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1628:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		/* If xTask is NULL then we are setting our own task hook. */
1629:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( xTask == NULL )
1630:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
1631:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			xTCB = ( tskTCB * ) pxCurrentTCB;
1632:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
1633:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		else
1634:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
1635:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			xTCB = ( tskTCB * ) xTask;
1636:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
1637:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1638:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
1639:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		the value can be accessed from an interrupt. */
1640:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		taskENTER_CRITICAL();
1641:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			xReturn = xTCB->pxTaskTag;
1642:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		taskEXIT_CRITICAL();
1643:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1644:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		return xReturn;
1645:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
1646:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1647:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #endif
1648:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*-----------------------------------------------------------*/
1649:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1650:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
1651:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1652:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	portBASE_TYPE xTaskCallApplicationTaskHook( xTaskHandle xTask, void *pvParameter )
1653:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
1654:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	tskTCB *xTCB;
1655:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	portBASE_TYPE xReturn;
1656:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1657:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		/* If xTask is NULL then we are calling our own task hook. */
1658:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( xTask == NULL )
1659:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
1660:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			xTCB = ( tskTCB * ) pxCurrentTCB;
1661:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
1662:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		else
1663:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
1664:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			xTCB = ( tskTCB * ) xTask;
1665:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
1666:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1667:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( xTCB->pxTaskTag != NULL )
1668:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
1669:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			xReturn = xTCB->pxTaskTag( pvParameter );
1670:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
1671:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		else
1672:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
1673:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			xReturn = pdFAIL;
1674:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
1675:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1676:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		return xReturn;
1677:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
1678:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1679:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #endif
1680:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*-----------------------------------------------------------*/
1681:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1682:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** void vTaskSwitchContext( void )
1683:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** {
1684:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	if( uxSchedulerSuspended != ( unsigned portBASE_TYPE ) pdFALSE )
1685:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
1686:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		/* The scheduler is currently suspended - do not allow a context
1687:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		switch. */
1688:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		xMissedYield = pdTRUE;
1689:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
1690:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	else
1691:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
1692:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		traceTASK_SWITCHED_OUT();
1693:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	
1694:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
1695:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
1696:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			unsigned long ulTempCounter;
1697:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			
1698:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
1699:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					portALT_GET_RUN_TIME_COUNTER_VALUE( ulTempCounter );
1700:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				#else
1701:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					ulTempCounter = portGET_RUN_TIME_COUNTER_VALUE();
1702:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				#endif
1703:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	
1704:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				/* Add the amount of time the task has been running to the accumulated
1705:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				time so far.  The time the task started running was stored in
1706:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				ulTaskSwitchedInTime.  Note that there is no overflow protection here
1707:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				so count values are only valid until the timer overflows.  Generally
1708:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				this will be about 1 hour assuming a 1uS timer increment. */
1709:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				pxCurrentTCB->ulRunTimeCounter += ( ulTempCounter - ulTaskSwitchedInTime );
1710:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				ulTaskSwitchedInTime = ulTempCounter;
1711:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
1712:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		#endif
1713:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	
1714:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		taskFIRST_CHECK_FOR_STACK_OVERFLOW();
1715:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		taskSECOND_CHECK_FOR_STACK_OVERFLOW();
1716:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	
1717:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		/* Find the highest priority queue that contains ready tasks. */
1718:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopReadyPriority ] ) ) )
1719:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
1720:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			configASSERT( uxTopReadyPriority );
1721:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			--uxTopReadyPriority;
1722:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
1723:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	
1724:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		/* listGET_OWNER_OF_NEXT_ENTRY walks through the list, so the tasks of the
1725:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		same priority get an equal share of the processor time. */
1726:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopReadyPriority ] ) );
1727:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	
1728:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		traceTASK_SWITCHED_IN();
1729:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		vWriteTraceToBuffer();
1730:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
1731:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** }
1732:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*-----------------------------------------------------------*/
1733:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1734:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** void vTaskPlaceOnEventList( const xList * const pxEventList, portTickType xTicksToWait )
1735:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** {
1736:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** portTickType xTimeToWake;
1737:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1738:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	configASSERT( pxEventList );
1739:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1740:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH INTERRUPTS DISABLED OR THE
1741:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	SCHEDULER SUSPENDED. */
1742:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1743:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	/* Place the event list item of the TCB in the appropriate event list.
1744:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	This is placed in the list in priority order so the highest priority task
1745:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	is the first to be woken by the event. */
1746:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	vListInsert( ( xList * ) pxEventList, ( xListItem * ) &( pxCurrentTCB->xEventListItem ) );
1747:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1748:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	/* We must remove ourselves from the ready list before adding ourselves
1749:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	to the blocked list as the same list item is used for both lists.  We have
1750:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	exclusive access to the ready lists as the scheduler is locked. */
1751:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	vListRemove( ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) );
1752:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1753:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1754:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
1755:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
1756:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( xTicksToWait == portMAX_DELAY )
1757:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
1758:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			/* Add ourselves to the suspended task list instead of a delayed task
1759:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			list to ensure we are not woken by a timing event.  We will block
1760:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			indefinitely. */
1761:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			vListInsertEnd( ( xList * ) &xSuspendedTaskList, ( xListItem * ) &( pxCurrentTCB->xGenericListIt
1762:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
1763:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		else
1764:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
1765:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			/* Calculate the time at which the task should be woken if the event does
1766:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			not occur.  This may overflow but this doesn't matter. */
1767:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			xTimeToWake = xTickCount + xTicksToWait;
1768:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			prvAddCurrentTaskToDelayedList( xTimeToWake );
1769:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
1770:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
1771:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	#else
1772:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
1773:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			/* Calculate the time at which the task should be woken if the event does
1774:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			not occur.  This may overflow but this doesn't matter. */
1775:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			xTimeToWake = xTickCount + xTicksToWait;
1776:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			prvAddCurrentTaskToDelayedList( xTimeToWake );
1777:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
1778:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	#endif
1779:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** }
1780:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*-----------------------------------------------------------*/
1781:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1782:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #if configUSE_TIMERS == 1
1783:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1784:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	void vTaskPlaceOnEventListRestricted( const xList * const pxEventList, portTickType xTicksToWait )
1785:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
1786:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	portTickType xTimeToWake;
1787:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1788:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		configASSERT( pxEventList );
1789:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1790:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		/* This function should not be called by application code hence the
1791:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		'Restricted' in its name.  It is not part of the public API.  It is
1792:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		designed for use by kernel code, and has special calling requirements -
1793:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		it should be called from a critical section. */
1794:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1795:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	
1796:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		/* Place the event list item of the TCB in the appropriate event list.
1797:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		In this case it is assume that this is the only task that is going to
1798:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		be waiting on this event list, so the faster vListInsertEnd() function
1799:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		can be used in place of vListInsert. */
1800:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		vListInsertEnd( ( xList * ) pxEventList, ( xListItem * ) &( pxCurrentTCB->xEventListItem ) );
1801:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1802:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		/* We must remove this task from the ready list before adding it to the
1803:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		blocked list as the same list item is used for both lists.  This
1804:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		function is called form a critical section. */
1805:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		vListRemove( ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) );
1806:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1807:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		/* Calculate the time at which the task should be woken if the event does
1808:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		not occur.  This may overflow but this doesn't matter. */
1809:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		xTimeToWake = xTickCount + xTicksToWait;
1810:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		prvAddCurrentTaskToDelayedList( xTimeToWake );
1811:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
1812:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	
1813:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #endif /* configUSE_TIMERS */
1814:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*-----------------------------------------------------------*/
1815:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1816:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** signed portBASE_TYPE xTaskRemoveFromEventList( const xList * const pxEventList )
1817:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** {
1818:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** tskTCB *pxUnblockedTCB;
1819:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** portBASE_TYPE xReturn;
1820:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1821:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH INTERRUPTS DISABLED OR THE
1822:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	SCHEDULER SUSPENDED.  It can also be called from within an ISR. */
1823:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1824:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	/* The event list is sorted in priority order, so we can remove the
1825:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	first in the list, remove the TCB from the delayed list, and add
1826:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	it to the ready list.
1827:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1828:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	If an event is for a queue that is locked then this function will never
1829:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	get called - the lock count on the queue will get modified instead.  This
1830:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	means we can always expect exclusive access to the event list here.
1831:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	
1832:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	This function assumes that a check has already been made to ensure that
1833:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	pxEventList is not empty. */
1834:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	pxUnblockedTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
1835:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	configASSERT( pxUnblockedTCB );
1836:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	vListRemove( &( pxUnblockedTCB->xEventListItem ) );
1837:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1838:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	if( uxSchedulerSuspended == ( unsigned portBASE_TYPE ) pdFALSE )
1839:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
1840:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		vListRemove( &( pxUnblockedTCB->xGenericListItem ) );
1841:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		prvAddTaskToReadyQueue( pxUnblockedTCB );
1842:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
1843:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	else
1844:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
1845:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		/* We cannot access the delayed or ready lists, so will hold this
1846:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		task pending until the scheduler is resumed. */
1847:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		vListInsertEnd( ( xList * ) &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
1848:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
1849:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1850:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	if( pxUnblockedTCB->uxPriority >= pxCurrentTCB->uxPriority )
1851:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
1852:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		/* Return true if the task removed from the event list has
1853:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		a higher priority than the calling task.  This allows
1854:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		the calling task to know if it should force a context
1855:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		switch now. */
1856:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		xReturn = pdTRUE;
1857:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
1858:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	else
1859:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
1860:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		xReturn = pdFALSE;
1861:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
1862:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1863:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	return xReturn;
1864:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** }
1865:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*-----------------------------------------------------------*/
1866:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1867:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** void vTaskSetTimeOutState( xTimeOutType * const pxTimeOut )
1868:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** {
1869:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	configASSERT( pxTimeOut );
1870:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
1871:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
1872:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** }
1873:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*-----------------------------------------------------------*/
1874:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1875:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** portBASE_TYPE xTaskCheckForTimeOut( xTimeOutType * const pxTimeOut, portTickType * const pxTicksToW
1876:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** {
1877:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** portBASE_TYPE xReturn;
1878:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1879:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	configASSERT( pxTimeOut );
1880:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	configASSERT( pxTicksToWait );
1881:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1882:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	taskENTER_CRITICAL();
1883:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
1884:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		#if ( INCLUDE_vTaskSuspend == 1 )
1885:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			/* If INCLUDE_vTaskSuspend is set to 1 and the block time specified is
1886:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			the maximum block time then the task should block indefinitely, and
1887:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			therefore never time out. */
1888:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( *pxTicksToWait == portMAX_DELAY )
1889:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			{
1890:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				xReturn = pdFALSE;
1891:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			}
1892:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			else /* We are not blocking indefinitely, perform the checks below. */
1893:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		#endif
1894:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1895:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( ( portTickType ) xTickCount >= ( portTi
1896:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
1897:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			/* The tick count is greater than the time at which vTaskSetTimeout()
1898:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			was called, but has also overflowed since vTaskSetTimeOut() was called.
1899:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			It must have wrapped all the way around and gone past us again. This
1900:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			passed since vTaskSetTimeout() was called. */
1901:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			xReturn = pdTRUE;
1902:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
1903:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		else if( ( ( portTickType ) ( ( portTickType ) xTickCount - ( portTickType ) pxTimeOut->xTimeOnEn
1904:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
1905:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			/* Not a genuine timeout. Adjust parameters for time remaining. */
1906:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			*pxTicksToWait -= ( ( portTickType ) xTickCount - ( portTickType ) pxTimeOut->xTimeOnEntering );
1907:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			vTaskSetTimeOutState( pxTimeOut );
1908:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			xReturn = pdFALSE;
1909:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
1910:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		else
1911:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
1912:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			xReturn = pdTRUE;
1913:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
1914:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
1915:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	taskEXIT_CRITICAL();
1916:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1917:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	return xReturn;
1918:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** }
1919:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*-----------------------------------------------------------*/
1920:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1921:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** void vTaskMissedYield( void )
1922:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** {
1923:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	xMissedYield = pdTRUE;
1924:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** }
1925:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1926:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*
1927:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * -----------------------------------------------------------
1928:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * The Idle task.
1929:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * ----------------------------------------------------------
1930:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  *
1931:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * The portTASK_FUNCTION() macro is used to allow port/compiler specific
1932:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
1933:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  *
1934:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * void prvIdleTask( void *pvParameters );
1935:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  *
1936:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  */
1937:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** static portTASK_FUNCTION( prvIdleTask, pvParameters )
1938:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** {
  27              		.loc 1 1938 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 36
  35              		.cfi_offset 4, -36
  36              		.cfi_offset 5, -32
  37              		.cfi_offset 6, -28
  38              		.cfi_offset 7, -24
  39              		.cfi_offset 8, -20
  40              		.cfi_offset 9, -16
  41              		.cfi_offset 10, -12
  42              		.cfi_offset 11, -8
  43              		.cfi_offset 14, -4
  44 0004 7E4C     		ldr	r4, .L61
  45 0006 DFF81C82 		ldr	r8, .L61+36
  46 000a 7E4D     		ldr	r5, .L61+4
  47 000c 7E4F     		ldr	r7, .L61+8
  48 000e DFF82892 		ldr	r9, .L61+56
  49 0012 83B0     		sub	sp, sp, #12
  50              	.LCFI1:
  51              		.cfi_def_cfa_offset 48
  52 0014 03E0     		b	.L55
  53              	.LVL1:
  54              	.L3:
1939:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	/* Stop warnings. */
1940:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	( void ) pvParameters;
1941:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1942:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	for( ;; )
1943:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
1944:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		/* See if any tasks have been deleted. */
1945:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		prvCheckTasksWaitingTermination();
1946:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1947:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		#if ( configUSE_PREEMPTION == 0 )
1948:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
1949:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			/* If we are not using preemption we keep forcing a task switch to
1950:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			see if any other task has become available.  If we are using
1951:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			preemption we don't need to do this as any task becoming available
1952:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			will automatically get the processor anyway. */
1953:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			taskYIELD();
1954:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
1955:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		#endif
1956:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1957:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) )
1958:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
1959:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			/* When using preemption tasks of equal priority will be
1960:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			timesliced.  If a task that is sharing the idle priority is ready
1961:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			to run then the idle task should yield before the end of the
1962:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			timeslice.
1963:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1964:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			A critical region is not required here as we are just reading from
1965:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			the list, and an occasional incorrect value will not matter.  If
1966:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			the ready list at the idle priority contains more than one task
1967:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			then a task other than the idle task is ready to execute. */
1968:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( unsigned portBASE_
  55              		.loc 1 1968 0
  56 0016 2B68     		ldr	r3, [r5, #0]
  57 0018 012B     		cmp	r3, #1
  58 001a 00F2C080 		bhi	.L60
  59              	.L55:
  60              	.LBB35:
  61              	.LBB36:
1969:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			{
1970:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				taskYIELD();
1971:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			}
1972:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
1973:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		#endif
1974:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1975:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		#if ( configUSE_IDLE_HOOK == 1 )
1976:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
1977:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			extern void vApplicationIdleHook( void );
1978:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1979:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			/* Call the user defined function from within the idle task.  This
1980:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			allows the application designer to add background functionality
1981:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			without the overhead of a separate task.
1982:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
1983:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			CALL A FUNCTION THAT MIGHT BLOCK. */
1984:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			vApplicationIdleHook();
1985:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
1986:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		#endif
1987:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
1988:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** } /*lint !e715 pvParameters is not accessed but all task functions require the same prototype. */
1989:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1990:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1991:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1992:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1993:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1994:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1995:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
1996:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*-----------------------------------------------------------
1997:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  * File private functions documented at the top of the file.
1998:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****  *----------------------------------------------------------*/
1999:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2000:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2001:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2002:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** static void prvInitialiseTCBVariables( tskTCB *pxTCB, const signed char * const pcName, unsigned po
2003:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** {
2004:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	/* Store the function name in the TCB. */
2005:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	#if configMAX_TASK_NAME_LEN > 1
2006:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
2007:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		/* Don't bring strncpy into the build unnecessarily. */
2008:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		strncpy( ( char * ) pxTCB->pcTaskName, ( const char * ) pcName, ( unsigned short ) configMAX_TASK
2009:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
2010:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	#endif
2011:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	pxTCB->pcTaskName[ ( unsigned short ) configMAX_TASK_NAME_LEN - ( unsigned short ) 1 ] = ( signed 
2012:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2013:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	/* This is used as an array index so must ensure it's not too large.  First
2014:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	remove the privilege bit if one is present. */
2015:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	if( uxPriority >= configMAX_PRIORITIES )
2016:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
2017:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		uxPriority = configMAX_PRIORITIES - ( unsigned portBASE_TYPE ) 1U;
2018:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
2019:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2020:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	pxTCB->uxPriority = uxPriority;
2021:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
2022:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
2023:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		pxTCB->uxBasePriority = uxPriority;
2024:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
2025:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	#endif
2026:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2027:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	vListInitialiseItem( &( pxTCB->xGenericListItem ) );
2028:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	vListInitialiseItem( &( pxTCB->xEventListItem ) );
2029:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2030:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	/* Set the pxTCB as a link back from the xListItem.  This is so we can get
2031:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	back to	the containing TCB from a generic item in a list. */
2032:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxTCB->xGenericListItem ), pxTCB );
2033:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2034:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	/* Event lists are always in priority order. */
2035:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), configMAX_PRIORITIES - ( portTickType ) uxPri
2036:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxTCB->xEventListItem ), pxTCB );
2037:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2038:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
2039:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
2040:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		pxTCB->uxCriticalNesting = ( unsigned portBASE_TYPE ) 0;
2041:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
2042:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	#endif
2043:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2044:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
2045:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
2046:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		pxTCB->pxTaskTag = NULL;
2047:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
2048:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	#endif
2049:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2050:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	#if ( configGENERATE_RUN_TIME_STATS == 1 )
2051:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
2052:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		pxTCB->ulRunTimeCounter = 0UL;
2053:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
2054:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	#endif
2055:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2056:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
2057:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
2058:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxTCB->xMPUSettings ), xRegions, pxTCB->pxStack, usStackDepth );
2059:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
2060:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	#else
2061:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
2062:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		( void ) xRegions;
2063:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		( void ) usStackDepth;
2064:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
2065:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	#endif
2066:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** }
2067:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*-----------------------------------------------------------*/
2068:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2069:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #if ( portUSING_MPU_WRAPPERS == 1 )
2070:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2071:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	void vTaskAllocateMPURegions( xTaskHandle xTaskToModify, const xMemoryRegion * const xRegions )
2072:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
2073:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	tskTCB *pxTCB;
2074:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	
2075:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( xTaskToModify == pxCurrentTCB )
2076:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
2077:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			xTaskToModify = NULL;
2078:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
2079:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2080:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		/* If null is passed in here then we are deleting ourselves. */
2081:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTaskToModify );
2082:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2083:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c ****         vPortStoreTaskMPUSettings( &( pxTCB->xMPUSettings ), xRegions, NULL, 0 );
2084:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
2085:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	/*-----------------------------------------------------------*/
2086:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #endif
2087:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2088:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** static void prvInitialiseTaskLists( void )
2089:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** {
2090:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** unsigned portBASE_TYPE uxPriority;
2091:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2092:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	for( uxPriority = ( unsigned portBASE_TYPE ) 0U; uxPriority < configMAX_PRIORITIES; uxPriority++ )
2093:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
2094:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		vListInitialise( ( xList * ) &( pxReadyTasksLists[ uxPriority ] ) );
2095:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
2096:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2097:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	vListInitialise( ( xList * ) &xDelayedTaskList1 );
2098:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	vListInitialise( ( xList * ) &xDelayedTaskList2 );
2099:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	vListInitialise( ( xList * ) &xPendingReadyList );
2100:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2101:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
2102:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
2103:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		vListInitialise( ( xList * ) &xTasksWaitingTermination );
2104:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
2105:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	#endif
2106:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2107:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
2108:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
2109:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		vListInitialise( ( xList * ) &xSuspendedTaskList );
2110:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
2111:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	#endif
2112:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2113:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
2114:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	using list2. */
2115:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	pxDelayedTaskList = &xDelayedTaskList1;
2116:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
2117:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** }
2118:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*-----------------------------------------------------------*/
2119:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2120:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** static void prvCheckTasksWaitingTermination( void )
2121:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** {
2122:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
2123:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
2124:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		portBASE_TYPE xListIsEmpty;
2125:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2126:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		/* ucTasksDeleted is used to prevent vTaskSuspendAll() being called
2127:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		too often in the idle task. */
2128:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( uxTasksDeleted > ( unsigned portBASE_TYPE ) 0 )
  62              		.loc 1 2128 0
  63 001e 7B49     		ldr	r1, .L61+12
  64 0020 0B68     		ldr	r3, [r1, #0]
  65 0022 002B     		cmp	r3, #0
  66 0024 F7D0     		beq	.L3
  67              	.LBB37:
  68              	.LBB38:
1157:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	++uxSchedulerSuspended;
  69              		.loc 1 1157 0
  70 0026 7A4A     		ldr	r2, .L61+16
  71              	.LBE38:
  72              	.LBE37:
  73              	.LBB40:
  74              	.LBB41:
1175:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	taskENTER_CRITICAL();
  75              		.loc 1 1175 0
  76 0028 7A49     		ldr	r1, .L61+20
  77              	.LBE41:
  78              	.LBE40:
  79              	.LBB54:
  80              	.LBB39:
1157:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	++uxSchedulerSuspended;
  81              		.loc 1 1157 0
  82 002a 1368     		ldr	r3, [r2, #0]
  83 002c 0133     		adds	r3, r3, #1
  84 002e 1360     		str	r3, [r2, #0]
  85              	.LBE39:
  86              	.LBE54:
2129:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
2130:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			vTaskSuspendAll();
2131:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				xListIsEmpty = listLIST_IS_EMPTY( &xTasksWaitingTermination );
  87              		.loc 1 2131 0
  88 0030 794B     		ldr	r3, .L61+24
  89 0032 1B68     		ldr	r3, [r3, #0]
  90 0034 0193     		str	r3, [sp, #4]
  91              	.LVL2:
  92              	.LBB55:
  93              	.LBB52:
1175:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	taskENTER_CRITICAL();
  94              		.loc 1 1175 0
  95 0036 8847     		blx	r1
  96              	.LVL3:
1177:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		--uxSchedulerSuspended;
  97              		.loc 1 1177 0
  98 0038 754A     		ldr	r2, .L61+16
  99 003a 1368     		ldr	r3, [r2, #0]
 100 003c 013B     		subs	r3, r3, #1
 101 003e 1360     		str	r3, [r2, #0]
1179:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( uxSchedulerSuspended == ( unsigned portBASE_TYPE ) pdFALSE )
 102              		.loc 1 1179 0
 103 0040 1368     		ldr	r3, [r2, #0]
 104 0042 002B     		cmp	r3, #0
 105 0044 40F08A80 		bne	.L5
1181:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( uxCurrentNumberOfTasks > ( unsigned portBASE_TYPE ) 0 )
 106              		.loc 1 1181 0
 107 0048 7449     		ldr	r1, .L61+28
 108 004a 0A68     		ldr	r2, [r1, #0]
 109 004c 002A     		cmp	r2, #0
 110 004e 00F08580 		beq	.L5
 111 0052 9B46     		mov	fp, r3
 112 0054 1FE0     		b	.L56
 113              	.LVL4:
 114              	.L10:
 115              	.LBB42:
1189:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					pxTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY(  ( ( xList * ) &xPendingReadyList ) );
 116              		.loc 1 1189 0
 117 0056 724B     		ldr	r3, .L61+32
 118 0058 DB68     		ldr	r3, [r3, #12]
 119 005a DE68     		ldr	r6, [r3, #12]
 120              	.LVL5:
1190:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					vListRemove( &( pxTCB->xEventListItem ) );
 121              		.loc 1 1190 0
 122 005c 06F11800 		add	r0, r6, #24
1191:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					vListRemove( &( pxTCB->xGenericListItem ) );
 123              		.loc 1 1191 0
 124 0060 06F1040A 		add	sl, r6, #4
1190:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					vListRemove( &( pxTCB->xEventListItem ) );
 125              		.loc 1 1190 0
 126 0064 A047     		blx	r4
 127              	.LVL6:
1191:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					vListRemove( &( pxTCB->xGenericListItem ) );
 128              		.loc 1 1191 0
 129 0066 5046     		mov	r0, sl
 130 0068 A047     		blx	r4
 131              	.LVL7:
1192:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					prvAddTaskToReadyQueue( pxTCB );
 132              		.loc 1 1192 0
 133 006a F36A     		ldr	r3, [r6, #44]
 134 006c D8F80020 		ldr	r2, [r8, #0]
 135 0070 9342     		cmp	r3, r2
 136 0072 88BF     		it	hi
 137 0074 6B4A     		ldrhi	r2, .L61+36
 138 0076 03EB8300 		add	r0, r3, r3, lsl #2
 139 007a 05EB8000 		add	r0, r5, r0, lsl #2
 140 007e 5146     		mov	r1, sl
 141 0080 88BF     		it	hi
 142 0082 1360     		strhi	r3, [r2, #0]
 143 0084 B847     		blx	r7
 144              	.LVL8:
1196:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 145              		.loc 1 1196 0
 146 0086 684A     		ldr	r2, .L61+40
 147 0088 1368     		ldr	r3, [r2, #0]
 148 008a F26A     		ldr	r2, [r6, #44]
 149 008c DB6A     		ldr	r3, [r3, #44]
1198:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 						xYieldRequired = pdTRUE;
 150              		.loc 1 1198 0
 151 008e 9A42     		cmp	r2, r3
 152 0090 28BF     		it	cs
 153 0092 4FF0010B 		movcs	fp, #1
 154              	.LVL9:
 155              	.L56:
1187:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				while( listLIST_IS_EMPTY( ( xList * ) &xPendingReadyList ) == pdFALSE )
 156              		.loc 1 1187 0
 157 0096 6249     		ldr	r1, .L61+32
 158 0098 0B68     		ldr	r3, [r1, #0]
 159 009a 002B     		cmp	r3, #0
 160 009c DBD1     		bne	.L10
1205:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				if( uxMissedTicks > ( unsigned portBASE_TYPE ) 0 )
 161              		.loc 1 1205 0
 162 009e 634A     		ldr	r2, .L61+44
 163 00a0 1368     		ldr	r3, [r2, #0]
 164 00a2 002B     		cmp	r3, #0
 165 00a4 00F0A380 		beq	.L11
1207:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					while( uxMissedTicks > ( unsigned portBASE_TYPE ) 0 )
 166              		.loc 1 1207 0
 167 00a8 1368     		ldr	r3, [r2, #0]
 168 00aa 002B     		cmp	r3, #0
 169 00ac 51D0     		beq	.L25
 170              	.L44:
 171              	.LBB43:
 172              	.LBB44:
1474:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	if( uxSchedulerSuspended == ( unsigned portBASE_TYPE ) pdFALSE )
 173              		.loc 1 1474 0
 174 00ae 5849     		ldr	r1, .L61+16
 175 00b0 0B68     		ldr	r3, [r1, #0]
 176 00b2 002B     		cmp	r3, #0
 177 00b4 76D1     		bne	.L13
1476:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		++xTickCount;
 178              		.loc 1 1476 0
 179 00b6 D9F80030 		ldr	r3, [r9, #0]
 180 00ba 0133     		adds	r3, r3, #1
 181 00bc C9F80030 		str	r3, [r9, #0]
1477:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( xTickCount == ( portTickType ) 0 )
 182              		.loc 1 1477 0
 183 00c0 D9F80030 		ldr	r3, [r9, #0]
 184 00c4 002B     		cmp	r3, #0
 185 00c6 72D0     		beq	.L14
 186 00c8 594A     		ldr	r2, .L61+48
 187 00ca 1368     		ldr	r3, [r2, #0]
 188              	.L15:
 189              	.LBB45:
1512:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		prvCheckDelayedTasks();
 190              		.loc 1 1512 0
 191 00cc D9F80020 		ldr	r2, [r9, #0]
 192 00d0 9A42     		cmp	r2, r3
 193 00d2 37D3     		bcc	.L17
 194 00d4 5749     		ldr	r1, .L61+52
 195 00d6 0B68     		ldr	r3, [r1, #0]
 196 00d8 1B68     		ldr	r3, [r3, #0]
 197 00da 002B     		cmp	r3, #0
 198 00dc 2ED0     		beq	.L18
 199 00de 0B68     		ldr	r3, [r1, #0]
 200 00e0 DB68     		ldr	r3, [r3, #12]
 201 00e2 DE68     		ldr	r6, [r3, #12]
 202              	.LVL10:
 203 00e4 544B     		ldr	r3, .L61+56
 204 00e6 1A68     		ldr	r2, [r3, #0]
 205 00e8 7368     		ldr	r3, [r6, #4]
 206              	.LVL11:
 207 00ea 9342     		cmp	r3, r2
 208 00ec 09D9     		bls	.L45
 209 00ee 73E0     		b	.L19
 210              	.LVL12:
 211              	.L57:
 212 00f0 504B     		ldr	r3, .L61+52
 213 00f2 1B68     		ldr	r3, [r3, #0]
 214 00f4 DB68     		ldr	r3, [r3, #12]
 215 00f6 DE68     		ldr	r6, [r3, #12]
 216              	.LVL13:
 217 00f8 D9F80020 		ldr	r2, [r9, #0]
 218 00fc 7368     		ldr	r3, [r6, #4]
 219              	.LVL14:
 220 00fe 9342     		cmp	r3, r2
 221 0100 6AD8     		bhi	.L19
 222              	.L45:
 223 0102 06F1040A 		add	sl, r6, #4
 224 0106 5046     		mov	r0, sl
 225 0108 A047     		blx	r4
 226              	.LVL15:
 227 010a B36A     		ldr	r3, [r6, #40]
 228 010c 06F11800 		add	r0, r6, #24
 229 0110 0BB1     		cbz	r3, .L22
 230 0112 3B4B     		ldr	r3, .L61
 231 0114 9847     		blx	r3
 232              	.LVL16:
 233              	.L22:
 234 0116 F36A     		ldr	r3, [r6, #44]
 235 0118 D8F80020 		ldr	r2, [r8, #0]
 236 011c 9342     		cmp	r3, r2
 237 011e 03EB8300 		add	r0, r3, r3, lsl #2
 238 0122 88BF     		it	hi
 239 0124 3F4A     		ldrhi	r2, .L61+36
 240 0126 05EB8000 		add	r0, r5, r0, lsl #2
 241 012a 5146     		mov	r1, sl
 242 012c 88BF     		it	hi
 243 012e 1360     		strhi	r3, [r2, #0]
 244 0130 B847     		blx	r7
 245              	.LVL17:
 246 0132 404A     		ldr	r2, .L61+52
 247 0134 1368     		ldr	r3, [r2, #0]
 248 0136 1B68     		ldr	r3, [r3, #0]
 249 0138 002B     		cmp	r3, #0
 250 013a D9D1     		bne	.L57
 251              	.LVL18:
 252              	.L18:
 253 013c 3C4A     		ldr	r2, .L61+48
 254 013e 4FF0FF33 		mov	r3, #-1
 255 0142 1360     		str	r3, [r2, #0]
 256              	.L17:
 257              	.LBE45:
 258              	.LBE44:
 259              	.LBE43:
1210:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 						--uxMissedTicks;
 260              		.loc 1 1210 0
 261 0144 394A     		ldr	r2, .L61+44
 262 0146 1368     		ldr	r3, [r2, #0]
 263 0148 013B     		subs	r3, r3, #1
 264 014a 1360     		str	r3, [r2, #0]
1207:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					while( uxMissedTicks > ( unsigned portBASE_TYPE ) 0 )
 265              		.loc 1 1207 0
 266 014c 1368     		ldr	r3, [r2, #0]
 267 014e 002B     		cmp	r3, #0
 268 0150 ADD1     		bne	.L44
 269              	.L25:
 270              	.LVL19:
1226:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					xMissedYield = pdFALSE;
 271              		.loc 1 1226 0
 272 0152 3A49     		ldr	r1, .L61+60
1227:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					portYIELD_WITHIN_API();
 273              		.loc 1 1227 0
 274 0154 3A4A     		ldr	r2, .L61+64
1226:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					xMissedYield = pdFALSE;
 275              		.loc 1 1226 0
 276 0156 0023     		movs	r3, #0
 277 0158 0B60     		str	r3, [r1, #0]
1227:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					portYIELD_WITHIN_API();
 278              		.loc 1 1227 0
 279 015a 9047     		blx	r2
 280              	.LVL20:
 281              	.L5:
 282              	.LBE42:
1232:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	taskEXIT_CRITICAL();
 283              		.loc 1 1232 0
 284 015c 394A     		ldr	r2, .L61+68
 285 015e 9047     		blx	r2
 286              	.LVL21:
 287              	.LBE52:
 288              	.LBE55:
2132:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			xTaskResumeAll();
2133:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2134:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( xListIsEmpty == pdFALSE )
 289              		.loc 1 2134 0
 290 0160 019B     		ldr	r3, [sp, #4]
 291 0162 002B     		cmp	r3, #0
 292 0164 3FF457AF 		beq	.L3
 293              	.LBB56:
2135:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			{
2136:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				tskTCB *pxTCB;
2137:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2138:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				taskENTER_CRITICAL();
 294              		.loc 1 2138 0
 295 0168 2A49     		ldr	r1, .L61+20
 296 016a 8847     		blx	r1
 297              	.LVL22:
2139:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				{
2140:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					pxTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY( ( ( xList * ) &xTasksWaitingTermination ) );
 298              		.loc 1 2140 0
 299 016c 2A4A     		ldr	r2, .L61+24
 300 016e D368     		ldr	r3, [r2, #12]
 301 0170 DE68     		ldr	r6, [r3, #12]
 302              	.LVL23:
2141:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					vListRemove( &( pxTCB->xGenericListItem ) );
 303              		.loc 1 2141 0
 304 0172 301D     		adds	r0, r6, #4
 305 0174 A047     		blx	r4
 306              	.LVL24:
2142:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					--uxCurrentNumberOfTasks;
 307              		.loc 1 2142 0
 308 0176 2949     		ldr	r1, .L61+28
2143:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					--uxTasksDeleted;
 309              		.loc 1 2143 0
 310 0178 244A     		ldr	r2, .L61+12
2142:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					--uxCurrentNumberOfTasks;
 311              		.loc 1 2142 0
 312 017a 0B68     		ldr	r3, [r1, #0]
 313 017c 013B     		subs	r3, r3, #1
 314 017e 0B60     		str	r3, [r1, #0]
 315              		.loc 1 2143 0
 316 0180 1368     		ldr	r3, [r2, #0]
 317 0182 013B     		subs	r3, r3, #1
 318 0184 1360     		str	r3, [r2, #0]
2144:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				}
2145:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				taskEXIT_CRITICAL();
 319              		.loc 1 2145 0
 320 0186 2F4B     		ldr	r3, .L61+68
 321 0188 9847     		blx	r3
 322              	.LVL25:
 323              	.LBB57:
 324              	.LBB58:
2146:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2147:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				prvDeleteTCB( pxTCB );
2148:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			}
2149:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
2150:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
2151:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	#endif
2152:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** }
2153:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*-----------------------------------------------------------*/
2154:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2155:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** static void prvAddCurrentTaskToDelayedList( portTickType xTimeToWake )
2156:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** {
2157:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	/* The list item will be inserted in wake time order. */
2158:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xGenericListItem ), xTimeToWake );
2159:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2160:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	if( xTimeToWake < xTickCount )
2161:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
2162:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		/* Wake time has overflowed.  Place this item in the overflow list. */
2163:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		vListInsert( ( xList * ) pxOverflowDelayedTaskList, ( xListItem * ) &( pxCurrentTCB->xGenericList
2164:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
2165:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	else
2166:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
2167:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		/* The wake time has not overflowed, so we can use the current block list. */
2168:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		vListInsert( ( xList * ) pxDelayedTaskList, ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) )
2169:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2170:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		/* If the task entering the blocked state was placed at the head of the
2171:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		list of blocked tasks then xNextTaskUnblockTime needs to be updated
2172:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		too. */
2173:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( xTimeToWake < xNextTaskUnblockTime )
2174:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
2175:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			xNextTaskUnblockTime = xTimeToWake;
2176:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
2177:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
2178:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** }
2179:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*-----------------------------------------------------------*/
2180:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2181:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** static tskTCB *prvAllocateTCBAndStack( unsigned short usStackDepth, portSTACK_TYPE *puxStackBuffer 
2182:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** {
2183:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** tskTCB *pxNewTCB;
2184:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2185:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	/* Allocate space for the TCB.  Where the memory comes from depends on
2186:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	the implementation of the port malloc function. */
2187:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	pxNewTCB = ( tskTCB * ) pvPortMalloc( sizeof( tskTCB ) );
2188:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2189:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	if( pxNewTCB != NULL )
2190:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
2191:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		/* Allocate space for the stack used by the task being created.
2192:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		The base of the stack memory stored in the TCB so the task can
2193:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		be deleted later if required. */
2194:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		pxNewTCB->pxStack = ( portSTACK_TYPE * ) pvPortMallocAligned( ( ( ( size_t )usStackDepth ) * size
2195:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2196:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( pxNewTCB->pxStack == NULL )
2197:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
2198:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			/* Could not allocate the stack.  Delete the allocated TCB. */
2199:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			vPortFree( pxNewTCB );
2200:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxNewTCB = NULL;
2201:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
2202:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		else
2203:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
2204:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			/* Just to help debugging. */
2205:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			memset( pxNewTCB->pxStack, tskSTACK_FILL_BYTE, usStackDepth * sizeof( portSTACK_TYPE ) );
2206:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
2207:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
2208:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2209:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	return pxNewTCB;
2210:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** }
2211:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*-----------------------------------------------------------*/
2212:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2213:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2214:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2215:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	static void prvListTaskWithinSingleList( const signed char *pcWriteBuffer, xList *pxList, signed c
2216:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
2217:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	volatile tskTCB *pxNextTCB, *pxFirstTCB;
2218:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	unsigned short usStackRemaining;
2219:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2220:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		/* Write the details of all the TCB's in pxList into the buffer. */
2221:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
2222:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		do
2223:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
2224:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
2225:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			#if ( portSTACK_GROWTH > 0 )
2226:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			{
2227:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				usStackRemaining = usTaskCheckFreeStackSpace( ( unsigned char * ) pxNextTCB->pxEndOfStack );
2228:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			}
2229:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			#else
2230:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			{
2231:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				usStackRemaining = usTaskCheckFreeStackSpace( ( unsigned char * ) pxNextTCB->pxStack );
2232:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			}
2233:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			#endif			
2234:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			
2235:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			sprintf( pcStatusString, ( char * ) "%s\t\t%c\t%u\t%u\t%u\r\n", pxNextTCB->pcTaskName, cStatus, 
2236:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			strcat( ( char * ) pcWriteBuffer, ( char * ) pcStatusString );
2237:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2238:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		} while( pxNextTCB != pxFirstTCB );
2239:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
2240:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2241:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #endif
2242:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*-----------------------------------------------------------*/
2243:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2244:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #if ( configGENERATE_RUN_TIME_STATS == 1 )
2245:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2246:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	static void prvGenerateRunTimeStatsForTasksInList( const signed char *pcWriteBuffer, xList *pxList
2247:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
2248:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	volatile tskTCB *pxNextTCB, *pxFirstTCB;
2249:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	unsigned long ulStatsAsPercentage;
2250:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2251:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		/* Write the run time stats of all the TCB's in pxList into the buffer. */
2252:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
2253:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		do
2254:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
2255:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			/* Get next TCB in from the list. */
2256:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
2257:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2258:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			/* Divide by zero check. */
2259:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( ulTotalRunTime > 0UL )
2260:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			{
2261:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				/* Has the task run at all? */
2262:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				if( pxNextTCB->ulRunTimeCounter == 0 )
2263:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				{
2264:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					/* The task has used no CPU time at all. */
2265:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					sprintf( pcStatsString, ( char * ) "%s\t\t0\t\t0%%\r\n", pxNextTCB->pcTaskName );
2266:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				}
2267:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				else
2268:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				{
2269:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					/* What percentage of the total run time has the task used?
2270:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					This will always be rounded down to the nearest integer.
2271:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					ulTotalRunTime has already been divided by 100. */
2272:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					ulStatsAsPercentage = pxNextTCB->ulRunTimeCounter / ulTotalRunTime;
2273:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2274:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					if( ulStatsAsPercentage > 0UL )
2275:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					{
2276:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
2277:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 						{
2278:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 							sprintf( pcStatsString, ( char * ) "%s\t\t%lu\t\t%lu%%\r\n", pxNextTCB->pcTaskName, pxNextTC
2279:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 						}
2280:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 						#else
2281:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 						{
2282:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
2283:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 							printf() library can be used. */
2284:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 							sprintf( pcStatsString, ( char * ) "%s\t\t%u\t\t%u%%\r\n", pxNextTCB->pcTaskName, ( unsigned
2285:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 						}
2286:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 						#endif
2287:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					}
2288:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					else
2289:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					{
2290:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 						/* If the percentage is zero here then the task has
2291:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 						consumed less than 1% of the total run time. */
2292:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
2293:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 						{
2294:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 							sprintf( pcStatsString, ( char * ) "%s\t\t%lu\t\t<1%%\r\n", pxNextTCB->pcTaskName, pxNextTCB
2295:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 						}
2296:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 						#else
2297:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 						{
2298:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
2299:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 							printf() library can be used. */
2300:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 							sprintf( pcStatsString, ( char * ) "%s\t\t%u\t\t<1%%\r\n", pxNextTCB->pcTaskName, ( unsigned
2301:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 						}
2302:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 						#endif
2303:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					}
2304:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				}
2305:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2306:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				strcat( ( char * ) pcWriteBuffer, ( char * ) pcStatsString );
2307:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			}
2308:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2309:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		} while( pxNextTCB != pxFirstTCB );
2310:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
2311:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2312:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #endif
2313:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*-----------------------------------------------------------*/
2314:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2315:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
2316:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2317:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	static unsigned short usTaskCheckFreeStackSpace( const unsigned char * pucStackByte )
2318:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
2319:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	register unsigned short usCount = 0;
2320:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2321:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		while( *pucStackByte == tskSTACK_FILL_BYTE )
2322:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
2323:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pucStackByte -= portSTACK_GROWTH;
2324:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			usCount++;
2325:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
2326:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2327:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		usCount /= sizeof( portSTACK_TYPE );
2328:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2329:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		return usCount;
2330:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
2331:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2332:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #endif
2333:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*-----------------------------------------------------------*/
2334:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2335:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark == 1 )
2336:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2337:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	unsigned portBASE_TYPE uxTaskGetStackHighWaterMark( xTaskHandle xTask )
2338:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
2339:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	tskTCB *pxTCB;
2340:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	unsigned char *pcEndOfStack;
2341:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	unsigned portBASE_TYPE uxReturn;
2342:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2343:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
2344:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2345:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		#if portSTACK_GROWTH < 0
2346:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
2347:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pcEndOfStack = ( unsigned char * ) pxTCB->pxStack;
2348:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
2349:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		#else
2350:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
2351:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pcEndOfStack = ( unsigned char * ) pxTCB->pxEndOfStack;
2352:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
2353:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		#endif
2354:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2355:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		uxReturn = ( unsigned portBASE_TYPE ) usTaskCheckFreeStackSpace( pcEndOfStack );
2356:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2357:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		return uxReturn;
2358:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
2359:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2360:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #endif
2361:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*-----------------------------------------------------------*/
2362:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2363:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #if ( ( INCLUDE_vTaskDelete == 1 ) || ( INCLUDE_vTaskCleanUpResources == 1 ) )
2364:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2365:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	static void prvDeleteTCB( tskTCB *pxTCB )
2366:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
2367:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		/* Free up the memory allocated by the scheduler for the task.  It is up to
2368:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		the task to free any memory allocated at the application level. */
2369:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		vPortFreeAligned( pxTCB->pxStack );
 325              		.loc 1 2369 0
 326 018a 2F4B     		ldr	r3, .L61+72
 327 018c 306B     		ldr	r0, [r6, #48]
 328 018e 9847     		blx	r3
 329              	.LVL26:
2370:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		vPortFree( pxTCB );
 330              		.loc 1 2370 0
 331 0190 3046     		mov	r0, r6
 332 0192 2D49     		ldr	r1, .L61+72
 333 0194 8847     		blx	r1
 334              	.LVL27:
 335              	.LBE58:
 336              	.LBE57:
 337              	.LBE56:
 338              	.LBE36:
 339              	.LBE35:
1968:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( unsigned portBASE_
 340              		.loc 1 1968 0
 341 0196 2B68     		ldr	r3, [r5, #0]
 342 0198 012B     		cmp	r3, #1
 343 019a 7FF640AF 		bls	.L55
 344              	.LVL28:
 345              	.L60:
1970:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				taskYIELD();
 346              		.loc 1 1970 0
 347 019e 284A     		ldr	r2, .L61+64
 348 01a0 9047     		blx	r2
 349              	.LVL29:
 350 01a2 3CE7     		b	.L55
 351              	.LVL30:
 352              	.L13:
 353              	.LBB61:
 354              	.LBB60:
 355              	.LBB59:
 356              	.LBB53:
 357              	.LBB51:
 358              	.LBB50:
 359              	.LBB49:
1516:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		++uxMissedTicks;
 360              		.loc 1 1516 0
 361 01a4 2149     		ldr	r1, .L61+44
 362 01a6 0B68     		ldr	r3, [r1, #0]
 363 01a8 0133     		adds	r3, r3, #1
 364 01aa 0B60     		str	r3, [r1, #0]
 365 01ac CAE7     		b	.L17
 366              	.L14:
 367              	.LBB46:
1486:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxTemp = pxDelayedTaskList;
 368              		.loc 1 1486 0
 369 01ae 2149     		ldr	r1, .L61+52
 370 01b0 0B68     		ldr	r3, [r1, #0]
 371              	.LVL31:
1487:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxDelayedTaskList = pxOverflowDelayedTaskList;
 372              		.loc 1 1487 0
 373 01b2 2649     		ldr	r1, .L61+76
 374 01b4 0A68     		ldr	r2, [r1, #0]
 375 01b6 1F49     		ldr	r1, .L61+52
 376 01b8 0A60     		str	r2, [r1, #0]
1488:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxOverflowDelayedTaskList = pxTemp;
 377              		.loc 1 1488 0
 378 01ba 244A     		ldr	r2, .L61+76
1489:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			xNumOfOverflows++;
 379              		.loc 1 1489 0
 380 01bc 2449     		ldr	r1, .L61+80
1488:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxOverflowDelayedTaskList = pxTemp;
 381              		.loc 1 1488 0
 382 01be 1360     		str	r3, [r2, #0]
1489:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			xNumOfOverflows++;
 383              		.loc 1 1489 0
 384 01c0 0B68     		ldr	r3, [r1, #0]
 385              	.LVL32:
1491:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 386              		.loc 1 1491 0
 387 01c2 1C4A     		ldr	r2, .L61+52
1489:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			xNumOfOverflows++;
 388              		.loc 1 1489 0
 389 01c4 0133     		adds	r3, r3, #1
 390 01c6 0B60     		str	r3, [r1, #0]
1491:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 391              		.loc 1 1491 0
 392 01c8 1368     		ldr	r3, [r2, #0]
 393 01ca 1B68     		ldr	r3, [r3, #0]
 394 01cc 3BB9     		cbnz	r3, .L16
1498:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				xNextTaskUnblockTime = portMAX_DELAY;
 395              		.loc 1 1498 0
 396 01ce 1849     		ldr	r1, .L61+48
 397 01d0 4FF0FF33 		mov	r3, #-1
 398 01d4 0B60     		str	r3, [r1, #0]
 399 01d6 79E7     		b	.L15
 400              	.LVL33:
 401              	.L19:
 402              	.LBE46:
 403              	.LBB47:
1512:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		prvCheckDelayedTasks();
 404              		.loc 1 1512 0
 405 01d8 1549     		ldr	r1, .L61+48
 406 01da 0B60     		str	r3, [r1, #0]
 407 01dc B2E7     		b	.L17
 408              	.LVL34:
 409              	.L16:
 410              	.LBE47:
 411              	.LBB48:
1506:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				pxTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
 412              		.loc 1 1506 0
 413 01de 154B     		ldr	r3, .L61+52
1507:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( pxTCB->xGenericListItem ) );
 414              		.loc 1 1507 0
 415 01e0 134A     		ldr	r2, .L61+48
1506:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				pxTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
 416              		.loc 1 1506 0
 417 01e2 1B68     		ldr	r3, [r3, #0]
 418 01e4 DB68     		ldr	r3, [r3, #12]
 419 01e6 DB68     		ldr	r3, [r3, #12]
 420              	.LVL35:
1507:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( pxTCB->xGenericListItem ) );
 421              		.loc 1 1507 0
 422 01e8 5B68     		ldr	r3, [r3, #4]
 423              	.LVL36:
 424 01ea 1360     		str	r3, [r2, #0]
 425 01ec 6EE7     		b	.L15
 426              	.LVL37:
 427              	.L11:
 428              	.LBE48:
 429              	.LBE49:
 430              	.LBE50:
1223:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				if( ( xYieldRequired == pdTRUE ) || ( xMissedYield == pdTRUE ) )
 431              		.loc 1 1223 0
 432 01ee BBF1010F 		cmp	fp, #1
 433 01f2 AED0     		beq	.L25
 434 01f4 1149     		ldr	r1, .L61+60
 435 01f6 0B68     		ldr	r3, [r1, #0]
 436 01f8 012B     		cmp	r3, #1
 437 01fa AFD1     		bne	.L5
 438 01fc A9E7     		b	.L25
 439              	.L62:
 440 01fe 00BF     		.align	2
 441              	.L61:
 442 0200 00000000 		.word	vListRemove
 443 0204 00000000 		.word	.LANCHOR6
 444 0208 00000000 		.word	vListInsertEnd
 445 020c 00000000 		.word	.LANCHOR0
 446 0210 00000000 		.word	.LANCHOR1
 447 0214 00000000 		.word	vPortEnterCritical
 448 0218 00000000 		.word	.LANCHOR2
 449 021c 00000000 		.word	.LANCHOR3
 450 0220 00000000 		.word	.LANCHOR4
 451 0224 00000000 		.word	.LANCHOR5
 452 0228 00000000 		.word	.LANCHOR7
 453 022c 00000000 		.word	.LANCHOR8
 454 0230 00000000 		.word	.LANCHOR11
 455 0234 00000000 		.word	.LANCHOR12
 456 0238 00000000 		.word	.LANCHOR10
 457 023c 00000000 		.word	.LANCHOR9
 458 0240 00000000 		.word	vPortYieldFromISR
 459 0244 00000000 		.word	vPortExitCritical
 460 0248 00000000 		.word	vPortFree
 461 024c 00000000 		.word	.LANCHOR13
 462 0250 00000000 		.word	.LANCHOR14
 463              	.LBE51:
 464              	.LBE53:
 465              	.LBE59:
 466              	.LBE60:
 467              	.LBE61:
 468              		.cfi_endproc
 469              	.LFE27:
 471              		.section	.text.xTaskGenericCreate,"ax",%progbits
 472              		.align	2
 473              		.global	xTaskGenericCreate
 474              		.thumb
 475              		.thumb_func
 477              	xTaskGenericCreate:
 478              	.LFB2:
 434:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** {
 479              		.loc 1 434 0
 480              		.cfi_startproc
 481              		@ args = 16, pretend = 0, frame = 8
 482              		@ frame_needed = 0, uses_anonymous_args = 0
 483              	.LVL38:
 484 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 485              	.LCFI2:
 486              		.cfi_def_cfa_offset 36
 487              		.cfi_offset 4, -36
 488              		.cfi_offset 5, -32
 489              		.cfi_offset 6, -28
 490              		.cfi_offset 7, -24
 491              		.cfi_offset 8, -20
 492              		.cfi_offset 9, -16
 493              		.cfi_offset 10, -12
 494              		.cfi_offset 11, -8
 495              		.cfi_offset 14, -4
 496 0004 83B0     		sub	sp, sp, #12
 497              	.LCFI3:
 498              		.cfi_def_cfa_offset 48
 434:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** {
 499              		.loc 1 434 0
 500 0006 8146     		mov	r9, r0
 501              	.LBB70:
 502              	.LBB71:
2187:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	pxNewTCB = ( tskTCB * ) pvPortMalloc( sizeof( tskTCB ) );
 503              		.loc 1 2187 0
 504 0008 DFF8C881 		ldr	r8, .L93+88
 505              	.LBE71:
 506              	.LBE70:
 434:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** {
 507              		.loc 1 434 0
 508 000c 0D9E     		ldr	r6, [sp, #52]
 509 000e 0E9C     		ldr	r4, [sp, #56]
 510              	.LBB76:
 511              	.LBB72:
2187:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	pxNewTCB = ( tskTCB * ) pvPortMalloc( sizeof( tskTCB ) );
 512              		.loc 1 2187 0
 513 0010 4820     		movs	r0, #72
 514              	.LVL39:
 515              	.LBE72:
 516              	.LBE76:
 434:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** {
 517              		.loc 1 434 0
 518 0012 8A46     		mov	sl, r1
 519 0014 1546     		mov	r5, r2
 520              	.LVL40:
 521 0016 9B46     		mov	fp, r3
 522              	.LBB77:
 523              	.LBB73:
2187:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	pxNewTCB = ( tskTCB * ) pvPortMalloc( sizeof( tskTCB ) );
 524              		.loc 1 2187 0
 525 0018 C047     		blx	r8
 526              	.LVL41:
2189:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	if( pxNewTCB != NULL )
 527              		.loc 1 2189 0
 528 001a 0746     		mov	r7, r0
 529 001c 0028     		cmp	r0, #0
 530 001e 00F08380 		beq	.L64
2194:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		pxNewTCB->pxStack = ( portSTACK_TYPE * ) pvPortMallocAligned( ( ( ( size_t )usStackDepth ) * size
 531              		.loc 1 2194 0
 532 0022 002C     		cmp	r4, #0
 533 0024 74D0     		beq	.L90
 534 0026 0463     		str	r4, [r0, #48]
 535 0028 AA00     		lsls	r2, r5, #2
 536              	.LVL42:
 537              	.L66:
2205:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			memset( pxNewTCB->pxStack, tskSTACK_FILL_BYTE, usStackDepth * sizeof( portSTACK_TYPE ) );
 538              		.loc 1 2205 0
 539 002a A521     		movs	r1, #165
 540 002c 2046     		mov	r0, r4
 541 002e 534B     		ldr	r3, .L93
 542              	.LBE73:
 543              	.LBE77:
 544              	.LBB78:
 545              	.LBB79:
 546              	.LBB80:
2027:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	vListInitialiseItem( &( pxTCB->xGenericListItem ) );
 547              		.loc 1 2027 0
 548 0030 534C     		ldr	r4, .L93+4
 549              	.LBE80:
 550              	.LBE79:
 551              	.LBE78:
 552              	.LBB91:
 553              	.LBB74:
2205:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			memset( pxNewTCB->pxStack, tskSTACK_FILL_BYTE, usStackDepth * sizeof( portSTACK_TYPE ) );
 554              		.loc 1 2205 0
 555 0032 9847     		blx	r3
 556              	.LVL43:
 557              	.LBE74:
 558              	.LBE91:
 559              	.LBB92:
 469:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxTopOfStack = pxNewTCB->pxStack + ( usStackDepth - ( unsigned short ) 1 );
 560              		.loc 1 469 0
 561 0034 386B     		ldr	r0, [r7, #48]
 562              	.LBB85:
 563              	.LBB81:
2008:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		strncpy( ( char * ) pxTCB->pcTaskName, ( const char * ) pcName, ( unsigned short ) configMAX_TASK
 564              		.loc 1 2008 0
 565 0036 534B     		ldr	r3, .L93+8
 566              	.LBE81:
 567              	.LBE85:
 469:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxTopOfStack = pxNewTCB->pxStack + ( usStackDepth - ( unsigned short ) 1 );
 568              		.loc 1 469 0
 569 0038 013D     		subs	r5, r5, #1
 570              	.LVL44:
 571              	.LBB86:
 572              	.LBB82:
2008:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		strncpy( ( char * ) pxTCB->pcTaskName, ( const char * ) pcName, ( unsigned short ) configMAX_TASK
 573              		.loc 1 2008 0
 574 003a 5146     		mov	r1, sl
 575              	.LBE82:
 576              	.LBE86:
 469:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxTopOfStack = pxNewTCB->pxStack + ( usStackDepth - ( unsigned short ) 1 );
 577              		.loc 1 469 0
 578 003c 00EB850A 		add	sl, r0, r5, lsl #2
 579              	.LVL45:
 580 0040 0C9D     		ldr	r5, [sp, #48]
 581              	.LVL46:
 582              	.LBB87:
 583              	.LBB83:
2008:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		strncpy( ( char * ) pxTCB->pcTaskName, ( const char * ) pcName, ( unsigned short ) configMAX_TASK
 584              		.loc 1 2008 0
 585 0042 1022     		movs	r2, #16
 586 0044 07F13400 		add	r0, r7, #52
 587 0048 9847     		blx	r3
 588              	.LVL47:
 589 004a FE2D     		cmp	r5, #254
 590 004c 28BF     		it	cs
 591 004e FE25     		movcs	r5, #254
2011:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	pxTCB->pcTaskName[ ( unsigned short ) configMAX_TASK_NAME_LEN - ( unsigned short ) 1 ] = ( signed 
 592              		.loc 1 2011 0
 593 0050 0022     		movs	r2, #0
2027:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	vListInitialiseItem( &( pxTCB->xGenericListItem ) );
 594              		.loc 1 2027 0
 595 0052 07F10408 		add	r8, r7, #4
2011:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	pxTCB->pcTaskName[ ( unsigned short ) configMAX_TASK_NAME_LEN - ( unsigned short ) 1 ] = ( signed 
 596              		.loc 1 2011 0
 597 0056 87F84320 		strb	r2, [r7, #67]
2027:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	vListInitialiseItem( &( pxTCB->xGenericListItem ) );
 598              		.loc 1 2027 0
 599 005a 4046     		mov	r0, r8
2020:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	pxTCB->uxPriority = uxPriority;
 600              		.loc 1 2020 0
 601 005c FD62     		str	r5, [r7, #44]
2023:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		pxTCB->uxBasePriority = uxPriority;
 602              		.loc 1 2023 0
 603 005e 7D64     		str	r5, [r7, #68]
2027:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	vListInitialiseItem( &( pxTCB->xGenericListItem ) );
 604              		.loc 1 2027 0
 605 0060 A047     		blx	r4
 606              	.LVL48:
 607              	.LBE83:
 608              	.LBE87:
 470:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxTopOfStack = ( portSTACK_TYPE * ) ( ( ( unsigned long ) pxTopOfStack ) & ( ( unsigned long ) ~
 609              		.loc 1 470 0
 610 0062 2AF0070A 		bic	sl, sl, #7
 611              	.LVL49:
 612              	.LBB88:
 613              	.LBB84:
2028:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	vListInitialiseItem( &( pxTCB->xEventListItem ) );
 614              		.loc 1 2028 0
 615 0066 07F11800 		add	r0, r7, #24
2035:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), configMAX_PRIORITIES - ( portTickType ) uxPri
 616              		.loc 1 2035 0
 617 006a C5F1FF05 		rsb	r5, r5, #255
 618              	.LVL50:
2028:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	vListInitialiseItem( &( pxTCB->xEventListItem ) );
 619              		.loc 1 2028 0
 620 006e A047     		blx	r4
 621              	.LVL51:
2032:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxTCB->xGenericListItem ), pxTCB );
 622              		.loc 1 2032 0
 623 0070 3F61     		str	r7, [r7, #16]
2035:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), configMAX_PRIORITIES - ( portTickType ) uxPri
 624              		.loc 1 2035 0
 625 0072 BD61     		str	r5, [r7, #24]
2036:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxTCB->xEventListItem ), pxTCB );
 626              		.loc 1 2036 0
 627 0074 7F62     		str	r7, [r7, #36]
 628              	.LBE84:
 629              	.LBE88:
 502:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 630              		.loc 1 502 0
 631 0076 5046     		mov	r0, sl
 632 0078 4946     		mov	r1, r9
 633 007a 5A46     		mov	r2, fp
 634 007c 424C     		ldr	r4, .L93+12
 635 007e A047     		blx	r4
 636              	.LVL52:
 637 0080 3860     		str	r0, [r7, #0]
 509:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( ( void * ) pxCreatedTask != NULL )
 638              		.loc 1 509 0
 639 0082 06B1     		cbz	r6, .L67
 514:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			*pxCreatedTask = ( xTaskHandle ) pxNewTCB;
 640              		.loc 1 514 0
 641 0084 3760     		str	r7, [r6, #0]
 642              	.L67:
 519:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		taskENTER_CRITICAL();
 643              		.loc 1 519 0
 644 0086 414A     		ldr	r2, .L93+16
 522:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( pxCurrentTCB == NULL )
 645              		.loc 1 522 0
 646 0088 414E     		ldr	r6, .L93+20
 519:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		taskENTER_CRITICAL();
 647              		.loc 1 519 0
 648 008a 9047     		blx	r2
 649              	.LVL53:
 521:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			uxCurrentNumberOfTasks++;
 650              		.loc 1 521 0
 651 008c 414A     		ldr	r2, .L93+24
 652 008e 1168     		ldr	r1, [r2, #0]
 653 0090 0131     		adds	r1, r1, #1
 654 0092 1160     		str	r1, [r2, #0]
 522:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( pxCurrentTCB == NULL )
 655              		.loc 1 522 0
 656 0094 3468     		ldr	r4, [r6, #0]
 657 0096 002C     		cmp	r4, #0
 658 0098 33D0     		beq	.L91
 541:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				if( xSchedulerRunning == pdFALSE )
 659              		.loc 1 541 0
 660 009a 3F4C     		ldr	r4, .L93+28
 661 009c 2268     		ldr	r2, [r4, #0]
 662 009e 002A     		cmp	r2, #0
 663 00a0 23D0     		beq	.L87
 664 00a2 3E4D     		ldr	r5, .L93+32
 665              	.LVL54:
 666              	.L70:
 552:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( pxNewTCB->uxPriority > uxTopUsedPriority )
 667              		.loc 1 552 0
 668 00a4 3E4A     		ldr	r2, .L93+36
 669 00a6 FB6A     		ldr	r3, [r7, #44]
 670 00a8 1168     		ldr	r1, [r2, #0]
 565:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			prvAddTaskToReadyQueue( pxNewTCB );
 671              		.loc 1 565 0
 672 00aa 3E48     		ldr	r0, .L93+40
 552:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( pxNewTCB->uxPriority > uxTopUsedPriority )
 673              		.loc 1 552 0
 674 00ac 8B42     		cmp	r3, r1
 554:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				uxTopUsedPriority = pxNewTCB->uxPriority;
 675              		.loc 1 554 0
 676 00ae 88BF     		it	hi
 677 00b0 1360     		strhi	r3, [r2, #0]
 563:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			uxTaskNumber++;
 678              		.loc 1 563 0
 679 00b2 3D4A     		ldr	r2, .L93+44
 565:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			prvAddTaskToReadyQueue( pxNewTCB );
 680              		.loc 1 565 0
 681 00b4 0768     		ldr	r7, [r0, #0]
 682              	.LVL55:
 563:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			uxTaskNumber++;
 683              		.loc 1 563 0
 684 00b6 1168     		ldr	r1, [r2, #0]
 685 00b8 0131     		adds	r1, r1, #1
 565:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			prvAddTaskToReadyQueue( pxNewTCB );
 686              		.loc 1 565 0
 687 00ba BB42     		cmp	r3, r7
 688 00bc 88BF     		it	hi
 689 00be 0360     		strhi	r3, [r0, #0]
 690 00c0 03EB8300 		add	r0, r3, r3, lsl #2
 563:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			uxTaskNumber++;
 691              		.loc 1 563 0
 692 00c4 1160     		str	r1, [r2, #0]
 565:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			prvAddTaskToReadyQueue( pxNewTCB );
 693              		.loc 1 565 0
 694 00c6 05EB8000 		add	r0, r5, r0, lsl #2
 695 00ca 4146     		mov	r1, r8
 696 00cc 374B     		ldr	r3, .L93+48
 697 00ce 9847     		blx	r3
 698              	.LVL56:
 570:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		taskEXIT_CRITICAL();
 699              		.loc 1 570 0
 700 00d0 374B     		ldr	r3, .L93+52
 701 00d2 9847     		blx	r3
 702              	.LVL57:
 703              	.LBE92:
 580:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
 704              		.loc 1 580 0
 705 00d4 2368     		ldr	r3, [r4, #0]
 706 00d6 23B1     		cbz	r3, .L77
 584:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( pxCurrentTCB->uxPriority < uxPriority )
 707              		.loc 1 584 0
 708 00d8 3368     		ldr	r3, [r6, #0]
 709 00da 0C9A     		ldr	r2, [sp, #48]
 710 00dc DB6A     		ldr	r3, [r3, #44]
 711 00de 9A42     		cmp	r2, r3
 712 00e0 0BD8     		bhi	.L92
 713              	.L77:
 567:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			xReturn = pdPASS;
 714              		.loc 1 567 0
 715 00e2 0120     		movs	r0, #1
 716              	.LVL58:
 717              	.L89:
 592:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** }
 718              		.loc 1 592 0
 719 00e4 03B0     		add	sp, sp, #12
 720 00e6 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 721              	.LVL59:
 722              	.L87:
 723              	.LBB93:
 543:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					if( pxCurrentTCB->uxPriority <= uxPriority )
 724              		.loc 1 543 0
 725 00ea 3268     		ldr	r2, [r6, #0]
 726 00ec 0C98     		ldr	r0, [sp, #48]
 727 00ee D26A     		ldr	r2, [r2, #44]
 728 00f0 2A4D     		ldr	r5, .L93+32
 729 00f2 9042     		cmp	r0, r2
 545:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 						pxCurrentTCB = pxNewTCB;
 730              		.loc 1 545 0
 731 00f4 28BF     		it	cs
 732 00f6 3760     		strcs	r7, [r6, #0]
 733 00f8 D4E7     		b	.L70
 734              	.LVL60:
 735              	.L92:
 736              	.LBE93:
 586:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				portYIELD_WITHIN_API();
 737              		.loc 1 586 0
 738 00fa 2E4B     		ldr	r3, .L93+56
 739 00fc 9847     		blx	r3
 740              	.LVL61:
 567:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			xReturn = pdPASS;
 741              		.loc 1 567 0
 742 00fe 0120     		movs	r0, #1
 743 0100 F0E7     		b	.L89
 744              	.LVL62:
 745              	.L91:
 746              	.LBB94:
 526:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				pxCurrentTCB =  pxNewTCB;
 747              		.loc 1 526 0
 748 0102 3760     		str	r7, [r6, #0]
 528:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				if( uxCurrentNumberOfTasks == ( unsigned portBASE_TYPE ) 1 )
 749              		.loc 1 528 0
 750 0104 1268     		ldr	r2, [r2, #0]
 751 0106 254D     		ldr	r5, .L93+32
 752 0108 012A     		cmp	r2, #1
 753 010a 10D0     		beq	.L75
 754 010c 224C     		ldr	r4, .L93+28
 755 010e C9E7     		b	.L70
 756              	.LVL63:
 757              	.L90:
 758              	.LBE94:
 759              	.LBB95:
 760              	.LBB75:
2194:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		pxNewTCB->pxStack = ( portSTACK_TYPE * ) pvPortMallocAligned( ( ( ( size_t )usStackDepth ) * size
 761              		.loc 1 2194 0
 762 0110 AA00     		lsls	r2, r5, #2
 763 0112 1046     		mov	r0, r2
 764              	.LVL64:
 765 0114 0192     		str	r2, [sp, #4]
 766 0116 C047     		blx	r8
 767              	.LVL65:
2196:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( pxNewTCB->pxStack == NULL )
 768              		.loc 1 2196 0
 769 0118 019A     		ldr	r2, [sp, #4]
2194:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		pxNewTCB->pxStack = ( portSTACK_TYPE * ) pvPortMallocAligned( ( ( ( size_t )usStackDepth ) * size
 770              		.loc 1 2194 0
 771 011a 3863     		str	r0, [r7, #48]
 772 011c 0446     		mov	r4, r0
 773              	.LVL66:
2196:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( pxNewTCB->pxStack == NULL )
 774              		.loc 1 2196 0
 775 011e 0028     		cmp	r0, #0
 776 0120 83D1     		bne	.L66
2199:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			vPortFree( pxNewTCB );
 777              		.loc 1 2199 0
 778 0122 3846     		mov	r0, r7
 779 0124 244B     		ldr	r3, .L93+60
 780 0126 9847     		blx	r3
 781              	.LVL67:
 782              	.L64:
 783              	.LBE75:
 784              	.LBE95:
 785              	.LBB96:
 574:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 786              		.loc 1 574 0
 787 0128 4FF0FF30 		mov	r0, #-1
 788 012c DAE7     		b	.L89
 789              	.LVL68:
 790              	.L75:
 791 012e DFF88C90 		ldr	r9, .L93+64
 792              	.LVL69:
 793              	.L69:
 794              	.LBB89:
 795              	.LBB90:
2094:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		vListInitialise( ( xList * ) &( pxReadyTasksLists[ uxPriority ] ) );
 796              		.loc 1 2094 0
 797 0132 04EB8400 		add	r0, r4, r4, lsl #2
 798 0136 05EB8000 		add	r0, r5, r0, lsl #2
2092:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	for( uxPriority = ( unsigned portBASE_TYPE ) 0U; uxPriority < configMAX_PRIORITIES; uxPriority++ )
 799              		.loc 1 2092 0
 800 013a 0134     		adds	r4, r4, #1
2094:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		vListInitialise( ( xList * ) &( pxReadyTasksLists[ uxPriority ] ) );
 801              		.loc 1 2094 0
 802 013c C847     		blx	r9
 803              	.LVL70:
2092:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	for( uxPriority = ( unsigned portBASE_TYPE ) 0U; uxPriority < configMAX_PRIORITIES; uxPriority++ )
 804              		.loc 1 2092 0
 805 013e FF2C     		cmp	r4, #255
2094:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		vListInitialise( ( xList * ) &( pxReadyTasksLists[ uxPriority ] ) );
 806              		.loc 1 2094 0
 807 0140 1E4A     		ldr	r2, .L93+64
2092:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	for( uxPriority = ( unsigned portBASE_TYPE ) 0U; uxPriority < configMAX_PRIORITIES; uxPriority++ )
 808              		.loc 1 2092 0
 809 0142 F6D1     		bne	.L69
2097:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	vListInitialise( ( xList * ) &xDelayedTaskList1 );
 810              		.loc 1 2097 0
 811 0144 DFF890A0 		ldr	sl, .L93+92
 812              	.LVL71:
2098:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	vListInitialise( ( xList * ) &xDelayedTaskList2 );
 813              		.loc 1 2098 0
 814 0148 DFF89090 		ldr	r9, .L93+96
2097:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	vListInitialise( ( xList * ) &xDelayedTaskList1 );
 815              		.loc 1 2097 0
 816 014c 0192     		str	r2, [sp, #4]
 817 014e 5046     		mov	r0, sl
 818 0150 9047     		blx	r2
 819              	.LVL72:
2098:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	vListInitialise( ( xList * ) &xDelayedTaskList2 );
 820              		.loc 1 2098 0
 821 0152 4846     		mov	r0, r9
 822 0154 019A     		ldr	r2, [sp, #4]
 823 0156 104C     		ldr	r4, .L93+28
 824              	.LVL73:
 825 0158 9047     		blx	r2
 826              	.LVL74:
2099:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	vListInitialise( ( xList * ) &xPendingReadyList );
 827              		.loc 1 2099 0
 828 015a 1948     		ldr	r0, .L93+68
 829 015c 019A     		ldr	r2, [sp, #4]
 830 015e 9047     		blx	r2
 831              	.LVL75:
2103:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		vListInitialise( ( xList * ) &xTasksWaitingTermination );
 832              		.loc 1 2103 0
 833 0160 1848     		ldr	r0, .L93+72
 834 0162 019A     		ldr	r2, [sp, #4]
 835 0164 9047     		blx	r2
 836              	.LVL76:
2109:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		vListInitialise( ( xList * ) &xSuspendedTaskList );
 837              		.loc 1 2109 0
 838 0166 019A     		ldr	r2, [sp, #4]
 839 0168 1748     		ldr	r0, .L93+76
 840 016a 9047     		blx	r2
 841              	.LVL77:
2115:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	pxDelayedTaskList = &xDelayedTaskList1;
 842              		.loc 1 2115 0
 843 016c 174A     		ldr	r2, .L93+80
 844 016e C2F800A0 		str	sl, [r2, #0]
2116:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 845              		.loc 1 2116 0
 846 0172 174A     		ldr	r2, .L93+84
 847 0174 C2F80090 		str	r9, [r2, #0]
 848 0178 94E7     		b	.L70
 849              	.L94:
 850 017a 00BF     		.align	2
 851              	.L93:
 852 017c 00000000 		.word	memset
 853 0180 00000000 		.word	vListInitialiseItem
 854 0184 00000000 		.word	strncpy
 855 0188 00000000 		.word	pxPortInitialiseStack
 856 018c 00000000 		.word	vPortEnterCritical
 857 0190 00000000 		.word	.LANCHOR7
 858 0194 00000000 		.word	.LANCHOR3
 859 0198 00000000 		.word	.LANCHOR18
 860 019c 00000000 		.word	.LANCHOR6
 861 01a0 00000000 		.word	.LANCHOR19
 862 01a4 00000000 		.word	.LANCHOR5
 863 01a8 00000000 		.word	.LANCHOR20
 864 01ac 00000000 		.word	vListInsertEnd
 865 01b0 00000000 		.word	vPortExitCritical
 866 01b4 00000000 		.word	vPortYieldFromISR
 867 01b8 00000000 		.word	vPortFree
 868 01bc 00000000 		.word	vListInitialise
 869 01c0 00000000 		.word	.LANCHOR4
 870 01c4 00000000 		.word	.LANCHOR2
 871 01c8 00000000 		.word	.LANCHOR17
 872 01cc 00000000 		.word	.LANCHOR12
 873 01d0 00000000 		.word	.LANCHOR13
 874 01d4 00000000 		.word	pvPortMalloc
 875 01d8 00000000 		.word	.LANCHOR15
 876 01dc 00000000 		.word	.LANCHOR16
 877              	.LBE90:
 878              	.LBE89:
 879              	.LBE96:
 880              		.cfi_endproc
 881              	.LFE2:
 883              		.section	.text.vTaskDelete,"ax",%progbits
 884              		.align	2
 885              		.global	vTaskDelete
 886              		.thumb
 887              		.thumb_func
 889              	vTaskDelete:
 890              	.LFB3:
 598:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
 891              		.loc 1 598 0
 892              		.cfi_startproc
 893              		@ args = 0, pretend = 0, frame = 0
 894              		@ frame_needed = 0, uses_anonymous_args = 0
 895              	.LVL78:
 896 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 897              	.LCFI4:
 898              		.cfi_def_cfa_offset 24
 899              		.cfi_offset 3, -24
 900              		.cfi_offset 4, -20
 901              		.cfi_offset 5, -16
 902              		.cfi_offset 6, -12
 903              		.cfi_offset 7, -8
 904              		.cfi_offset 14, -4
 601:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		taskENTER_CRITICAL();
 905              		.loc 1 601 0
 906 0002 154B     		ldr	r3, .L108
 598:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
 907              		.loc 1 598 0
 908 0004 0446     		mov	r4, r0
 601:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		taskENTER_CRITICAL();
 909              		.loc 1 601 0
 910 0006 9847     		blx	r3
 911              	.LVL79:
 605:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( pxTaskToDelete == pxCurrentTCB )
 912              		.loc 1 605 0
 913 0008 144B     		ldr	r3, .L108+4
 914 000a 1A68     		ldr	r2, [r3, #0]
 915 000c 9442     		cmp	r4, r2
 916 000e 1DD0     		beq	.L96
 611:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxTCB = prvGetTCBFromHandle( pxTaskToDelete );
 917              		.loc 1 611 0
 918 0010 2546     		mov	r5, r4
 919 0012 DCB1     		cbz	r4, .L96
 920              	.LVL80:
 921              	.L97:
 617:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			vListRemove( &( pxTCB->xGenericListItem ) );
 922              		.loc 1 617 0 discriminator 3
 923 0014 2E1D     		adds	r6, r5, #4
 924 0016 3046     		mov	r0, r6
 925 0018 114F     		ldr	r7, .L108+8
 926 001a B847     		blx	r7
 927              	.LVL81:
 620:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( pxTCB->xEventListItem.pvContainer )
 928              		.loc 1 620 0 discriminator 3
 929 001c AB6A     		ldr	r3, [r5, #40]
 930 001e 13B1     		cbz	r3, .L98
 622:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				vListRemove( &( pxTCB->xEventListItem ) );
 931              		.loc 1 622 0
 932 0020 05F11800 		add	r0, r5, #24
 933 0024 B847     		blx	r7
 934              	.LVL82:
 935              	.L98:
 625:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			vListInsertEnd( ( xList * ) &xTasksWaitingTermination, &( pxTCB->xGenericListItem ) );
 936              		.loc 1 625 0
 937 0026 0F48     		ldr	r0, .L108+12
 938 0028 0F4B     		ldr	r3, .L108+16
 939 002a 3146     		mov	r1, r6
 940 002c 9847     		blx	r3
 941              	.LVL83:
 634:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			uxTaskNumber++;
 942              		.loc 1 634 0
 943 002e 0F4B     		ldr	r3, .L108+20
 630:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			++uxTasksDeleted;
 944              		.loc 1 630 0
 945 0030 0F4A     		ldr	r2, .L108+24
 634:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			uxTaskNumber++;
 946              		.loc 1 634 0
 947 0032 1968     		ldr	r1, [r3, #0]
 630:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			++uxTasksDeleted;
 948              		.loc 1 630 0
 949 0034 1068     		ldr	r0, [r2, #0]
 634:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			uxTaskNumber++;
 950              		.loc 1 634 0
 951 0036 0131     		adds	r1, r1, #1
 630:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			++uxTasksDeleted;
 952              		.loc 1 630 0
 953 0038 0130     		adds	r0, r0, #1
 634:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			uxTaskNumber++;
 954              		.loc 1 634 0
 955 003a 1960     		str	r1, [r3, #0]
 638:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		taskEXIT_CRITICAL();
 956              		.loc 1 638 0
 957 003c 0D4B     		ldr	r3, .L108+28
 630:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			++uxTasksDeleted;
 958              		.loc 1 630 0
 959 003e 1060     		str	r0, [r2, #0]
 638:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		taskEXIT_CRITICAL();
 960              		.loc 1 638 0
 961 0040 9847     		blx	r3
 962              	.LVL84:
 641:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
 963              		.loc 1 641 0
 964 0042 0D4B     		ldr	r3, .L108+32
 965 0044 1B68     		ldr	r3, [r3, #0]
 966 0046 03B1     		cbz	r3, .L95
 643:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( ( void * ) pxTaskToDelete == NULL )
 967              		.loc 1 643 0
 968 0048 1CB1     		cbz	r4, .L107
 969              	.L95:
 970 004a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 971              	.LVL85:
 972              	.L96:
 611:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxTCB = prvGetTCBFromHandle( pxTaskToDelete );
 973              		.loc 1 611 0 discriminator 1
 974 004c 1D68     		ldr	r5, [r3, #0]
 975 004e 0024     		movs	r4, #0
 976              	.LVL86:
 977 0050 E0E7     		b	.L97
 978              	.LVL87:
 979              	.L107:
 645:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				portYIELD_WITHIN_API();
 980              		.loc 1 645 0
 981 0052 0A4B     		ldr	r3, .L108+36
 982 0054 9847     		blx	r3
 983              	.LVL88:
 984 0056 F8E7     		b	.L95
 985              	.L109:
 986              		.align	2
 987              	.L108:
 988 0058 00000000 		.word	vPortEnterCritical
 989 005c 00000000 		.word	.LANCHOR7
 990 0060 00000000 		.word	vListRemove
 991 0064 00000000 		.word	.LANCHOR2
 992 0068 00000000 		.word	vListInsertEnd
 993 006c 00000000 		.word	.LANCHOR20
 994 0070 00000000 		.word	.LANCHOR0
 995 0074 00000000 		.word	vPortExitCritical
 996 0078 00000000 		.word	.LANCHOR18
 997 007c 00000000 		.word	vPortYieldFromISR
 998              		.cfi_endproc
 999              	.LFE3:
 1001              		.section	.text.vTaskDelayUntil,"ax",%progbits
 1002              		.align	2
 1003              		.global	vTaskDelayUntil
 1004              		.thumb
 1005              		.thumb_func
 1007              	vTaskDelayUntil:
 1008              	.LFB4:
 664:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
 1009              		.loc 1 664 0
 1010              		.cfi_startproc
 1011              		@ args = 0, pretend = 0, frame = 8
 1012              		@ frame_needed = 0, uses_anonymous_args = 0
 1013              	.LVL89:
 1014 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 1015              	.LCFI5:
 1016              		.cfi_def_cfa_offset 36
 1017              		.cfi_offset 4, -36
 1018              		.cfi_offset 5, -32
 1019              		.cfi_offset 6, -28
 1020              		.cfi_offset 7, -24
 1021              		.cfi_offset 8, -20
 1022              		.cfi_offset 9, -16
 1023              		.cfi_offset 10, -12
 1024              		.cfi_offset 11, -8
 1025              		.cfi_offset 14, -4
 1026              	.LBB110:
 1027              	.LBB111:
1157:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	++uxSchedulerSuspended;
 1028              		.loc 1 1157 0
 1029 0004 DFF86892 		ldr	r9, .L166+68
 1030              	.LBE111:
 1031              	.LBE110:
 676:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( xTickCount < *pxPreviousWakeTime )
 1032              		.loc 1 676 0
 1033 0008 884F     		ldr	r7, .L166
 1034              	.LBB113:
 1035              	.LBB112:
1157:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	++uxSchedulerSuspended;
 1036              		.loc 1 1157 0
 1037 000a D9F80030 		ldr	r3, [r9, #0]
 1038 000e 0133     		adds	r3, r3, #1
 1039 0010 C9F80030 		str	r3, [r9, #0]
 1040              	.LBE112:
 1041              	.LBE113:
 676:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( xTickCount < *pxPreviousWakeTime )
 1042              		.loc 1 676 0
 1043 0014 3A68     		ldr	r2, [r7, #0]
 674:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
 1044              		.loc 1 674 0
 1045 0016 0368     		ldr	r3, [r0, #0]
 676:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( xTickCount < *pxPreviousWakeTime )
 1046              		.loc 1 676 0
 1047 0018 9342     		cmp	r3, r2
 664:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
 1048              		.loc 1 664 0
 1049 001a 83B0     		sub	sp, sp, #12
 1050              	.LCFI6:
 1051              		.cfi_def_cfa_offset 48
 674:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
 1052              		.loc 1 674 0
 1053 001c 01EB0305 		add	r5, r1, r3
 1054              	.LVL90:
 676:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( xTickCount < *pxPreviousWakeTime )
 1055              		.loc 1 676 0
 1056 0020 40F2A580 		bls	.L111
 683:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xTickCount ) )
 1057              		.loc 1 683 0
 1058 0024 AB42     		cmp	r3, r5
 1059 0026 00F2A480 		bhi	.L164
 1060              	.L112:
 700:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			*pxPreviousWakeTime = xTimeToWake;
 1061              		.loc 1 700 0
 1062 002a 0560     		str	r5, [r0, #0]
 1063              	.LVL91:
 1064              	.L114:
 1065              	.LBB114:
 1066              	.LBB115:
1175:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	taskENTER_CRITICAL();
 1067              		.loc 1 1175 0
 1068 002c 804B     		ldr	r3, .L166+4
 1069 002e 9847     		blx	r3
 1070              	.LVL92:
1177:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		--uxSchedulerSuspended;
 1071              		.loc 1 1177 0
 1072 0030 D9F80030 		ldr	r3, [r9, #0]
 1073 0034 013B     		subs	r3, r3, #1
 1074 0036 C9F80030 		str	r3, [r9, #0]
1179:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( uxSchedulerSuspended == ( unsigned portBASE_TYPE ) pdFALSE )
 1075              		.loc 1 1179 0
 1076 003a D9F80030 		ldr	r3, [r9, #0]
 1077 003e 002B     		cmp	r3, #0
 1078 0040 40F0B280 		bne	.L115
1181:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( uxCurrentNumberOfTasks > ( unsigned portBASE_TYPE ) 0 )
 1079              		.loc 1 1181 0
 1080 0044 7B4A     		ldr	r2, .L166+8
 1081 0046 1268     		ldr	r2, [r2, #0]
 1082 0048 002A     		cmp	r2, #0
 1083 004a 00F0AD80 		beq	.L115
 1084 004e 9A46     		mov	sl, r3
 1085 0050 20E0     		b	.L157
 1086              	.LVL93:
 1087              	.L119:
 1088              	.LBB116:
1189:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					pxTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY(  ( ( xList * ) &xPendingReadyList ) );
 1089              		.loc 1 1189 0
 1090 0052 794B     		ldr	r3, .L166+12
 1091 0054 DB68     		ldr	r3, [r3, #12]
 1092 0056 D3F80CB0 		ldr	fp, [r3, #12]
 1093              	.LVL94:
1190:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					vListRemove( &( pxTCB->xEventListItem ) );
 1094              		.loc 1 1190 0
 1095 005a 0BF11800 		add	r0, fp, #24
1191:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					vListRemove( &( pxTCB->xGenericListItem ) );
 1096              		.loc 1 1191 0
 1097 005e 0BF10408 		add	r8, fp, #4
1190:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					vListRemove( &( pxTCB->xEventListItem ) );
 1098              		.loc 1 1190 0
 1099 0062 A047     		blx	r4
 1100              	.LVL95:
1191:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					vListRemove( &( pxTCB->xGenericListItem ) );
 1101              		.loc 1 1191 0
 1102 0064 4046     		mov	r0, r8
 1103 0066 A047     		blx	r4
 1104              	.LVL96:
1192:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					prvAddTaskToReadyQueue( pxTCB );
 1105              		.loc 1 1192 0
 1106 0068 744C     		ldr	r4, .L166+16
 1107 006a DBF82C20 		ldr	r2, [fp, #44]
 1108 006e 2368     		ldr	r3, [r4, #0]
 1109 0070 02EB8200 		add	r0, r2, r2, lsl #2
 1110 0074 9A42     		cmp	r2, r3
 1111 0076 06EB8000 		add	r0, r6, r0, lsl #2
 1112 007a 4146     		mov	r1, r8
 1113 007c 88BF     		it	hi
 1114 007e 2260     		strhi	r2, [r4, #0]
 1115 0080 A847     		blx	r5
 1116              	.LVL97:
1196:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 1117              		.loc 1 1196 0
 1118 0082 6F4B     		ldr	r3, .L166+20
 1119 0084 DBF82C20 		ldr	r2, [fp, #44]
 1120 0088 1B68     		ldr	r3, [r3, #0]
 1121 008a DB6A     		ldr	r3, [r3, #44]
1198:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 						xYieldRequired = pdTRUE;
 1122              		.loc 1 1198 0
 1123 008c 9A42     		cmp	r2, r3
 1124 008e 28BF     		it	cs
 1125 0090 4FF0010A 		movcs	sl, #1
 1126              	.LVL98:
 1127              	.L157:
1187:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				while( listLIST_IS_EMPTY( ( xList * ) &xPendingReadyList ) == pdFALSE )
 1128              		.loc 1 1187 0
 1129 0094 6849     		ldr	r1, .L166+12
1190:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					vListRemove( &( pxTCB->xEventListItem ) );
 1130              		.loc 1 1190 0
 1131 0096 6B4C     		ldr	r4, .L166+24
1187:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				while( listLIST_IS_EMPTY( ( xList * ) &xPendingReadyList ) == pdFALSE )
 1132              		.loc 1 1187 0
 1133 0098 0B68     		ldr	r3, [r1, #0]
1192:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					prvAddTaskToReadyQueue( pxTCB );
 1134              		.loc 1 1192 0
 1135 009a 6B4E     		ldr	r6, .L166+28
 1136 009c 6B4D     		ldr	r5, .L166+32
1187:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				while( listLIST_IS_EMPTY( ( xList * ) &xPendingReadyList ) == pdFALSE )
 1137              		.loc 1 1187 0
 1138 009e 002B     		cmp	r3, #0
 1139 00a0 D7D1     		bne	.L119
1205:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				if( uxMissedTicks > ( unsigned portBASE_TYPE ) 0 )
 1140              		.loc 1 1205 0
 1141 00a2 DFF8D081 		ldr	r8, .L166+72
 1142 00a6 D8F80030 		ldr	r3, [r8, #0]
 1143 00aa 002B     		cmp	r3, #0
 1144 00ac 00F0AF80 		beq	.L120
1207:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					while( uxMissedTicks > ( unsigned portBASE_TYPE ) 0 )
 1145              		.loc 1 1207 0
 1146 00b0 D8F80030 		ldr	r3, [r8, #0]
 1147 00b4 002B     		cmp	r3, #0
 1148 00b6 58D0     		beq	.L161
 1149              	.LVL99:
 1150              	.L150:
 1151              	.LBB117:
 1152              	.LBB118:
1474:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	if( uxSchedulerSuspended == ( unsigned portBASE_TYPE ) pdFALSE )
 1153              		.loc 1 1474 0
 1154 00b8 D9F80030 		ldr	r3, [r9, #0]
 1155 00bc 002B     		cmp	r3, #0
 1156 00be 7AD1     		bne	.L123
1476:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		++xTickCount;
 1157              		.loc 1 1476 0
 1158 00c0 3B68     		ldr	r3, [r7, #0]
 1159 00c2 0133     		adds	r3, r3, #1
 1160 00c4 3B60     		str	r3, [r7, #0]
1477:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( xTickCount == ( portTickType ) 0 )
 1161              		.loc 1 1477 0
 1162 00c6 3B68     		ldr	r3, [r7, #0]
 1163 00c8 002B     		cmp	r3, #0
 1164 00ca 7AD0     		beq	.L124
 1165 00cc 604A     		ldr	r2, .L166+36
 1166 00ce 1368     		ldr	r3, [r2, #0]
 1167 00d0 0192     		str	r2, [sp, #4]
 1168              	.L125:
 1169              	.LBB119:
1512:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		prvCheckDelayedTasks();
 1170              		.loc 1 1512 0
 1171 00d2 3A68     		ldr	r2, [r7, #0]
 1172 00d4 9A42     		cmp	r2, r3
 1173 00d6 3FD3     		bcc	.L127
 1174 00d8 5E49     		ldr	r1, .L166+40
 1175 00da 0B68     		ldr	r3, [r1, #0]
 1176 00dc 1B68     		ldr	r3, [r3, #0]
 1177 00de 002B     		cmp	r3, #0
 1178 00e0 36D0     		beq	.L128
 1179 00e2 0B68     		ldr	r3, [r1, #0]
 1180 00e4 514A     		ldr	r2, .L166
 1181 00e6 DB68     		ldr	r3, [r3, #12]
 1182 00e8 D3F80CB0 		ldr	fp, [r3, #12]
 1183              	.LVL100:
 1184 00ec 1168     		ldr	r1, [r2, #0]
 1185 00ee DBF80420 		ldr	r2, [fp, #4]
 1186              	.LVL101:
 1187 00f2 9142     		cmp	r1, r2
 1188 00f4 79D3     		bcc	.L129
 1189 00f6 534C     		ldr	r4, .L166+24
 1190 00f8 534E     		ldr	r6, .L166+28
 1191 00fa 544D     		ldr	r5, .L166+32
 1192 00fc 09E0     		b	.L131
 1193              	.LVL102:
 1194              	.L158:
 1195 00fe 554B     		ldr	r3, .L166+40
 1196 0100 1B68     		ldr	r3, [r3, #0]
 1197 0102 DB68     		ldr	r3, [r3, #12]
 1198 0104 D3F80CB0 		ldr	fp, [r3, #12]
 1199              	.LVL103:
 1200 0108 3968     		ldr	r1, [r7, #0]
 1201 010a DBF80420 		ldr	r2, [fp, #4]
 1202              	.LVL104:
 1203 010e 8A42     		cmp	r2, r1
 1204 0110 6BD8     		bhi	.L129
 1205              	.L131:
 1206 0112 0BF1040A 		add	sl, fp, #4
 1207 0116 5046     		mov	r0, sl
 1208 0118 A047     		blx	r4
 1209              	.LVL105:
 1210 011a DBF82820 		ldr	r2, [fp, #40]
 1211 011e 0BF11800 		add	r0, fp, #24
 1212 0122 0AB1     		cbz	r2, .L132
 1213 0124 474A     		ldr	r2, .L166+24
 1214 0126 9047     		blx	r2
 1215              	.LVL106:
 1216              	.L132:
 1217 0128 4449     		ldr	r1, .L166+16
 1218 012a DBF82C30 		ldr	r3, [fp, #44]
 1219 012e 0A68     		ldr	r2, [r1, #0]
 1220 0130 9342     		cmp	r3, r2
 1221 0132 03EB8300 		add	r0, r3, r3, lsl #2
 1222 0136 88BF     		it	hi
 1223 0138 404A     		ldrhi	r2, .L166+16
 1224 013a 06EB8000 		add	r0, r6, r0, lsl #2
 1225 013e 5146     		mov	r1, sl
 1226 0140 88BF     		it	hi
 1227 0142 1360     		strhi	r3, [r2, #0]
 1228 0144 A847     		blx	r5
 1229              	.LVL107:
 1230 0146 434A     		ldr	r2, .L166+40
 1231 0148 1368     		ldr	r3, [r2, #0]
 1232 014a 1B68     		ldr	r3, [r3, #0]
 1233 014c 002B     		cmp	r3, #0
 1234 014e D6D1     		bne	.L158
 1235              	.LVL108:
 1236              	.L128:
 1237 0150 019A     		ldr	r2, [sp, #4]
 1238 0152 4FF0FF33 		mov	r3, #-1
 1239 0156 1360     		str	r3, [r2, #0]
 1240              	.L127:
 1241              	.LBE119:
 1242              	.LBE118:
 1243              	.LBE117:
1210:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 						--uxMissedTicks;
 1244              		.loc 1 1210 0
 1245 0158 D8F80030 		ldr	r3, [r8, #0]
 1246 015c 013B     		subs	r3, r3, #1
 1247 015e C8F80030 		str	r3, [r8, #0]
1207:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					while( uxMissedTicks > ( unsigned portBASE_TYPE ) 0 )
 1248              		.loc 1 1207 0
 1249 0162 D8F80030 		ldr	r3, [r8, #0]
 1250 0166 002B     		cmp	r3, #0
 1251 0168 A6D1     		bne	.L150
 1252              	.L161:
 1253 016a 3B4B     		ldr	r3, .L166+44
 1254 016c 56E0     		b	.L135
 1255              	.LVL109:
 1256              	.L111:
 1257              	.LBE116:
 1258              	.LBE115:
 1259              	.LBE114:
 693:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xTickCount ) )
 1260              		.loc 1 693 0
 1261 016e AB42     		cmp	r3, r5
 1262 0170 03D8     		bhi	.L113
 1263              	.L164:
 693:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xTickCount ) )
 1264              		.loc 1 693 0 is_stmt 0 discriminator 1
 1265 0172 3B68     		ldr	r3, [r7, #0]
 1266 0174 9D42     		cmp	r5, r3
 1267 0176 7FF658AF 		bls	.L112
 1268              	.L113:
 1269              	.LVL110:
 709:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				vListRemove( ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) );
 1270              		.loc 1 709 0 is_stmt 1
 1271 017a 314E     		ldr	r6, .L166+20
 700:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			*pxPreviousWakeTime = xTimeToWake;
 1272              		.loc 1 700 0
 1273 017c 0560     		str	r5, [r0, #0]
 709:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				vListRemove( ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) );
 1274              		.loc 1 709 0
 1275 017e 3068     		ldr	r0, [r6, #0]
 1276              	.LVL111:
 1277 0180 304C     		ldr	r4, .L166+24
 1278 0182 0430     		adds	r0, r0, #4
 1279 0184 A047     		blx	r4
 1280              	.LVL112:
 1281              	.LBB130:
 1282              	.LBB131:
2158:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xGenericListItem ), xTimeToWake );
 1283              		.loc 1 2158 0
 1284 0186 3268     		ldr	r2, [r6, #0]
2160:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	if( xTimeToWake < xTickCount )
 1285              		.loc 1 2160 0
 1286 0188 3B68     		ldr	r3, [r7, #0]
2158:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xGenericListItem ), xTimeToWake );
 1287              		.loc 1 2158 0
 1288 018a 5560     		str	r5, [r2, #4]
2160:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	if( xTimeToWake < xTickCount )
 1289              		.loc 1 2160 0
 1290 018c 9D42     		cmp	r5, r3
 1291 018e 37D3     		bcc	.L165
2168:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		vListInsert( ( xList * ) pxDelayedTaskList, ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) )
 1292              		.loc 1 2168 0
 1293 0190 304B     		ldr	r3, .L166+40
 1294 0192 1868     		ldr	r0, [r3, #0]
 1295 0194 3168     		ldr	r1, [r6, #0]
 1296 0196 314B     		ldr	r3, .L166+48
 1297 0198 0431     		adds	r1, r1, #4
 1298 019a 9847     		blx	r3
 1299              	.LVL113:
2173:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( xTimeToWake < xNextTaskUnblockTime )
 1300              		.loc 1 2173 0
 1301 019c 2C4B     		ldr	r3, .L166+36
 1302 019e 1A68     		ldr	r2, [r3, #0]
 1303 01a0 9542     		cmp	r5, r2
2175:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			xNextTaskUnblockTime = xTimeToWake;
 1304              		.loc 1 2175 0
 1305 01a2 38BF     		it	cc
 1306 01a4 1D60     		strcc	r5, [r3, #0]
 1307 01a6 41E7     		b	.L114
 1308              	.LVL114:
 1309              	.L115:
 1310              	.LBE131:
 1311              	.LBE130:
 1312              	.LBB135:
 1313              	.LBB127:
1232:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	taskEXIT_CRITICAL();
 1314              		.loc 1 1232 0
 1315 01a8 2D4B     		ldr	r3, .L166+52
 1316 01aa 9847     		blx	r3
 1317              	.LVL115:
 1318              	.LBE127:
 1319              	.LBE135:
 719:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			portYIELD_WITHIN_API();
 1320              		.loc 1 719 0
 1321 01ac 2D4B     		ldr	r3, .L166+56
 1322 01ae 9847     		blx	r3
 1323              	.LVL116:
 1324              	.L110:
 721:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
 1325              		.loc 1 721 0
 1326 01b0 03B0     		add	sp, sp, #12
 1327 01b2 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 1328              	.LVL117:
 1329              	.L123:
 1330              	.LBB136:
 1331              	.LBB128:
 1332              	.LBB125:
 1333              	.LBB124:
 1334              	.LBB123:
1516:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		++uxMissedTicks;
 1335              		.loc 1 1516 0
 1336 01b6 D8F80030 		ldr	r3, [r8, #0]
 1337 01ba 0133     		adds	r3, r3, #1
 1338 01bc C8F80030 		str	r3, [r8, #0]
 1339 01c0 CAE7     		b	.L127
 1340              	.L124:
 1341              	.LBB120:
1486:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxTemp = pxDelayedTaskList;
 1342              		.loc 1 1486 0
 1343 01c2 244B     		ldr	r3, .L166+40
1487:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxDelayedTaskList = pxOverflowDelayedTaskList;
 1344              		.loc 1 1487 0
 1345 01c4 2849     		ldr	r1, .L166+60
1486:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxTemp = pxDelayedTaskList;
 1346              		.loc 1 1486 0
 1347 01c6 1868     		ldr	r0, [r3, #0]
 1348              	.LVL118:
1487:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxDelayedTaskList = pxOverflowDelayedTaskList;
 1349              		.loc 1 1487 0
 1350 01c8 0C68     		ldr	r4, [r1, #0]
1489:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			xNumOfOverflows++;
 1351              		.loc 1 1489 0
 1352 01ca 284A     		ldr	r2, .L166+64
1487:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxDelayedTaskList = pxOverflowDelayedTaskList;
 1353              		.loc 1 1487 0
 1354 01cc 1C60     		str	r4, [r3, #0]
1488:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxOverflowDelayedTaskList = pxTemp;
 1355              		.loc 1 1488 0
 1356 01ce 0860     		str	r0, [r1, #0]
1489:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			xNumOfOverflows++;
 1357              		.loc 1 1489 0
 1358 01d0 1168     		ldr	r1, [r2, #0]
 1359 01d2 0131     		adds	r1, r1, #1
 1360 01d4 1160     		str	r1, [r2, #0]
1491:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 1361              		.loc 1 1491 0
 1362 01d6 1A68     		ldr	r2, [r3, #0]
 1363 01d8 1268     		ldr	r2, [r2, #0]
 1364 01da 4AB9     		cbnz	r2, .L126
1498:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				xNextTaskUnblockTime = portMAX_DELAY;
 1365              		.loc 1 1498 0
 1366 01dc 1C4B     		ldr	r3, .L166+36
 1367 01de 0193     		str	r3, [sp, #4]
 1368 01e0 019A     		ldr	r2, [sp, #4]
 1369 01e2 4FF0FF33 		mov	r3, #-1
 1370 01e6 1360     		str	r3, [r2, #0]
 1371 01e8 73E7     		b	.L125
 1372              	.LVL119:
 1373              	.L129:
 1374              	.LBE120:
 1375              	.LBB121:
1512:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		prvCheckDelayedTasks();
 1376              		.loc 1 1512 0
 1377 01ea 019B     		ldr	r3, [sp, #4]
 1378 01ec 1A60     		str	r2, [r3, #0]
 1379 01ee B3E7     		b	.L127
 1380              	.LVL120:
 1381              	.L126:
 1382              	.LBE121:
 1383              	.LBB122:
1506:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				pxTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
 1384              		.loc 1 1506 0
 1385 01f0 1B68     		ldr	r3, [r3, #0]
1507:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( pxTCB->xGenericListItem ) );
 1386              		.loc 1 1507 0
 1387 01f2 174A     		ldr	r2, .L166+36
1506:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				pxTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
 1388              		.loc 1 1506 0
 1389 01f4 DB68     		ldr	r3, [r3, #12]
1507:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( pxTCB->xGenericListItem ) );
 1390              		.loc 1 1507 0
 1391 01f6 0192     		str	r2, [sp, #4]
1506:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				pxTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
 1392              		.loc 1 1506 0
 1393 01f8 DB68     		ldr	r3, [r3, #12]
 1394              	.LVL121:
1507:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( pxTCB->xGenericListItem ) );
 1395              		.loc 1 1507 0
 1396 01fa 5B68     		ldr	r3, [r3, #4]
 1397              	.LVL122:
 1398 01fc 1360     		str	r3, [r2, #0]
 1399 01fe 68E7     		b	.L125
 1400              	.LVL123:
 1401              	.L165:
 1402              	.LBE122:
 1403              	.LBE123:
 1404              	.LBE124:
 1405              	.LBE125:
 1406              	.LBE128:
 1407              	.LBE136:
 1408              	.LBB137:
 1409              	.LBB134:
 1410              	.LBB132:
 1411              	.LBB133:
2163:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		vListInsert( ( xList * ) pxOverflowDelayedTaskList, ( xListItem * ) &( pxCurrentTCB->xGenericList
 1412              		.loc 1 2163 0
 1413 0200 194B     		ldr	r3, .L166+60
 1414 0202 1868     		ldr	r0, [r3, #0]
 1415 0204 3168     		ldr	r1, [r6, #0]
 1416 0206 154B     		ldr	r3, .L166+48
 1417 0208 0431     		adds	r1, r1, #4
 1418 020a 9847     		blx	r3
 1419              	.LVL124:
 1420 020c 0EE7     		b	.L114
 1421              	.LVL125:
 1422              	.L120:
 1423              	.LBE133:
 1424              	.LBE132:
 1425              	.LBE134:
 1426              	.LBE137:
 1427              	.LBB138:
 1428              	.LBB129:
 1429              	.LBB126:
1223:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				if( ( xYieldRequired == pdTRUE ) || ( xMissedYield == pdTRUE ) )
 1430              		.loc 1 1223 0
 1431 020e BAF1010F 		cmp	sl, #1
 1432 0212 AAD0     		beq	.L161
 1433 0214 104B     		ldr	r3, .L166+44
 1434 0216 1A68     		ldr	r2, [r3, #0]
 1435 0218 012A     		cmp	r2, #1
 1436 021a C5D1     		bne	.L115
 1437              	.LVL126:
 1438              	.L135:
1226:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					xMissedYield = pdFALSE;
 1439              		.loc 1 1226 0
 1440 021c 0022     		movs	r2, #0
 1441 021e 1A60     		str	r2, [r3, #0]
1227:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					portYIELD_WITHIN_API();
 1442              		.loc 1 1227 0
 1443 0220 104B     		ldr	r3, .L166+56
 1444 0222 9847     		blx	r3
 1445              	.LVL127:
 1446              	.LBE126:
1232:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	taskEXIT_CRITICAL();
 1447              		.loc 1 1232 0
 1448 0224 0E4B     		ldr	r3, .L166+52
 1449 0226 9847     		blx	r3
 1450              	.LVL128:
 1451 0228 C2E7     		b	.L110
 1452              	.L167:
 1453 022a 00BF     		.align	2
 1454              	.L166:
 1455 022c 00000000 		.word	.LANCHOR10
 1456 0230 00000000 		.word	vPortEnterCritical
 1457 0234 00000000 		.word	.LANCHOR3
 1458 0238 00000000 		.word	.LANCHOR4
 1459 023c 00000000 		.word	.LANCHOR5
 1460 0240 00000000 		.word	.LANCHOR7
 1461 0244 00000000 		.word	vListRemove
 1462 0248 00000000 		.word	.LANCHOR6
 1463 024c 00000000 		.word	vListInsertEnd
 1464 0250 00000000 		.word	.LANCHOR11
 1465 0254 00000000 		.word	.LANCHOR12
 1466 0258 00000000 		.word	.LANCHOR9
 1467 025c 00000000 		.word	vListInsert
 1468 0260 00000000 		.word	vPortExitCritical
 1469 0264 00000000 		.word	vPortYieldFromISR
 1470 0268 00000000 		.word	.LANCHOR13
 1471 026c 00000000 		.word	.LANCHOR14
 1472 0270 00000000 		.word	.LANCHOR1
 1473 0274 00000000 		.word	.LANCHOR8
 1474              	.LBE129:
 1475              	.LBE138:
 1476              		.cfi_endproc
 1477              	.LFE4:
 1479              		.section	.text.vTaskDelay,"ax",%progbits
 1480              		.align	2
 1481              		.global	vTaskDelay
 1482              		.thumb
 1483              		.thumb_func
 1485              	vTaskDelay:
 1486              	.LFB5:
 729:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
 1487              		.loc 1 729 0
 1488              		.cfi_startproc
 1489              		@ args = 0, pretend = 0, frame = 8
 1490              		@ frame_needed = 0, uses_anonymous_args = 0
 1491              	.LVL129:
 1492 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 1493              	.LCFI7:
 1494              		.cfi_def_cfa_offset 36
 1495              		.cfi_offset 4, -36
 1496              		.cfi_offset 5, -32
 1497              		.cfi_offset 6, -28
 1498              		.cfi_offset 7, -24
 1499              		.cfi_offset 8, -20
 1500              		.cfi_offset 9, -16
 1501              		.cfi_offset 10, -12
 1502              		.cfi_offset 11, -8
 1503              		.cfi_offset 14, -4
 734:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( xTicksToDelay > ( portTickType ) 0 )
 1504              		.loc 1 734 0
 1505 0004 0346     		mov	r3, r0
 729:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
 1506              		.loc 1 729 0
 1507 0006 83B0     		sub	sp, sp, #12
 1508              	.LCFI8:
 1509              		.cfi_def_cfa_offset 48
 734:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( xTicksToDelay > ( portTickType ) 0 )
 1510              		.loc 1 734 0
 1511 0008 20B9     		cbnz	r0, .L220
 1512              	.LVL130:
 1513              	.L169:
 765:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			portYIELD_WITHIN_API();
 1514              		.loc 1 765 0
 1515 000a 7E4B     		ldr	r3, .L222
 1516 000c 9847     		blx	r3
 1517              	.LVL131:
 1518              	.L168:
 767:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
 1519              		.loc 1 767 0
 1520 000e 03B0     		add	sp, sp, #12
 1521 0010 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 1522              	.LVL132:
 1523              	.L220:
 1524              	.LBB152:
 1525              	.LBB153:
1157:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	++uxSchedulerSuspended;
 1526              		.loc 1 1157 0
 1527 0014 DFF830A2 		ldr	sl, .L222+68
 1528              	.LBE153:
 1529              	.LBE152:
 750:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				xTimeToWake = xTickCount + xTicksToDelay;
 1530              		.loc 1 750 0
 1531 0018 7B4F     		ldr	r7, .L222+4
 1532              	.LBB156:
 1533              	.LBB154:
1157:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	++uxSchedulerSuspended;
 1534              		.loc 1 1157 0
 1535 001a DAF80020 		ldr	r2, [sl, #0]
 1536              	.LBE154:
 1537              	.LBE156:
 755:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				vListRemove( ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) );
 1538              		.loc 1 755 0
 1539 001e 7B49     		ldr	r1, .L222+8
 1540 0020 7B4C     		ldr	r4, .L222+12
 1541              	.LBB157:
 1542              	.LBB155:
1157:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	++uxSchedulerSuspended;
 1543              		.loc 1 1157 0
 1544 0022 0132     		adds	r2, r2, #1
 1545 0024 CAF80020 		str	r2, [sl, #0]
 1546              	.LBE155:
 1547              	.LBE157:
 750:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				xTimeToWake = xTickCount + xTicksToDelay;
 1548              		.loc 1 750 0
 1549 0028 3D68     		ldr	r5, [r7, #0]
 755:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				vListRemove( ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) );
 1550              		.loc 1 755 0
 1551 002a 0868     		ldr	r0, [r1, #0]
 1552              	.LVL133:
 1553 002c 0430     		adds	r0, r0, #4
 750:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				xTimeToWake = xTickCount + xTicksToDelay;
 1554              		.loc 1 750 0
 1555 002e 5D19     		adds	r5, r3, r5
 1556              	.LVL134:
 755:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				vListRemove( ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) );
 1557              		.loc 1 755 0
 1558 0030 A047     		blx	r4
 1559              	.LVL135:
 1560              	.LBB158:
 1561              	.LBB159:
2158:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xGenericListItem ), xTimeToWake );
 1562              		.loc 1 2158 0
 1563 0032 764B     		ldr	r3, .L222+8
 1564 0034 1A68     		ldr	r2, [r3, #0]
2160:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	if( xTimeToWake < xTickCount )
 1565              		.loc 1 2160 0
 1566 0036 3B68     		ldr	r3, [r7, #0]
2158:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xGenericListItem ), xTimeToWake );
 1567              		.loc 1 2158 0
 1568 0038 5560     		str	r5, [r2, #4]
2160:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	if( xTimeToWake < xTickCount )
 1569              		.loc 1 2160 0
 1570 003a 9D42     		cmp	r5, r3
 1571 003c 54D3     		bcc	.L221
2168:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		vListInsert( ( xList * ) pxDelayedTaskList, ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) )
 1572              		.loc 1 2168 0
 1573 003e 754B     		ldr	r3, .L222+16
 1574 0040 1868     		ldr	r0, [r3, #0]
 1575 0042 724B     		ldr	r3, .L222+8
 1576 0044 1968     		ldr	r1, [r3, #0]
 1577 0046 744B     		ldr	r3, .L222+20
 1578 0048 0431     		adds	r1, r1, #4
 1579 004a 9847     		blx	r3
 1580              	.LVL136:
2173:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( xTimeToWake < xNextTaskUnblockTime )
 1581              		.loc 1 2173 0
 1582 004c 734B     		ldr	r3, .L222+24
 1583 004e 1A68     		ldr	r2, [r3, #0]
 1584 0050 9542     		cmp	r5, r2
2175:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			xNextTaskUnblockTime = xTimeToWake;
 1585              		.loc 1 2175 0
 1586 0052 38BF     		it	cc
 1587 0054 1D60     		strcc	r5, [r3, #0]
 1588              	.L171:
 1589              	.LVL137:
 1590              	.LBE159:
 1591              	.LBE158:
 1592              	.LBB163:
 1593              	.LBB164:
1175:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	taskENTER_CRITICAL();
 1594              		.loc 1 1175 0
 1595 0056 724B     		ldr	r3, .L222+28
 1596 0058 9847     		blx	r3
 1597              	.LVL138:
1177:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		--uxSchedulerSuspended;
 1598              		.loc 1 1177 0
 1599 005a DAF80030 		ldr	r3, [sl, #0]
 1600 005e 013B     		subs	r3, r3, #1
 1601 0060 CAF80030 		str	r3, [sl, #0]
1179:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( uxSchedulerSuspended == ( unsigned portBASE_TYPE ) pdFALSE )
 1602              		.loc 1 1179 0
 1603 0064 DAF80030 		ldr	r3, [sl, #0]
 1604 0068 002B     		cmp	r3, #0
 1605 006a 3AD1     		bne	.L172
1181:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( uxCurrentNumberOfTasks > ( unsigned portBASE_TYPE ) 0 )
 1606              		.loc 1 1181 0
 1607 006c 6D4A     		ldr	r2, .L222+32
 1608 006e 1268     		ldr	r2, [r2, #0]
 1609 0070 002A     		cmp	r2, #0
 1610 0072 36D0     		beq	.L172
 1611 0074 9946     		mov	r9, r3
 1612 0076 21E0     		b	.L215
 1613              	.LVL139:
 1614              	.L176:
 1615              	.LBB165:
1189:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					pxTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY(  ( ( xList * ) &xPendingReadyList ) );
 1616              		.loc 1 1189 0
 1617 0078 6B4B     		ldr	r3, .L222+36
 1618 007a DB68     		ldr	r3, [r3, #12]
 1619 007c D3F80CB0 		ldr	fp, [r3, #12]
 1620              	.LVL140:
1190:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					vListRemove( &( pxTCB->xEventListItem ) );
 1621              		.loc 1 1190 0
 1622 0080 0BF11800 		add	r0, fp, #24
1191:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					vListRemove( &( pxTCB->xGenericListItem ) );
 1623              		.loc 1 1191 0
 1624 0084 0BF10408 		add	r8, fp, #4
1190:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					vListRemove( &( pxTCB->xEventListItem ) );
 1625              		.loc 1 1190 0
 1626 0088 A047     		blx	r4
 1627              	.LVL141:
1191:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					vListRemove( &( pxTCB->xGenericListItem ) );
 1628              		.loc 1 1191 0
 1629 008a 4046     		mov	r0, r8
 1630 008c A047     		blx	r4
 1631              	.LVL142:
1192:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					prvAddTaskToReadyQueue( pxTCB );
 1632              		.loc 1 1192 0
 1633 008e 674B     		ldr	r3, .L222+40
 1634 0090 DBF82C20 		ldr	r2, [fp, #44]
 1635 0094 D3F800C0 		ldr	ip, [r3, #0]
 1636 0098 02EB8200 		add	r0, r2, r2, lsl #2
 1637 009c 6245     		cmp	r2, ip
 1638 009e 4146     		mov	r1, r8
 1639 00a0 06EB8000 		add	r0, r6, r0, lsl #2
 1640 00a4 88BF     		it	hi
 1641 00a6 1A60     		strhi	r2, [r3, #0]
 1642 00a8 A847     		blx	r5
 1643              	.LVL143:
1196:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 1644              		.loc 1 1196 0
 1645 00aa 584A     		ldr	r2, .L222+8
 1646 00ac 1168     		ldr	r1, [r2, #0]
 1647 00ae DBF82C20 		ldr	r2, [fp, #44]
 1648 00b2 CB6A     		ldr	r3, [r1, #44]
1198:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 						xYieldRequired = pdTRUE;
 1649              		.loc 1 1198 0
 1650 00b4 9A42     		cmp	r2, r3
 1651 00b6 28BF     		it	cs
 1652 00b8 4FF00109 		movcs	r9, #1
 1653              	.LVL144:
 1654              	.L215:
1187:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				while( listLIST_IS_EMPTY( ( xList * ) &xPendingReadyList ) == pdFALSE )
 1655              		.loc 1 1187 0
 1656 00bc 5A49     		ldr	r1, .L222+36
1192:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					prvAddTaskToReadyQueue( pxTCB );
 1657              		.loc 1 1192 0
 1658 00be 5C4E     		ldr	r6, .L222+44
1187:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				while( listLIST_IS_EMPTY( ( xList * ) &xPendingReadyList ) == pdFALSE )
 1659              		.loc 1 1187 0
 1660 00c0 0B68     		ldr	r3, [r1, #0]
1192:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					prvAddTaskToReadyQueue( pxTCB );
 1661              		.loc 1 1192 0
 1662 00c2 5C4D     		ldr	r5, .L222+48
1187:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				while( listLIST_IS_EMPTY( ( xList * ) &xPendingReadyList ) == pdFALSE )
 1663              		.loc 1 1187 0
 1664 00c4 002B     		cmp	r3, #0
 1665 00c6 D7D1     		bne	.L176
1205:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				if( uxMissedTicks > ( unsigned portBASE_TYPE ) 0 )
 1666              		.loc 1 1205 0
 1667 00c8 DFF88081 		ldr	r8, .L222+72
 1668 00cc D8F80030 		ldr	r3, [r8, #0]
 1669 00d0 DBB9     		cbnz	r3, .L219
1223:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				if( ( xYieldRequired == pdTRUE ) || ( xMissedYield == pdTRUE ) )
 1670              		.loc 1 1223 0
 1671 00d2 B9F1010F 		cmp	r9, #1
 1672 00d6 00F08280 		beq	.L218
 1673 00da 574B     		ldr	r3, .L222+52
 1674 00dc 1A68     		ldr	r2, [r3, #0]
 1675 00de 012A     		cmp	r2, #1
 1676 00e0 7ED0     		beq	.L192
 1677              	.LVL145:
 1678              	.L172:
 1679              	.LBE165:
1232:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	taskEXIT_CRITICAL();
 1680              		.loc 1 1232 0
 1681 00e2 564B     		ldr	r3, .L222+56
 1682 00e4 9847     		blx	r3
 1683              	.LVL146:
 1684 00e6 90E7     		b	.L169
 1685              	.LVL147:
 1686              	.L221:
 1687              	.LBE164:
 1688              	.LBE163:
 1689              	.LBB180:
 1690              	.LBB162:
 1691              	.LBB160:
 1692              	.LBB161:
2163:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		vListInsert( ( xList * ) pxOverflowDelayedTaskList, ( xListItem * ) &( pxCurrentTCB->xGenericList
 1693              		.loc 1 2163 0
 1694 00e8 554B     		ldr	r3, .L222+60
 1695 00ea 484A     		ldr	r2, .L222+8
 1696 00ec 1868     		ldr	r0, [r3, #0]
 1697 00ee 1168     		ldr	r1, [r2, #0]
 1698 00f0 494B     		ldr	r3, .L222+20
 1699 00f2 0431     		adds	r1, r1, #4
 1700 00f4 9847     		blx	r3
 1701              	.LVL148:
 1702 00f6 AEE7     		b	.L171
 1703              	.LVL149:
 1704              	.L185:
 1705              	.LBE161:
 1706              	.LBE160:
 1707              	.LBE162:
 1708              	.LBE180:
 1709              	.LBB181:
 1710              	.LBB179:
 1711              	.LBB177:
 1712              	.LBB166:
 1713              	.LBB167:
 1714              	.LBB168:
1512:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		prvCheckDelayedTasks();
 1715              		.loc 1 1512 0
 1716 00f8 019A     		ldr	r2, [sp, #4]
 1717 00fa 4FF0FF33 		mov	r3, #-1
 1718 00fe 1360     		str	r3, [r2, #0]
 1719              	.L184:
 1720              	.LBE168:
 1721              	.LBE167:
 1722              	.LBE166:
1210:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 						--uxMissedTicks;
 1723              		.loc 1 1210 0
 1724 0100 D8F80030 		ldr	r3, [r8, #0]
 1725 0104 013B     		subs	r3, r3, #1
 1726 0106 C8F80030 		str	r3, [r8, #0]
 1727              	.L219:
1207:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					while( uxMissedTicks > ( unsigned portBASE_TYPE ) 0 )
 1728              		.loc 1 1207 0
 1729 010a D8F80030 		ldr	r3, [r8, #0]
 1730 010e 002B     		cmp	r3, #0
 1731 0110 65D0     		beq	.L218
 1732              	.LBB175:
 1733              	.LBB173:
1474:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	if( uxSchedulerSuspended == ( unsigned portBASE_TYPE ) pdFALSE )
 1734              		.loc 1 1474 0
 1735 0112 DAF80030 		ldr	r3, [sl, #0]
 1736 0116 002B     		cmp	r3, #0
 1737 0118 47D1     		bne	.L180
1476:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		++xTickCount;
 1738              		.loc 1 1476 0
 1739 011a 3B68     		ldr	r3, [r7, #0]
 1740 011c 0133     		adds	r3, r3, #1
 1741 011e 3B60     		str	r3, [r7, #0]
1477:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( xTickCount == ( portTickType ) 0 )
 1742              		.loc 1 1477 0
 1743 0120 3B68     		ldr	r3, [r7, #0]
 1744 0122 002B     		cmp	r3, #0
 1745 0124 47D0     		beq	.L181
 1746 0126 3D4A     		ldr	r2, .L222+24
 1747 0128 1368     		ldr	r3, [r2, #0]
 1748 012a 0192     		str	r2, [sp, #4]
 1749              	.L182:
 1750              	.LBB169:
1512:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		prvCheckDelayedTasks();
 1751              		.loc 1 1512 0
 1752 012c 3A68     		ldr	r2, [r7, #0]
 1753 012e 9342     		cmp	r3, r2
 1754 0130 E6D8     		bhi	.L184
 1755 0132 3849     		ldr	r1, .L222+16
 1756 0134 0B68     		ldr	r3, [r1, #0]
 1757 0136 1B68     		ldr	r3, [r3, #0]
 1758 0138 002B     		cmp	r3, #0
 1759 013a DDD0     		beq	.L185
 1760 013c 0B68     		ldr	r3, [r1, #0]
 1761 013e 324A     		ldr	r2, .L222+4
 1762 0140 DB68     		ldr	r3, [r3, #12]
 1763 0142 D3F80CB0 		ldr	fp, [r3, #12]
 1764              	.LVL150:
 1765 0146 1168     		ldr	r1, [r2, #0]
 1766 0148 DBF80420 		ldr	r2, [fp, #4]
 1767              	.LVL151:
 1768 014c 9142     		cmp	r1, r2
 1769 014e 4ED3     		bcc	.L186
 1770 0150 374E     		ldr	r6, .L222+44
 1771 0152 384D     		ldr	r5, .L222+48
 1772 0154 09E0     		b	.L188
 1773              	.LVL152:
 1774              	.L216:
 1775 0156 2F4B     		ldr	r3, .L222+16
 1776 0158 1B68     		ldr	r3, [r3, #0]
 1777 015a DB68     		ldr	r3, [r3, #12]
 1778 015c D3F80CB0 		ldr	fp, [r3, #12]
 1779              	.LVL153:
 1780 0160 3968     		ldr	r1, [r7, #0]
 1781 0162 DBF80420 		ldr	r2, [fp, #4]
 1782              	.LVL154:
 1783 0166 8A42     		cmp	r2, r1
 1784 0168 41D8     		bhi	.L186
 1785              	.L188:
 1786 016a 0BF10409 		add	r9, fp, #4
 1787 016e 4846     		mov	r0, r9
 1788 0170 A047     		blx	r4
 1789              	.LVL155:
 1790 0172 DBF82820 		ldr	r2, [fp, #40]
 1791 0176 0BF11800 		add	r0, fp, #24
 1792 017a 0AB1     		cbz	r2, .L189
 1793 017c 244A     		ldr	r2, .L222+12
 1794 017e 9047     		blx	r2
 1795              	.LVL156:
 1796              	.L189:
 1797 0180 2A49     		ldr	r1, .L222+40
 1798 0182 DBF82C30 		ldr	r3, [fp, #44]
 1799 0186 0A68     		ldr	r2, [r1, #0]
 1800 0188 9342     		cmp	r3, r2
 1801 018a 03EB8300 		add	r0, r3, r3, lsl #2
 1802 018e 88BF     		it	hi
 1803 0190 264A     		ldrhi	r2, .L222+40
 1804 0192 06EB8000 		add	r0, r6, r0, lsl #2
 1805 0196 4946     		mov	r1, r9
 1806 0198 88BF     		it	hi
 1807 019a 1360     		strhi	r3, [r2, #0]
 1808 019c A847     		blx	r5
 1809              	.LVL157:
 1810 019e 1D4A     		ldr	r2, .L222+16
 1811 01a0 1368     		ldr	r3, [r2, #0]
 1812 01a2 1B68     		ldr	r3, [r3, #0]
 1813 01a4 002B     		cmp	r3, #0
 1814 01a6 D6D1     		bne	.L216
 1815 01a8 A6E7     		b	.L185
 1816              	.LVL158:
 1817              	.L180:
 1818              	.LBE169:
1516:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		++uxMissedTicks;
 1819              		.loc 1 1516 0
 1820 01aa D8F80030 		ldr	r3, [r8, #0]
 1821 01ae 0133     		adds	r3, r3, #1
 1822 01b0 C8F80030 		str	r3, [r8, #0]
 1823 01b4 A4E7     		b	.L184
 1824              	.L181:
 1825              	.LBB170:
1486:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxTemp = pxDelayedTaskList;
 1826              		.loc 1 1486 0
 1827 01b6 174B     		ldr	r3, .L222+16
1487:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxDelayedTaskList = pxOverflowDelayedTaskList;
 1828              		.loc 1 1487 0
 1829 01b8 2149     		ldr	r1, .L222+60
1486:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxTemp = pxDelayedTaskList;
 1830              		.loc 1 1486 0
 1831 01ba 1868     		ldr	r0, [r3, #0]
 1832              	.LVL159:
1487:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxDelayedTaskList = pxOverflowDelayedTaskList;
 1833              		.loc 1 1487 0
 1834 01bc 0D68     		ldr	r5, [r1, #0]
1489:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			xNumOfOverflows++;
 1835              		.loc 1 1489 0
 1836 01be 214A     		ldr	r2, .L222+64
1487:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxDelayedTaskList = pxOverflowDelayedTaskList;
 1837              		.loc 1 1487 0
 1838 01c0 1D60     		str	r5, [r3, #0]
1488:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxOverflowDelayedTaskList = pxTemp;
 1839              		.loc 1 1488 0
 1840 01c2 0860     		str	r0, [r1, #0]
1489:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			xNumOfOverflows++;
 1841              		.loc 1 1489 0
 1842 01c4 1168     		ldr	r1, [r2, #0]
 1843 01c6 0131     		adds	r1, r1, #1
 1844 01c8 1160     		str	r1, [r2, #0]
1491:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 1845              		.loc 1 1491 0
 1846 01ca 1A68     		ldr	r2, [r3, #0]
 1847 01cc 1268     		ldr	r2, [r2, #0]
 1848 01ce 8AB9     		cbnz	r2, .L183
1498:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				xNextTaskUnblockTime = portMAX_DELAY;
 1849              		.loc 1 1498 0
 1850 01d0 124B     		ldr	r3, .L222+24
 1851 01d2 0193     		str	r3, [sp, #4]
 1852 01d4 019A     		ldr	r2, [sp, #4]
 1853 01d6 4FF0FF33 		mov	r3, #-1
 1854 01da 1360     		str	r3, [r2, #0]
 1855 01dc A6E7     		b	.L182
 1856              	.LVL160:
 1857              	.L218:
 1858 01de 164B     		ldr	r3, .L222+52
 1859              	.L192:
 1860              	.LVL161:
 1861              	.LBE170:
 1862              	.LBE173:
 1863              	.LBE175:
1226:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					xMissedYield = pdFALSE;
 1864              		.loc 1 1226 0
 1865 01e0 0022     		movs	r2, #0
 1866 01e2 1A60     		str	r2, [r3, #0]
1227:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					portYIELD_WITHIN_API();
 1867              		.loc 1 1227 0
 1868 01e4 074B     		ldr	r3, .L222
 1869 01e6 9847     		blx	r3
 1870              	.LVL162:
 1871              	.LBE177:
1232:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	taskEXIT_CRITICAL();
 1872              		.loc 1 1232 0
 1873 01e8 144B     		ldr	r3, .L222+56
 1874 01ea 9847     		blx	r3
 1875              	.LVL163:
 1876 01ec 0FE7     		b	.L168
 1877              	.LVL164:
 1878              	.L186:
 1879              	.LBB178:
 1880              	.LBB176:
 1881              	.LBB174:
 1882              	.LBB171:
1512:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		prvCheckDelayedTasks();
 1883              		.loc 1 1512 0
 1884 01ee 019B     		ldr	r3, [sp, #4]
 1885 01f0 1A60     		str	r2, [r3, #0]
 1886 01f2 85E7     		b	.L184
 1887              	.LVL165:
 1888              	.L183:
 1889              	.LBE171:
 1890              	.LBB172:
1506:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				pxTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
 1891              		.loc 1 1506 0
 1892 01f4 1B68     		ldr	r3, [r3, #0]
1507:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( pxTCB->xGenericListItem ) );
 1893              		.loc 1 1507 0
 1894 01f6 094A     		ldr	r2, .L222+24
1506:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				pxTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
 1895              		.loc 1 1506 0
 1896 01f8 DB68     		ldr	r3, [r3, #12]
1507:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( pxTCB->xGenericListItem ) );
 1897              		.loc 1 1507 0
 1898 01fa 0192     		str	r2, [sp, #4]
1506:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				pxTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
 1899              		.loc 1 1506 0
 1900 01fc DB68     		ldr	r3, [r3, #12]
 1901              	.LVL166:
1507:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( pxTCB->xGenericListItem ) );
 1902              		.loc 1 1507 0
 1903 01fe 5B68     		ldr	r3, [r3, #4]
 1904              	.LVL167:
 1905 0200 1360     		str	r3, [r2, #0]
 1906 0202 93E7     		b	.L182
 1907              	.L223:
 1908              		.align	2
 1909              	.L222:
 1910 0204 00000000 		.word	vPortYieldFromISR
 1911 0208 00000000 		.word	.LANCHOR10
 1912 020c 00000000 		.word	.LANCHOR7
 1913 0210 00000000 		.word	vListRemove
 1914 0214 00000000 		.word	.LANCHOR12
 1915 0218 00000000 		.word	vListInsert
 1916 021c 00000000 		.word	.LANCHOR11
 1917 0220 00000000 		.word	vPortEnterCritical
 1918 0224 00000000 		.word	.LANCHOR3
 1919 0228 00000000 		.word	.LANCHOR4
 1920 022c 00000000 		.word	.LANCHOR5
 1921 0230 00000000 		.word	.LANCHOR6
 1922 0234 00000000 		.word	vListInsertEnd
 1923 0238 00000000 		.word	.LANCHOR9
 1924 023c 00000000 		.word	vPortExitCritical
 1925 0240 00000000 		.word	.LANCHOR13
 1926 0244 00000000 		.word	.LANCHOR14
 1927 0248 00000000 		.word	.LANCHOR1
 1928 024c 00000000 		.word	.LANCHOR8
 1929              	.LBE172:
 1930              	.LBE174:
 1931              	.LBE176:
 1932              	.LBE178:
 1933              	.LBE179:
 1934              	.LBE181:
 1935              		.cfi_endproc
 1936              	.LFE5:
 1938              		.section	.text.uxTaskPriorityGet,"ax",%progbits
 1939              		.align	2
 1940              		.global	uxTaskPriorityGet
 1941              		.thumb
 1942              		.thumb_func
 1944              	uxTaskPriorityGet:
 1945              	.LFB6:
 775:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
 1946              		.loc 1 775 0
 1947              		.cfi_startproc
 1948              		@ args = 0, pretend = 0, frame = 0
 1949              		@ frame_needed = 0, uses_anonymous_args = 0
 1950              	.LVL168:
 1951 0000 10B5     		push	{r4, lr}
 1952              	.LCFI9:
 1953              		.cfi_def_cfa_offset 8
 1954              		.cfi_offset 4, -8
 1955              		.cfi_offset 14, -4
 779:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		taskENTER_CRITICAL();
 1956              		.loc 1 779 0
 1957 0002 064B     		ldr	r3, .L228
 775:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
 1958              		.loc 1 775 0
 1959 0004 0446     		mov	r4, r0
 779:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		taskENTER_CRITICAL();
 1960              		.loc 1 779 0
 1961 0006 9847     		blx	r3
 1962              	.LVL169:
 783:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxTCB = prvGetTCBFromHandle( pxTask );
 1963              		.loc 1 783 0
 1964 0008 24B1     		cbz	r4, .L227
 1965              	.LVL170:
 1966              	.L225:
 784:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1967              		.loc 1 784 0 discriminator 3
 1968 000a E46A     		ldr	r4, [r4, #44]
 1969              	.LVL171:
 786:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		taskEXIT_CRITICAL();
 1970              		.loc 1 786 0 discriminator 3
 1971 000c 044B     		ldr	r3, .L228+4
 1972 000e 9847     		blx	r3
 1973              	.LVL172:
 789:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
 1974              		.loc 1 789 0 discriminator 3
 1975 0010 2046     		mov	r0, r4
 1976 0012 10BD     		pop	{r4, pc}
 1977              	.LVL173:
 1978              	.L227:
 783:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxTCB = prvGetTCBFromHandle( pxTask );
 1979              		.loc 1 783 0 discriminator 1
 1980 0014 034B     		ldr	r3, .L228+8
 1981 0016 1C68     		ldr	r4, [r3, #0]
 1982              	.LVL174:
 1983 0018 F7E7     		b	.L225
 1984              	.L229:
 1985 001a 00BF     		.align	2
 1986              	.L228:
 1987 001c 00000000 		.word	vPortEnterCritical
 1988 0020 00000000 		.word	vPortExitCritical
 1989 0024 00000000 		.word	.LANCHOR7
 1990              		.cfi_endproc
 1991              	.LFE6:
 1993              		.section	.text.vTaskPrioritySet,"ax",%progbits
 1994              		.align	2
 1995              		.global	vTaskPrioritySet
 1996              		.thumb
 1997              		.thumb_func
 1999              	vTaskPrioritySet:
 2000              	.LFB7:
 797:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
 2001              		.loc 1 797 0
 2002              		.cfi_startproc
 2003              		@ args = 0, pretend = 0, frame = 0
 2004              		@ frame_needed = 0, uses_anonymous_args = 0
 2005              	.LVL175:
 2006 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2007              	.LCFI10:
 2008              		.cfi_def_cfa_offset 24
 2009              		.cfi_offset 3, -24
 2010              		.cfi_offset 4, -20
 2011              		.cfi_offset 5, -16
 2012              		.cfi_offset 6, -12
 2013              		.cfi_offset 7, -8
 2014              		.cfi_offset 14, -4
 810:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		taskENTER_CRITICAL();
 2015              		.loc 1 810 0
 2016 0002 244B     		ldr	r3, .L245
 797:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
 2017              		.loc 1 797 0
 2018 0004 0546     		mov	r5, r0
 2019 0006 FE29     		cmp	r1, #254
 2020 0008 34BF     		ite	cc
 2021 000a 0E46     		movcc	r6, r1
 2022 000c FE26     		movcs	r6, #254
 2023              	.LVL176:
 810:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		taskENTER_CRITICAL();
 2024              		.loc 1 810 0
 2025 000e 9847     		blx	r3
 2026              	.LVL177:
 812:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( pxTask == pxCurrentTCB )
 2027              		.loc 1 812 0
 2028 0010 214B     		ldr	r3, .L245+4
 2029 0012 1A68     		ldr	r2, [r3, #0]
 2030 0014 9542     		cmp	r5, r2
 2031 0016 39D0     		beq	.L231
 819:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxTCB = prvGetTCBFromHandle( pxTask );
 2032              		.loc 1 819 0
 2033 0018 2C46     		mov	r4, r5
 2034 001a 002D     		cmp	r5, #0
 2035 001c 36D0     		beq	.L231
 2036              	.LVL178:
 2037              	.L232:
 825:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				uxCurrentPriority = pxTCB->uxBasePriority;
 2038              		.loc 1 825 0 discriminator 3
 2039 001e 636C     		ldr	r3, [r4, #68]
 2040              	.LVL179:
 833:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( uxCurrentPriority != uxNewPriority )
 2041              		.loc 1 833 0 discriminator 3
 2042 0020 B342     		cmp	r3, r6
 2043 0022 15D0     		beq	.L234
 837:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				if( uxNewPriority > uxCurrentPriority )
 2044              		.loc 1 837 0
 2045 0024 17D3     		bcc	.L242
 848:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				else if( pxTask == NULL )
 2046              		.loc 1 848 0
 2047 0026 D5F10105 		rsbs	r5, r5, #1
 2048 002a 38BF     		it	cc
 2049 002c 0025     		movcc	r5, #0
 2050              	.L236:
 2051              	.LVL180:
 861:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					if( pxTCB->uxBasePriority == pxTCB->uxPriority )
 2052              		.loc 1 861 0
 2053 002e E26A     		ldr	r2, [r4, #44]
 881:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxCurrentPriority ] ), &( pxTCB->xGenericLis
 2054              		.loc 1 881 0
 2055 0030 1A4F     		ldr	r7, .L245+8
 867:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					pxTCB->uxBasePriority = uxNewPriority;
 2056              		.loc 1 867 0
 2057 0032 6664     		str	r6, [r4, #68]
 861:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					if( pxTCB->uxBasePriority == pxTCB->uxPriority )
 2058              		.loc 1 861 0
 2059 0034 9342     		cmp	r3, r2
 881:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxCurrentPriority ] ), &( pxTCB->xGenericLis
 2060              		.loc 1 881 0
 2061 0036 6269     		ldr	r2, [r4, #20]
 863:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 						pxTCB->uxPriority = uxNewPriority;
 2062              		.loc 1 863 0
 2063 0038 08BF     		it	eq
 2064 003a E662     		streq	r6, [r4, #44]
 881:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxCurrentPriority ] ), &( pxTCB->xGenericLis
 2065              		.loc 1 881 0
 2066 003c 03EB8303 		add	r3, r3, r3, lsl #2
 2067              	.LVL181:
 2068 0040 07EB8303 		add	r3, r7, r3, lsl #2
 875:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( configMAX_PRIORITIES - ( portTickType ) 
 2069              		.loc 1 875 0
 2070 0044 C6F1FF06 		rsb	r6, r6, #255
 2071              	.LVL182:
 881:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxCurrentPriority ] ), &( pxTCB->xGenericLis
 2072              		.loc 1 881 0
 2073 0048 9A42     		cmp	r2, r3
 875:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( configMAX_PRIORITIES - ( portTickType ) 
 2074              		.loc 1 875 0
 2075 004a A661     		str	r6, [r4, #24]
 881:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxCurrentPriority ] ), &( pxTCB->xGenericLis
 2076              		.loc 1 881 0
 2077 004c 0AD0     		beq	.L243
 890:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				if( xYieldRequired == pdTRUE )
 2078              		.loc 1 890 0
 2079 004e 35B9     		cbnz	r5, .L244
 2080              	.LVL183:
 2081              	.L234:
 896:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		taskEXIT_CRITICAL();
 2082              		.loc 1 896 0
 2083 0050 134B     		ldr	r3, .L245+12
 2084 0052 9847     		blx	r3
 2085              	.LVL184:
 2086 0054 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2087              	.LVL185:
 2088              	.L242:
 839:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					if( pxTask != NULL )
 2089              		.loc 1 839 0
 2090 0056 0035     		adds	r5, r5, #0
 2091 0058 18BF     		it	ne
 2092 005a 0125     		movne	r5, #1
 2093 005c E7E7     		b	.L236
 2094              	.LVL186:
 2095              	.L244:
 892:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					portYIELD_WITHIN_API();
 2096              		.loc 1 892 0
 2097 005e 114B     		ldr	r3, .L245+16
 2098 0060 9847     		blx	r3
 2099              	.LVL187:
 2100 0062 F5E7     		b	.L234
 2101              	.LVL188:
 2102              	.L243:
 886:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					vListRemove( &( pxTCB->xGenericListItem ) );
 2103              		.loc 1 886 0
 2104 0064 261D     		adds	r6, r4, #4
 2105 0066 3046     		mov	r0, r6
 2106 0068 0F4B     		ldr	r3, .L245+20
 2107 006a 9847     		blx	r3
 2108              	.LVL189:
 887:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					prvAddTaskToReadyQueue( pxTCB );
 2109              		.loc 1 887 0
 2110 006c 0F4A     		ldr	r2, .L245+24
 2111 006e E36A     		ldr	r3, [r4, #44]
 2112 0070 1168     		ldr	r1, [r2, #0]
 2113 0072 03EB8300 		add	r0, r3, r3, lsl #2
 2114 0076 8B42     		cmp	r3, r1
 2115 0078 88BF     		it	hi
 2116 007a 1360     		strhi	r3, [r2, #0]
 2117 007c 07EB8000 		add	r0, r7, r0, lsl #2
 2118 0080 3146     		mov	r1, r6
 2119 0082 0B4B     		ldr	r3, .L245+28
 2120 0084 9847     		blx	r3
 2121              	.LVL190:
 890:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				if( xYieldRequired == pdTRUE )
 2122              		.loc 1 890 0
 2123 0086 002D     		cmp	r5, #0
 2124 0088 E2D0     		beq	.L234
 2125 008a E8E7     		b	.L244
 2126              	.LVL191:
 2127              	.L231:
 819:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxTCB = prvGetTCBFromHandle( pxTask );
 2128              		.loc 1 819 0 discriminator 1
 2129 008c 1C68     		ldr	r4, [r3, #0]
 2130 008e 0025     		movs	r5, #0
 2131              	.LVL192:
 2132 0090 C5E7     		b	.L232
 2133              	.L246:
 2134 0092 00BF     		.align	2
 2135              	.L245:
 2136 0094 00000000 		.word	vPortEnterCritical
 2137 0098 00000000 		.word	.LANCHOR7
 2138 009c 00000000 		.word	.LANCHOR6
 2139 00a0 00000000 		.word	vPortExitCritical
 2140 00a4 00000000 		.word	vPortYieldFromISR
 2141 00a8 00000000 		.word	vListRemove
 2142 00ac 00000000 		.word	.LANCHOR5
 2143 00b0 00000000 		.word	vListInsertEnd
 2144              		.cfi_endproc
 2145              	.LFE7:
 2147              		.section	.text.vTaskSuspend,"ax",%progbits
 2148              		.align	2
 2149              		.global	vTaskSuspend
 2150              		.thumb
 2151              		.thumb_func
 2153              	vTaskSuspend:
 2154              	.LFB8:
 905:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
 2155              		.loc 1 905 0
 2156              		.cfi_startproc
 2157              		@ args = 0, pretend = 0, frame = 0
 2158              		@ frame_needed = 0, uses_anonymous_args = 0
 2159              	.LVL193:
 2160 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2161              	.LCFI11:
 2162              		.cfi_def_cfa_offset 24
 2163              		.cfi_offset 4, -24
 2164              		.cfi_offset 5, -20
 2165              		.cfi_offset 6, -16
 2166              		.cfi_offset 7, -12
 2167              		.cfi_offset 8, -8
 2168              		.cfi_offset 14, -4
 912:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( pxTaskToSuspend == pxCurrentTCB )
 2169              		.loc 1 912 0
 2170 0004 DFF82081 		ldr	r8, .L283+32
 908:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		taskENTER_CRITICAL();
 2171              		.loc 1 908 0
 2172 0008 3F4B     		ldr	r3, .L283
 905:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
 2173              		.loc 1 905 0
 2174 000a 0446     		mov	r4, r0
 908:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		taskENTER_CRITICAL();
 2175              		.loc 1 908 0
 2176 000c 9847     		blx	r3
 2177              	.LVL194:
 912:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( pxTaskToSuspend == pxCurrentTCB )
 2178              		.loc 1 912 0
 2179 000e D8F80030 		ldr	r3, [r8, #0]
 2180 0012 9C42     		cmp	r4, r3
 2181 0014 57D0     		beq	.L248
 918:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxTCB = prvGetTCBFromHandle( pxTaskToSuspend );
 2182              		.loc 1 918 0
 2183 0016 2546     		mov	r5, r4
 2184 0018 002C     		cmp	r4, #0
 2185 001a 54D0     		beq	.L248
 2186              	.LVL195:
 2187              	.L249:
 923:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			vListRemove( &( pxTCB->xGenericListItem ) );
 2188              		.loc 1 923 0 discriminator 3
 2189 001c 2E1D     		adds	r6, r5, #4
 2190 001e 3046     		mov	r0, r6
 2191 0020 3A4F     		ldr	r7, .L283+4
 2192 0022 B847     		blx	r7
 2193              	.LVL196:
 926:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( pxTCB->xEventListItem.pvContainer )
 2194              		.loc 1 926 0 discriminator 3
 2195 0024 AB6A     		ldr	r3, [r5, #40]
 2196 0026 13B1     		cbz	r3, .L250
 928:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				vListRemove( &( pxTCB->xEventListItem ) );
 2197              		.loc 1 928 0
 2198 0028 05F11800 		add	r0, r5, #24
 2199 002c B847     		blx	r7
 2200              	.LVL197:
 2201              	.L250:
 931:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			vListInsertEnd( ( xList * ) &xSuspendedTaskList, &( pxTCB->xGenericListItem ) );
 2202              		.loc 1 931 0
 2203 002e 384D     		ldr	r5, .L283+8
 2204              	.LVL198:
 2205 0030 384B     		ldr	r3, .L283+12
 2206 0032 2846     		mov	r0, r5
 2207 0034 3146     		mov	r1, r6
 2208 0036 9847     		blx	r3
 2209              	.LVL199:
 933:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		taskEXIT_CRITICAL();
 2210              		.loc 1 933 0
 2211 0038 374B     		ldr	r3, .L283+16
 2212 003a 9847     		blx	r3
 2213              	.LVL200:
 935:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( ( void * ) pxTaskToSuspend == NULL )
 2214              		.loc 1 935 0
 2215 003c 0CB1     		cbz	r4, .L276
 2216              	.L247:
 2217 003e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2218              	.L276:
 937:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( xSchedulerRunning != pdFALSE )
 2219              		.loc 1 937 0
 2220 0042 364B     		ldr	r3, .L283+20
 2221 0044 1B68     		ldr	r3, [r3, #0]
 2222 0046 002B     		cmp	r3, #0
 2223 0048 45D1     		bne	.L277
 947:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks ) 
 2224              		.loc 1 947 0
 2225 004a 354B     		ldr	r3, .L283+24
 2226 004c 2A68     		ldr	r2, [r5, #0]
 2227 004e 1B68     		ldr	r3, [r3, #0]
 2228 0050 9A42     		cmp	r2, r3
 2229 0052 3CD0     		beq	.L278
 2230              	.LBB186:
 2231              	.LBB187:
1684:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	if( uxSchedulerSuspended != ( unsigned portBASE_TYPE ) pdFALSE )
 2232              		.loc 1 1684 0
 2233 0054 334B     		ldr	r3, .L283+28
 2234 0056 1B68     		ldr	r3, [r3, #0]
 2235 0058 002B     		cmp	r3, #0
 2236 005a 4CD1     		bne	.L279
1714:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		taskFIRST_CHECK_FOR_STACK_OVERFLOW();
 2237              		.loc 1 1714 0
 2238 005c D8F80020 		ldr	r2, [r8, #0]
 2239 0060 D8F80030 		ldr	r3, [r8, #0]
 2240 0064 1268     		ldr	r2, [r2, #0]
 2241 0066 1B6B     		ldr	r3, [r3, #48]
 2242 0068 2F49     		ldr	r1, .L283+32
 2243 006a 9A42     		cmp	r2, r3
 2244 006c 3DD9     		bls	.L280
 2245              	.L255:
 2246              	.LBB188:
1715:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		taskSECOND_CHECK_FOR_STACK_OVERFLOW();
 2247              		.loc 1 1715 0
 2248 006e D8F80030 		ldr	r3, [r8, #0]
 2249 0072 2E49     		ldr	r1, .L283+36
 2250 0074 186B     		ldr	r0, [r3, #48]
 2251 0076 2E4B     		ldr	r3, .L283+40
 2252 0078 2B4C     		ldr	r4, .L283+32
 2253 007a 1422     		movs	r2, #20
 2254 007c 9847     		blx	r3
 2255              	.LVL201:
 2256 007e 0028     		cmp	r0, #0
 2257 0080 2DD1     		bne	.L281
 2258              	.L256:
 2259              	.LBE188:
1718:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopReadyPriority ] ) ) )
 2260              		.loc 1 1718 0
 2261 0082 2C4B     		ldr	r3, .L283+44
 2262 0084 2C49     		ldr	r1, .L283+48
 2263 0086 1A68     		ldr	r2, [r3, #0]
 2264 0088 02EB8202 		add	r2, r2, r2, lsl #2
 2265 008c 9200     		lsls	r2, r2, #2
 2266 008e 8A58     		ldr	r2, [r1, r2]
 2267 0090 4AB9     		cbnz	r2, .L260
 2268              	.L270:
1721:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			--uxTopReadyPriority;
 2269              		.loc 1 1721 0
 2270 0092 1A68     		ldr	r2, [r3, #0]
 2271 0094 013A     		subs	r2, r2, #1
 2272 0096 1A60     		str	r2, [r3, #0]
1718:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopReadyPriority ] ) ) )
 2273              		.loc 1 1718 0
 2274 0098 1A68     		ldr	r2, [r3, #0]
 2275 009a 02EB8202 		add	r2, r2, r2, lsl #2
 2276 009e 51F82220 		ldr	r2, [r1, r2, lsl #2]
 2277 00a2 002A     		cmp	r2, #0
 2278 00a4 F5D0     		beq	.L270
 2279              	.L260:
 2280              	.LBB189:
1726:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopReadyPriority ] ) );
 2281              		.loc 1 1726 0
 2282 00a6 1B68     		ldr	r3, [r3, #0]
 2283 00a8 03EB8303 		add	r3, r3, r3, lsl #2
 2284 00ac 01EB8301 		add	r1, r1, r3, lsl #2
 2285              	.LVL202:
 2286 00b0 01F10802 		add	r2, r1, #8
 2287 00b4 4B68     		ldr	r3, [r1, #4]
 2288 00b6 5B68     		ldr	r3, [r3, #4]
 2289 00b8 9342     		cmp	r3, r2
 2290 00ba 4B60     		str	r3, [r1, #4]
 2291 00bc 20D0     		beq	.L282
 2292              	.L259:
 2293 00be DB68     		ldr	r3, [r3, #12]
 2294 00c0 C8F80030 		str	r3, [r8, #0]
 2295 00c4 BBE7     		b	.L247
 2296              	.LVL203:
 2297              	.L248:
 2298              	.LBE189:
 2299              	.LBE187:
 2300              	.LBE186:
 918:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxTCB = prvGetTCBFromHandle( pxTaskToSuspend );
 2301              		.loc 1 918 0 discriminator 1
 2302 00c6 D8F80050 		ldr	r5, [r8, #0]
 2303 00ca 0024     		movs	r4, #0
 2304              	.LVL204:
 2305 00cc A6E7     		b	.L249
 2306              	.LVL205:
 2307              	.L278:
 953:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					pxCurrentTCB = NULL;
 2308              		.loc 1 953 0
 2309 00ce C8F80040 		str	r4, [r8, #0]
 2310 00d2 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2311              	.L277:
 940:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				portYIELD_WITHIN_API();
 2312              		.loc 1 940 0
 2313 00d6 194B     		ldr	r3, .L283+52
 2314 00d8 9847     		blx	r3
 2315              	.LVL206:
 2316 00da BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2317              	.L281:
 2318              	.LBB193:
 2319              	.LBB192:
 2320              	.LBB190:
1715:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		taskSECOND_CHECK_FOR_STACK_OVERFLOW();
 2321              		.loc 1 1715 0
 2322 00de 2068     		ldr	r0, [r4, #0]
 2323 00e0 2168     		ldr	r1, [r4, #0]
 2324 00e2 174B     		ldr	r3, .L283+56
 2325 00e4 3431     		adds	r1, r1, #52
 2326 00e6 9847     		blx	r3
 2327              	.LVL207:
 2328 00e8 CBE7     		b	.L256
 2329              	.L280:
 2330              	.LBE190:
1714:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		taskFIRST_CHECK_FOR_STACK_OVERFLOW();
 2331              		.loc 1 1714 0
 2332 00ea 0868     		ldr	r0, [r1, #0]
 2333 00ec 0968     		ldr	r1, [r1, #0]
 2334 00ee 144B     		ldr	r3, .L283+56
 2335 00f0 3431     		adds	r1, r1, #52
 2336 00f2 9847     		blx	r3
 2337              	.LVL208:
 2338 00f4 BBE7     		b	.L255
 2339              	.L279:
1688:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		xMissedYield = pdTRUE;
 2340              		.loc 1 1688 0
 2341 00f6 134B     		ldr	r3, .L283+60
 2342 00f8 0122     		movs	r2, #1
 2343 00fa 1A60     		str	r2, [r3, #0]
 2344 00fc BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2345              	.LVL209:
 2346              	.L282:
 2347              	.LBB191:
1726:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopReadyPriority ] ) );
 2348              		.loc 1 1726 0
 2349 0100 5B68     		ldr	r3, [r3, #4]
 2350 0102 4B60     		str	r3, [r1, #4]
 2351 0104 DBE7     		b	.L259
 2352              	.L284:
 2353 0106 00BF     		.align	2
 2354              	.L283:
 2355 0108 00000000 		.word	vPortEnterCritical
 2356 010c 00000000 		.word	vListRemove
 2357 0110 00000000 		.word	.LANCHOR17
 2358 0114 00000000 		.word	vListInsertEnd
 2359 0118 00000000 		.word	vPortExitCritical
 2360 011c 00000000 		.word	.LANCHOR18
 2361 0120 00000000 		.word	.LANCHOR3
 2362 0124 00000000 		.word	.LANCHOR1
 2363 0128 00000000 		.word	.LANCHOR7
 2364 012c 00000000 		.word	.LANCHOR21
 2365 0130 00000000 		.word	memcmp
 2366 0134 00000000 		.word	.LANCHOR5
 2367 0138 00000000 		.word	.LANCHOR6
 2368 013c 00000000 		.word	vPortYieldFromISR
 2369 0140 00000000 		.word	vApplicationStackOverflowHook
 2370 0144 00000000 		.word	.LANCHOR9
 2371              	.LBE191:
 2372              	.LBE192:
 2373              	.LBE193:
 2374              		.cfi_endproc
 2375              	.LFE8:
 2377              		.section	.text.xTaskIsTaskSuspended,"ax",%progbits
 2378              		.align	2
 2379              		.global	xTaskIsTaskSuspended
 2380              		.thumb
 2381              		.thumb_func
 2383              	xTaskIsTaskSuspended:
 2384              	.LFB9:
 969:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
 2385              		.loc 1 969 0
 2386              		.cfi_startproc
 2387              		@ args = 0, pretend = 0, frame = 0
 2388              		@ frame_needed = 0, uses_anonymous_args = 0
 2389              		@ link register save eliminated.
 2390              	.LVL210:
 978:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xGenericListItem ) ) != pdFALSE )
 2391              		.loc 1 978 0
 2392 0000 4369     		ldr	r3, [r0, #20]
 2393 0002 074A     		ldr	r2, .L291
 2394 0004 9342     		cmp	r3, r2
 2395 0006 01D0     		beq	.L290
 2396              	.LVL211:
 2397              	.L288:
 970:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	portBASE_TYPE xReturn = pdFALSE;
 2398              		.loc 1 970 0
 2399 0008 0020     		movs	r0, #0
 2400              	.LVL212:
 995:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
 2401              		.loc 1 995 0
 2402 000a 7047     		bx	lr
 2403              	.LVL213:
 2404              	.L290:
 2405              	.LBB196:
 2406              	.LBB197:
 981:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) != pdTRUE )
 2407              		.loc 1 981 0
 2408 000c 806A     		ldr	r0, [r0, #40]
 2409              	.LVL214:
 2410 000e 054B     		ldr	r3, .L291+4
 2411 0010 9842     		cmp	r0, r3
 2412 0012 F9D0     		beq	.L288
 987:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) == pdTRUE )
 2413              		.loc 1 987 0
 2414 0014 D0F10100 		rsbs	r0, r0, #1
 2415 0018 38BF     		it	cc
 2416 001a 0020     		movcc	r0, #0
 2417 001c 7047     		bx	lr
 2418              	.L292:
 2419 001e 00BF     		.align	2
 2420              	.L291:
 2421 0020 00000000 		.word	.LANCHOR17
 2422 0024 00000000 		.word	.LANCHOR4
 2423              	.LBE197:
 2424              	.LBE196:
 2425              		.cfi_endproc
 2426              	.LFE9:
 2428              		.section	.text.vTaskResume,"ax",%progbits
 2429              		.align	2
 2430              		.global	vTaskResume
 2431              		.thumb
 2432              		.thumb_func
 2434              	vTaskResume:
 2435              	.LFB10:
1003:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
 2436              		.loc 1 1003 0
 2437              		.cfi_startproc
 2438              		@ args = 0, pretend = 0, frame = 0
 2439              		@ frame_needed = 0, uses_anonymous_args = 0
 2440              	.LVL215:
 2441 0000 70B5     		push	{r4, r5, r6, lr}
 2442              	.LCFI12:
 2443              		.cfi_def_cfa_offset 16
 2444              		.cfi_offset 4, -16
 2445              		.cfi_offset 5, -12
 2446              		.cfi_offset 6, -8
 2447              		.cfi_offset 14, -4
1015:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( ( pxTCB != NULL ) && ( pxTCB != pxCurrentTCB ) )
 2448              		.loc 1 1015 0
 2449 0002 0446     		mov	r4, r0
 2450 0004 58B1     		cbz	r0, .L293
1015:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( ( pxTCB != NULL ) && ( pxTCB != pxCurrentTCB ) )
 2451              		.loc 1 1015 0 is_stmt 0 discriminator 1
 2452 0006 164D     		ldr	r5, .L303
 2453 0008 2B68     		ldr	r3, [r5, #0]
 2454 000a 9842     		cmp	r0, r3
 2455 000c 07D0     		beq	.L293
1017:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			taskENTER_CRITICAL();
 2456              		.loc 1 1017 0 is_stmt 1
 2457 000e 154B     		ldr	r3, .L303+4
 2458 0010 9847     		blx	r3
 2459              	.LVL216:
 2460              	.LBB202:
 2461              	.LBB203:
 978:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xGenericListItem ) ) != pdFALSE )
 2462              		.loc 1 978 0
 2463 0012 6369     		ldr	r3, [r4, #20]
 2464 0014 144A     		ldr	r2, .L303+8
 2465 0016 9342     		cmp	r3, r2
 2466 0018 02D0     		beq	.L302
 2467              	.LVL217:
 2468              	.L296:
 2469              	.LBE203:
 2470              	.LBE202:
1037:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			taskEXIT_CRITICAL();
 2471              		.loc 1 1037 0
 2472 001a 144B     		ldr	r3, .L303+12
 2473 001c 9847     		blx	r3
 2474              	.LVL218:
 2475              	.L293:
 2476 001e 70BD     		pop	{r4, r5, r6, pc}
 2477              	.LVL219:
 2478              	.L302:
 2479              	.LBB207:
 2480              	.LBB206:
 2481              	.LBB204:
 2482              	.LBB205:
 981:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) != pdTRUE )
 2483              		.loc 1 981 0
 2484 0020 A36A     		ldr	r3, [r4, #40]
 2485 0022 134A     		ldr	r2, .L303+16
 2486 0024 9342     		cmp	r3, r2
 2487 0026 F8D0     		beq	.L296
 2488              	.LVL220:
 2489              	.LBE205:
 2490              	.LBE204:
 2491              	.LBE206:
 2492              	.LBE207:
1019:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				if( xTaskIsTaskSuspended( pxTCB ) == pdTRUE )
 2493              		.loc 1 1019 0
 2494 0028 002B     		cmp	r3, #0
 2495 002a F6D1     		bne	.L296
1025:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					vListRemove(  &( pxTCB->xGenericListItem ) );
 2496              		.loc 1 1025 0
 2497 002c 261D     		adds	r6, r4, #4
 2498 002e 3046     		mov	r0, r6
 2499 0030 104B     		ldr	r3, .L303+20
 2500              	.LVL221:
 2501 0032 9847     		blx	r3
 2502              	.LVL222:
1026:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					prvAddTaskToReadyQueue( pxTCB );
 2503              		.loc 1 1026 0
 2504 0034 104A     		ldr	r2, .L303+24
 2505 0036 E36A     		ldr	r3, [r4, #44]
 2506 0038 1168     		ldr	r1, [r2, #0]
 2507 003a 1048     		ldr	r0, .L303+28
 2508 003c 8B42     		cmp	r3, r1
 2509 003e 88BF     		it	hi
 2510 0040 1360     		strhi	r3, [r2, #0]
 2511 0042 03EB8303 		add	r3, r3, r3, lsl #2
 2512 0046 00EB8300 		add	r0, r0, r3, lsl #2
 2513 004a 3146     		mov	r1, r6
 2514 004c 0C4B     		ldr	r3, .L303+32
 2515 004e 9847     		blx	r3
 2516              	.LVL223:
1029:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 2517              		.loc 1 1029 0
 2518 0050 2B68     		ldr	r3, [r5, #0]
 2519 0052 E26A     		ldr	r2, [r4, #44]
 2520 0054 DB6A     		ldr	r3, [r3, #44]
 2521 0056 9A42     		cmp	r2, r3
 2522 0058 DFD3     		bcc	.L296
1033:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 						portYIELD_WITHIN_API();
 2523              		.loc 1 1033 0
 2524 005a 0A4B     		ldr	r3, .L303+36
 2525 005c 9847     		blx	r3
 2526              	.LVL224:
 2527 005e DCE7     		b	.L296
 2528              	.L304:
 2529              		.align	2
 2530              	.L303:
 2531 0060 00000000 		.word	.LANCHOR7
 2532 0064 00000000 		.word	vPortEnterCritical
 2533 0068 00000000 		.word	.LANCHOR17
 2534 006c 00000000 		.word	vPortExitCritical
 2535 0070 00000000 		.word	.LANCHOR4
 2536 0074 00000000 		.word	vListRemove
 2537 0078 00000000 		.word	.LANCHOR5
 2538 007c 00000000 		.word	.LANCHOR6
 2539 0080 00000000 		.word	vListInsertEnd
 2540 0084 00000000 		.word	vPortYieldFromISR
 2541              		.cfi_endproc
 2542              	.LFE10:
 2544              		.section	.text.xTaskResumeFromISR,"ax",%progbits
 2545              		.align	2
 2546              		.global	xTaskResumeFromISR
 2547              		.thumb
 2548              		.thumb_func
 2550              	xTaskResumeFromISR:
 2551              	.LFB11:
1048:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
 2552              		.loc 1 1048 0
 2553              		.cfi_startproc
 2554              		@ args = 0, pretend = 0, frame = 0
 2555              		@ frame_needed = 0, uses_anonymous_args = 0
 2556              	.LVL225:
 2557              	.LBB212:
 2558              	.LBB213:
 978:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xGenericListItem ) ) != pdFALSE )
 2559              		.loc 1 978 0
 2560 0000 4369     		ldr	r3, [r0, #20]
 2561 0002 194A     		ldr	r2, .L313
 2562 0004 9342     		cmp	r3, r2
 2563              	.LBE213:
 2564              	.LBE212:
1048:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
 2565              		.loc 1 1048 0
 2566 0006 70B5     		push	{r4, r5, r6, lr}
 2567              	.LCFI13:
 2568              		.cfi_def_cfa_offset 16
 2569              		.cfi_offset 4, -16
 2570              		.cfi_offset 5, -12
 2571              		.cfi_offset 6, -8
 2572              		.cfi_offset 14, -4
1048:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
 2573              		.loc 1 1048 0
 2574 0008 0446     		mov	r4, r0
 2575              	.LVL226:
 2576              	.LBB218:
 2577              	.LBB216:
 978:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xGenericListItem ) ) != pdFALSE )
 2578              		.loc 1 978 0
 2579 000a 02D0     		beq	.L312
 2580              	.LVL227:
 2581              	.L311:
 2582              	.LBE216:
 2583              	.LBE218:
1049:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	portBASE_TYPE xYieldRequired = pdFALSE;
 2584              		.loc 1 1049 0
 2585 000c 0025     		movs	r5, #0
 2586              	.LVL228:
1076:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
 2587              		.loc 1 1076 0
 2588 000e 2846     		mov	r0, r5
 2589 0010 70BD     		pop	{r4, r5, r6, pc}
 2590              	.LVL229:
 2591              	.L312:
 2592              	.LBB219:
 2593              	.LBB217:
 2594              	.LBB214:
 2595              	.LBB215:
 981:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) != pdTRUE )
 2596              		.loc 1 981 0
 2597 0012 856A     		ldr	r5, [r0, #40]
 2598 0014 1548     		ldr	r0, .L313+4
 2599              	.LVL230:
 2600 0016 8542     		cmp	r5, r0
 2601 0018 F8D0     		beq	.L311
 2602              	.LVL231:
 2603              	.LBE215:
 2604              	.LBE214:
 2605              	.LBE217:
 2606              	.LBE219:
1056:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( xTaskIsTaskSuspended( pxTCB ) == pdTRUE )
 2607              		.loc 1 1056 0
 2608 001a 002D     		cmp	r5, #0
 2609 001c F6D1     		bne	.L311
1060:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( uxSchedulerSuspended == ( unsigned portBASE_TYPE ) pdFALSE )
 2610              		.loc 1 1060 0
 2611 001e 144B     		ldr	r3, .L313+8
 2612 0020 1B68     		ldr	r3, [r3, #0]
 2613 0022 DBB9     		cbnz	r3, .L307
1062:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				xYieldRequired = ( pxTCB->uxPriority >= pxCurrentTCB->uxPriority );
 2614              		.loc 1 1062 0
 2615 0024 134A     		ldr	r2, .L313+12
 2616 0026 E36A     		ldr	r3, [r4, #44]
 2617 0028 1268     		ldr	r2, [r2, #0]
 2618 002a D56A     		ldr	r5, [r2, #44]
 2619              	.LVL232:
1063:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				vListRemove(  &( pxTCB->xGenericListItem ) );
 2620              		.loc 1 1063 0
 2621 002c 261D     		adds	r6, r4, #4
 2622 002e 3046     		mov	r0, r6
1062:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				xYieldRequired = ( pxTCB->uxPriority >= pxCurrentTCB->uxPriority );
 2623              		.loc 1 1062 0
 2624 0030 AB42     		cmp	r3, r5
1063:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				vListRemove(  &( pxTCB->xGenericListItem ) );
 2625              		.loc 1 1063 0
 2626 0032 114B     		ldr	r3, .L313+16
1062:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				xYieldRequired = ( pxTCB->uxPriority >= pxCurrentTCB->uxPriority );
 2627              		.loc 1 1062 0
 2628 0034 34BF     		ite	cc
 2629 0036 0025     		movcc	r5, #0
 2630 0038 0125     		movcs	r5, #1
 2631              	.LVL233:
1063:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				vListRemove(  &( pxTCB->xGenericListItem ) );
 2632              		.loc 1 1063 0
 2633 003a 9847     		blx	r3
 2634              	.LVL234:
1064:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				prvAddTaskToReadyQueue( pxTCB );
 2635              		.loc 1 1064 0
 2636 003c 0F4A     		ldr	r2, .L313+20
 2637 003e E36A     		ldr	r3, [r4, #44]
 2638 0040 1168     		ldr	r1, [r2, #0]
 2639 0042 0F48     		ldr	r0, .L313+24
 2640 0044 8B42     		cmp	r3, r1
 2641 0046 88BF     		it	hi
 2642 0048 1360     		strhi	r3, [r2, #0]
 2643 004a 03EB8303 		add	r3, r3, r3, lsl #2
 2644 004e 00EB8300 		add	r0, r0, r3, lsl #2
 2645 0052 3146     		mov	r1, r6
 2646 0054 0B4B     		ldr	r3, .L313+28
 2647 0056 9847     		blx	r3
 2648              	.LVL235:
1076:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
 2649              		.loc 1 1076 0
 2650 0058 2846     		mov	r0, r5
 2651 005a 70BD     		pop	{r4, r5, r6, pc}
 2652              	.LVL236:
 2653              	.L307:
1071:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				vListInsertEnd( ( xList * ) &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
 2654              		.loc 1 1071 0
 2655 005c 04F11801 		add	r1, r4, #24
 2656 0060 084B     		ldr	r3, .L313+28
 2657 0062 9847     		blx	r3
 2658              	.LVL237:
1076:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
 2659              		.loc 1 1076 0
 2660 0064 2846     		mov	r0, r5
 2661 0066 70BD     		pop	{r4, r5, r6, pc}
 2662              	.L314:
 2663              		.align	2
 2664              	.L313:
 2665 0068 00000000 		.word	.LANCHOR17
 2666 006c 00000000 		.word	.LANCHOR4
 2667 0070 00000000 		.word	.LANCHOR1
 2668 0074 00000000 		.word	.LANCHOR7
 2669 0078 00000000 		.word	vListRemove
 2670 007c 00000000 		.word	.LANCHOR5
 2671 0080 00000000 		.word	.LANCHOR6
 2672 0084 00000000 		.word	vListInsertEnd
 2673              		.cfi_endproc
 2674              	.LFE11:
 2676              		.section	.text.vTaskStartScheduler,"ax",%progbits
 2677              		.align	2
 2678              		.global	vTaskStartScheduler
 2679              		.thumb
 2680              		.thumb_func
 2682              	vTaskStartScheduler:
 2683              	.LFB12:
1089:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** {
 2684              		.loc 1 1089 0
 2685              		.cfi_startproc
 2686              		@ args = 0, pretend = 0, frame = 8
 2687              		@ frame_needed = 0, uses_anonymous_args = 0
 2688              	.LVL238:
 2689 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, sl, lr}
 2690              	.LCFI14:
 2691              		.cfi_def_cfa_offset 32
 2692              		.cfi_offset 4, -32
 2693              		.cfi_offset 5, -28
 2694              		.cfi_offset 6, -24
 2695              		.cfi_offset 7, -20
 2696              		.cfi_offset 8, -16
 2697              		.cfi_offset 9, -12
 2698              		.cfi_offset 10, -8
 2699              		.cfi_offset 14, -4
 2700              	.LBB231:
 2701              	.LBB232:
 2702              	.LBB233:
 2703              	.LBB234:
2187:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	pxNewTCB = ( tskTCB * ) pvPortMalloc( sizeof( tskTCB ) );
 2704              		.loc 1 2187 0
 2705 0004 4820     		movs	r0, #72
 2706              	.LBE234:
 2707              	.LBE233:
 2708              	.LBE232:
 2709              	.LBE231:
1089:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** {
 2710              		.loc 1 1089 0
 2711 0006 82B0     		sub	sp, sp, #8
 2712              	.LCFI15:
 2713              		.cfi_def_cfa_offset 40
 2714              	.LBB260:
 2715              	.LBB258:
 2716              	.LBB238:
 2717              	.LBB235:
2187:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	pxNewTCB = ( tskTCB * ) pvPortMalloc( sizeof( tskTCB ) );
 2718              		.loc 1 2187 0
 2719 0008 514D     		ldr	r5, .L340
 2720 000a A847     		blx	r5
 2721              	.LVL239:
2189:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	if( pxNewTCB != NULL )
 2722              		.loc 1 2189 0
 2723 000c 0446     		mov	r4, r0
 2724 000e 0028     		cmp	r0, #0
 2725 0010 62D0     		beq	.L315
2194:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		pxNewTCB->pxStack = ( portSTACK_TYPE * ) pvPortMallocAligned( ( ( ( size_t )usStackDepth ) * size
 2726              		.loc 1 2194 0
 2727 0012 4FF40070 		mov	r0, #512
 2728              	.LVL240:
 2729 0016 A847     		blx	r5
 2730              	.LVL241:
 2731 0018 2063     		str	r0, [r4, #48]
2196:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( pxNewTCB->pxStack == NULL )
 2732              		.loc 1 2196 0
 2733 001a 0028     		cmp	r0, #0
 2734 001c 00F09380 		beq	.L338
2205:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			memset( pxNewTCB->pxStack, tskSTACK_FILL_BYTE, usStackDepth * sizeof( portSTACK_TYPE ) );
 2735              		.loc 1 2205 0
 2736 0020 A521     		movs	r1, #165
 2737 0022 4FF40072 		mov	r2, #512
 2738 0026 4B4B     		ldr	r3, .L340+4
 2739              	.LBE235:
 2740              	.LBE238:
 2741              	.LBB239:
 2742              	.LBB240:
 2743              	.LBB241:
2027:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	vListInitialiseItem( &( pxTCB->xGenericListItem ) );
 2744              		.loc 1 2027 0
 2745 0028 4B4E     		ldr	r6, .L340+8
 2746              	.LBE241:
 2747              	.LBE240:
 522:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( pxCurrentTCB == NULL )
 2748              		.loc 1 522 0
 2749 002a 4C4F     		ldr	r7, .L340+12
 2750              	.LBE239:
 2751              	.LBB254:
 2752              	.LBB236:
2205:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			memset( pxNewTCB->pxStack, tskSTACK_FILL_BYTE, usStackDepth * sizeof( portSTACK_TYPE ) );
 2753              		.loc 1 2205 0
 2754 002c 9847     		blx	r3
 2755              	.LVL242:
 2756              	.LBE236:
 2757              	.LBE254:
 2758              	.LBB255:
 469:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxTopOfStack = pxNewTCB->pxStack + ( usStackDepth - ( unsigned short ) 1 );
 2759              		.loc 1 469 0
 2760 002e 206B     		ldr	r0, [r4, #48]
 2761              	.LBB247:
 2762              	.LBB242:
2008:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		strncpy( ( char * ) pxTCB->pcTaskName, ( const char * ) pcName, ( unsigned short ) configMAX_TASK
 2763              		.loc 1 2008 0
 2764 0030 4B49     		ldr	r1, .L340+16
 2765 0032 4C4B     		ldr	r3, .L340+20
2011:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	pxTCB->pcTaskName[ ( unsigned short ) configMAX_TASK_NAME_LEN - ( unsigned short ) 1 ] = ( signed 
 2766              		.loc 1 2011 0
 2767 0034 0025     		movs	r5, #0
2008:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		strncpy( ( char * ) pxTCB->pcTaskName, ( const char * ) pcName, ( unsigned short ) configMAX_TASK
 2768              		.loc 1 2008 0
 2769 0036 1022     		movs	r2, #16
 2770              	.LBE242:
 2771              	.LBE247:
 469:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxTopOfStack = pxNewTCB->pxStack + ( usStackDepth - ( unsigned short ) 1 );
 2772              		.loc 1 469 0
 2773 0038 00F5FE79 		add	r9, r0, #508
 2774              	.LVL243:
 2775              	.LBB248:
 2776              	.LBB243:
2027:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	vListInitialiseItem( &( pxTCB->xGenericListItem ) );
 2777              		.loc 1 2027 0
 2778 003c 04F10408 		add	r8, r4, #4
2008:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		strncpy( ( char * ) pxTCB->pcTaskName, ( const char * ) pcName, ( unsigned short ) configMAX_TASK
 2779              		.loc 1 2008 0
 2780 0040 04F13400 		add	r0, r4, #52
 2781 0044 9847     		blx	r3
 2782              	.LVL244:
2027:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	vListInitialiseItem( &( pxTCB->xGenericListItem ) );
 2783              		.loc 1 2027 0
 2784 0046 4046     		mov	r0, r8
2011:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	pxTCB->pcTaskName[ ( unsigned short ) configMAX_TASK_NAME_LEN - ( unsigned short ) 1 ] = ( signed 
 2785              		.loc 1 2011 0
 2786 0048 84F84350 		strb	r5, [r4, #67]
2020:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	pxTCB->uxPriority = uxPriority;
 2787              		.loc 1 2020 0
 2788 004c E562     		str	r5, [r4, #44]
2023:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		pxTCB->uxBasePriority = uxPriority;
 2789              		.loc 1 2023 0
 2790 004e 6564     		str	r5, [r4, #68]
2027:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	vListInitialiseItem( &( pxTCB->xGenericListItem ) );
 2791              		.loc 1 2027 0
 2792 0050 B047     		blx	r6
 2793              	.LVL245:
2028:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	vListInitialiseItem( &( pxTCB->xEventListItem ) );
 2794              		.loc 1 2028 0
 2795 0052 04F11800 		add	r0, r4, #24
 2796 0056 B047     		blx	r6
 2797              	.LVL246:
 2798              	.LBE243:
 2799              	.LBE248:
 470:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxTopOfStack = ( portSTACK_TYPE * ) ( ( ( unsigned long ) pxTopOfStack ) & ( ( unsigned long ) ~
 2800              		.loc 1 470 0
 2801 0058 29F00709 		bic	r9, r9, #7
 2802              	.LVL247:
 2803              	.LBB249:
 2804              	.LBB244:
2035:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), configMAX_PRIORITIES - ( portTickType ) uxPri
 2805              		.loc 1 2035 0
 2806 005c FF23     		movs	r3, #255
 2807              	.LBE244:
 2808              	.LBE249:
 502:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 2809              		.loc 1 502 0
 2810 005e 2A46     		mov	r2, r5
 2811 0060 4149     		ldr	r1, .L340+24
 2812              	.LBB250:
 2813              	.LBB245:
2035:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), configMAX_PRIORITIES - ( portTickType ) uxPri
 2814              		.loc 1 2035 0
 2815 0062 A361     		str	r3, [r4, #24]
2032:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxTCB->xGenericListItem ), pxTCB );
 2816              		.loc 1 2032 0
 2817 0064 2461     		str	r4, [r4, #16]
 2818              	.LBE245:
 2819              	.LBE250:
 502:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 2820              		.loc 1 502 0
 2821 0066 414B     		ldr	r3, .L340+28
 2822              	.LBB251:
 2823              	.LBB246:
2036:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxTCB->xEventListItem ), pxTCB );
 2824              		.loc 1 2036 0
 2825 0068 6462     		str	r4, [r4, #36]
 2826              	.LBE246:
 2827              	.LBE251:
 502:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 2828              		.loc 1 502 0
 2829 006a 4846     		mov	r0, r9
 2830 006c 9847     		blx	r3
 2831              	.LVL248:
 519:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		taskENTER_CRITICAL();
 2832              		.loc 1 519 0
 2833 006e 404B     		ldr	r3, .L340+32
 502:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 2834              		.loc 1 502 0
 2835 0070 2060     		str	r0, [r4, #0]
 519:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		taskENTER_CRITICAL();
 2836              		.loc 1 519 0
 2837 0072 9847     		blx	r3
 2838              	.LVL249:
 521:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			uxCurrentNumberOfTasks++;
 2839              		.loc 1 521 0
 2840 0074 3F4B     		ldr	r3, .L340+36
 2841 0076 1A68     		ldr	r2, [r3, #0]
 2842 0078 0132     		adds	r2, r2, #1
 2843 007a 1A60     		str	r2, [r3, #0]
 522:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( pxCurrentTCB == NULL )
 2844              		.loc 1 522 0
 2845 007c 3D68     		ldr	r5, [r7, #0]
 2846 007e 002D     		cmp	r5, #0
 2847 0080 34D0     		beq	.L339
 541:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				if( xSchedulerRunning == pdFALSE )
 2848              		.loc 1 541 0
 2849 0082 3D4D     		ldr	r5, .L340+40
 2850 0084 2B68     		ldr	r3, [r5, #0]
 2851 0086 002B     		cmp	r3, #0
 2852 0088 29D0     		beq	.L336
 2853 008a 3C4E     		ldr	r6, .L340+44
 2854              	.LVL250:
 2855              	.L320:
 552:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( pxNewTCB->uxPriority > uxTopUsedPriority )
 2856              		.loc 1 552 0
 2857 008c 3C4A     		ldr	r2, .L340+48
 2858 008e E36A     		ldr	r3, [r4, #44]
 2859 0090 1168     		ldr	r1, [r2, #0]
 2860 0092 8B42     		cmp	r3, r1
 554:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				uxTopUsedPriority = pxNewTCB->uxPriority;
 2861              		.loc 1 554 0
 2862 0094 88BF     		it	hi
 2863 0096 1360     		strhi	r3, [r2, #0]
 563:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			uxTaskNumber++;
 2864              		.loc 1 563 0
 2865 0098 3A4A     		ldr	r2, .L340+52
 565:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			prvAddTaskToReadyQueue( pxNewTCB );
 2866              		.loc 1 565 0
 2867 009a 3B49     		ldr	r1, .L340+56
 563:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			uxTaskNumber++;
 2868              		.loc 1 563 0
 2869 009c 1068     		ldr	r0, [r2, #0]
 565:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			prvAddTaskToReadyQueue( pxNewTCB );
 2870              		.loc 1 565 0
 2871 009e 0C68     		ldr	r4, [r1, #0]
 2872              	.LVL251:
 563:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			uxTaskNumber++;
 2873              		.loc 1 563 0
 2874 00a0 0130     		adds	r0, r0, #1
 2875 00a2 1060     		str	r0, [r2, #0]
 565:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			prvAddTaskToReadyQueue( pxNewTCB );
 2876              		.loc 1 565 0
 2877 00a4 A342     		cmp	r3, r4
 2878 00a6 03EB8300 		add	r0, r3, r3, lsl #2
 2879 00aa 88BF     		it	hi
 2880 00ac 0B60     		strhi	r3, [r1, #0]
 2881 00ae 06EB8000 		add	r0, r6, r0, lsl #2
 2882 00b2 4146     		mov	r1, r8
 2883 00b4 354B     		ldr	r3, .L340+60
 2884 00b6 9847     		blx	r3
 2885              	.LVL252:
 570:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		taskEXIT_CRITICAL();
 2886              		.loc 1 570 0
 2887 00b8 354B     		ldr	r3, .L340+64
 2888 00ba 9847     		blx	r3
 2889              	.LVL253:
 2890              	.LBE255:
 580:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
 2891              		.loc 1 580 0
 2892 00bc 2B68     		ldr	r3, [r5, #0]
 2893 00be 03B1     		cbz	r3, .L324
 584:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( pxCurrentTCB->uxPriority < uxPriority )
 2894              		.loc 1 584 0
 2895 00c0 3B68     		ldr	r3, [r7, #0]
 2896              	.L324:
 2897              	.LBE258:
 2898              	.LBE260:
 2899              	.LBB261:
 2900              	.LBB262:
 2901              		.file 2 "/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h"
   1:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** /*
   2:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****     FreeRTOS V7.0.1 - Copyright (C) 2011 Real Time Engineers Ltd.
   3:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 	
   4:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 
   5:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****     ***************************************************************************
   6:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****      *                                                                       *
   7:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****      *    FreeRTOS tutorial books are available in pdf and paperback.        *
   8:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****      *    Complete, revised, and edited pdf reference manuals are also       *
   9:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****      *    available.                                                         *
  10:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****      *                                                                       *
  11:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****      *    Purchasing FreeRTOS documentation will not only help you, by       *
  12:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****      *    ensuring you get running as quickly as possible and with an        *
  13:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****      *    in-depth knowledge of how to use FreeRTOS, it will also help       *
  14:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****      *    the FreeRTOS project to continue with its mission of providing     *
  15:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****      *    professional grade, cross platform, de facto standard solutions    *
  16:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****      *    for microcontrollers - completely free of charge!                  *
  17:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****      *                                                                       *
  18:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****      *    >>> See http://www.FreeRTOS.org/Documentation for details. <<<     *
  19:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****      *                                                                       *
  20:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****      *    Thank you for using FreeRTOS, and thank you for your support!      *
  21:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****      *                                                                       *
  22:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****     ***************************************************************************
  23:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 
  24:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 
  25:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****     This file is part of the FreeRTOS distribution.
  26:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 
  27:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  28:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****     the terms of the GNU General Public License (version 2) as published by the
  29:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****     Free Software Foundation AND MODIFIED BY the FreeRTOS exception.
  30:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****     >>>NOTE<<< The modification to the GPL is included to allow you to
  31:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****     distribute a combined work that includes FreeRTOS without being obliged to
  32:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****     provide the source code for proprietary components outside of the FreeRTOS
  33:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****     kernel.  FreeRTOS is distributed in the hope that it will be useful, but
  34:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****     WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
  35:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****     or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
  36:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****     more details. You should have received a copy of the GNU General Public
  37:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****     License and the FreeRTOS license exception along with FreeRTOS; if not it
  38:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****     can be viewed here: http://www.freertos.org/a00114.html and also obtained
  39:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****     by writing to Richard Barry, contact details for whom are available on the
  40:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****     FreeRTOS WEB site.
  41:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 
  42:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****     1 tab == 4 spaces!
  43:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 
  44:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****     http://www.FreeRTOS.org - Documentation, latest information, license and
  45:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****     contact details.
  46:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 
  47:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****     http://www.SafeRTOS.com - A version that is certified for use in safety
  48:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****     critical systems.
  49:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 
  50:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****     http://www.OpenRTOS.com - Commercial support, development, porting,
  51:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****     licensing and training services.
  52:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** */
  53:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 
  54:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 
  55:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** #ifndef PORTMACRO_H
  56:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** #define PORTMACRO_H
  57:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 
  58:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** #include <stdint.h>
  59:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 
  60:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** #ifdef __cplusplus
  61:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** extern "C" {
  62:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** #endif
  63:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 
  64:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** /*-----------------------------------------------------------
  65:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****  * Port specific definitions.  
  66:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****  *
  67:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  68:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****  * given hardware and compiler.
  69:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****  *
  70:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****  * These settings should not be altered.
  71:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****  *-----------------------------------------------------------
  72:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****  */
  73:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 
  74:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** /* Type definitions. */
  75:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** #define portCHAR		char
  76:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** #define portFLOAT		float
  77:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** #define portDOUBLE		double
  78:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** #define portLONG		long
  79:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** #define portSHORT		short
  80:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** #define portSTACK_TYPE	uint32_t
  81:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** #define portBASE_TYPE	long
  82:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 
  83:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  84:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 	typedef unsigned portSHORT portTickType;
  85:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 	#define portMAX_DELAY ( portTickType ) 0xffff
  86:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** #else
  87:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 	typedef unsigned portLONG portTickType;
  88:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 	#define portMAX_DELAY ( portTickType ) 0xffffffff
  89:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** #endif
  90:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** /*-----------------------------------------------------------*/	
  91:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 
  92:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** /* Architecture specifics. */
  93:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  94:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** #define portTICK_RATE_MS			( ( portTickType ) 1000 / configTICK_RATE_HZ )		
  95:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** #define portBYTE_ALIGNMENT			8
  96:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** /*-----------------------------------------------------------*/	
  97:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 
  98:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 
  99:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** /* Scheduler utilities. */
 100:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** extern void vPortYieldFromISR( void );
 101:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 
 102:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** #define portYIELD()					vPortYieldFromISR()
 103:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 
 104:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) do { if( xSwitchRequired ) { vPortYieldFromISR(); 
 105:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** /*-----------------------------------------------------------*/
 106:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 
 107:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 
 108:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** /* Critical section management. */
 109:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 
 110:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** /* 
 111:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****  * Set basepri to portMAX_SYSCALL_INTERRUPT_PRIORITY without effecting other
 112:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****  * registers.  r0 is clobbered.
 113:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****  */ 
 114:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** static inline void portSET_INTERRUPT_MASK(void)
 115:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** {
 116:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 	uint32_t reg;
 117:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 	asm volatile (
 2902              		.loc 2 117 0
 2903              	@ 117 "/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h" 1
 2904 00c2 4FF0B003 		mov	r3, #176			
 2905 00c6 83F31188 	msr	basepri, r3		
 2906              	
 2907              	@ 0 "" 2
 2908              	.LVL254:
 2909              		.thumb
 2910              	.LBE262:
 2911              	.LBE261:
1116:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		xSchedulerRunning = pdTRUE;
 2912              		.loc 1 1116 0
 2913 00ca 0123     		movs	r3, #1
 2914 00cc 2B60     		str	r3, [r5, #0]
1117:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		xTickCount = ( portTickType ) 0;
 2915              		.loc 1 1117 0
 2916 00ce 314B     		ldr	r3, .L340+68
 2917 00d0 0022     		movs	r2, #0
 2918 00d2 1A60     		str	r2, [r3, #0]
1126:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( xPortStartScheduler() )
 2919              		.loc 1 1126 0
 2920 00d4 304B     		ldr	r3, .L340+72
 2921 00d6 9847     		blx	r3
 2922              	.LVL255:
 2923              	.L315:
1139:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** }
 2924              		.loc 1 1139 0
 2925 00d8 02B0     		add	sp, sp, #8
 2926 00da BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 2927              	.LVL256:
 2928              	.L336:
 2929              	.LBB263:
 2930              	.LBB259:
 2931              	.LBB256:
 543:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					if( pxCurrentTCB->uxPriority <= uxPriority )
 2932              		.loc 1 543 0
 2933 00de 3B68     		ldr	r3, [r7, #0]
 2934 00e0 264E     		ldr	r6, .L340+44
 2935 00e2 DB6A     		ldr	r3, [r3, #44]
 2936 00e4 002B     		cmp	r3, #0
 2937 00e6 D1D1     		bne	.L320
 545:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 						pxCurrentTCB = pxNewTCB;
 2938              		.loc 1 545 0
 2939 00e8 3C60     		str	r4, [r7, #0]
 2940 00ea CFE7     		b	.L320
 2941              	.L339:
 526:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				pxCurrentTCB =  pxNewTCB;
 2942              		.loc 1 526 0
 2943 00ec 3C60     		str	r4, [r7, #0]
 528:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				if( uxCurrentNumberOfTasks == ( unsigned portBASE_TYPE ) 1 )
 2944              		.loc 1 528 0
 2945 00ee 1B68     		ldr	r3, [r3, #0]
 2946 00f0 224E     		ldr	r6, .L340+44
 2947 00f2 012B     		cmp	r3, #1
 2948 00f4 01D0     		beq	.L326
 2949 00f6 204D     		ldr	r5, .L340+40
 2950 00f8 C8E7     		b	.L320
 2951              	.L326:
 2952 00fa DFF8A090 		ldr	r9, .L340+76
 2953              	.LVL257:
 2954              	.L319:
 2955              	.LBB252:
 2956              	.LBB253:
2094:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		vListInitialise( ( xList * ) &( pxReadyTasksLists[ uxPriority ] ) );
 2957              		.loc 1 2094 0
 2958 00fe 05EB8500 		add	r0, r5, r5, lsl #2
 2959 0102 06EB8000 		add	r0, r6, r0, lsl #2
2092:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	for( uxPriority = ( unsigned portBASE_TYPE ) 0U; uxPriority < configMAX_PRIORITIES; uxPriority++ )
 2960              		.loc 1 2092 0
 2961 0106 0135     		adds	r5, r5, #1
2094:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		vListInitialise( ( xList * ) &( pxReadyTasksLists[ uxPriority ] ) );
 2962              		.loc 1 2094 0
 2963 0108 C847     		blx	r9
 2964              	.LVL258:
2092:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	for( uxPriority = ( unsigned portBASE_TYPE ) 0U; uxPriority < configMAX_PRIORITIES; uxPriority++ )
 2965              		.loc 1 2092 0
 2966 010a FF2D     		cmp	r5, #255
2094:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		vListInitialise( ( xList * ) &( pxReadyTasksLists[ uxPriority ] ) );
 2967              		.loc 1 2094 0
 2968 010c 234B     		ldr	r3, .L340+76
2092:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	for( uxPriority = ( unsigned portBASE_TYPE ) 0U; uxPriority < configMAX_PRIORITIES; uxPriority++ )
 2969              		.loc 1 2092 0
 2970 010e F6D1     		bne	.L319
2097:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	vListInitialise( ( xList * ) &xDelayedTaskList1 );
 2971              		.loc 1 2097 0
 2972 0110 DFF8A4A0 		ldr	sl, .L340+104
2098:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	vListInitialise( ( xList * ) &xDelayedTaskList2 );
 2973              		.loc 1 2098 0
 2974 0114 DFF8A490 		ldr	r9, .L340+108
2097:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	vListInitialise( ( xList * ) &xDelayedTaskList1 );
 2975              		.loc 1 2097 0
 2976 0118 0193     		str	r3, [sp, #4]
 2977 011a 5046     		mov	r0, sl
 2978 011c 9847     		blx	r3
 2979              	.LVL259:
2098:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	vListInitialise( ( xList * ) &xDelayedTaskList2 );
 2980              		.loc 1 2098 0
 2981 011e 4846     		mov	r0, r9
 2982 0120 019B     		ldr	r3, [sp, #4]
 2983 0122 154D     		ldr	r5, .L340+40
 2984              	.LVL260:
 2985 0124 9847     		blx	r3
 2986              	.LVL261:
2099:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	vListInitialise( ( xList * ) &xPendingReadyList );
 2987              		.loc 1 2099 0
 2988 0126 1E48     		ldr	r0, .L340+80
 2989 0128 019B     		ldr	r3, [sp, #4]
 2990 012a 9847     		blx	r3
 2991              	.LVL262:
2103:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		vListInitialise( ( xList * ) &xTasksWaitingTermination );
 2992              		.loc 1 2103 0
 2993 012c 1D48     		ldr	r0, .L340+84
 2994 012e 019B     		ldr	r3, [sp, #4]
 2995 0130 9847     		blx	r3
 2996              	.LVL263:
2109:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		vListInitialise( ( xList * ) &xSuspendedTaskList );
 2997              		.loc 1 2109 0
 2998 0132 019B     		ldr	r3, [sp, #4]
 2999 0134 1C48     		ldr	r0, .L340+88
 3000 0136 9847     		blx	r3
 3001              	.LVL264:
2115:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	pxDelayedTaskList = &xDelayedTaskList1;
 3002              		.loc 1 2115 0
 3003 0138 1C4B     		ldr	r3, .L340+92
 3004 013a C3F800A0 		str	sl, [r3, #0]
2116:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 3005              		.loc 1 2116 0
 3006 013e 1C4B     		ldr	r3, .L340+96
 3007 0140 C3F80090 		str	r9, [r3, #0]
 3008 0144 A2E7     		b	.L320
 3009              	.LVL265:
 3010              	.L338:
 3011              	.LBE253:
 3012              	.LBE252:
 3013              	.LBE256:
 3014              	.LBB257:
 3015              	.LBB237:
2199:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			vPortFree( pxNewTCB );
 3016              		.loc 1 2199 0
 3017 0146 2046     		mov	r0, r4
 3018 0148 1A4B     		ldr	r3, .L340+100
 3019 014a 9847     		blx	r3
 3020              	.LVL266:
 3021 014c C4E7     		b	.L315
 3022              	.L341:
 3023 014e 00BF     		.align	2
 3024              	.L340:
 3025 0150 00000000 		.word	pvPortMalloc
 3026 0154 00000000 		.word	memset
 3027 0158 00000000 		.word	vListInitialiseItem
 3028 015c 00000000 		.word	.LANCHOR7
 3029 0160 00000000 		.word	.LC0
 3030 0164 00000000 		.word	strncpy
 3031 0168 00000000 		.word	prvIdleTask
 3032 016c 00000000 		.word	pxPortInitialiseStack
 3033 0170 00000000 		.word	vPortEnterCritical
 3034 0174 00000000 		.word	.LANCHOR3
 3035 0178 00000000 		.word	.LANCHOR18
 3036 017c 00000000 		.word	.LANCHOR6
 3037 0180 00000000 		.word	.LANCHOR19
 3038 0184 00000000 		.word	.LANCHOR20
 3039 0188 00000000 		.word	.LANCHOR5
 3040 018c 00000000 		.word	vListInsertEnd
 3041 0190 00000000 		.word	vPortExitCritical
 3042 0194 00000000 		.word	.LANCHOR10
 3043 0198 00000000 		.word	xPortStartScheduler
 3044 019c 00000000 		.word	vListInitialise
 3045 01a0 00000000 		.word	.LANCHOR4
 3046 01a4 00000000 		.word	.LANCHOR2
 3047 01a8 00000000 		.word	.LANCHOR17
 3048 01ac 00000000 		.word	.LANCHOR12
 3049 01b0 00000000 		.word	.LANCHOR13
 3050 01b4 00000000 		.word	vPortFree
 3051 01b8 00000000 		.word	.LANCHOR15
 3052 01bc 00000000 		.word	.LANCHOR16
 3053              	.LBE237:
 3054              	.LBE257:
 3055              	.LBE259:
 3056              	.LBE263:
 3057              		.cfi_endproc
 3058              	.LFE12:
 3060              		.section	.text.vTaskEndScheduler,"ax",%progbits
 3061              		.align	2
 3062              		.global	vTaskEndScheduler
 3063              		.thumb
 3064              		.thumb_func
 3066              	vTaskEndScheduler:
 3067              	.LFB13:
1143:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** {
 3068              		.loc 1 1143 0
 3069              		.cfi_startproc
 3070              		@ args = 0, pretend = 0, frame = 0
 3071              		@ frame_needed = 0, uses_anonymous_args = 0
 3072 0000 08B5     		push	{r3, lr}
 3073              	.LCFI16:
 3074              		.cfi_def_cfa_offset 8
 3075              		.cfi_offset 3, -8
 3076              		.cfi_offset 14, -4
 3077              	.LBB264:
 3078              	.LBB265:
 3079              		.loc 2 117 0
 3080              	@ 117 "/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h" 1
 3081 0002 4FF0B003 		mov	r3, #176			
 3082 0006 83F31188 	msr	basepri, r3		
 3083              	
 3084              	@ 0 "" 2
 3085              	.LVL267:
 3086              		.thumb
 3087              	.LBE265:
 3088              	.LBE264:
1148:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	xSchedulerRunning = pdFALSE;
 3089              		.loc 1 1148 0
 3090 000a 034B     		ldr	r3, .L343
 3091 000c 0022     		movs	r2, #0
 3092 000e 1A60     		str	r2, [r3, #0]
1149:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	vPortEndScheduler();
 3093              		.loc 1 1149 0
 3094 0010 024B     		ldr	r3, .L343+4
 3095 0012 9847     		blx	r3
 3096              	.LVL268:
 3097 0014 08BD     		pop	{r3, pc}
 3098              	.L344:
 3099 0016 00BF     		.align	2
 3100              	.L343:
 3101 0018 00000000 		.word	.LANCHOR18
 3102 001c 00000000 		.word	vPortEndScheduler
 3103              		.cfi_endproc
 3104              	.LFE13:
 3106              		.section	.text.vTaskSuspendAll,"ax",%progbits
 3107              		.align	2
 3108              		.global	vTaskSuspendAll
 3109              		.thumb
 3110              		.thumb_func
 3112              	vTaskSuspendAll:
 3113              	.LFB14:
1154:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** {
 3114              		.loc 1 1154 0
 3115              		.cfi_startproc
 3116              		@ args = 0, pretend = 0, frame = 0
 3117              		@ frame_needed = 0, uses_anonymous_args = 0
 3118              		@ link register save eliminated.
1157:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	++uxSchedulerSuspended;
 3119              		.loc 1 1157 0
 3120 0000 024B     		ldr	r3, .L346
 3121 0002 1A68     		ldr	r2, [r3, #0]
 3122 0004 0132     		adds	r2, r2, #1
 3123 0006 1A60     		str	r2, [r3, #0]
 3124 0008 7047     		bx	lr
 3125              	.L347:
 3126 000a 00BF     		.align	2
 3127              	.L346:
 3128 000c 00000000 		.word	.LANCHOR1
 3129              		.cfi_endproc
 3130              	.LFE14:
 3132              		.section	.text.xTaskResumeAll,"ax",%progbits
 3133              		.align	2
 3134              		.global	xTaskResumeAll
 3135              		.thumb
 3136              		.thumb_func
 3138              	xTaskResumeAll:
 3139              	.LFB15:
1162:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** {
 3140              		.loc 1 1162 0
 3141              		.cfi_startproc
 3142              		@ args = 0, pretend = 0, frame = 8
 3143              		@ frame_needed = 0, uses_anonymous_args = 0
 3144              	.LVL269:
 3145 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 3146              	.LCFI17:
 3147              		.cfi_def_cfa_offset 36
 3148              		.cfi_offset 4, -36
 3149              		.cfi_offset 5, -32
 3150              		.cfi_offset 6, -28
 3151              		.cfi_offset 7, -24
 3152              		.cfi_offset 8, -20
 3153              		.cfi_offset 9, -16
 3154              		.cfi_offset 10, -12
 3155              		.cfi_offset 11, -8
 3156              		.cfi_offset 14, -4
1175:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	taskENTER_CRITICAL();
 3157              		.loc 1 1175 0
 3158 0004 6D4B     		ldr	r3, .L395
1162:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** {
 3159              		.loc 1 1162 0
 3160 0006 83B0     		sub	sp, sp, #12
 3161              	.LCFI18:
 3162              		.cfi_def_cfa_offset 48
1175:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	taskENTER_CRITICAL();
 3163              		.loc 1 1175 0
 3164 0008 9847     		blx	r3
 3165              	.LVL270:
1177:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		--uxSchedulerSuspended;
 3166              		.loc 1 1177 0
 3167 000a 6D49     		ldr	r1, .L395+4
 3168 000c 0B68     		ldr	r3, [r1, #0]
 3169 000e 013B     		subs	r3, r3, #1
 3170 0010 0B60     		str	r3, [r1, #0]
1179:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( uxSchedulerSuspended == ( unsigned portBASE_TYPE ) pdFALSE )
 3171              		.loc 1 1179 0
 3172 0012 0B68     		ldr	r3, [r1, #0]
 3173 0014 002B     		cmp	r3, #0
 3174 0016 40F09880 		bne	.L352
1181:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( uxCurrentNumberOfTasks > ( unsigned portBASE_TYPE ) 0 )
 3175              		.loc 1 1181 0
 3176 001a 6A4A     		ldr	r2, .L395+8
 3177 001c 1268     		ldr	r2, [r2, #0]
 3178 001e 002A     		cmp	r2, #0
 3179 0020 00F09380 		beq	.L352
 3180 0024 DFF8A0A1 		ldr	sl, .L395+12
 3181 0028 9946     		mov	r9, r3
 3182 002a 1DE0     		b	.L390
 3183              	.LVL271:
 3184              	.L355:
 3185              	.LBB271:
1189:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					pxTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY(  ( ( xList * ) &xPendingReadyList ) );
 3186              		.loc 1 1189 0
 3187 002c 664B     		ldr	r3, .L395+12
 3188 002e DB68     		ldr	r3, [r3, #12]
 3189 0030 DF68     		ldr	r7, [r3, #12]
 3190              	.LVL272:
1190:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					vListRemove( &( pxTCB->xEventListItem ) );
 3191              		.loc 1 1190 0
 3192 0032 07F11800 		add	r0, r7, #24
1191:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					vListRemove( &( pxTCB->xGenericListItem ) );
 3193              		.loc 1 1191 0
 3194 0036 07F10408 		add	r8, r7, #4
1190:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					vListRemove( &( pxTCB->xEventListItem ) );
 3195              		.loc 1 1190 0
 3196 003a A047     		blx	r4
 3197              	.LVL273:
1191:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					vListRemove( &( pxTCB->xGenericListItem ) );
 3198              		.loc 1 1191 0
 3199 003c 4046     		mov	r0, r8
 3200 003e A047     		blx	r4
 3201              	.LVL274:
1192:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					prvAddTaskToReadyQueue( pxTCB );
 3202              		.loc 1 1192 0
 3203 0040 624A     		ldr	r2, .L395+16
 3204 0042 FB6A     		ldr	r3, [r7, #44]
 3205 0044 1468     		ldr	r4, [r2, #0]
 3206 0046 03EB8300 		add	r0, r3, r3, lsl #2
 3207 004a A342     		cmp	r3, r4
 3208 004c 06EB8000 		add	r0, r6, r0, lsl #2
 3209 0050 4146     		mov	r1, r8
 3210 0052 88BF     		it	hi
 3211 0054 1360     		strhi	r3, [r2, #0]
 3212 0056 A847     		blx	r5
 3213              	.LVL275:
1196:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 3214              		.loc 1 1196 0
 3215 0058 5D4B     		ldr	r3, .L395+20
 3216 005a FA6A     		ldr	r2, [r7, #44]
 3217 005c 1B68     		ldr	r3, [r3, #0]
 3218 005e DB6A     		ldr	r3, [r3, #44]
1198:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 						xYieldRequired = pdTRUE;
 3219              		.loc 1 1198 0
 3220 0060 9A42     		cmp	r2, r3
 3221 0062 28BF     		it	cs
 3222 0064 4FF00109 		movcs	r9, #1
 3223              	.LVL276:
 3224              	.L390:
1187:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				while( listLIST_IS_EMPTY( ( xList * ) &xPendingReadyList ) == pdFALSE )
 3225              		.loc 1 1187 0 discriminator 1
 3226 0068 DAF80030 		ldr	r3, [sl, #0]
1190:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					vListRemove( &( pxTCB->xEventListItem ) );
 3227              		.loc 1 1190 0 discriminator 1
 3228 006c 594C     		ldr	r4, .L395+24
1192:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					prvAddTaskToReadyQueue( pxTCB );
 3229              		.loc 1 1192 0 discriminator 1
 3230 006e 5A4E     		ldr	r6, .L395+28
 3231 0070 5A4D     		ldr	r5, .L395+32
1187:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				while( listLIST_IS_EMPTY( ( xList * ) &xPendingReadyList ) == pdFALSE )
 3232              		.loc 1 1187 0 discriminator 1
 3233 0072 002B     		cmp	r3, #0
 3234 0074 DAD1     		bne	.L355
1205:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				if( uxMissedTicks > ( unsigned portBASE_TYPE ) 0 )
 3235              		.loc 1 1205 0
 3236 0076 DFF88881 		ldr	r8, .L395+68
 3237 007a D8F80030 		ldr	r3, [r8, #0]
 3238 007e 002B     		cmp	r3, #0
 3239 0080 00F08E80 		beq	.L356
1207:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					while( uxMissedTicks > ( unsigned portBASE_TYPE ) 0 )
 3240              		.loc 1 1207 0
 3241 0084 D8F80030 		ldr	r3, [r8, #0]
 3242 0088 002B     		cmp	r3, #0
 3243 008a 5CD0     		beq	.L393
 3244              	.LVL277:
 3245              	.L383:
 3246              	.LBB272:
 3247              	.LBB273:
1474:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	if( uxSchedulerSuspended == ( unsigned portBASE_TYPE ) pdFALSE )
 3248              		.loc 1 1474 0
 3249 008c 4C4A     		ldr	r2, .L395+4
 3250 008e 1368     		ldr	r3, [r2, #0]
 3251 0090 002B     		cmp	r3, #0
 3252 0092 61D1     		bne	.L358
1476:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		++xTickCount;
 3253              		.loc 1 1476 0
 3254 0094 524F     		ldr	r7, .L395+36
 3255 0096 3B68     		ldr	r3, [r7, #0]
 3256 0098 0133     		adds	r3, r3, #1
 3257 009a 3B60     		str	r3, [r7, #0]
1477:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( xTickCount == ( portTickType ) 0 )
 3258              		.loc 1 1477 0
 3259 009c 3B68     		ldr	r3, [r7, #0]
 3260 009e 002B     		cmp	r3, #0
 3261 00a0 60D0     		beq	.L359
 3262 00a2 504B     		ldr	r3, .L395+40
 3263 00a4 0193     		str	r3, [sp, #4]
 3264 00a6 1B68     		ldr	r3, [r3, #0]
 3265              	.L360:
 3266              	.LBB274:
1512:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		prvCheckDelayedTasks();
 3267              		.loc 1 1512 0
 3268 00a8 3A68     		ldr	r2, [r7, #0]
 3269 00aa 9A42     		cmp	r2, r3
 3270 00ac 42D3     		bcc	.L362
 3271 00ae DFF83891 		ldr	r9, .L395+44
 3272 00b2 D9F80030 		ldr	r3, [r9, #0]
 3273 00b6 1B68     		ldr	r3, [r3, #0]
 3274 00b8 002B     		cmp	r3, #0
 3275 00ba 37D0     		beq	.L363
 3276 00bc D9F80030 		ldr	r3, [r9, #0]
 3277 00c0 474A     		ldr	r2, .L395+36
 3278 00c2 DB68     		ldr	r3, [r3, #12]
 3279 00c4 D3F80CB0 		ldr	fp, [r3, #12]
 3280              	.LVL278:
 3281 00c8 1168     		ldr	r1, [r2, #0]
 3282 00ca DBF80420 		ldr	r2, [fp, #4]
 3283              	.LVL279:
 3284 00ce 8A42     		cmp	r2, r1
 3285 00d0 5BD8     		bhi	.L364
 3286 00d2 404C     		ldr	r4, .L395+24
 3287 00d4 404E     		ldr	r6, .L395+28
 3288 00d6 414D     		ldr	r5, .L395+32
 3289 00d8 09E0     		b	.L366
 3290              	.LVL280:
 3291              	.L391:
 3292 00da 434B     		ldr	r3, .L395+44
 3293 00dc 1B68     		ldr	r3, [r3, #0]
 3294 00de DB68     		ldr	r3, [r3, #12]
 3295 00e0 D3F80CB0 		ldr	fp, [r3, #12]
 3296              	.LVL281:
 3297 00e4 3968     		ldr	r1, [r7, #0]
 3298 00e6 DBF80420 		ldr	r2, [fp, #4]
 3299              	.LVL282:
 3300 00ea 8A42     		cmp	r2, r1
 3301 00ec 4DD8     		bhi	.L364
 3302              	.L366:
 3303 00ee 0BF1040A 		add	sl, fp, #4
 3304 00f2 5046     		mov	r0, sl
 3305 00f4 A047     		blx	r4
 3306              	.LVL283:
 3307 00f6 DBF82820 		ldr	r2, [fp, #40]
 3308 00fa 0BF11800 		add	r0, fp, #24
 3309 00fe 0AB1     		cbz	r2, .L367
 3310 0100 344A     		ldr	r2, .L395+24
 3311 0102 9047     		blx	r2
 3312              	.LVL284:
 3313              	.L367:
 3314 0104 3149     		ldr	r1, .L395+16
 3315 0106 DBF82C30 		ldr	r3, [fp, #44]
 3316 010a 0A68     		ldr	r2, [r1, #0]
 3317 010c 9342     		cmp	r3, r2
 3318 010e 03EB8300 		add	r0, r3, r3, lsl #2
 3319 0112 88BF     		it	hi
 3320 0114 2D4A     		ldrhi	r2, .L395+16
 3321 0116 06EB8000 		add	r0, r6, r0, lsl #2
 3322 011a 5146     		mov	r1, sl
 3323 011c 88BF     		it	hi
 3324 011e 1360     		strhi	r3, [r2, #0]
 3325 0120 A847     		blx	r5
 3326              	.LVL285:
 3327 0122 D9F80030 		ldr	r3, [r9, #0]
 3328 0126 1B68     		ldr	r3, [r3, #0]
 3329 0128 002B     		cmp	r3, #0
 3330 012a D6D1     		bne	.L391
 3331              	.LVL286:
 3332              	.L363:
 3333 012c 019A     		ldr	r2, [sp, #4]
 3334 012e 4FF0FF33 		mov	r3, #-1
 3335 0132 1360     		str	r3, [r2, #0]
 3336              	.L362:
 3337              	.LBE274:
 3338              	.LBE273:
 3339              	.LBE272:
1210:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 						--uxMissedTicks;
 3340              		.loc 1 1210 0
 3341 0134 D8F80030 		ldr	r3, [r8, #0]
 3342 0138 013B     		subs	r3, r3, #1
 3343 013a C8F80030 		str	r3, [r8, #0]
1207:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					while( uxMissedTicks > ( unsigned portBASE_TYPE ) 0 )
 3344              		.loc 1 1207 0
 3345 013e D8F80030 		ldr	r3, [r8, #0]
 3346 0142 002B     		cmp	r3, #0
 3347 0144 A2D1     		bne	.L383
 3348              	.L393:
 3349 0146 294B     		ldr	r3, .L395+48
 3350 0148 31E0     		b	.L370
 3351              	.L352:
 3352              	.LBB281:
 3353              	.LBB279:
 3354              	.LBB275:
1164:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** signed portBASE_TYPE xAlreadyYielded = pdFALSE;
 3355              		.loc 1 1164 0
 3356 014a 0024     		movs	r4, #0
 3357              	.LVL287:
 3358              	.L350:
 3359              	.LBE275:
 3360              	.LBE279:
 3361              	.LBE281:
 3362              	.LBE271:
1232:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	taskEXIT_CRITICAL();
 3363              		.loc 1 1232 0
 3364 014c 284B     		ldr	r3, .L395+52
 3365 014e 9847     		blx	r3
 3366              	.LVL288:
1235:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** }
 3367              		.loc 1 1235 0
 3368 0150 2046     		mov	r0, r4
 3369 0152 03B0     		add	sp, sp, #12
 3370 0154 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 3371              	.LVL289:
 3372              	.L358:
 3373              	.LBB283:
 3374              	.LBB282:
 3375              	.LBB280:
1516:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		++uxMissedTicks;
 3376              		.loc 1 1516 0
 3377 0158 D8F80030 		ldr	r3, [r8, #0]
 3378 015c 0133     		adds	r3, r3, #1
 3379 015e C8F80030 		str	r3, [r8, #0]
 3380 0162 E7E7     		b	.L362
 3381              	.L359:
 3382              	.LBB276:
1486:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxTemp = pxDelayedTaskList;
 3383              		.loc 1 1486 0
 3384 0164 204B     		ldr	r3, .L395+44
1487:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxDelayedTaskList = pxOverflowDelayedTaskList;
 3385              		.loc 1 1487 0
 3386 0166 2349     		ldr	r1, .L395+56
1486:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxTemp = pxDelayedTaskList;
 3387              		.loc 1 1486 0
 3388 0168 1868     		ldr	r0, [r3, #0]
 3389              	.LVL290:
1487:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxDelayedTaskList = pxOverflowDelayedTaskList;
 3390              		.loc 1 1487 0
 3391 016a 0C68     		ldr	r4, [r1, #0]
1489:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			xNumOfOverflows++;
 3392              		.loc 1 1489 0
 3393 016c 224A     		ldr	r2, .L395+60
1487:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxDelayedTaskList = pxOverflowDelayedTaskList;
 3394              		.loc 1 1487 0
 3395 016e 1C60     		str	r4, [r3, #0]
1488:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxOverflowDelayedTaskList = pxTemp;
 3396              		.loc 1 1488 0
 3397 0170 0860     		str	r0, [r1, #0]
1489:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			xNumOfOverflows++;
 3398              		.loc 1 1489 0
 3399 0172 1168     		ldr	r1, [r2, #0]
 3400 0174 0131     		adds	r1, r1, #1
 3401 0176 1160     		str	r1, [r2, #0]
1491:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 3402              		.loc 1 1491 0
 3403 0178 1A68     		ldr	r2, [r3, #0]
 3404 017a 1268     		ldr	r2, [r2, #0]
 3405 017c 42B9     		cbnz	r2, .L361
1498:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				xNextTaskUnblockTime = portMAX_DELAY;
 3406              		.loc 1 1498 0
 3407 017e 194A     		ldr	r2, .L395+40
 3408 0180 4FF0FF33 		mov	r3, #-1
 3409 0184 0192     		str	r2, [sp, #4]
 3410 0186 1360     		str	r3, [r2, #0]
 3411 0188 8EE7     		b	.L360
 3412              	.LVL291:
 3413              	.L364:
 3414              	.LBE276:
 3415              	.LBB277:
1512:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		prvCheckDelayedTasks();
 3416              		.loc 1 1512 0
 3417 018a 019B     		ldr	r3, [sp, #4]
 3418 018c 1A60     		str	r2, [r3, #0]
 3419 018e D1E7     		b	.L362
 3420              	.LVL292:
 3421              	.L361:
 3422              	.LBE277:
 3423              	.LBB278:
1506:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				pxTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
 3424              		.loc 1 1506 0
 3425 0190 1B68     		ldr	r3, [r3, #0]
1507:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( pxTCB->xGenericListItem ) );
 3426              		.loc 1 1507 0
 3427 0192 144A     		ldr	r2, .L395+40
1506:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				pxTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
 3428              		.loc 1 1506 0
 3429 0194 DB68     		ldr	r3, [r3, #12]
1507:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( pxTCB->xGenericListItem ) );
 3430              		.loc 1 1507 0
 3431 0196 0192     		str	r2, [sp, #4]
1506:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				pxTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
 3432              		.loc 1 1506 0
 3433 0198 DB68     		ldr	r3, [r3, #12]
 3434              	.LVL293:
1507:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( pxTCB->xGenericListItem ) );
 3435              		.loc 1 1507 0
 3436 019a 5B68     		ldr	r3, [r3, #4]
 3437              	.LVL294:
 3438 019c 1360     		str	r3, [r2, #0]
 3439 019e 83E7     		b	.L360
 3440              	.LVL295:
 3441              	.L356:
 3442              	.LBE278:
 3443              	.LBE280:
 3444              	.LBE282:
1223:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				if( ( xYieldRequired == pdTRUE ) || ( xMissedYield == pdTRUE ) )
 3445              		.loc 1 1223 0
 3446 01a0 B9F1010F 		cmp	r9, #1
 3447 01a4 CFD0     		beq	.L393
1223:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				if( ( xYieldRequired == pdTRUE ) || ( xMissedYield == pdTRUE ) )
 3448              		.loc 1 1223 0 is_stmt 0 discriminator 1
 3449 01a6 114B     		ldr	r3, .L395+48
 3450 01a8 1A68     		ldr	r2, [r3, #0]
 3451 01aa 012A     		cmp	r2, #1
 3452 01ac CDD1     		bne	.L352
 3453              	.LVL296:
 3454              	.L370:
1226:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					xMissedYield = pdFALSE;
 3455              		.loc 1 1226 0 is_stmt 1
 3456 01ae 0022     		movs	r2, #0
 3457 01b0 1A60     		str	r2, [r3, #0]
1227:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					portYIELD_WITHIN_API();
 3458              		.loc 1 1227 0
 3459 01b2 124B     		ldr	r3, .L395+64
1225:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					xAlreadyYielded = pdTRUE;
 3460              		.loc 1 1225 0
 3461 01b4 0124     		movs	r4, #1
1227:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 					portYIELD_WITHIN_API();
 3462              		.loc 1 1227 0
 3463 01b6 9847     		blx	r3
 3464              	.LVL297:
 3465 01b8 C8E7     		b	.L350
 3466              	.L396:
 3467 01ba 00BF     		.align	2
 3468              	.L395:
 3469 01bc 00000000 		.word	vPortEnterCritical
 3470 01c0 00000000 		.word	.LANCHOR1
 3471 01c4 00000000 		.word	.LANCHOR3
 3472 01c8 00000000 		.word	.LANCHOR4
 3473 01cc 00000000 		.word	.LANCHOR5
 3474 01d0 00000000 		.word	.LANCHOR7
 3475 01d4 00000000 		.word	vListRemove
 3476 01d8 00000000 		.word	.LANCHOR6
 3477 01dc 00000000 		.word	vListInsertEnd
 3478 01e0 00000000 		.word	.LANCHOR10
 3479 01e4 00000000 		.word	.LANCHOR11
 3480 01e8 00000000 		.word	.LANCHOR12
 3481 01ec 00000000 		.word	.LANCHOR9
 3482 01f0 00000000 		.word	vPortExitCritical
 3483 01f4 00000000 		.word	.LANCHOR13
 3484 01f8 00000000 		.word	.LANCHOR14
 3485 01fc 00000000 		.word	vPortYieldFromISR
 3486 0200 00000000 		.word	.LANCHOR8
 3487              	.LBE283:
 3488              		.cfi_endproc
 3489              	.LFE15:
 3491              		.section	.text.xTaskGetTickCount,"ax",%progbits
 3492              		.align	2
 3493              		.global	xTaskGetTickCount
 3494              		.thumb
 3495              		.thumb_func
 3497              	xTaskGetTickCount:
 3498              	.LFB16:
1249:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** {
 3499              		.loc 1 1249 0
 3500              		.cfi_startproc
 3501              		@ args = 0, pretend = 0, frame = 0
 3502              		@ frame_needed = 0, uses_anonymous_args = 0
 3503 0000 10B5     		push	{r4, lr}
 3504              	.LCFI19:
 3505              		.cfi_def_cfa_offset 8
 3506              		.cfi_offset 4, -8
 3507              		.cfi_offset 14, -4
1253:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	taskENTER_CRITICAL();
 3508              		.loc 1 1253 0
 3509 0002 044B     		ldr	r3, .L398
 3510 0004 9847     		blx	r3
 3511              	.LVL298:
1255:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		xTicks = xTickCount;
 3512              		.loc 1 1255 0
 3513 0006 044B     		ldr	r3, .L398+4
 3514 0008 1C68     		ldr	r4, [r3, #0]
 3515              	.LVL299:
1257:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	taskEXIT_CRITICAL();
 3516              		.loc 1 1257 0
 3517 000a 044B     		ldr	r3, .L398+8
 3518 000c 9847     		blx	r3
 3519              	.LVL300:
1260:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** }
 3520              		.loc 1 1260 0
 3521 000e 2046     		mov	r0, r4
 3522 0010 10BD     		pop	{r4, pc}
 3523              	.L399:
 3524 0012 00BF     		.align	2
 3525              	.L398:
 3526 0014 00000000 		.word	vPortEnterCritical
 3527 0018 00000000 		.word	.LANCHOR10
 3528 001c 00000000 		.word	vPortExitCritical
 3529              		.cfi_endproc
 3530              	.LFE16:
 3532              		.section	.text.xTaskGetTickCountFromISR,"ax",%progbits
 3533              		.align	2
 3534              		.global	xTaskGetTickCountFromISR
 3535              		.thumb
 3536              		.thumb_func
 3538              	xTaskGetTickCountFromISR:
 3539              	.LFB17:
1264:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** {
 3540              		.loc 1 1264 0
 3541              		.cfi_startproc
 3542              		@ args = 0, pretend = 0, frame = 0
 3543              		@ frame_needed = 0, uses_anonymous_args = 0
 3544              		@ link register save eliminated.
 3545              	.LVL301:
 3546              	.LBB284:
 3547              	.LBB285:
 3548              		.loc 2 117 0
 3549              	@ 117 "/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h" 1
 3550 0000 4FF0B003 		mov	r3, #176			
 3551 0004 83F31188 	msr	basepri, r3		
 3552              	
 3553              	@ 0 "" 2
 3554              	.LVL302:
 3555              		.thumb
 3556              	.LBE285:
 3557              	.LBE284:
1269:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	xReturn = xTickCount;
 3558              		.loc 1 1269 0
 3559 0008 034B     		ldr	r3, .L401
 3560 000a 1868     		ldr	r0, [r3, #0]
 3561              	.LVL303:
 3562              	.LBB286:
 3563              	.LBB287:
 118:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 		"mov	%0, %1			\n"
 119:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 		"msr	basepri, %0		\n"
 120:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 			: "=&r"(reg)		/* output operands */
 121:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 			: "i"(configMAX_SYSCALL_INTERRUPT_PRIORITY)	/* input operands */
 122:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 			: 					/* clobber list */
 123:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 	);
 124:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** }
 125:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 
 126:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** /*
 127:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****  * Set basepri back to 0 without effective other registers.
 128:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****  * r0 is clobbered.
 129:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h ****  */
 130:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** static inline void portCLEAR_INTERRUPT_MASK(void)
 131:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** {
 132:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 	uint32_t reg;
 133:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h **** 	asm volatile (
 3564              		.loc 2 133 0
 3565              	@ 133 "/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/portable/portmacro.h" 1
 3566 000c 4FF00003 		mov	r3, #0			
 3567 0010 83F31188 	msr	basepri, r3		
 3568              	
 3569              	@ 0 "" 2
 3570              	.LVL304:
 3571              		.thumb
 3572              	.LBE287:
 3573              	.LBE286:
1273:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** }
 3574              		.loc 1 1273 0
 3575 0014 7047     		bx	lr
 3576              	.L402:
 3577 0016 00BF     		.align	2
 3578              	.L401:
 3579 0018 00000000 		.word	.LANCHOR10
 3580              		.cfi_endproc
 3581              	.LFE17:
 3583              		.section	.text.uxTaskGetNumberOfTasks,"ax",%progbits
 3584              		.align	2
 3585              		.global	uxTaskGetNumberOfTasks
 3586              		.thumb
 3587              		.thumb_func
 3589              	uxTaskGetNumberOfTasks:
 3590              	.LFB18:
1277:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** {
 3591              		.loc 1 1277 0
 3592              		.cfi_startproc
 3593              		@ args = 0, pretend = 0, frame = 0
 3594              		@ frame_needed = 0, uses_anonymous_args = 0
 3595              		@ link register save eliminated.
1280:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	return uxCurrentNumberOfTasks;
 3596              		.loc 1 1280 0
 3597 0000 014B     		ldr	r3, .L404
 3598 0002 1868     		ldr	r0, [r3, #0]
1281:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** }
 3599              		.loc 1 1281 0
 3600 0004 7047     		bx	lr
 3601              	.L405:
 3602 0006 00BF     		.align	2
 3603              	.L404:
 3604 0008 00000000 		.word	.LANCHOR3
 3605              		.cfi_endproc
 3606              	.LFE18:
 3608              		.section	.text.vTaskIncrementTick,"ax",%progbits
 3609              		.align	2
 3610              		.global	vTaskIncrementTick
 3611              		.thumb
 3612              		.thumb_func
 3614              	vTaskIncrementTick:
 3615              	.LFB19:
1468:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** {
 3616              		.loc 1 1468 0
 3617              		.cfi_startproc
 3618              		@ args = 0, pretend = 0, frame = 8
 3619              		@ frame_needed = 0, uses_anonymous_args = 0
 3620 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 3621              	.LCFI20:
 3622              		.cfi_def_cfa_offset 36
 3623              		.cfi_offset 4, -36
 3624              		.cfi_offset 5, -32
 3625              		.cfi_offset 6, -28
 3626              		.cfi_offset 7, -24
 3627              		.cfi_offset 8, -20
 3628              		.cfi_offset 9, -16
 3629              		.cfi_offset 10, -12
 3630              		.cfi_offset 11, -8
 3631              		.cfi_offset 14, -4
1474:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	if( uxSchedulerSuspended == ( unsigned portBASE_TYPE ) pdFALSE )
 3632              		.loc 1 1474 0
 3633 0004 3A4B     		ldr	r3, .L430
 3634 0006 1B68     		ldr	r3, [r3, #0]
1468:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** {
 3635              		.loc 1 1468 0
 3636 0008 83B0     		sub	sp, sp, #12
 3637              	.LCFI21:
 3638              		.cfi_def_cfa_offset 48
1474:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	if( uxSchedulerSuspended == ( unsigned portBASE_TYPE ) pdFALSE )
 3639              		.loc 1 1474 0
 3640 000a 002B     		cmp	r3, #0
 3641 000c 4AD1     		bne	.L407
1476:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		++xTickCount;
 3642              		.loc 1 1476 0
 3643 000e 394D     		ldr	r5, .L430+4
 3644 0010 2B68     		ldr	r3, [r5, #0]
 3645 0012 0133     		adds	r3, r3, #1
 3646 0014 2B60     		str	r3, [r5, #0]
1477:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( xTickCount == ( portTickType ) 0 )
 3647              		.loc 1 1477 0
 3648 0016 2B68     		ldr	r3, [r5, #0]
 3649 0018 002B     		cmp	r3, #0
 3650 001a 4AD0     		beq	.L408
 3651 001c 364A     		ldr	r2, .L430+8
 3652 001e 1368     		ldr	r3, [r2, #0]
 3653 0020 0192     		str	r2, [sp, #4]
 3654              	.L409:
 3655              	.LBB288:
1512:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		prvCheckDelayedTasks();
 3656              		.loc 1 1512 0
 3657 0022 2A68     		ldr	r2, [r5, #0]
 3658 0024 9A42     		cmp	r2, r3
 3659 0026 41D3     		bcc	.L406
1512:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		prvCheckDelayedTasks();
 3660              		.loc 1 1512 0 is_stmt 0 discriminator 1
 3661 0028 344E     		ldr	r6, .L430+12
 3662 002a 3368     		ldr	r3, [r6, #0]
 3663 002c 1B68     		ldr	r3, [r3, #0]
 3664 002e 002B     		cmp	r3, #0
 3665 0030 33D0     		beq	.L412
1512:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		prvCheckDelayedTasks();
 3666              		.loc 1 1512 0
 3667 0032 3368     		ldr	r3, [r6, #0]
 3668 0034 DB68     		ldr	r3, [r3, #12]
 3669 0036 DC68     		ldr	r4, [r3, #12]
 3670              	.LVL305:
 3671 0038 2E4B     		ldr	r3, .L430+4
 3672 003a 1A68     		ldr	r2, [r3, #0]
 3673 003c 6368     		ldr	r3, [r4, #4]
 3674              	.LVL306:
 3675 003e 9342     		cmp	r3, r2
 3676 0040 53D8     		bhi	.L413
 3677 0042 DFF8C0A0 		ldr	sl, .L430+20
 3678 0046 DFF8C090 		ldr	r9, .L430+24
 3679 004a DFF8CC80 		ldr	r8, .L430+40
 3680 004e 2C4F     		ldr	r7, .L430+16
 3681 0050 07E0     		b	.L415
 3682              	.LVL307:
 3683              	.L429:
1512:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		prvCheckDelayedTasks();
 3684              		.loc 1 1512 0 discriminator 3
 3685 0052 2A4B     		ldr	r3, .L430+12
 3686 0054 1B68     		ldr	r3, [r3, #0]
 3687 0056 DB68     		ldr	r3, [r3, #12]
 3688 0058 DC68     		ldr	r4, [r3, #12]
 3689              	.LVL308:
 3690 005a 2A68     		ldr	r2, [r5, #0]
 3691 005c 6368     		ldr	r3, [r4, #4]
 3692              	.LVL309:
 3693 005e 9342     		cmp	r3, r2
 3694 0060 43D8     		bhi	.L413
 3695              	.L415:
1512:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		prvCheckDelayedTasks();
 3696              		.loc 1 1512 0 discriminator 5
 3697 0062 04F1040B 		add	fp, r4, #4
 3698 0066 5846     		mov	r0, fp
 3699 0068 D047     		blx	sl
 3700              	.LVL310:
 3701 006a A36A     		ldr	r3, [r4, #40]
 3702 006c 04F11800 		add	r0, r4, #24
 3703 0070 0BB1     		cbz	r3, .L416
1512:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		prvCheckDelayedTasks();
 3704              		.loc 1 1512 0 discriminator 6
 3705 0072 244B     		ldr	r3, .L430+20
 3706 0074 9847     		blx	r3
 3707              	.LVL311:
 3708              	.L416:
1512:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		prvCheckDelayedTasks();
 3709              		.loc 1 1512 0 discriminator 7
 3710 0076 E36A     		ldr	r3, [r4, #44]
 3711 0078 D9F80020 		ldr	r2, [r9, #0]
 3712 007c 9342     		cmp	r3, r2
 3713 007e 03EB8300 		add	r0, r3, r3, lsl #2
 3714 0082 88BF     		it	hi
 3715 0084 204A     		ldrhi	r2, .L430+24
 3716 0086 08EB8000 		add	r0, r8, r0, lsl #2
 3717 008a 5946     		mov	r1, fp
 3718 008c 88BF     		it	hi
 3719 008e 1360     		strhi	r3, [r2, #0]
 3720 0090 B847     		blx	r7
 3721              	.LVL312:
 3722 0092 3368     		ldr	r3, [r6, #0]
 3723 0094 1B68     		ldr	r3, [r3, #0]
 3724 0096 002B     		cmp	r3, #0
 3725 0098 DBD1     		bne	.L429
 3726              	.LVL313:
 3727              	.L412:
1512:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		prvCheckDelayedTasks();
 3728              		.loc 1 1512 0
 3729 009a 019A     		ldr	r2, [sp, #4]
 3730 009c 4FF0FF33 		mov	r3, #-1
 3731 00a0 1360     		str	r3, [r2, #0]
 3732 00a2 03E0     		b	.L406
 3733              	.L407:
 3734              	.LBE288:
1516:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		++uxMissedTicks;
 3735              		.loc 1 1516 0 is_stmt 1
 3736 00a4 194B     		ldr	r3, .L430+28
 3737 00a6 1A68     		ldr	r2, [r3, #0]
 3738 00a8 0132     		adds	r2, r2, #1
 3739 00aa 1A60     		str	r2, [r3, #0]
 3740              	.L406:
1539:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** }
 3741              		.loc 1 1539 0
 3742 00ac 03B0     		add	sp, sp, #12
 3743 00ae BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 3744              	.L408:
 3745              	.LBB289:
1486:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxTemp = pxDelayedTaskList;
 3746              		.loc 1 1486 0
 3747 00b2 124B     		ldr	r3, .L430+12
1487:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxDelayedTaskList = pxOverflowDelayedTaskList;
 3748              		.loc 1 1487 0
 3749 00b4 1649     		ldr	r1, .L430+32
1486:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxTemp = pxDelayedTaskList;
 3750              		.loc 1 1486 0
 3751 00b6 1868     		ldr	r0, [r3, #0]
 3752              	.LVL314:
1487:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxDelayedTaskList = pxOverflowDelayedTaskList;
 3753              		.loc 1 1487 0
 3754 00b8 0C68     		ldr	r4, [r1, #0]
1489:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			xNumOfOverflows++;
 3755              		.loc 1 1489 0
 3756 00ba 164A     		ldr	r2, .L430+36
1487:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxDelayedTaskList = pxOverflowDelayedTaskList;
 3757              		.loc 1 1487 0
 3758 00bc 1C60     		str	r4, [r3, #0]
1488:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			pxOverflowDelayedTaskList = pxTemp;
 3759              		.loc 1 1488 0
 3760 00be 0860     		str	r0, [r1, #0]
1489:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			xNumOfOverflows++;
 3761              		.loc 1 1489 0
 3762 00c0 1168     		ldr	r1, [r2, #0]
 3763 00c2 0131     		adds	r1, r1, #1
 3764 00c4 1160     		str	r1, [r2, #0]
1491:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 3765              		.loc 1 1491 0
 3766 00c6 1A68     		ldr	r2, [r3, #0]
 3767 00c8 1268     		ldr	r2, [r2, #0]
 3768 00ca 32B9     		cbnz	r2, .L410
1498:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				xNextTaskUnblockTime = portMAX_DELAY;
 3769              		.loc 1 1498 0
 3770 00cc 0A4B     		ldr	r3, .L430+8
 3771 00ce 0193     		str	r3, [sp, #4]
 3772 00d0 019A     		ldr	r2, [sp, #4]
 3773 00d2 4FF0FF33 		mov	r3, #-1
 3774 00d6 1360     		str	r3, [r2, #0]
 3775 00d8 A3E7     		b	.L409
 3776              	.L410:
1506:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				pxTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
 3777              		.loc 1 1506 0
 3778 00da 1B68     		ldr	r3, [r3, #0]
1507:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( pxTCB->xGenericListItem ) );
 3779              		.loc 1 1507 0
 3780 00dc 064A     		ldr	r2, .L430+8
1506:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				pxTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
 3781              		.loc 1 1506 0
 3782 00de DB68     		ldr	r3, [r3, #12]
1507:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( pxTCB->xGenericListItem ) );
 3783              		.loc 1 1507 0
 3784 00e0 0192     		str	r2, [sp, #4]
1506:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				pxTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
 3785              		.loc 1 1506 0
 3786 00e2 DB68     		ldr	r3, [r3, #12]
 3787              	.LVL315:
1507:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( pxTCB->xGenericListItem ) );
 3788              		.loc 1 1507 0
 3789 00e4 5B68     		ldr	r3, [r3, #4]
 3790              	.LVL316:
 3791 00e6 1360     		str	r3, [r2, #0]
 3792 00e8 9BE7     		b	.L409
 3793              	.LVL317:
 3794              	.L413:
 3795              	.LBE289:
 3796              	.LBB290:
1512:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		prvCheckDelayedTasks();
 3797              		.loc 1 1512 0 discriminator 4
 3798 00ea 019A     		ldr	r2, [sp, #4]
 3799 00ec 1360     		str	r3, [r2, #0]
 3800 00ee DDE7     		b	.L406
 3801              	.L431:
 3802              		.align	2
 3803              	.L430:
 3804 00f0 00000000 		.word	.LANCHOR1
 3805 00f4 00000000 		.word	.LANCHOR10
 3806 00f8 00000000 		.word	.LANCHOR11
 3807 00fc 00000000 		.word	.LANCHOR12
 3808 0100 00000000 		.word	vListInsertEnd
 3809 0104 00000000 		.word	vListRemove
 3810 0108 00000000 		.word	.LANCHOR5
 3811 010c 00000000 		.word	.LANCHOR8
 3812 0110 00000000 		.word	.LANCHOR13
 3813 0114 00000000 		.word	.LANCHOR14
 3814 0118 00000000 		.word	.LANCHOR6
 3815              	.LBE290:
 3816              		.cfi_endproc
 3817              	.LFE19:
 3819              		.section	.text.vTaskCleanUpResources,"ax",%progbits
 3820              		.align	2
 3821              		.global	vTaskCleanUpResources
 3822              		.thumb
 3823              		.thumb_func
 3825              	vTaskCleanUpResources:
 3826              	.LFB20:
1545:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
 3827              		.loc 1 1545 0
 3828              		.cfi_startproc
 3829              		@ args = 0, pretend = 0, frame = 0
 3830              		@ frame_needed = 0, uses_anonymous_args = 0
 3831 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 3832              	.LCFI22:
 3833              		.cfi_def_cfa_offset 32
 3834              		.cfi_offset 3, -32
 3835              		.cfi_offset 4, -28
 3836              		.cfi_offset 5, -24
 3837              		.cfi_offset 6, -20
 3838              		.cfi_offset 7, -16
 3839              		.cfi_offset 8, -12
 3840              		.cfi_offset 9, -8
 3841              		.cfi_offset 14, -4
1549:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		usQueue = ( unsigned short ) uxTopUsedPriority + ( unsigned short ) 1;
 3842              		.loc 1 1549 0
 3843 0004 3E4B     		ldr	r3, .L457
 3844 0006 DFF80C81 		ldr	r8, .L457+20
 3845 000a 1E68     		ldr	r6, [r3, #0]
 3846 000c 0136     		adds	r6, r6, #1
 3847 000e B6B2     		uxth	r6, r6
 3848              	.LVL318:
 3849              	.L434:
1554:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			usQueue--;
 3850              		.loc 1 1554 0
 3851 0010 013E     		subs	r6, r6, #1
 3852              	.LVL319:
 3853 0012 B6B2     		uxth	r6, r6
 3854              	.LVL320:
1556:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ usQueue ] ) ) == pdFALSE )
 3855              		.loc 1 1556 0
 3856 0014 B700     		lsls	r7, r6, #2
 3857 0016 BB19     		adds	r3, r7, r6
 3858 0018 58F82330 		ldr	r3, [r8, r3, lsl #2]
 3859 001c DBB1     		cbz	r3, .L437
 3860 001e DFF8F890 		ldr	r9, .L457+24
 3861 0022 384D     		ldr	r5, .L457+4
 3862              	.L433:
 3863              	.LBB303:
1558:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxTCB, &( pxReadyTasksLists[ usQueue ] ) );
 3864              		.loc 1 1558 0
 3865 0024 BA19     		adds	r2, r7, r6
 3866 0026 08EB8202 		add	r2, r8, r2, lsl #2
 3867              	.LVL321:
 3868 002a 02F10801 		add	r1, r2, #8
 3869 002e 5368     		ldr	r3, [r2, #4]
 3870 0030 5B68     		ldr	r3, [r3, #4]
 3871 0032 8B42     		cmp	r3, r1
 3872 0034 5360     		str	r3, [r2, #4]
 3873 0036 08BF     		it	eq
 3874 0038 5B68     		ldreq	r3, [r3, #4]
 3875 003a DC68     		ldr	r4, [r3, #12]
 3876              	.LVL322:
 3877 003c 08BF     		it	eq
 3878 003e 5360     		streq	r3, [r2, #4]
 3879              	.LBE303:
1559:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				vListRemove( ( xListItem * ) &( pxTCB->xGenericListItem ) );
 3880              		.loc 1 1559 0
 3881 0040 201D     		adds	r0, r4, #4
 3882 0042 C847     		blx	r9
 3883              	.LVL323:
 3884              	.LBB304:
 3885              	.LBB305:
2369:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		vPortFreeAligned( pxTCB->pxStack );
 3886              		.loc 1 2369 0
 3887 0044 206B     		ldr	r0, [r4, #48]
 3888 0046 A847     		blx	r5
 3889              	.LVL324:
 3890              		.loc 1 2370 0
 3891 0048 2046     		mov	r0, r4
 3892 004a A847     		blx	r5
 3893              	.LVL325:
 3894              	.LBE305:
 3895              	.LBE304:
1556:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ usQueue ] ) ) == pdFALSE )
 3896              		.loc 1 1556 0
 3897 004c BB19     		adds	r3, r7, r6
 3898              	.LVL326:
 3899 004e 58F82330 		ldr	r3, [r8, r3, lsl #2]
 3900              	.LVL327:
 3901 0052 002B     		cmp	r3, #0
 3902 0054 E6D1     		bne	.L433
 3903              	.LVL328:
 3904              	.L437:
1563:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}while( usQueue > ( unsigned short ) tskIDLE_PRIORITY );
 3905              		.loc 1 1563 0
 3906 0056 002E     		cmp	r6, #0
 3907 0058 DAD1     		bne	.L434
1566:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		while( listLIST_IS_EMPTY( &xDelayedTaskList1 ) == pdFALSE )
 3908              		.loc 1 1566 0 discriminator 1
 3909 005a 2B4E     		ldr	r6, .L457+8
 3910              	.LVL329:
 3911 005c 3368     		ldr	r3, [r6, #0]
 3912 005e BBB1     		cbz	r3, .L442
 3913 0060 DFF8B490 		ldr	r9, .L457+24
 3914 0064 274D     		ldr	r5, .L457+4
 3915 0066 06F10807 		add	r7, r6, #8
 3916              	.L438:
 3917              	.LVL330:
 3918              	.LBB306:
1568:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxTCB, &xDelayedTaskList1 );
 3919              		.loc 1 1568 0
 3920 006a 7368     		ldr	r3, [r6, #4]
 3921 006c 264A     		ldr	r2, .L457+8
 3922 006e 5B68     		ldr	r3, [r3, #4]
 3923 0070 BB42     		cmp	r3, r7
 3924 0072 7360     		str	r3, [r6, #4]
 3925 0074 08BF     		it	eq
 3926 0076 D368     		ldreq	r3, [r2, #12]
 3927 0078 DC68     		ldr	r4, [r3, #12]
 3928              	.LVL331:
 3929 007a 08BF     		it	eq
 3930 007c 5360     		streq	r3, [r2, #4]
 3931              	.LBE306:
1569:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			vListRemove( ( xListItem * ) &( pxTCB->xGenericListItem ) );
 3932              		.loc 1 1569 0
 3933 007e 201D     		adds	r0, r4, #4
 3934 0080 C847     		blx	r9
 3935              	.LVL332:
 3936              	.LBB307:
 3937              	.LBB308:
2369:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		vPortFreeAligned( pxTCB->pxStack );
 3938              		.loc 1 2369 0
 3939 0082 206B     		ldr	r0, [r4, #48]
 3940 0084 A847     		blx	r5
 3941              	.LVL333:
 3942              		.loc 1 2370 0
 3943 0086 2046     		mov	r0, r4
 3944 0088 A847     		blx	r5
 3945              	.LVL334:
 3946              	.LBE308:
 3947              	.LBE307:
1566:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		while( listLIST_IS_EMPTY( &xDelayedTaskList1 ) == pdFALSE )
 3948              		.loc 1 1566 0
 3949 008a 3368     		ldr	r3, [r6, #0]
 3950 008c 002B     		cmp	r3, #0
 3951 008e ECD1     		bne	.L438
 3952              	.LVL335:
 3953              	.L442:
1575:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		while( listLIST_IS_EMPTY( &xDelayedTaskList2 ) == pdFALSE )
 3954              		.loc 1 1575 0
 3955 0090 1E4E     		ldr	r6, .L457+12
 3956 0092 3368     		ldr	r3, [r6, #0]
 3957 0094 BBB1     		cbz	r3, .L440
 3958 0096 DFF88090 		ldr	r9, .L457+24
 3959 009a 1A4D     		ldr	r5, .L457+4
 3960 009c 06F10807 		add	r7, r6, #8
 3961              	.L439:
 3962              	.LVL336:
 3963              	.LBB309:
1577:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxTCB, &xDelayedTaskList2 );
 3964              		.loc 1 1577 0
 3965 00a0 7368     		ldr	r3, [r6, #4]
 3966 00a2 1A4A     		ldr	r2, .L457+12
 3967 00a4 5B68     		ldr	r3, [r3, #4]
 3968 00a6 BB42     		cmp	r3, r7
 3969 00a8 7360     		str	r3, [r6, #4]
 3970 00aa 08BF     		it	eq
 3971 00ac D368     		ldreq	r3, [r2, #12]
 3972 00ae DC68     		ldr	r4, [r3, #12]
 3973              	.LVL337:
 3974 00b0 08BF     		it	eq
 3975 00b2 5360     		streq	r3, [r2, #4]
 3976              	.LBE309:
1578:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			vListRemove( ( xListItem * ) &( pxTCB->xGenericListItem ) );
 3977              		.loc 1 1578 0
 3978 00b4 201D     		adds	r0, r4, #4
 3979 00b6 C847     		blx	r9
 3980              	.LVL338:
 3981              	.LBB310:
 3982              	.LBB311:
2369:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		vPortFreeAligned( pxTCB->pxStack );
 3983              		.loc 1 2369 0
 3984 00b8 206B     		ldr	r0, [r4, #48]
 3985 00ba A847     		blx	r5
 3986              	.LVL339:
 3987              		.loc 1 2370 0
 3988 00bc 2046     		mov	r0, r4
 3989 00be A847     		blx	r5
 3990              	.LVL340:
 3991              	.LBE311:
 3992              	.LBE310:
1575:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		while( listLIST_IS_EMPTY( &xDelayedTaskList2 ) == pdFALSE )
 3993              		.loc 1 1575 0
 3994 00c0 3368     		ldr	r3, [r6, #0]
 3995 00c2 002B     		cmp	r3, #0
 3996 00c4 ECD1     		bne	.L439
 3997              	.LVL341:
 3998              	.L440:
1583:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		while( listLIST_IS_EMPTY( &xSuspendedTaskList ) == pdFALSE )
 3999              		.loc 1 1583 0
 4000 00c6 124E     		ldr	r6, .L457+16
 4001 00c8 3368     		ldr	r3, [r6, #0]
 4002 00ca BBB1     		cbz	r3, .L432
 4003 00cc DFF84890 		ldr	r9, .L457+24
 4004 00d0 0C4D     		ldr	r5, .L457+4
 4005 00d2 06F10807 		add	r7, r6, #8
 4006              	.L443:
 4007              	.LVL342:
 4008              	.LBB312:
1585:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxTCB, &xSuspendedTaskList );
 4009              		.loc 1 1585 0
 4010 00d6 7368     		ldr	r3, [r6, #4]
 4011 00d8 0D4A     		ldr	r2, .L457+16
 4012 00da 5B68     		ldr	r3, [r3, #4]
 4013 00dc BB42     		cmp	r3, r7
 4014 00de 7360     		str	r3, [r6, #4]
 4015 00e0 08BF     		it	eq
 4016 00e2 D368     		ldreq	r3, [r2, #12]
 4017 00e4 DC68     		ldr	r4, [r3, #12]
 4018              	.LVL343:
 4019 00e6 08BF     		it	eq
 4020 00e8 5360     		streq	r3, [r2, #4]
 4021              	.LBE312:
1586:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			vListRemove( ( xListItem * ) &( pxTCB->xGenericListItem ) );
 4022              		.loc 1 1586 0
 4023 00ea 201D     		adds	r0, r4, #4
 4024 00ec C847     		blx	r9
 4025              	.LVL344:
 4026              	.LBB313:
 4027              	.LBB314:
2369:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		vPortFreeAligned( pxTCB->pxStack );
 4028              		.loc 1 2369 0
 4029 00ee 206B     		ldr	r0, [r4, #48]
 4030 00f0 A847     		blx	r5
 4031              	.LVL345:
 4032              		.loc 1 2370 0
 4033 00f2 2046     		mov	r0, r4
 4034 00f4 A847     		blx	r5
 4035              	.LVL346:
 4036              	.LBE314:
 4037              	.LBE313:
1583:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		while( listLIST_IS_EMPTY( &xSuspendedTaskList ) == pdFALSE )
 4038              		.loc 1 1583 0
 4039 00f6 3368     		ldr	r3, [r6, #0]
 4040 00f8 002B     		cmp	r3, #0
 4041 00fa ECD1     		bne	.L443
 4042              	.LVL347:
 4043              	.L432:
 4044 00fc BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 4045              	.L458:
 4046              		.align	2
 4047              	.L457:
 4048 0100 00000000 		.word	.LANCHOR19
 4049 0104 00000000 		.word	vPortFree
 4050 0108 00000000 		.word	.LANCHOR15
 4051 010c 00000000 		.word	.LANCHOR16
 4052 0110 00000000 		.word	.LANCHOR17
 4053 0114 00000000 		.word	.LANCHOR6
 4054 0118 00000000 		.word	vListRemove
 4055              		.cfi_endproc
 4056              	.LFE20:
 4058              		.section	.text.vTaskSwitchContext,"ax",%progbits
 4059              		.align	2
 4060              		.global	vTaskSwitchContext
 4061              		.thumb
 4062              		.thumb_func
 4064              	vTaskSwitchContext:
 4065              	.LFB21:
1683:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** {
 4066              		.loc 1 1683 0
 4067              		.cfi_startproc
 4068              		@ args = 0, pretend = 0, frame = 0
 4069              		@ frame_needed = 0, uses_anonymous_args = 0
 4070 0000 38B5     		push	{r3, r4, r5, lr}
 4071              	.LCFI23:
 4072              		.cfi_def_cfa_offset 16
 4073              		.cfi_offset 3, -16
 4074              		.cfi_offset 4, -12
 4075              		.cfi_offset 5, -8
 4076              		.cfi_offset 14, -4
1684:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	if( uxSchedulerSuspended != ( unsigned portBASE_TYPE ) pdFALSE )
 4077              		.loc 1 1684 0
 4078 0002 234B     		ldr	r3, .L483
 4079 0004 1B68     		ldr	r3, [r3, #0]
 4080 0006 002B     		cmp	r3, #0
 4081 0008 2FD1     		bne	.L479
1714:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		taskFIRST_CHECK_FOR_STACK_OVERFLOW();
 4082              		.loc 1 1714 0
 4083 000a 224C     		ldr	r4, .L483+4
 4084 000c 2268     		ldr	r2, [r4, #0]
 4085 000e 2368     		ldr	r3, [r4, #0]
 4086 0010 1268     		ldr	r2, [r2, #0]
 4087 0012 1B6B     		ldr	r3, [r3, #48]
 4088 0014 9A42     		cmp	r2, r3
 4089 0016 32D9     		bls	.L480
 4090              	.L462:
 4091              	.LBB315:
1715:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		taskSECOND_CHECK_FOR_STACK_OVERFLOW();
 4092              		.loc 1 1715 0
 4093 0018 2368     		ldr	r3, [r4, #0]
 4094 001a 1F49     		ldr	r1, .L483+8
 4095 001c 186B     		ldr	r0, [r3, #48]
 4096 001e 1F4B     		ldr	r3, .L483+12
 4097 0020 1C4D     		ldr	r5, .L483+4
 4098 0022 1422     		movs	r2, #20
 4099 0024 9847     		blx	r3
 4100              	.LVL348:
 4101 0026 20BB     		cbnz	r0, .L481
 4102              	.L463:
 4103              	.LBE315:
1718:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopReadyPriority ] ) ) )
 4104              		.loc 1 1718 0 discriminator 1
 4105 0028 1D4B     		ldr	r3, .L483+16
 4106 002a 1E49     		ldr	r1, .L483+20
 4107 002c 1A68     		ldr	r2, [r3, #0]
 4108 002e 02EB8202 		add	r2, r2, r2, lsl #2
 4109 0032 9200     		lsls	r2, r2, #2
 4110 0034 8A58     		ldr	r2, [r1, r2]
 4111 0036 4AB9     		cbnz	r2, .L467
 4112              	.L474:
1721:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			--uxTopReadyPriority;
 4113              		.loc 1 1721 0
 4114 0038 1A68     		ldr	r2, [r3, #0]
 4115 003a 013A     		subs	r2, r2, #1
 4116 003c 1A60     		str	r2, [r3, #0]
1718:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopReadyPriority ] ) ) )
 4117              		.loc 1 1718 0
 4118 003e 1A68     		ldr	r2, [r3, #0]
 4119 0040 02EB8202 		add	r2, r2, r2, lsl #2
 4120 0044 51F82220 		ldr	r2, [r1, r2, lsl #2]
 4121 0048 002A     		cmp	r2, #0
 4122 004a F5D0     		beq	.L474
 4123              	.L467:
 4124              	.LBB316:
1726:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopReadyPriority ] ) );
 4125              		.loc 1 1726 0
 4126 004c 1B68     		ldr	r3, [r3, #0]
 4127 004e 03EB8303 		add	r3, r3, r3, lsl #2
 4128 0052 01EB8301 		add	r1, r1, r3, lsl #2
 4129              	.LVL349:
 4130 0056 01F10802 		add	r2, r1, #8
 4131 005a 4B68     		ldr	r3, [r1, #4]
 4132 005c 5B68     		ldr	r3, [r3, #4]
 4133 005e 9342     		cmp	r3, r2
 4134 0060 4B60     		str	r3, [r1, #4]
 4135 0062 12D0     		beq	.L482
 4136              	.L466:
1726:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopReadyPriority ] ) );
 4137              		.loc 1 1726 0 is_stmt 0 discriminator 2
 4138 0064 DB68     		ldr	r3, [r3, #12]
 4139 0066 2360     		str	r3, [r4, #0]
 4140 0068 38BD     		pop	{r3, r4, r5, pc}
 4141              	.LVL350:
 4142              	.L479:
 4143              	.LBE316:
1688:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		xMissedYield = pdTRUE;
 4144              		.loc 1 1688 0 is_stmt 1
 4145 006a 0F4B     		ldr	r3, .L483+24
 4146 006c 0122     		movs	r2, #1
 4147 006e 1A60     		str	r2, [r3, #0]
 4148 0070 38BD     		pop	{r3, r4, r5, pc}
 4149              	.L481:
 4150              	.LBB317:
1715:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		taskSECOND_CHECK_FOR_STACK_OVERFLOW();
 4151              		.loc 1 1715 0 discriminator 1
 4152 0072 2868     		ldr	r0, [r5, #0]
 4153 0074 2968     		ldr	r1, [r5, #0]
 4154 0076 0D4B     		ldr	r3, .L483+28
 4155 0078 3431     		adds	r1, r1, #52
 4156 007a 9847     		blx	r3
 4157              	.LVL351:
 4158 007c D4E7     		b	.L463
 4159              	.L480:
 4160              	.LBE317:
1714:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		taskFIRST_CHECK_FOR_STACK_OVERFLOW();
 4161              		.loc 1 1714 0 discriminator 1
 4162 007e 2068     		ldr	r0, [r4, #0]
 4163 0080 2168     		ldr	r1, [r4, #0]
 4164 0082 0A4B     		ldr	r3, .L483+28
 4165 0084 3431     		adds	r1, r1, #52
 4166 0086 9847     		blx	r3
 4167              	.LVL352:
 4168 0088 C6E7     		b	.L462
 4169              	.LVL353:
 4170              	.L482:
 4171              	.LBB318:
1726:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopReadyPriority ] ) );
 4172              		.loc 1 1726 0 discriminator 1
 4173 008a 5B68     		ldr	r3, [r3, #4]
 4174 008c 4B60     		str	r3, [r1, #4]
 4175 008e E9E7     		b	.L466
 4176              	.L484:
 4177              		.align	2
 4178              	.L483:
 4179 0090 00000000 		.word	.LANCHOR1
 4180 0094 00000000 		.word	.LANCHOR7
 4181 0098 00000000 		.word	.LANCHOR21
 4182 009c 00000000 		.word	memcmp
 4183 00a0 00000000 		.word	.LANCHOR5
 4184 00a4 00000000 		.word	.LANCHOR6
 4185 00a8 00000000 		.word	.LANCHOR9
 4186 00ac 00000000 		.word	vApplicationStackOverflowHook
 4187              	.LBE318:
 4188              		.cfi_endproc
 4189              	.LFE21:
 4191              		.section	.text.vTaskPlaceOnEventList,"ax",%progbits
 4192              		.align	2
 4193              		.global	vTaskPlaceOnEventList
 4194              		.thumb
 4195              		.thumb_func
 4197              	vTaskPlaceOnEventList:
 4198              	.LFB22:
1735:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** {
 4199              		.loc 1 1735 0
 4200              		.cfi_startproc
 4201              		@ args = 0, pretend = 0, frame = 0
 4202              		@ frame_needed = 0, uses_anonymous_args = 0
 4203              	.LVL354:
 4204 0000 70B5     		push	{r4, r5, r6, lr}
 4205              	.LCFI24:
 4206              		.cfi_def_cfa_offset 16
 4207              		.cfi_offset 4, -16
 4208              		.cfi_offset 5, -12
 4209              		.cfi_offset 6, -8
 4210              		.cfi_offset 14, -4
1746:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	vListInsert( ( xList * ) pxEventList, ( xListItem * ) &( pxCurrentTCB->xEventListItem ) );
 4211              		.loc 1 1746 0
 4212 0002 164C     		ldr	r4, .L491
 4213 0004 164E     		ldr	r6, .L491+4
 4214 0006 2368     		ldr	r3, [r4, #0]
1735:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** {
 4215              		.loc 1 1735 0
 4216 0008 0D46     		mov	r5, r1
1746:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	vListInsert( ( xList * ) pxEventList, ( xListItem * ) &( pxCurrentTCB->xEventListItem ) );
 4217              		.loc 1 1746 0
 4218 000a 03F11801 		add	r1, r3, #24
 4219              	.LVL355:
 4220 000e B047     		blx	r6
 4221              	.LVL356:
1751:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	vListRemove( ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) );
 4222              		.loc 1 1751 0
 4223 0010 2068     		ldr	r0, [r4, #0]
 4224 0012 144B     		ldr	r3, .L491+8
 4225 0014 0430     		adds	r0, r0, #4
 4226 0016 9847     		blx	r3
 4227              	.LVL357:
1756:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( xTicksToWait == portMAX_DELAY )
 4228              		.loc 1 1756 0
 4229 0018 6B1C     		adds	r3, r5, #1
 4230 001a 18D0     		beq	.L489
1767:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			xTimeToWake = xTickCount + xTicksToWait;
 4231              		.loc 1 1767 0
 4232 001c 124B     		ldr	r3, .L491+12
 4233 001e 1968     		ldr	r1, [r3, #0]
 4234              	.LBB323:
 4235              	.LBB324:
2158:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xGenericListItem ), xTimeToWake );
 4236              		.loc 1 2158 0
 4237 0020 2268     		ldr	r2, [r4, #0]
2160:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	if( xTimeToWake < xTickCount )
 4238              		.loc 1 2160 0
 4239 0022 1B68     		ldr	r3, [r3, #0]
 4240              	.LBE324:
 4241              	.LBE323:
1767:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			xTimeToWake = xTickCount + xTicksToWait;
 4242              		.loc 1 1767 0
 4243 0024 6D18     		adds	r5, r5, r1
 4244              	.LVL358:
 4245              	.LBB328:
 4246              	.LBB327:
2160:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	if( xTimeToWake < xTickCount )
 4247              		.loc 1 2160 0
 4248 0026 9D42     		cmp	r5, r3
2158:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xGenericListItem ), xTimeToWake );
 4249              		.loc 1 2158 0
 4250 0028 5560     		str	r5, [r2, #4]
2160:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	if( xTimeToWake < xTickCount )
 4251              		.loc 1 2160 0
 4252 002a 0AD3     		bcc	.L490
2168:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		vListInsert( ( xList * ) pxDelayedTaskList, ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) )
 4253              		.loc 1 2168 0
 4254 002c 0F4B     		ldr	r3, .L491+16
 4255 002e 1868     		ldr	r0, [r3, #0]
 4256 0030 2168     		ldr	r1, [r4, #0]
 4257 0032 0431     		adds	r1, r1, #4
 4258 0034 B047     		blx	r6
 4259              	.LVL359:
2173:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( xTimeToWake < xNextTaskUnblockTime )
 4260              		.loc 1 2173 0
 4261 0036 0E4B     		ldr	r3, .L491+20
 4262 0038 1A68     		ldr	r2, [r3, #0]
 4263 003a 9542     		cmp	r5, r2
2175:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			xNextTaskUnblockTime = xTimeToWake;
 4264              		.loc 1 2175 0
 4265 003c 38BF     		it	cc
 4266 003e 1D60     		strcc	r5, [r3, #0]
 4267 0040 70BD     		pop	{r4, r5, r6, pc}
 4268              	.L490:
 4269              	.LBB325:
 4270              	.LBB326:
2163:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		vListInsert( ( xList * ) pxOverflowDelayedTaskList, ( xListItem * ) &( pxCurrentTCB->xGenericList
 4271              		.loc 1 2163 0
 4272 0042 0C4B     		ldr	r3, .L491+24
 4273 0044 1868     		ldr	r0, [r3, #0]
 4274 0046 2168     		ldr	r1, [r4, #0]
 4275 0048 0431     		adds	r1, r1, #4
 4276 004a B047     		blx	r6
 4277              	.LVL360:
 4278 004c 70BD     		pop	{r4, r5, r6, pc}
 4279              	.LVL361:
 4280              	.L489:
 4281              	.LBE326:
 4282              	.LBE325:
 4283              	.LBE327:
 4284              	.LBE328:
1761:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			vListInsertEnd( ( xList * ) &xSuspendedTaskList, ( xListItem * ) &( pxCurrentTCB->xGenericListIt
 4285              		.loc 1 1761 0
 4286 004e 2168     		ldr	r1, [r4, #0]
 4287 0050 0948     		ldr	r0, .L491+28
 4288 0052 0A4B     		ldr	r3, .L491+32
 4289 0054 0431     		adds	r1, r1, #4
 4290 0056 9847     		blx	r3
 4291              	.LVL362:
 4292 0058 70BD     		pop	{r4, r5, r6, pc}
 4293              	.L492:
 4294 005a 00BF     		.align	2
 4295              	.L491:
 4296 005c 00000000 		.word	.LANCHOR7
 4297 0060 00000000 		.word	vListInsert
 4298 0064 00000000 		.word	vListRemove
 4299 0068 00000000 		.word	.LANCHOR10
 4300 006c 00000000 		.word	.LANCHOR12
 4301 0070 00000000 		.word	.LANCHOR11
 4302 0074 00000000 		.word	.LANCHOR13
 4303 0078 00000000 		.word	.LANCHOR17
 4304 007c 00000000 		.word	vListInsertEnd
 4305              		.cfi_endproc
 4306              	.LFE22:
 4308              		.section	.text.xTaskRemoveFromEventList,"ax",%progbits
 4309              		.align	2
 4310              		.global	xTaskRemoveFromEventList
 4311              		.thumb
 4312              		.thumb_func
 4314              	xTaskRemoveFromEventList:
 4315              	.LFB23:
1817:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** {
 4316              		.loc 1 1817 0
 4317              		.cfi_startproc
 4318              		@ args = 0, pretend = 0, frame = 0
 4319              		@ frame_needed = 0, uses_anonymous_args = 0
 4320              	.LVL363:
1834:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	pxUnblockedTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
 4321              		.loc 1 1834 0
 4322 0000 C368     		ldr	r3, [r0, #12]
1817:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** {
 4323              		.loc 1 1817 0
 4324 0002 70B5     		push	{r4, r5, r6, lr}
 4325              	.LCFI25:
 4326              		.cfi_def_cfa_offset 16
 4327              		.cfi_offset 4, -16
 4328              		.cfi_offset 5, -12
 4329              		.cfi_offset 6, -8
 4330              		.cfi_offset 14, -4
1834:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	pxUnblockedTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
 4331              		.loc 1 1834 0
 4332 0004 DC68     		ldr	r4, [r3, #12]
 4333              	.LVL364:
1836:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	vListRemove( &( pxUnblockedTCB->xEventListItem ) );
 4334              		.loc 1 1836 0
 4335 0006 134E     		ldr	r6, .L497
 4336 0008 04F11805 		add	r5, r4, #24
 4337 000c 2846     		mov	r0, r5
 4338              	.LVL365:
 4339 000e B047     		blx	r6
 4340              	.LVL366:
1838:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	if( uxSchedulerSuspended == ( unsigned portBASE_TYPE ) pdFALSE )
 4341              		.loc 1 1838 0
 4342 0010 114B     		ldr	r3, .L497+4
 4343 0012 1B68     		ldr	r3, [r3, #0]
 4344 0014 CBB9     		cbnz	r3, .L494
1840:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		vListRemove( &( pxUnblockedTCB->xGenericListItem ) );
 4345              		.loc 1 1840 0
 4346 0016 251D     		adds	r5, r4, #4
 4347 0018 2846     		mov	r0, r5
 4348 001a B047     		blx	r6
 4349              	.LVL367:
1841:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		prvAddTaskToReadyQueue( pxUnblockedTCB );
 4350              		.loc 1 1841 0
 4351 001c 0F4A     		ldr	r2, .L497+8
 4352 001e E36A     		ldr	r3, [r4, #44]
 4353 0020 1168     		ldr	r1, [r2, #0]
 4354 0022 0F48     		ldr	r0, .L497+12
 4355 0024 8B42     		cmp	r3, r1
 4356 0026 88BF     		it	hi
 4357 0028 1360     		strhi	r3, [r2, #0]
 4358 002a 03EB8303 		add	r3, r3, r3, lsl #2
 4359 002e 00EB8300 		add	r0, r0, r3, lsl #2
 4360 0032 2946     		mov	r1, r5
 4361 0034 0B4B     		ldr	r3, .L497+16
 4362 0036 9847     		blx	r3
 4363              	.LVL368:
 4364              	.L496:
1850:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	if( pxUnblockedTCB->uxPriority >= pxCurrentTCB->uxPriority )
 4365              		.loc 1 1850 0
 4366 0038 0B4B     		ldr	r3, .L497+20
 4367 003a E06A     		ldr	r0, [r4, #44]
 4368 003c 1B68     		ldr	r3, [r3, #0]
 4369              	.LVL369:
 4370 003e DB6A     		ldr	r3, [r3, #44]
 4371              	.LVL370:
1864:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** }
 4372              		.loc 1 1864 0
 4373 0040 9842     		cmp	r0, r3
 4374 0042 34BF     		ite	cc
 4375 0044 0020     		movcc	r0, #0
 4376 0046 0120     		movcs	r0, #1
 4377 0048 70BD     		pop	{r4, r5, r6, pc}
 4378              	.LVL371:
 4379              	.L494:
1847:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		vListInsertEnd( ( xList * ) &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 4380              		.loc 1 1847 0
 4381 004a 0848     		ldr	r0, .L497+24
 4382 004c 054B     		ldr	r3, .L497+16
 4383 004e 2946     		mov	r1, r5
 4384 0050 9847     		blx	r3
 4385              	.LVL372:
 4386 0052 F1E7     		b	.L496
 4387              	.L498:
 4388              		.align	2
 4389              	.L497:
 4390 0054 00000000 		.word	vListRemove
 4391 0058 00000000 		.word	.LANCHOR1
 4392 005c 00000000 		.word	.LANCHOR5
 4393 0060 00000000 		.word	.LANCHOR6
 4394 0064 00000000 		.word	vListInsertEnd
 4395 0068 00000000 		.word	.LANCHOR7
 4396 006c 00000000 		.word	.LANCHOR4
 4397              		.cfi_endproc
 4398              	.LFE23:
 4400              		.section	.text.vTaskSetTimeOutState,"ax",%progbits
 4401              		.align	2
 4402              		.global	vTaskSetTimeOutState
 4403              		.thumb
 4404              		.thumb_func
 4406              	vTaskSetTimeOutState:
 4407              	.LFB24:
1868:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** {
 4408              		.loc 1 1868 0
 4409              		.cfi_startproc
 4410              		@ args = 0, pretend = 0, frame = 0
 4411              		@ frame_needed = 0, uses_anonymous_args = 0
 4412              		@ link register save eliminated.
 4413              	.LVL373:
1870:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
 4414              		.loc 1 1870 0
 4415 0000 034B     		ldr	r3, .L500
 4416 0002 1A68     		ldr	r2, [r3, #0]
1871:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 4417              		.loc 1 1871 0
 4418 0004 034B     		ldr	r3, .L500+4
 4419 0006 1B68     		ldr	r3, [r3, #0]
 4420 0008 80E80C00 		stmia	r0, {r2, r3}
 4421 000c 7047     		bx	lr
 4422              	.L501:
 4423 000e 00BF     		.align	2
 4424              	.L500:
 4425 0010 00000000 		.word	.LANCHOR14
 4426 0014 00000000 		.word	.LANCHOR10
 4427              		.cfi_endproc
 4428              	.LFE24:
 4430              		.section	.text.xTaskCheckForTimeOut,"ax",%progbits
 4431              		.align	2
 4432              		.global	xTaskCheckForTimeOut
 4433              		.thumb
 4434              		.thumb_func
 4436              	xTaskCheckForTimeOut:
 4437              	.LFB25:
1876:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** {
 4438              		.loc 1 1876 0
 4439              		.cfi_startproc
 4440              		@ args = 0, pretend = 0, frame = 0
 4441              		@ frame_needed = 0, uses_anonymous_args = 0
 4442              	.LVL374:
 4443 0000 70B5     		push	{r4, r5, r6, lr}
 4444              	.LCFI26:
 4445              		.cfi_def_cfa_offset 16
 4446              		.cfi_offset 4, -16
 4447              		.cfi_offset 5, -12
 4448              		.cfi_offset 6, -8
 4449              		.cfi_offset 14, -4
1876:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** {
 4450              		.loc 1 1876 0
 4451 0002 0D46     		mov	r5, r1
1882:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	taskENTER_CRITICAL();
 4452              		.loc 1 1882 0
 4453 0004 164B     		ldr	r3, .L511
1876:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** {
 4454              		.loc 1 1876 0
 4455 0006 0446     		mov	r4, r0
1882:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	taskENTER_CRITICAL();
 4456              		.loc 1 1882 0
 4457 0008 9847     		blx	r3
 4458              	.LVL375:
1888:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( *pxTicksToWait == portMAX_DELAY )
 4459              		.loc 1 1888 0
 4460 000a 2B68     		ldr	r3, [r5, #0]
 4461 000c 5A1C     		adds	r2, r3, #1
 4462 000e 25D0     		beq	.L506
1895:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( ( portTickType ) xTickCount >= ( portTi
 4463              		.loc 1 1895 0
 4464 0010 1448     		ldr	r0, .L511+4
 4465 0012 2268     		ldr	r2, [r4, #0]
 4466 0014 0168     		ldr	r1, [r0, #0]
 4467 0016 8A42     		cmp	r2, r1
 4468 0018 18D0     		beq	.L509
1895:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( ( portTickType ) xTickCount >= ( portTi
 4469              		.loc 1 1895 0 is_stmt 0 discriminator 1
 4470 001a 1349     		ldr	r1, .L511+8
 4471 001c 6268     		ldr	r2, [r4, #4]
 4472 001e 0E68     		ldr	r6, [r1, #0]
 4473 0020 B242     		cmp	r2, r6
 4474 0022 11D9     		bls	.L508
1903:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		else if( ( ( portTickType ) ( ( portTickType ) xTickCount - ( portTickType ) pxTimeOut->xTimeOnEn
 4475              		.loc 1 1903 0 is_stmt 1
 4476 0024 0E68     		ldr	r6, [r1, #0]
 4477 0026 1049     		ldr	r1, .L511+8
 4478 0028 B61A     		subs	r6, r6, r2
 4479 002a B342     		cmp	r3, r6
 4480 002c 0CD9     		bls	.L508
 4481              	.L510:
1906:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			*pxTicksToWait -= ( ( portTickType ) xTickCount - ( portTickType ) pxTimeOut->xTimeOnEntering );
 4482              		.loc 1 1906 0
 4483 002e 0E68     		ldr	r6, [r1, #0]
 4484              	.LBB329:
 4485              	.LBB330:
1870:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
 4486              		.loc 1 1870 0
 4487 0030 0068     		ldr	r0, [r0, #0]
1871:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 4488              		.loc 1 1871 0
 4489 0032 0968     		ldr	r1, [r1, #0]
 4490              	.LBE330:
 4491              	.LBE329:
1906:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			*pxTicksToWait -= ( ( portTickType ) xTickCount - ( portTickType ) pxTimeOut->xTimeOnEntering );
 4492              		.loc 1 1906 0
 4493 0034 9B1B     		subs	r3, r3, r6
 4494 0036 9A18     		adds	r2, r3, r2
 4495 0038 2A60     		str	r2, [r5, #0]
 4496              	.LVL376:
 4497              	.LBB332:
 4498              	.LBB331:
1871:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 4499              		.loc 1 1871 0
 4500 003a 84E80300 		stmia	r4, {r0, r1}
 4501              	.LVL377:
1908:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			xReturn = pdFALSE;
 4502              		.loc 1 1908 0
 4503 003e 0025     		movs	r5, #0
 4504              	.LVL378:
 4505              	.L503:
 4506              	.LBE331:
 4507              	.LBE332:
1915:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	taskEXIT_CRITICAL();
 4508              		.loc 1 1915 0
 4509 0040 0A4B     		ldr	r3, .L511+12
 4510 0042 9847     		blx	r3
 4511              	.LVL379:
1918:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** }
 4512              		.loc 1 1918 0
 4513 0044 2846     		mov	r0, r5
 4514 0046 70BD     		pop	{r4, r5, r6, pc}
 4515              	.LVL380:
 4516              	.L508:
1901:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			xReturn = pdTRUE;
 4517              		.loc 1 1901 0
 4518 0048 0125     		movs	r5, #1
 4519              	.LVL381:
 4520 004a F9E7     		b	.L503
 4521              	.LVL382:
 4522              	.L509:
 4523 004c 0649     		ldr	r1, .L511+8
 4524 004e 6268     		ldr	r2, [r4, #4]
1903:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		else if( ( ( portTickType ) ( ( portTickType ) xTickCount - ( portTickType ) pxTimeOut->xTimeOnEn
 4525              		.loc 1 1903 0
 4526 0050 0E68     		ldr	r6, [r1, #0]
 4527 0052 0549     		ldr	r1, .L511+8
 4528 0054 B61A     		subs	r6, r6, r2
 4529 0056 B342     		cmp	r3, r6
 4530 0058 E9D8     		bhi	.L510
 4531 005a F5E7     		b	.L508
 4532              	.L506:
1890:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				xReturn = pdFALSE;
 4533              		.loc 1 1890 0
 4534 005c 0025     		movs	r5, #0
 4535              	.LVL383:
 4536 005e EFE7     		b	.L503
 4537              	.L512:
 4538              		.align	2
 4539              	.L511:
 4540 0060 00000000 		.word	vPortEnterCritical
 4541 0064 00000000 		.word	.LANCHOR14
 4542 0068 00000000 		.word	.LANCHOR10
 4543 006c 00000000 		.word	vPortExitCritical
 4544              		.cfi_endproc
 4545              	.LFE25:
 4547              		.section	.text.vTaskMissedYield,"ax",%progbits
 4548              		.align	2
 4549              		.global	vTaskMissedYield
 4550              		.thumb
 4551              		.thumb_func
 4553              	vTaskMissedYield:
 4554              	.LFB26:
1922:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** {
 4555              		.loc 1 1922 0
 4556              		.cfi_startproc
 4557              		@ args = 0, pretend = 0, frame = 0
 4558              		@ frame_needed = 0, uses_anonymous_args = 0
 4559              		@ link register save eliminated.
1923:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	xMissedYield = pdTRUE;
 4560              		.loc 1 1923 0
 4561 0000 014B     		ldr	r3, .L514
 4562 0002 0122     		movs	r2, #1
 4563 0004 1A60     		str	r2, [r3, #0]
 4564 0006 7047     		bx	lr
 4565              	.L515:
 4566              		.align	2
 4567              	.L514:
 4568 0008 00000000 		.word	.LANCHOR9
 4569              		.cfi_endproc
 4570              	.LFE26:
 4572              		.section	.text.xTaskGetCurrentTaskHandle,"ax",%progbits
 4573              		.align	2
 4574              		.global	xTaskGetCurrentTaskHandle
 4575              		.thumb
 4576              		.thumb_func
 4578              	xTaskGetCurrentTaskHandle:
 4579              	.LFB34:
2371:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
2372:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2373:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #endif
2374:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2375:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2376:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*-----------------------------------------------------------*/
2377:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2378:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #if ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) )
2379:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2380:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	xTaskHandle xTaskGetCurrentTaskHandle( void )
2381:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
 4580              		.loc 1 2381 0
 4581              		.cfi_startproc
 4582              		@ args = 0, pretend = 0, frame = 0
 4583              		@ frame_needed = 0, uses_anonymous_args = 0
 4584              		@ link register save eliminated.
2382:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	xTaskHandle xReturn;
2383:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2384:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		/* A critical section is not required as this is not called from
2385:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		an interrupt and the current TCB will always be the same for any
2386:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		individual execution thread. */
2387:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		xReturn = pxCurrentTCB;
 4585              		.loc 1 2387 0
 4586 0000 014B     		ldr	r3, .L517
 4587 0002 1868     		ldr	r0, [r3, #0]
 4588              	.LVL384:
2388:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2389:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		return xReturn;
2390:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
 4589              		.loc 1 2390 0
 4590 0004 7047     		bx	lr
 4591              	.L518:
 4592 0006 00BF     		.align	2
 4593              	.L517:
 4594 0008 00000000 		.word	.LANCHOR7
 4595              		.cfi_endproc
 4596              	.LFE34:
 4598              		.section	.text.vTaskPriorityInherit,"ax",%progbits
 4599              		.align	2
 4600              		.global	vTaskPriorityInherit
 4601              		.thumb
 4602              		.thumb_func
 4604              	vTaskPriorityInherit:
 4605              	.LFB35:
2391:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2392:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #endif
2393:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2394:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*-----------------------------------------------------------*/
2395:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2396:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
2397:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2398:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	portBASE_TYPE xTaskGetSchedulerState( void )
2399:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
2400:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	portBASE_TYPE xReturn;
2401:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2402:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( xSchedulerRunning == pdFALSE )
2403:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
2404:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			xReturn = taskSCHEDULER_NOT_STARTED;
2405:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
2406:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		else
2407:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
2408:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( uxSchedulerSuspended == ( unsigned portBASE_TYPE ) pdFALSE )
2409:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			{
2410:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				xReturn = taskSCHEDULER_RUNNING;
2411:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			}
2412:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			else
2413:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			{
2414:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				xReturn = taskSCHEDULER_SUSPENDED;
2415:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			}
2416:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
2417:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2418:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		return xReturn;
2419:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
2420:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2421:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #endif
2422:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*-----------------------------------------------------------*/
2423:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2424:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #if ( configUSE_MUTEXES == 1 )
2425:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2426:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	void vTaskPriorityInherit( xTaskHandle * const pxMutexHolder )
2427:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
 4606              		.loc 1 2427 0
 4607              		.cfi_startproc
 4608              		@ args = 0, pretend = 0, frame = 0
 4609              		@ frame_needed = 0, uses_anonymous_args = 0
 4610              	.LVL385:
 4611 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4612              	.LCFI27:
 4613              		.cfi_def_cfa_offset 24
 4614              		.cfi_offset 3, -24
 4615              		.cfi_offset 4, -20
 4616              		.cfi_offset 5, -16
 4617              		.cfi_offset 6, -12
 4618              		.cfi_offset 7, -8
 4619              		.cfi_offset 14, -4
2428:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	tskTCB * const pxTCB = ( tskTCB * ) pxMutexHolder;
2429:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2430:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		configASSERT( pxMutexHolder );
2431:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2432:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( pxTCB->uxPriority < pxCurrentTCB->uxPriority )
 4620              		.loc 1 2432 0
 4621 0002 164D     		ldr	r5, .L524
 4622 0004 C36A     		ldr	r3, [r0, #44]
 4623 0006 2A68     		ldr	r2, [r5, #0]
 4624 0008 D26A     		ldr	r2, [r2, #44]
 4625 000a 9342     		cmp	r3, r2
2427:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
 4626              		.loc 1 2427 0
 4627 000c 0446     		mov	r4, r0
 4628              	.LVL386:
 4629              		.loc 1 2432 0
 4630 000e 0FD2     		bcs	.L519
2433:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
2434:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			/* Adjust the mutex holder state to account for its new priority. */
2435:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), configMAX_PRIORITIES - ( portTickType ) pxC
 4631              		.loc 1 2435 0
 4632 0010 2A68     		ldr	r2, [r5, #0]
2436:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2437:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			/* If the task being modified is in the ready state it will need to
2438:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			be moved in to a new list. */
2439:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxTCB->uxPriority ] ), &( pxTCB->xGenericList
 4633              		.loc 1 2439 0
 4634 0012 134E     		ldr	r6, .L524+4
2435:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), configMAX_PRIORITIES - ( portTickType ) pxC
 4635              		.loc 1 2435 0
 4636 0014 D16A     		ldr	r1, [r2, #44]
 4637              		.loc 1 2439 0
 4638 0016 4269     		ldr	r2, [r0, #20]
 4639 0018 03EB8303 		add	r3, r3, r3, lsl #2
 4640 001c 06EB8303 		add	r3, r6, r3, lsl #2
2435:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), configMAX_PRIORITIES - ( portTickType ) pxC
 4641              		.loc 1 2435 0
 4642 0020 C1F1FF01 		rsb	r1, r1, #255
 4643              		.loc 1 2439 0
 4644 0024 9A42     		cmp	r2, r3
2435:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), configMAX_PRIORITIES - ( portTickType ) pxC
 4645              		.loc 1 2435 0
 4646 0026 8161     		str	r1, [r0, #24]
 4647              		.loc 1 2439 0
 4648 0028 03D0     		beq	.L523
2440:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			{
2441:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				vListRemove( &( pxTCB->xGenericListItem ) );
2442:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2443:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				/* Inherit the priority before being moved into the new list. */
2444:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				pxTCB->uxPriority = pxCurrentTCB->uxPriority;
2445:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				prvAddTaskToReadyQueue( pxTCB );
2446:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			}
2447:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			else
2448:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			{
2449:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				/* Just inherit the priority. */
2450:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				pxTCB->uxPriority = pxCurrentTCB->uxPriority;
 4649              		.loc 1 2450 0
 4650 002a 2B68     		ldr	r3, [r5, #0]
 4651 002c DB6A     		ldr	r3, [r3, #44]
 4652 002e C362     		str	r3, [r0, #44]
 4653              	.L519:
 4654 0030 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4655              	.L523:
2441:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				vListRemove( &( pxTCB->xGenericListItem ) );
 4656              		.loc 1 2441 0
 4657 0032 071D     		adds	r7, r0, #4
 4658 0034 3846     		mov	r0, r7
 4659              	.LVL387:
 4660 0036 0B4B     		ldr	r3, .L524+8
 4661 0038 9847     		blx	r3
 4662              	.LVL388:
2444:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				pxTCB->uxPriority = pxCurrentTCB->uxPriority;
 4663              		.loc 1 2444 0
 4664 003a 2B68     		ldr	r3, [r5, #0]
2445:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				prvAddTaskToReadyQueue( pxTCB );
 4665              		.loc 1 2445 0
 4666 003c 0A4A     		ldr	r2, .L524+12
2444:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				pxTCB->uxPriority = pxCurrentTCB->uxPriority;
 4667              		.loc 1 2444 0
 4668 003e DB6A     		ldr	r3, [r3, #44]
2445:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				prvAddTaskToReadyQueue( pxTCB );
 4669              		.loc 1 2445 0
 4670 0040 1168     		ldr	r1, [r2, #0]
2444:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				pxTCB->uxPriority = pxCurrentTCB->uxPriority;
 4671              		.loc 1 2444 0
 4672 0042 E362     		str	r3, [r4, #44]
2445:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				prvAddTaskToReadyQueue( pxTCB );
 4673              		.loc 1 2445 0
 4674 0044 8B42     		cmp	r3, r1
 4675 0046 03EB8300 		add	r0, r3, r3, lsl #2
 4676 004a 88BF     		it	hi
 4677 004c 1360     		strhi	r3, [r2, #0]
 4678 004e 06EB8000 		add	r0, r6, r0, lsl #2
 4679 0052 3946     		mov	r1, r7
 4680 0054 054B     		ldr	r3, .L524+16
 4681 0056 9847     		blx	r3
 4682              	.LVL389:
 4683 0058 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4684              	.L525:
 4685 005a 00BF     		.align	2
 4686              	.L524:
 4687 005c 00000000 		.word	.LANCHOR7
 4688 0060 00000000 		.word	.LANCHOR6
 4689 0064 00000000 		.word	vListRemove
 4690 0068 00000000 		.word	.LANCHOR5
 4691 006c 00000000 		.word	vListInsertEnd
 4692              		.cfi_endproc
 4693              	.LFE35:
 4695              		.section	.text.vTaskPriorityDisinherit,"ax",%progbits
 4696              		.align	2
 4697              		.global	vTaskPriorityDisinherit
 4698              		.thumb
 4699              		.thumb_func
 4701              	vTaskPriorityDisinherit:
 4702              	.LFB36:
2451:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			}
2452:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		}
2453:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	}
2454:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2455:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #endif
2456:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** /*-----------------------------------------------------------*/
2457:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2458:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** #if ( configUSE_MUTEXES == 1 )
2459:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2460:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	void vTaskPriorityDisinherit( xTaskHandle * const pxMutexHolder )
2461:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	{
 4703              		.loc 1 2461 0
 4704              		.cfi_startproc
 4705              		@ args = 0, pretend = 0, frame = 0
 4706              		@ frame_needed = 0, uses_anonymous_args = 0
 4707              	.LVL390:
 4708 0000 38B5     		push	{r3, r4, r5, lr}
 4709              	.LCFI28:
 4710              		.cfi_def_cfa_offset 16
 4711              		.cfi_offset 3, -16
 4712              		.cfi_offset 4, -12
 4713              		.cfi_offset 5, -8
 4714              		.cfi_offset 14, -4
2462:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 	tskTCB * const pxTCB = ( tskTCB * ) pxMutexHolder;
2463:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2464:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		if( pxMutexHolder != NULL )
 4715              		.loc 1 2464 0
 4716 0002 0446     		mov	r4, r0
 4717 0004 C8B1     		cbz	r0, .L526
2465:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 		{
2466:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 4718              		.loc 1 2466 0
 4719 0006 C26A     		ldr	r2, [r0, #44]
 4720 0008 436C     		ldr	r3, [r0, #68]
 4721 000a 9A42     		cmp	r2, r3
 4722 000c 15D0     		beq	.L526
2467:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 			{
2468:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				/* We must be the running task to be able to give the mutex back.
2469:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				Remove ourselves from the ready list we currently appear in. */
2470:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				vListRemove( &( pxTCB->xGenericListItem ) );
 4723              		.loc 1 2470 0
 4724 000e 051D     		adds	r5, r0, #4
 4725 0010 2846     		mov	r0, r5
 4726              	.LVL391:
 4727 0012 0A4B     		ldr	r3, .L532
 4728 0014 9847     		blx	r3
 4729              	.LVL392:
2471:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 
2472:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				/* Disinherit the priority before adding ourselves into the new
2473:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				ready list. */
2474:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				pxTCB->uxPriority = pxTCB->uxBasePriority;
2475:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), configMAX_PRIORITIES - ( portTickType ) px
2476:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				prvAddTaskToReadyQueue( pxTCB );
 4730              		.loc 1 2476 0
 4731 0016 0A4A     		ldr	r2, .L532+4
2474:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				pxTCB->uxPriority = pxTCB->uxBasePriority;
 4732              		.loc 1 2474 0
 4733 0018 636C     		ldr	r3, [r4, #68]
 4734              		.loc 1 2476 0
 4735 001a 1168     		ldr	r1, [r2, #0]
2474:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				pxTCB->uxPriority = pxTCB->uxBasePriority;
 4736              		.loc 1 2474 0
 4737 001c E362     		str	r3, [r4, #44]
2475:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), configMAX_PRIORITIES - ( portTickType ) px
 4738              		.loc 1 2475 0
 4739 001e C3F1FF00 		rsb	r0, r3, #255
 4740              		.loc 1 2476 0
 4741 0022 8B42     		cmp	r3, r1
2475:/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/tasks.c **** 				listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), configMAX_PRIORITIES - ( portTickType ) px
 4742              		.loc 1 2475 0
 4743 0024 A061     		str	r0, [r4, #24]
 4744              		.loc 1 2476 0
 4745 0026 0748     		ldr	r0, .L532+8
 4746 0028 88BF     		it	hi
 4747 002a 1360     		strhi	r3, [r2, #0]
 4748 002c 03EB8303 		add	r3, r3, r3, lsl #2
 4749 0030 00EB8300 		add	r0, r0, r3, lsl #2
 4750 0034 2946     		mov	r1, r5
 4751 0036 044B     		ldr	r3, .L532+12
 4752 0038 9847     		blx	r3
 4753              	.LVL393:
 4754              	.L526:
 4755 003a 38BD     		pop	{r3, r4, r5, pc}
 4756              	.L533:
 4757              		.align	2
 4758              	.L532:
 4759 003c 00000000 		.word	vListRemove
 4760 0040 00000000 		.word	.LANCHOR5
 4761 0044 00000000 		.word	.LANCHOR6
 4762 0048 00000000 		.word	vListInsertEnd
 4763              		.cfi_endproc
 4764              	.LFE36:
 4766              		.global	pxCurrentTCB
 4767              		.section	.bss.uxMissedTicks,"aw",%nobits
 4768              		.align	2
 4769              		.set	.LANCHOR8,. + 0
 4772              	uxMissedTicks:
 4773 0000 00000000 		.space	4
 4774              		.section	.bss.xDelayedTaskList1,"aw",%nobits
 4775              		.align	2
 4776              		.set	.LANCHOR15,. + 0
 4779              	xDelayedTaskList1:
 4780 0000 00000000 		.space	20
 4780      00000000 
 4780      00000000 
 4780      00000000 
 4780      00000000 
 4781              		.section	.bss.pxDelayedTaskList,"aw",%nobits
 4782              		.align	2
 4783              		.set	.LANCHOR12,. + 0
 4786              	pxDelayedTaskList:
 4787 0000 00000000 		.space	4
 4788              		.section	.rodata.str1.4,"aMS",%progbits,1
 4789              		.align	2
 4790              	.LC0:
 4791 0000 49444C45 		.ascii	"IDLE\000"
 4791      00
 4792 0005 000000   		.section	.bss.xSchedulerRunning,"aw",%nobits
 4793              		.align	2
 4794              		.set	.LANCHOR18,. + 0
 4797              	xSchedulerRunning:
 4798 0000 00000000 		.space	4
 4799              		.section	.bss.pxReadyTasksLists,"aw",%nobits
 4800              		.align	2
 4801              		.set	.LANCHOR6,. + 0
 4804              	pxReadyTasksLists:
 4805 0000 00000000 		.space	5100
 4805      00000000 
 4805      00000000 
 4805      00000000 
 4805      00000000 
 4806              		.section	.bss.xTasksWaitingTermination,"aw",%nobits
 4807              		.align	2
 4808              		.set	.LANCHOR2,. + 0
 4811              	xTasksWaitingTermination:
 4812 0000 00000000 		.space	20
 4812      00000000 
 4812      00000000 
 4812      00000000 
 4812      00000000 
 4813              		.section	.bss.pxOverflowDelayedTaskList,"aw",%nobits
 4814              		.align	2
 4815              		.set	.LANCHOR13,. + 0
 4818              	pxOverflowDelayedTaskList:
 4819 0000 00000000 		.space	4
 4820              		.section	.bss.uxTopUsedPriority,"aw",%nobits
 4821              		.align	2
 4822              		.set	.LANCHOR19,. + 0
 4825              	uxTopUsedPriority:
 4826 0000 00000000 		.space	4
 4827              		.section	.rodata.ucExpectedStackBytes.5925,"a",%progbits
 4828              		.align	2
 4829              		.set	.LANCHOR21,. + 0
 4832              	ucExpectedStackBytes.5925:
 4833 0000 A5       		.byte	-91
 4834 0001 A5       		.byte	-91
 4835 0002 A5       		.byte	-91
 4836 0003 A5       		.byte	-91
 4837 0004 A5       		.byte	-91
 4838 0005 A5       		.byte	-91
 4839 0006 A5       		.byte	-91
 4840 0007 A5       		.byte	-91
 4841 0008 A5       		.byte	-91
 4842 0009 A5       		.byte	-91
 4843 000a A5       		.byte	-91
 4844 000b A5       		.byte	-91
 4845 000c A5       		.byte	-91
 4846 000d A5       		.byte	-91
 4847 000e A5       		.byte	-91
 4848 000f A5       		.byte	-91
 4849 0010 A5       		.byte	-91
 4850 0011 A5       		.byte	-91
 4851 0012 A5       		.byte	-91
 4852 0013 A5       		.byte	-91
 4853              		.section	.bss.uxTasksDeleted,"aw",%nobits
 4854              		.align	2
 4855              		.set	.LANCHOR0,. + 0
 4858              	uxTasksDeleted:
 4859 0000 00000000 		.space	4
 4860              		.section	.bss.xSuspendedTaskList,"aw",%nobits
 4861              		.align	2
 4862              		.set	.LANCHOR17,. + 0
 4865              	xSuspendedTaskList:
 4866 0000 00000000 		.space	20
 4866      00000000 
 4866      00000000 
 4866      00000000 
 4866      00000000 
 4867              		.section	.bss.pxCurrentTCB,"aw",%nobits
 4868              		.align	2
 4869              		.set	.LANCHOR7,. + 0
 4872              	pxCurrentTCB:
 4873 0000 00000000 		.space	4
 4874              		.section	.bss.xPendingReadyList,"aw",%nobits
 4875              		.align	2
 4876              		.set	.LANCHOR4,. + 0
 4879              	xPendingReadyList:
 4880 0000 00000000 		.space	20
 4880      00000000 
 4880      00000000 
 4880      00000000 
 4880      00000000 
 4881              		.section	.bss.xNumOfOverflows,"aw",%nobits
 4882              		.align	2
 4883              		.set	.LANCHOR14,. + 0
 4886              	xNumOfOverflows:
 4887 0000 00000000 		.space	4
 4888              		.section	.bss.xTickCount,"aw",%nobits
 4889              		.align	2
 4890              		.set	.LANCHOR10,. + 0
 4893              	xTickCount:
 4894 0000 00000000 		.space	4
 4895              		.section	.bss.uxSchedulerSuspended,"aw",%nobits
 4896              		.align	2
 4897              		.set	.LANCHOR1,. + 0
 4900              	uxSchedulerSuspended:
 4901 0000 00000000 		.space	4
 4902              		.section	.bss.xDelayedTaskList2,"aw",%nobits
 4903              		.align	2
 4904              		.set	.LANCHOR16,. + 0
 4907              	xDelayedTaskList2:
 4908 0000 00000000 		.space	20
 4908      00000000 
 4908      00000000 
 4908      00000000 
 4908      00000000 
 4909              		.section	.bss.uxTaskNumber,"aw",%nobits
 4910              		.align	2
 4911              		.set	.LANCHOR20,. + 0
 4914              	uxTaskNumber:
 4915 0000 00000000 		.space	4
 4916              		.section	.bss.xMissedYield,"aw",%nobits
 4917              		.align	2
 4918              		.set	.LANCHOR9,. + 0
 4921              	xMissedYield:
 4922 0000 00000000 		.space	4
 4923              		.section	.data.xNextTaskUnblockTime,"aw",%progbits
 4924              		.align	2
 4925              		.set	.LANCHOR11,. + 0
 4928              	xNextTaskUnblockTime:
 4929 0000 FFFFFFFF 		.word	-1
 4930              		.section	.bss.uxCurrentNumberOfTasks,"aw",%nobits
 4931              		.align	2
 4932              		.set	.LANCHOR3,. + 0
 4935              	uxCurrentNumberOfTasks:
 4936 0000 00000000 		.space	4
 4937              		.section	.bss.uxTopReadyPriority,"aw",%nobits
 4938              		.align	2
 4939              		.set	.LANCHOR5,. + 0
 4942              	uxTopReadyPriority:
 4943 0000 00000000 		.space	4
 4944              		.text
 4945              	.Letext0:
 4946              		.file 3 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/include/stddef.h"
 4947              		.file 4 "/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/projdefs.h"
 4948              		.file 5 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/std
 4949              		.file 6 "/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/list.h"
 4950              		.file 7 "/home/jonas/warwick/3dProfilometer/xpcc/ext/freertos/task.h"
DEFINED SYMBOLS
                            *ABS*:00000000 tasks.c
     /tmp/ccTEHqXl.s:20     .text.prvIdleTask:00000000 $t
     /tmp/ccTEHqXl.s:24     .text.prvIdleTask:00000000 prvIdleTask
     /tmp/ccTEHqXl.s:442    .text.prvIdleTask:00000200 $d
     /tmp/ccTEHqXl.s:472    .text.xTaskGenericCreate:00000000 $t
     /tmp/ccTEHqXl.s:477    .text.xTaskGenericCreate:00000000 xTaskGenericCreate
     /tmp/ccTEHqXl.s:852    .text.xTaskGenericCreate:0000017c $d
     /tmp/ccTEHqXl.s:884    .text.vTaskDelete:00000000 $t
     /tmp/ccTEHqXl.s:889    .text.vTaskDelete:00000000 vTaskDelete
     /tmp/ccTEHqXl.s:988    .text.vTaskDelete:00000058 $d
     /tmp/ccTEHqXl.s:1002   .text.vTaskDelayUntil:00000000 $t
     /tmp/ccTEHqXl.s:1007   .text.vTaskDelayUntil:00000000 vTaskDelayUntil
     /tmp/ccTEHqXl.s:1455   .text.vTaskDelayUntil:0000022c $d
     /tmp/ccTEHqXl.s:1480   .text.vTaskDelay:00000000 $t
     /tmp/ccTEHqXl.s:1485   .text.vTaskDelay:00000000 vTaskDelay
     /tmp/ccTEHqXl.s:1910   .text.vTaskDelay:00000204 $d
     /tmp/ccTEHqXl.s:1939   .text.uxTaskPriorityGet:00000000 $t
     /tmp/ccTEHqXl.s:1944   .text.uxTaskPriorityGet:00000000 uxTaskPriorityGet
     /tmp/ccTEHqXl.s:1987   .text.uxTaskPriorityGet:0000001c $d
     /tmp/ccTEHqXl.s:1994   .text.vTaskPrioritySet:00000000 $t
     /tmp/ccTEHqXl.s:1999   .text.vTaskPrioritySet:00000000 vTaskPrioritySet
     /tmp/ccTEHqXl.s:2136   .text.vTaskPrioritySet:00000094 $d
     /tmp/ccTEHqXl.s:2148   .text.vTaskSuspend:00000000 $t
     /tmp/ccTEHqXl.s:2153   .text.vTaskSuspend:00000000 vTaskSuspend
     /tmp/ccTEHqXl.s:2355   .text.vTaskSuspend:00000108 $d
     /tmp/ccTEHqXl.s:2378   .text.xTaskIsTaskSuspended:00000000 $t
     /tmp/ccTEHqXl.s:2383   .text.xTaskIsTaskSuspended:00000000 xTaskIsTaskSuspended
     /tmp/ccTEHqXl.s:2421   .text.xTaskIsTaskSuspended:00000020 $d
     /tmp/ccTEHqXl.s:2429   .text.vTaskResume:00000000 $t
     /tmp/ccTEHqXl.s:2434   .text.vTaskResume:00000000 vTaskResume
     /tmp/ccTEHqXl.s:2531   .text.vTaskResume:00000060 $d
     /tmp/ccTEHqXl.s:2545   .text.xTaskResumeFromISR:00000000 $t
     /tmp/ccTEHqXl.s:2550   .text.xTaskResumeFromISR:00000000 xTaskResumeFromISR
     /tmp/ccTEHqXl.s:2665   .text.xTaskResumeFromISR:00000068 $d
     /tmp/ccTEHqXl.s:2677   .text.vTaskStartScheduler:00000000 $t
     /tmp/ccTEHqXl.s:2682   .text.vTaskStartScheduler:00000000 vTaskStartScheduler
     /tmp/ccTEHqXl.s:3025   .text.vTaskStartScheduler:00000150 $d
     /tmp/ccTEHqXl.s:3061   .text.vTaskEndScheduler:00000000 $t
     /tmp/ccTEHqXl.s:3066   .text.vTaskEndScheduler:00000000 vTaskEndScheduler
     /tmp/ccTEHqXl.s:3101   .text.vTaskEndScheduler:00000018 $d
     /tmp/ccTEHqXl.s:3107   .text.vTaskSuspendAll:00000000 $t
     /tmp/ccTEHqXl.s:3112   .text.vTaskSuspendAll:00000000 vTaskSuspendAll
     /tmp/ccTEHqXl.s:3128   .text.vTaskSuspendAll:0000000c $d
     /tmp/ccTEHqXl.s:3133   .text.xTaskResumeAll:00000000 $t
     /tmp/ccTEHqXl.s:3138   .text.xTaskResumeAll:00000000 xTaskResumeAll
     /tmp/ccTEHqXl.s:3469   .text.xTaskResumeAll:000001bc $d
     /tmp/ccTEHqXl.s:3492   .text.xTaskGetTickCount:00000000 $t
     /tmp/ccTEHqXl.s:3497   .text.xTaskGetTickCount:00000000 xTaskGetTickCount
     /tmp/ccTEHqXl.s:3526   .text.xTaskGetTickCount:00000014 $d
     /tmp/ccTEHqXl.s:3533   .text.xTaskGetTickCountFromISR:00000000 $t
     /tmp/ccTEHqXl.s:3538   .text.xTaskGetTickCountFromISR:00000000 xTaskGetTickCountFromISR
     /tmp/ccTEHqXl.s:3579   .text.xTaskGetTickCountFromISR:00000018 $d
     /tmp/ccTEHqXl.s:3584   .text.uxTaskGetNumberOfTasks:00000000 $t
     /tmp/ccTEHqXl.s:3589   .text.uxTaskGetNumberOfTasks:00000000 uxTaskGetNumberOfTasks
     /tmp/ccTEHqXl.s:3604   .text.uxTaskGetNumberOfTasks:00000008 $d
     /tmp/ccTEHqXl.s:3609   .text.vTaskIncrementTick:00000000 $t
     /tmp/ccTEHqXl.s:3614   .text.vTaskIncrementTick:00000000 vTaskIncrementTick
     /tmp/ccTEHqXl.s:3804   .text.vTaskIncrementTick:000000f0 $d
     /tmp/ccTEHqXl.s:3820   .text.vTaskCleanUpResources:00000000 $t
     /tmp/ccTEHqXl.s:3825   .text.vTaskCleanUpResources:00000000 vTaskCleanUpResources
     /tmp/ccTEHqXl.s:4048   .text.vTaskCleanUpResources:00000100 $d
     /tmp/ccTEHqXl.s:4059   .text.vTaskSwitchContext:00000000 $t
     /tmp/ccTEHqXl.s:4064   .text.vTaskSwitchContext:00000000 vTaskSwitchContext
     /tmp/ccTEHqXl.s:4179   .text.vTaskSwitchContext:00000090 $d
     /tmp/ccTEHqXl.s:4192   .text.vTaskPlaceOnEventList:00000000 $t
     /tmp/ccTEHqXl.s:4197   .text.vTaskPlaceOnEventList:00000000 vTaskPlaceOnEventList
     /tmp/ccTEHqXl.s:4296   .text.vTaskPlaceOnEventList:0000005c $d
     /tmp/ccTEHqXl.s:4309   .text.xTaskRemoveFromEventList:00000000 $t
     /tmp/ccTEHqXl.s:4314   .text.xTaskRemoveFromEventList:00000000 xTaskRemoveFromEventList
     /tmp/ccTEHqXl.s:4390   .text.xTaskRemoveFromEventList:00000054 $d
     /tmp/ccTEHqXl.s:4401   .text.vTaskSetTimeOutState:00000000 $t
     /tmp/ccTEHqXl.s:4406   .text.vTaskSetTimeOutState:00000000 vTaskSetTimeOutState
     /tmp/ccTEHqXl.s:4425   .text.vTaskSetTimeOutState:00000010 $d
     /tmp/ccTEHqXl.s:4431   .text.xTaskCheckForTimeOut:00000000 $t
     /tmp/ccTEHqXl.s:4436   .text.xTaskCheckForTimeOut:00000000 xTaskCheckForTimeOut
     /tmp/ccTEHqXl.s:4540   .text.xTaskCheckForTimeOut:00000060 $d
     /tmp/ccTEHqXl.s:4548   .text.vTaskMissedYield:00000000 $t
     /tmp/ccTEHqXl.s:4553   .text.vTaskMissedYield:00000000 vTaskMissedYield
     /tmp/ccTEHqXl.s:4568   .text.vTaskMissedYield:00000008 $d
     /tmp/ccTEHqXl.s:4573   .text.xTaskGetCurrentTaskHandle:00000000 $t
     /tmp/ccTEHqXl.s:4578   .text.xTaskGetCurrentTaskHandle:00000000 xTaskGetCurrentTaskHandle
     /tmp/ccTEHqXl.s:4594   .text.xTaskGetCurrentTaskHandle:00000008 $d
     /tmp/ccTEHqXl.s:4599   .text.vTaskPriorityInherit:00000000 $t
     /tmp/ccTEHqXl.s:4604   .text.vTaskPriorityInherit:00000000 vTaskPriorityInherit
     /tmp/ccTEHqXl.s:4687   .text.vTaskPriorityInherit:0000005c $d
     /tmp/ccTEHqXl.s:4696   .text.vTaskPriorityDisinherit:00000000 $t
     /tmp/ccTEHqXl.s:4701   .text.vTaskPriorityDisinherit:00000000 vTaskPriorityDisinherit
     /tmp/ccTEHqXl.s:4759   .text.vTaskPriorityDisinherit:0000003c $d
     /tmp/ccTEHqXl.s:4872   .bss.pxCurrentTCB:00000000 pxCurrentTCB
     /tmp/ccTEHqXl.s:4768   .bss.uxMissedTicks:00000000 $d
     /tmp/ccTEHqXl.s:4772   .bss.uxMissedTicks:00000000 uxMissedTicks
     /tmp/ccTEHqXl.s:4775   .bss.xDelayedTaskList1:00000000 $d
     /tmp/ccTEHqXl.s:4779   .bss.xDelayedTaskList1:00000000 xDelayedTaskList1
     /tmp/ccTEHqXl.s:4782   .bss.pxDelayedTaskList:00000000 $d
     /tmp/ccTEHqXl.s:4786   .bss.pxDelayedTaskList:00000000 pxDelayedTaskList
     /tmp/ccTEHqXl.s:4789   .rodata.str1.4:00000000 $d
     /tmp/ccTEHqXl.s:4793   .bss.xSchedulerRunning:00000000 $d
     /tmp/ccTEHqXl.s:4797   .bss.xSchedulerRunning:00000000 xSchedulerRunning
     /tmp/ccTEHqXl.s:4800   .bss.pxReadyTasksLists:00000000 $d
     /tmp/ccTEHqXl.s:4804   .bss.pxReadyTasksLists:00000000 pxReadyTasksLists
     /tmp/ccTEHqXl.s:4807   .bss.xTasksWaitingTermination:00000000 $d
     /tmp/ccTEHqXl.s:4811   .bss.xTasksWaitingTermination:00000000 xTasksWaitingTermination
     /tmp/ccTEHqXl.s:4814   .bss.pxOverflowDelayedTaskList:00000000 $d
     /tmp/ccTEHqXl.s:4818   .bss.pxOverflowDelayedTaskList:00000000 pxOverflowDelayedTaskList
     /tmp/ccTEHqXl.s:4821   .bss.uxTopUsedPriority:00000000 $d
     /tmp/ccTEHqXl.s:4825   .bss.uxTopUsedPriority:00000000 uxTopUsedPriority
     /tmp/ccTEHqXl.s:4828   .rodata.ucExpectedStackBytes.5925:00000000 $d
     /tmp/ccTEHqXl.s:4832   .rodata.ucExpectedStackBytes.5925:00000000 ucExpectedStackBytes.5925
     /tmp/ccTEHqXl.s:4854   .bss.uxTasksDeleted:00000000 $d
     /tmp/ccTEHqXl.s:4858   .bss.uxTasksDeleted:00000000 uxTasksDeleted
     /tmp/ccTEHqXl.s:4861   .bss.xSuspendedTaskList:00000000 $d
     /tmp/ccTEHqXl.s:4865   .bss.xSuspendedTaskList:00000000 xSuspendedTaskList
     /tmp/ccTEHqXl.s:4868   .bss.pxCurrentTCB:00000000 $d
     /tmp/ccTEHqXl.s:4875   .bss.xPendingReadyList:00000000 $d
     /tmp/ccTEHqXl.s:4879   .bss.xPendingReadyList:00000000 xPendingReadyList
     /tmp/ccTEHqXl.s:4882   .bss.xNumOfOverflows:00000000 $d
     /tmp/ccTEHqXl.s:4886   .bss.xNumOfOverflows:00000000 xNumOfOverflows
     /tmp/ccTEHqXl.s:4889   .bss.xTickCount:00000000 $d
     /tmp/ccTEHqXl.s:4893   .bss.xTickCount:00000000 xTickCount
     /tmp/ccTEHqXl.s:4896   .bss.uxSchedulerSuspended:00000000 $d
     /tmp/ccTEHqXl.s:4900   .bss.uxSchedulerSuspended:00000000 uxSchedulerSuspended
     /tmp/ccTEHqXl.s:4903   .bss.xDelayedTaskList2:00000000 $d
     /tmp/ccTEHqXl.s:4907   .bss.xDelayedTaskList2:00000000 xDelayedTaskList2
     /tmp/ccTEHqXl.s:4910   .bss.uxTaskNumber:00000000 $d
     /tmp/ccTEHqXl.s:4914   .bss.uxTaskNumber:00000000 uxTaskNumber
     /tmp/ccTEHqXl.s:4917   .bss.xMissedYield:00000000 $d
     /tmp/ccTEHqXl.s:4921   .bss.xMissedYield:00000000 xMissedYield
     /tmp/ccTEHqXl.s:4924   .data.xNextTaskUnblockTime:00000000 $d
     /tmp/ccTEHqXl.s:4928   .data.xNextTaskUnblockTime:00000000 xNextTaskUnblockTime
     /tmp/ccTEHqXl.s:4931   .bss.uxCurrentNumberOfTasks:00000000 $d
     /tmp/ccTEHqXl.s:4935   .bss.uxCurrentNumberOfTasks:00000000 uxCurrentNumberOfTasks
     /tmp/ccTEHqXl.s:4938   .bss.uxTopReadyPriority:00000000 $d
     /tmp/ccTEHqXl.s:4942   .bss.uxTopReadyPriority:00000000 uxTopReadyPriority
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
vListRemove
vListInsertEnd
vPortEnterCritical
vPortYieldFromISR
vPortExitCritical
vPortFree
memset
vListInitialiseItem
strncpy
pxPortInitialiseStack
vListInitialise
pvPortMalloc
vListInsert
memcmp
vApplicationStackOverflowHook
xPortStartScheduler
vPortEndScheduler
