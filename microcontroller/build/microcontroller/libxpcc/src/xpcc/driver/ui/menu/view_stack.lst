   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 2
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"view_stack.cpp"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text._ZN4xpcc9ViewStackD2Ev,"ax",%progbits
  20              		.align	2
  21              		.global	_ZN4xpcc9ViewStackD2Ev
  22              		.thumb
  23              		.thumb_func
  25              	_ZN4xpcc9ViewStackD2Ev:
  26              	.LFB1287:
  27              		.file 1 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp"
   1:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** // coding: utf-8
   2:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** // ----------------------------------------------------------------------------
   3:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** /* Copyright (c) 2011, Roboterclub Aachen e.V.
   4:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp ****  * All rights reserved.
   5:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp ****  * 
   6:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp ****  * Redistribution and use in source and binary forms, with or without
   7:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp ****  * modification, are permitted provided that the following conditions are met:
   8:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp ****  * 
   9:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp ****  *     * Redistributions of source code must retain the above copyright
  10:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp ****  *       notice, this list of conditions and the following disclaimer.
  11:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp ****  *     * Redistributions in binary form must reproduce the above copyright
  12:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp ****  *       notice, this list of conditions and the following disclaimer in the
  13:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp ****  *       documentation and/or other materials provided with the distribution.
  14:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp ****  *     * Neither the name of the Roboterclub Aachen e.V. nor the
  15:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp ****  *       names of its contributors may be used to endorse or promote products
  16:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp ****  *       derived from this software without specific prior written permission.
  17:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp ****  * 
  18:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp ****  * THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
  19:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp ****  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  20:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  21:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp ****  * DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
  22:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  23:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  24:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  25:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  26:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  27:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  28:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp ****  */
  29:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** // ----------------------------------------------------------------------------
  30:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** 
  31:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** #include "view_stack.hpp"
  32:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** 
  33:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** // ----------------------------------------------------------------------------
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** xpcc::ViewStack::ViewStack(xpcc::GraphicDisplay* display) :
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** 	display(display)
  36:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** {
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** }
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** 
  39:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** // ----------------------------------------------------------------------------
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** xpcc::ViewStack::~ViewStack()
  28              		.loc 1 40 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 70B5     		push	{r4, r5, r6, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 16
  36              		.cfi_offset 4, -16
  37              		.cfi_offset 5, -12
  38              		.cfi_offset 6, -8
  39              		.cfi_offset 14, -4
  40              		.loc 1 40 0
  41 0002 0646     		mov	r6, r0
  42              	.LBB101:
  43 0004 3446     		mov	r4, r6
  44              	.LBB102:
  45              	.LBB103:
  46              	.LBB104:
  47              	.LBB105:
  48              		.file 2 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked
   1:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** // coding: utf-8
   2:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** // ----------------------------------------------------------------------------
   3:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** /* Copyright (c) 2009, Roboterclub Aachen e.V.
   4:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp ****  * All rights reserved.
   5:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp ****  * 
   6:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp ****  * Redistribution and use in source and binary forms, with or without
   7:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp ****  * modification, are permitted provided that the following conditions are met:
   8:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp ****  * 
   9:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp ****  *     * Redistributions of source code must retain the above copyright
  10:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp ****  *       notice, this list of conditions and the following disclaimer.
  11:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp ****  *     * Redistributions in binary form must reproduce the above copyright
  12:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp ****  *       notice, this list of conditions and the following disclaimer in the
  13:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp ****  *       documentation and/or other materials provided with the distribution.
  14:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp ****  *     * Neither the name of the Roboterclub Aachen e.V. nor the
  15:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp ****  *       names of its contributors may be used to endorse or promote products
  16:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp ****  *       derived from this software without specific prior written permission.
  17:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp ****  * 
  18:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp ****  * THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
  19:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp ****  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  20:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  21:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp ****  * DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
  22:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  23:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  24:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  25:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  26:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  27:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  28:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp ****  */
  29:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** // ----------------------------------------------------------------------------
  30:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 
  31:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** #ifndef	XPCC__LINKED_LIST_HPP
  32:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	#error	"Don't include this file directly, use 'linked_list.hpp' instead"
  33:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** #endif
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** // ----------------------------------------------------------------------------
  36:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** template <typename T, typename Allocator>
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** xpcc::LinkedList<T, Allocator>::LinkedList(const Allocator& allocator) :
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	nodeAllocator(allocator), front(0), back(0)
  39:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** {
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** }
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** template <typename T, typename Allocator>
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** xpcc::LinkedList<T, Allocator>::~LinkedList()
  44:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** {
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	while (this->front != 0)
  49              		.loc 2 45 0
  50 0006 C068     		ldr	r0, [r0, #12]
  51              	.LVL1:
  52              	.LBE105:
  53              	.LBE104:
  54              	.LBE103:
  55              	.LBE102:
  56              		.loc 1 40 0
  57 0008 064B     		ldr	r3, .L9
  58 000a 44F8083B 		str	r3, [r4], #8
  59              	.LVL2:
  60              	.LBB112:
  61              	.LBB111:
  62              	.LBB110:
  63              	.LBB109:
  64              		.loc 2 45 0
  65 000e 30B1     		cbz	r0, .L7
  66 0010 054D     		ldr	r5, .L9+4
  67              	.L3:
  68              	.LVL3:
  69              	.LBB106:
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	{
  47:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 		Node *node = this->front;
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 		this->front = this->front->next;
  70              		.loc 2 48 0
  71 0012 4368     		ldr	r3, [r0, #4]
  72 0014 6360     		str	r3, [r4, #4]
  73              	.LVL4:
  74              	.LBB107:
  75              	.LBB108:
  76              		.file 3 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp"
   1:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** // coding: utf-8
   2:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** // ----------------------------------------------------------------------------
   3:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** /* Copyright (c) 2009, Roboterclub Aachen e.V.
   4:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  * All rights reserved.
   5:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  *
   6:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  * Redistribution and use in source and binary forms, with or without
   7:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  * modification, are permitted provided that the following conditions are met:
   8:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  * 
   9:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  *     * Redistributions of source code must retain the above copyright
  10:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  *       notice, this list of conditions and the following disclaimer.
  11:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  *     * Redistributions in binary form must reproduce the above copyright
  12:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  *       notice, this list of conditions and the following disclaimer in the
  13:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  *       documentation and/or other materials provided with the distribution.
  14:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  *     * Neither the name of the Roboterclub Aachen e.V. nor the
  15:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  *       names of its contributors may be used to endorse or promote products
  16:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  *       derived from this software without specific prior written permission.
  17:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  *
  18:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  * THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
  19:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  20:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  21:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  * DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
  22:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  23:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  24:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  25:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  26:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  27:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  28:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  */
  29:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** // ----------------------------------------------------------------------------
  30:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 
  31:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** #ifndef XPCC_ALLOCATOR__DYNAMIC_HPP
  32:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** #define XPCC_ALLOCATOR__DYNAMIC_HPP
  33:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** #include "allocator_base.hpp"
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 
  36:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** namespace xpcc
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** {
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 	namespace allocator
  39:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 	{
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 		/**
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 		 * \brief	Dynamic memory allocator
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 		 * 
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 		 * Wrapper for the underlying memory management. No additional
  44:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 		 * management is done.
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 		 * 
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 		 * \ingroup	allocator
  47:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 		 * \author	Fabian Greif
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 		 */
  49:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 		template <typename T>
  50:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 		class Dynamic : public AllocatorBase<T>
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 		{
  52:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 		public:
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			template <typename U>
  54:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			struct rebind
  55:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			{
  56:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 				typedef Dynamic<U> other;
  57:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			};
  58:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			
  59:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 		public:
  60:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			Dynamic() :
  61:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 				AllocatorBase<T>()
  62:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			{
  63:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			}
  64:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			Dynamic(const Dynamic& other) :
  66:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 				AllocatorBase<T>(other)
  67:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			{
  68:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			}
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			template <typename U>
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			Dynamic(const Dynamic<U>&) :
  72:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 				AllocatorBase<T>()
  73:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			{
  74:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			}
  75:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			
  76:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			T*
  77:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			allocate(size_t n)
  78:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			{
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 				// allocate the memory without calling the constructor
  80:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 				// of the associated data-type.
  81:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 				return static_cast<T*>(::operator new(n * sizeof(T)));
  82:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			}
  83:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			
  84:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			void
  85:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			deallocate(T* p)
  86:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			{
  87:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 				// it is important to use this form here, otherwise the
  88:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 				// destructor of p will be called which is unwanted here.
  89:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 				// The destructor can be called with the destroy()-method.
  90:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 				::operator delete(p);
  77              		.loc 3 90 0
  78 0016 A847     		blx	r5
  79              	.LVL5:
  80              	.LBE108:
  81              	.LBE107:
  82              	.LBE106:
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	while (this->front != 0)
  83              		.loc 2 45 0
  84 0018 6068     		ldr	r0, [r4, #4]
  85 001a 0028     		cmp	r0, #0
  86 001c F9D1     		bne	.L3
  87              	.L7:
  88              	.LBE109:
  89              	.LBE110:
  90              	.LBE111:
  91              	.LBE112:
  92              	.LBE101:
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** {
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** }
  93              		.loc 1 42 0
  94 001e 3046     		mov	r0, r6
  95 0020 70BD     		pop	{r4, r5, r6, pc}
  96              	.L10:
  97 0022 00BF     		.align	2
  98              	.L9:
  99 0024 08000000 		.word	.LANCHOR0+8
 100 0028 00000000 		.word	_ZdlPv
 101              		.cfi_endproc
 102              	.LFE1287:
 104              		.global	_ZN4xpcc9ViewStackD1Ev
 105              		.thumb_set _ZN4xpcc9ViewStackD1Ev,_ZN4xpcc9ViewStackD2Ev
 106              		.section	.text._ZN4xpcc9ViewStackD0Ev,"ax",%progbits
 107              		.align	2
 108              		.global	_ZN4xpcc9ViewStackD0Ev
 109              		.thumb
 110              		.thumb_func
 112              	_ZN4xpcc9ViewStackD0Ev:
 113              	.LFB1289:
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** xpcc::ViewStack::~ViewStack()
 114              		.loc 1 40 0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 0
 117              		@ frame_needed = 0, uses_anonymous_args = 0
 118              	.LVL6:
 119 0000 70B5     		push	{r4, r5, r6, lr}
 120              	.LCFI1:
 121              		.cfi_def_cfa_offset 16
 122              		.cfi_offset 4, -16
 123              		.cfi_offset 5, -12
 124              		.cfi_offset 6, -8
 125              		.cfi_offset 14, -4
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** xpcc::ViewStack::~ViewStack()
 126              		.loc 1 40 0
 127 0002 0646     		mov	r6, r0
 128              	.LVL7:
 129              	.LBB125:
 130              	.LBB126:
 131 0004 3446     		mov	r4, r6
 132              	.LBB127:
 133              	.LBB128:
 134              	.LBB129:
 135              	.LBB130:
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	while (this->front != 0)
 136              		.loc 2 45 0
 137 0006 C068     		ldr	r0, [r0, #12]
 138              	.LVL8:
 139              	.LBE130:
 140              	.LBE129:
 141              	.LBE128:
 142              	.LBE127:
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** xpcc::ViewStack::~ViewStack()
 143              		.loc 1 40 0
 144 0008 074B     		ldr	r3, .L18
 145 000a 084D     		ldr	r5, .L18+4
 146 000c 44F8083B 		str	r3, [r4], #8
 147              	.LVL9:
 148              	.LBB137:
 149              	.LBB136:
 150              	.LBB135:
 151              	.LBB134:
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	while (this->front != 0)
 152              		.loc 2 45 0
 153 0010 28B1     		cbz	r0, .L14
 154              	.L13:
 155              	.LVL10:
 156              	.LBB131:
 157              		.loc 2 48 0
 158 0012 4368     		ldr	r3, [r0, #4]
 159 0014 6360     		str	r3, [r4, #4]
 160              	.LVL11:
 161              	.LBB132:
 162              	.LBB133:
 163              		.loc 3 90 0
 164 0016 A847     		blx	r5
 165              	.LVL12:
 166              	.LBE133:
 167              	.LBE132:
 168              	.LBE131:
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	while (this->front != 0)
 169              		.loc 2 45 0
 170 0018 6068     		ldr	r0, [r4, #4]
 171 001a 0028     		cmp	r0, #0
 172 001c F9D1     		bne	.L13
 173              	.L14:
 174              	.LBE134:
 175              	.LBE135:
 176              	.LBE136:
 177              	.LBE137:
 178              	.LBE126:
 179              	.LBE125:
 180              		.loc 1 42 0
 181 001e 3046     		mov	r0, r6
 182 0020 A847     		blx	r5
 183              	.LVL13:
 184 0022 3046     		mov	r0, r6
 185 0024 70BD     		pop	{r4, r5, r6, pc}
 186              	.L19:
 187 0026 00BF     		.align	2
 188              	.L18:
 189 0028 08000000 		.word	.LANCHOR0+8
 190 002c 00000000 		.word	_ZdlPv
 191              		.cfi_endproc
 192              	.LFE1289:
 194              		.section	.text._ZN4xpcc9ViewStack6updateEv,"ax",%progbits
 195              		.align	2
 196              		.global	_ZN4xpcc9ViewStack6updateEv
 197              		.thumb
 198              		.thumb_func
 200              	_ZN4xpcc9ViewStack6updateEv:
 201              	.LFB1291:
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** 
  44:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** // ----------------------------------------------------------------------------
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** void
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** xpcc::ViewStack::pop()
  47:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** {
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** 	xpcc::AbstractView *topElement = this->stack.get();
  49:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** 	this->stack.pop();
  50:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** 	
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** 	delete topElement;
  52:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** }
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** 
  54:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** // ----------------------------------------------------------------------------
  55:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** void
  56:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** xpcc::ViewStack::update()
  57:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** {
 202              		.loc 1 57 0
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 0
 205              		@ frame_needed = 0, uses_anonymous_args = 0
 206              	.LVL14:
 207 0000 38B5     		push	{r3, r4, r5, lr}
 208              	.LCFI2:
 209              		.cfi_def_cfa_offset 16
 210              		.cfi_offset 3, -16
 211              		.cfi_offset 4, -12
 212              		.cfi_offset 5, -8
 213              		.cfi_offset 14, -4
 214              	.LBB162:
 215              	.LBB163:
 216              	.LBB164:
 217              		.file 4 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp"
   1:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** // coding: utf-8
   2:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** // ----------------------------------------------------------------------------
   3:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** /* Copyright (c) 2013, Roboterclub Aachen e.V.
   4:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  * All rights reserved.
   5:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  * 
   6:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  * Redistribution and use in source and binary forms, with or without
   7:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  * modification, are permitted provided that the following conditions are met:
   8:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  * 
   9:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  *     * Redistributions of source code must retain the above copyright
  10:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  *       notice, this list of conditions and the following disclaimer.
  11:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  *     * Redistributions in binary form must reproduce the above copyright
  12:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  *       notice, this list of conditions and the following disclaimer in the
  13:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  *       documentation and/or other materials provided with the distribution.
  14:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  *     * Neither the name of the Roboterclub Aachen e.V. nor the
  15:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  *       names of its contributors may be used to endorse or promote products
  16:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  *       derived from this software without specific prior written permission.
  17:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  * 
  18:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  * THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
  19:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  20:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  21:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  * DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
  22:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  23:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  24:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  25:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  26:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  27:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  28:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  */
  29:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** // ----------------------------------------------------------------------------
  30:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 
  31:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** #ifndef XPCC__VIEWSTACK_HPP
  32:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** #define XPCC__VIEWSTACK_HPP
  33:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** #include "../display/graphic_display.hpp"
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** #include "../../../container/stack.hpp"
  36:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** #include "../../../container/linked_list.hpp"
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** #include "menu_buttons.hpp"
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** #include "abstract_view.hpp"
  39:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** namespace xpcc
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** {
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 	/**
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 	* \brief Stack which handles the displaying
  44:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 	*        of views on the graphic display.
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 	*
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 	* This class also deallocates the views passed
  47:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 	* to the stack.
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 	*
  49:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 	* \ingroup	display_menu
  50:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 	* \author	Thorsten Lajewski
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 	*/
  52:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 	class ViewStack
  54:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 	{
  55:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 	public:
  56:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		ViewStack(xpcc::GraphicDisplay* display);
  57:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		
  58:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		virtual ~ViewStack();
  59:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		
  60:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		/**
  61:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		 * @brief get the top view from the stack
  62:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		 * @return pointer to view from stack
  63:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		 */
  64:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		inline xpcc::AbstractView* 
  66:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		get()
  67:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		{
  68:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 			return this->stack.get();
 218              		.loc 4 68 0
 219 0002 C368     		ldr	r3, [r0, #12]
 220 0004 1C68     		ldr	r4, [r3, #0]
 221              	.LBE164:
 222              	.LBE163:
  58:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** 	xpcc::AbstractView* top = this->get();
  59:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** 
  60:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** 	top->update();
 223              		.loc 1 60 0
 224 0006 2368     		ldr	r3, [r4, #0]
 225              	.LBE162:
  57:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** {
 226              		.loc 1 57 0
 227 0008 0546     		mov	r5, r0
 228              	.LVL15:
 229              	.LBB180:
 230              		.loc 1 60 0
 231 000a 9B68     		ldr	r3, [r3, #8]
 232 000c 2046     		mov	r0, r4
 233              	.LVL16:
 234 000e 9847     		blx	r3
 235              	.LVL17:
  61:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** 	if (top->isAlive())
 236              		.loc 1 61 0
 237 0010 164B     		ldr	r3, .L32
 238 0012 2046     		mov	r0, r4
 239 0014 9847     		blx	r3
 240              	.LVL18:
  62:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** 	{
  63:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** 		if (top->hasChanged())
 241              		.loc 1 63 0
 242 0016 2368     		ldr	r3, [r4, #0]
  61:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** 	if (top->isAlive())
 243              		.loc 1 61 0
 244 0018 20B1     		cbz	r0, .L21
 245              		.loc 1 63 0
 246 001a 2046     		mov	r0, r4
 247 001c DB68     		ldr	r3, [r3, #12]
 248 001e 9847     		blx	r3
 249              	.LVL19:
 250 0020 D0B9     		cbnz	r0, .L31
 251 0022 38BD     		pop	{r3, r4, r5, pc}
 252              	.L21:
  64:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** 		{
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** 			top->draw();
  66:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** 			this->display->update();
  67:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** 		}
  68:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** 	}
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** 	else
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** 	{
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** 		// Remove old view
  72:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** 		top->onRemove();
 253              		.loc 1 72 0
 254 0024 2046     		mov	r0, r4
 255 0026 9B69     		ldr	r3, [r3, #24]
 256 0028 9847     		blx	r3
 257              	.LVL20:
 258              	.LBB165:
 259              	.LBB166:
 260              	.LBB167:
 261              	.LBB168:
 262              	.LBB169:
  49:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 		
  50:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 		Allocator::destroy(&node->value);
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 		this->nodeAllocator.deallocate(node);
  52:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	}
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** }
  54:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 
  55:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** template <typename T, typename Allocator>
  56:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** bool
  57:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** xpcc::LinkedList<T, Allocator>::isEmpty() const
  58:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** {
  59:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	return (this->front == 0);
  60:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** }
  61:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 
  62:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** template <typename T, typename Allocator>
  63:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** std::size_t
  64:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** xpcc::LinkedList<T, Allocator>::getSize() const
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** {
  66:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	std::size_t count = 0;
  67:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	for (const_iterator it = this->begin(); it != this->end(); ++it) {
  68:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 		count++; 
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	}
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	return count;
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** }
  72:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 
  73:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** // ----------------------------------------------------------------------------
  74:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** template <typename T, typename Allocator>
  75:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** bool
  76:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** xpcc::LinkedList<T, Allocator>::prepend(const T& value)
  77:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** {
  78:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	// allocate memory for the new node and copy the value into it
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	Node *node = this->nodeAllocator.allocate(1);
  80:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	Allocator::construct(&node->value, value);
  81:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	
  82:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	// hook the node into the list
  83:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	node->next = this->front;
  84:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	this->front = node;
  85:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	
  86:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	if (this->back == 0) {
  87:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 		// first entry in the list
  88:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 		this->back = node;
  89:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	}
  90:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	
  91:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	return true;
  92:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** }
  93:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 
  94:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** template <typename T, typename Allocator>
  95:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** void
  96:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** xpcc::LinkedList<T, Allocator>::append(const T& value)
  97:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** {
  98:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	// allocate memory for the new node and copy the value into it
  99:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	Node *node = this->nodeAllocator.allocate(1);
 100:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	Allocator::construct(&node->value, value);
 101:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	
 102:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	// hook the node into the list
 103:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	node->next = 0;
 104:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	if (this->front == 0)
 105:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	{
 106:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 		// first entry in the list
 107:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 		this->front = node;
 108:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	}
 109:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	else {
 110:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 		this->back->next = node;
 111:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	}
 112:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	this->back = node;
 113:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** }
 114:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 
 115:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** // ----------------------------------------------------------------------------
 116:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** template <typename T, typename Allocator>
 117:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** void
 118:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** xpcc::LinkedList<T, Allocator>::removeFront()
 119:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** {
 120:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	// remove node from the list
 121:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	Node *node = this->front;
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	if (this->front->next == 0)
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	{
 124:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 		// last entry in the list
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 		this->back = 0;
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 		this->front = 0;
 127:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	}
 128:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	else {
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 		this->front = this->front->next;
 130:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	}
 131:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	
 132:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	// call destructor and free memory
 133:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	Allocator::destroy(&node->value);
 134:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	this->nodeAllocator.deallocate(node);
 135:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** }
 136:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 
 137:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** // ----------------------------------------------------------------------------
 138:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** template <typename T, typename Allocator>
 139:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** inline const T&
 140:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** xpcc::LinkedList<T, Allocator>::getFront() const
 141:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** {
 142:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	return this->front->value;
 143:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** }
 144:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 
 145:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** template <typename T, typename Allocator>
 146:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** inline T&
 147:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** xpcc::LinkedList<T, Allocator>::getFront()
 148:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** {
 149:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	return this->front->value;
 263              		.loc 2 149 0
 264 002a E868     		ldr	r0, [r5, #12]
 265              	.LBE169:
 266              	.LBE168:
 267              	.LBE167:
 268              	.LBB170:
 269              	.LBB171:
 270              	.LBB172:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	if (this->front->next == 0)
 271              		.loc 2 122 0
 272 002c 4368     		ldr	r3, [r0, #4]
 273              	.LBE172:
 274              	.LBE171:
 275              	.LBE170:
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** 	xpcc::AbstractView *topElement = this->stack.get();
 276              		.loc 1 48 0
 277 002e 0468     		ldr	r4, [r0, #0]
 278              	.LVL21:
 279              	.LBB177:
 280              	.LBB176:
 281              	.LBB175:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	if (this->front->next == 0)
 282              		.loc 2 122 0
 283 0030 03B9     		cbnz	r3, .L23
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 		this->back = 0;
 284              		.loc 2 125 0
 285 0032 2B61     		str	r3, [r5, #16]
 286              	.L23:
 287 0034 EB60     		str	r3, [r5, #12]
 288              	.LVL22:
 289              	.LBB173:
 290              	.LBB174:
 291              		.loc 3 90 0
 292 0036 0E4B     		ldr	r3, .L32+4
 293 0038 9847     		blx	r3
 294              	.LVL23:
 295              	.LBE174:
 296              	.LBE173:
 297              	.LBE175:
 298              	.LBE176:
 299              	.LBE177:
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** 	delete topElement;
 300              		.loc 1 51 0
 301 003a 1CB1     		cbz	r4, .L24
 302 003c 2368     		ldr	r3, [r4, #0]
 303 003e 2046     		mov	r0, r4
 304 0040 5B68     		ldr	r3, [r3, #4]
 305 0042 9847     		blx	r3
 306              	.LVL24:
 307              	.L24:
 308              	.LBE166:
 309              	.LBE165:
 310              	.LBB178:
 311              	.LBB179:
 312              		.loc 4 68 0
 313 0044 EB68     		ldr	r3, [r5, #12]
 314 0046 1C68     		ldr	r4, [r3, #0]
 315              	.LVL25:
 316              	.LBE179:
 317              	.LBE178:
  73:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** 		this->pop();
  74:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** 		
  75:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** 		// Get new screen
  76:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** 		top = this->get();
  77:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** 		top->update();
 318              		.loc 1 77 0
 319 0048 2368     		ldr	r3, [r4, #0]
 320 004a 2046     		mov	r0, r4
 321 004c 9B68     		ldr	r3, [r3, #8]
 322 004e 9847     		blx	r3
 323              	.LVL26:
  78:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** 		this->display->clear();
 324              		.loc 1 78 0
 325 0050 6868     		ldr	r0, [r5, #4]
 326 0052 0368     		ldr	r3, [r0, #0]
 327 0054 1B69     		ldr	r3, [r3, #16]
 328 0056 9847     		blx	r3
 329              	.LVL27:
 330              	.L31:
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** 		top->draw();
 331              		.loc 1 79 0
 332 0058 2368     		ldr	r3, [r4, #0]
 333 005a 2046     		mov	r0, r4
 334 005c 1B69     		ldr	r3, [r3, #16]
 335 005e 9847     		blx	r3
 336              	.LVL28:
  80:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** 		this->display->update();
 337              		.loc 1 80 0
 338 0060 6868     		ldr	r0, [r5, #4]
 339 0062 0368     		ldr	r3, [r0, #0]
 340 0064 5B69     		ldr	r3, [r3, #20]
 341 0066 9847     		blx	r3
 342              	.LVL29:
 343 0068 38BD     		pop	{r3, r4, r5, pc}
 344              	.L33:
 345 006a 00BF     		.align	2
 346              	.L32:
 347 006c 00000000 		.word	_ZNK4xpcc12AbstractView7isAliveEv
 348 0070 00000000 		.word	_ZdlPv
 349              	.LBE180:
 350              		.cfi_endproc
 351              	.LFE1291:
 353              		.section	.text._ZN4xpcc9ViewStackC2EPNS_14GraphicDisplayE,"ax",%progbits
 354              		.align	2
 355              		.global	_ZN4xpcc9ViewStackC2EPNS_14GraphicDisplayE
 356              		.thumb
 357              		.thumb_func
 359              	_ZN4xpcc9ViewStackC2EPNS_14GraphicDisplayE:
 360              	.LFB1284:
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** xpcc::ViewStack::ViewStack(xpcc::GraphicDisplay* display) :
 361              		.loc 1 34 0
 362              		.cfi_startproc
 363              		@ args = 0, pretend = 0, frame = 0
 364              		@ frame_needed = 0, uses_anonymous_args = 0
 365              		@ link register save eliminated.
 366              	.LVL30:
 367              	.LBB181:
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** 	display(display)
 368              		.loc 1 35 0
 369 0000 4160     		str	r1, [r0, #4]
 370              	.LVL31:
 371 0002 0349     		ldr	r1, .L35
 372              	.LVL32:
 373              	.LBB182:
 374              	.LBB183:
 375              	.LBB184:
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	nodeAllocator(allocator), front(0), back(0)
 376              		.loc 2 38 0
 377 0004 0022     		movs	r2, #0
 378              	.LBE184:
 379              	.LBE183:
 380              	.LBE182:
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** 	display(display)
 381              		.loc 1 35 0
 382 0006 0160     		str	r1, [r0, #0]
 383              	.LBB187:
 384              	.LBB186:
 385              	.LBB185:
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	nodeAllocator(allocator), front(0), back(0)
 386              		.loc 2 38 0
 387 0008 C260     		str	r2, [r0, #12]
 388 000a 0261     		str	r2, [r0, #16]
 389              	.LBE185:
 390              	.LBE186:
 391              	.LBE187:
 392              	.LBE181:
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** }
 393              		.loc 1 37 0
 394 000c 7047     		bx	lr
 395              	.L36:
 396 000e 00BF     		.align	2
 397              	.L35:
 398 0010 08000000 		.word	.LANCHOR0+8
 399              		.cfi_endproc
 400              	.LFE1284:
 402              		.global	_ZN4xpcc9ViewStackC1EPNS_14GraphicDisplayE
 403              		.thumb_set _ZN4xpcc9ViewStackC1EPNS_14GraphicDisplayE,_ZN4xpcc9ViewStackC2EPNS_14GraphicDisplayE
 404              		.section	.text._ZN4xpcc9ViewStack3popEv,"ax",%progbits
 405              		.align	2
 406              		.global	_ZN4xpcc9ViewStack3popEv
 407              		.thumb
 408              		.thumb_func
 410              	_ZN4xpcc9ViewStack3popEv:
 411              	.LFB1290:
  47:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** {
 412              		.loc 1 47 0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416              	.LVL33:
 417              	.LBB199:
 418              	.LBB200:
 419              	.LBB201:
 420              	.LBB202:
 421              		.loc 2 149 0
 422 0000 C368     		ldr	r3, [r0, #12]
 423              	.LBE202:
 424              	.LBE201:
 425              	.LBE200:
 426              	.LBB203:
 427              	.LBB204:
 428              	.LBB205:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	if (this->front->next == 0)
 429              		.loc 2 122 0
 430 0002 5A68     		ldr	r2, [r3, #4]
 431              	.LBE205:
 432              	.LBE204:
 433              	.LBE203:
 434              	.LBE199:
  47:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** {
 435              		.loc 1 47 0
 436 0004 10B5     		push	{r4, lr}
 437              	.LCFI3:
 438              		.cfi_def_cfa_offset 8
 439              		.cfi_offset 4, -8
 440              		.cfi_offset 14, -4
 441              	.LBB214:
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** 	xpcc::AbstractView *topElement = this->stack.get();
 442              		.loc 1 48 0
 443 0006 1C68     		ldr	r4, [r3, #0]
 444              	.LVL34:
 445              	.LBB212:
 446              	.LBB210:
 447              	.LBB208:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 	if (this->front->next == 0)
 448              		.loc 2 122 0
 449 0008 4AB1     		cbz	r2, .L43
 450              	.L38:
 451 000a C260     		str	r2, [r0, #12]
 452              	.LVL35:
 453              	.LBB206:
 454              	.LBB207:
 455              		.loc 3 90 0
 456 000c 1846     		mov	r0, r3
 457              	.LVL36:
 458 000e 054B     		ldr	r3, .L44
 459              	.LVL37:
 460 0010 9847     		blx	r3
 461              	.LVL38:
 462              	.LBE207:
 463              	.LBE206:
 464              	.LBE208:
 465              	.LBE210:
 466              	.LBE212:
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** 	delete topElement;
 467              		.loc 1 51 0
 468 0012 1CB1     		cbz	r4, .L37
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** 	delete topElement;
 469              		.loc 1 51 0 is_stmt 0 discriminator 1
 470 0014 2368     		ldr	r3, [r4, #0]
 471 0016 2046     		mov	r0, r4
 472 0018 5B68     		ldr	r3, [r3, #4]
 473 001a 9847     		blx	r3
 474              	.LVL39:
 475              	.L37:
 476 001c 10BD     		pop	{r4, pc}
 477              	.LVL40:
 478              	.L43:
 479              	.LBB213:
 480              	.LBB211:
 481              	.LBB209:
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linked_list_impl.hpp **** 		this->back = 0;
 482              		.loc 2 125 0 is_stmt 1
 483 001e 0261     		str	r2, [r0, #16]
 484 0020 F3E7     		b	.L38
 485              	.L45:
 486 0022 00BF     		.align	2
 487              	.L44:
 488 0024 00000000 		.word	_ZdlPv
 489              	.LBE209:
 490              	.LBE211:
 491              	.LBE213:
 492              	.LBE214:
 493              		.cfi_endproc
 494              	.LFE1290:
 496              		.section	.text._ZN4xpcc9ViewStack16shortButtonPressENS_11MenuButtons6ButtonE,"ax",%progbits
 497              		.align	2
 498              		.global	_ZN4xpcc9ViewStack16shortButtonPressENS_11MenuButtons6ButtonE
 499              		.thumb
 500              		.thumb_func
 502              	_ZN4xpcc9ViewStack16shortButtonPressENS_11MenuButtons6ButtonE:
 503              	.LFB1292:
  81:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** 	}
  82:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** }
  83:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** 
  84:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** // ----------------------------------------------------------------------------
  85:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** void
  86:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** xpcc::ViewStack::shortButtonPress(xpcc::MenuButtons::Button button)
  87:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** {
 504              		.loc 1 87 0
 505              		.cfi_startproc
 506              		@ args = 0, pretend = 0, frame = 0
 507              		@ frame_needed = 0, uses_anonymous_args = 0
 508              	.LVL41:
 509 0000 08B5     		push	{r3, lr}
 510              	.LCFI4:
 511              		.cfi_def_cfa_offset 8
 512              		.cfi_offset 3, -8
 513              		.cfi_offset 14, -4
 514              	.LBB215:
 515              	.LBB216:
 516              	.LBB217:
 517              		.loc 4 68 0
 518 0002 C368     		ldr	r3, [r0, #12]
 519 0004 1868     		ldr	r0, [r3, #0]
 520              	.LVL42:
 521              	.LBE217:
 522              	.LBE216:
  88:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** 	xpcc::AbstractView* top = this->get();
  89:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.cpp **** 	top->shortButtonPress(button);
 523              		.loc 1 89 0
 524 0006 0368     		ldr	r3, [r0, #0]
 525 0008 5B69     		ldr	r3, [r3, #20]
 526 000a 9847     		blx	r3
 527              	.LVL43:
 528 000c 08BD     		pop	{r3, pc}
 529              	.LBE215:
 530              		.cfi_endproc
 531              	.LFE1292:
 533              		.global	_ZTVN4xpcc9ViewStackE
 534 000e 00BF     		.section	.rodata._ZTVN4xpcc9ViewStackE,"a",%progbits
 535              		.align	3
 536              		.set	.LANCHOR0,. + 0
 539              	_ZTVN4xpcc9ViewStackE:
 540 0000 00000000 		.word	0
 541 0004 00000000 		.word	0
 542 0008 00000000 		.word	_ZN4xpcc9ViewStackD1Ev
 543 000c 00000000 		.word	_ZN4xpcc9ViewStackD0Ev
 544 0010 00000000 		.word	_ZN4xpcc9ViewStack6updateEv
 545 0014 00000000 		.text
 546              	.Letext0:
 547              		.file 5 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_displa
 548              		.file 6 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/accessor/ram.hpp"
 549              		.file 7 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_buttons.hpp"
 550              		.file 8 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp"
 551              		.file 9 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp"
 552              		.file 10 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/include/stddef.h"
 553              		.file 11 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linke
 554              		.file 12 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/linke
 555              		.file 13 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/stack
 556              		.file 14 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c+
 557              		.file 15 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c+
 558              		.file 16 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c+
 559              		.file 17 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c+
 560              		.file 18 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/st
 561              		.file 19 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c+
 562              		.file 20 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/st
 563              		.file 21 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/template_metaprogramming.hpp"
 564              		.file 22 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:00000000 view_stack.cpp
     /tmp/cc3ID14D.s:20     .text._ZN4xpcc9ViewStackD2Ev:00000000 $t
     /tmp/cc3ID14D.s:25     .text._ZN4xpcc9ViewStackD2Ev:00000000 _ZN4xpcc9ViewStackD2Ev
     /tmp/cc3ID14D.s:99     .text._ZN4xpcc9ViewStackD2Ev:00000024 $d
     /tmp/cc3ID14D.s:25     .text._ZN4xpcc9ViewStackD2Ev:00000000 _ZN4xpcc9ViewStackD1Ev
     /tmp/cc3ID14D.s:107    .text._ZN4xpcc9ViewStackD0Ev:00000000 $t
     /tmp/cc3ID14D.s:112    .text._ZN4xpcc9ViewStackD0Ev:00000000 _ZN4xpcc9ViewStackD0Ev
     /tmp/cc3ID14D.s:189    .text._ZN4xpcc9ViewStackD0Ev:00000028 $d
     /tmp/cc3ID14D.s:195    .text._ZN4xpcc9ViewStack6updateEv:00000000 $t
     /tmp/cc3ID14D.s:200    .text._ZN4xpcc9ViewStack6updateEv:00000000 _ZN4xpcc9ViewStack6updateEv
     /tmp/cc3ID14D.s:347    .text._ZN4xpcc9ViewStack6updateEv:0000006c $d
     /tmp/cc3ID14D.s:354    .text._ZN4xpcc9ViewStackC2EPNS_14GraphicDisplayE:00000000 $t
     /tmp/cc3ID14D.s:359    .text._ZN4xpcc9ViewStackC2EPNS_14GraphicDisplayE:00000000 _ZN4xpcc9ViewStackC2EPNS_14GraphicDisplayE
     /tmp/cc3ID14D.s:398    .text._ZN4xpcc9ViewStackC2EPNS_14GraphicDisplayE:00000010 $d
     /tmp/cc3ID14D.s:359    .text._ZN4xpcc9ViewStackC2EPNS_14GraphicDisplayE:00000000 _ZN4xpcc9ViewStackC1EPNS_14GraphicDisplayE
     /tmp/cc3ID14D.s:405    .text._ZN4xpcc9ViewStack3popEv:00000000 $t
     /tmp/cc3ID14D.s:410    .text._ZN4xpcc9ViewStack3popEv:00000000 _ZN4xpcc9ViewStack3popEv
     /tmp/cc3ID14D.s:488    .text._ZN4xpcc9ViewStack3popEv:00000024 $d
     /tmp/cc3ID14D.s:497    .text._ZN4xpcc9ViewStack16shortButtonPressENS_11MenuButtons6ButtonE:00000000 $t
     /tmp/cc3ID14D.s:502    .text._ZN4xpcc9ViewStack16shortButtonPressENS_11MenuButtons6ButtonE:00000000 _ZN4xpcc9ViewStack16shortButtonPressENS_11MenuButtons6ButtonE
     /tmp/cc3ID14D.s:539    .rodata._ZTVN4xpcc9ViewStackE:00000000 _ZTVN4xpcc9ViewStackE
     /tmp/cc3ID14D.s:535    .rodata._ZTVN4xpcc9ViewStackE:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
_ZdlPv
_ZNK4xpcc12AbstractView7isAliveEv
