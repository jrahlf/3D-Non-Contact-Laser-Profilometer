   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 2
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"choice_menu.cpp"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text._ZN4xpcc10ChoiceMenu10initialiseEv,"ax",%progbits
  20              		.align	2
  21              		.global	_ZN4xpcc10ChoiceMenu10initialiseEv
  22              		.thumb
  23              		.thumb_func
  25              	_ZN4xpcc10ChoiceMenu10initialiseEv:
  26              	.LFB1384:
  27              		.file 1 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp"
   1:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** // coding: utf-8
   2:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** // ----------------------------------------------------------------------------
   3:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** /* Copyright (c) 2011, Roboterclub Aachen e.V.
   4:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp ****  * All rights reserved.
   5:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp ****  *
   6:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp ****  * Redistribution and use in source and binary forms, with or without
   7:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp ****  * modification, are permitted provided that the following conditions are met:
   8:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp ****  *
   9:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp ****  *     * Redistributions of source code must retain the above copyright
  10:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp ****  *       notice, this list of conditions and the following disclaimer.
  11:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp ****  *     * Redistributions in binary form must reproduce the above copyright
  12:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp ****  *       notice, this list of conditions and the following disclaimer in the
  13:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp ****  *       documentation and/or other materials provided with the distribution.
  14:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp ****  *     * Neither the name of the Roboterclub Aachen e.V. nor the
  15:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp ****  *       names of its contributors may be used to endorse or promote products
  16:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp ****  *       derived from this software without specific prior written permission.
  17:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp ****  *
  18:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp ****  * THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
  19:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp ****  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  20:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  21:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp ****  * DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
  22:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  23:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  24:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  25:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  26:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  27:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  28:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp ****  */
  29:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** // ----------------------------------------------------------------------------
  30:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 
  31:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** #include "choice_menu.hpp"
  32:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 
  33:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** xpcc::ChoiceMenu::ChoiceMenu(xpcc::ViewStack* stack, uint8_t identifier) :
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	xpcc::AbstractMenu(stack, identifier),
  36:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	display_update_time(500),
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	timer(display_update_time),
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	buttonAction(false),
  39:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	title(""),
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	homePosition(0),
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	position(0)
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** {
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	this->maximalDrawnEntrys = (getViewStack()->getDisplay().getHeight()- 16) / 8 ;
  44:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** }
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** xpcc::ChoiceMenu::ChoiceMenu(xpcc::ViewStack* stack, uint8_t identifier, const char* title) :
  47:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	xpcc::AbstractMenu(stack, identifier),
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	display_update_time(500),
  49:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	timer(display_update_time),
  50:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	buttonAction(false),
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	title(title),
  52:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	homePosition(0),
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	position(0)
  54:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** {
  55:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	this->maximalDrawnEntrys = (getViewStack()->getDisplay().getHeight()- 16) / 8 ;
  56:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** }
  57:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 
  58:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** void
  59:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** xpcc::ChoiceMenu::addEntry(const char* text,  bool *valuePtr, bool defaultValue)
  60:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** {
  61:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	static uint16_t availableSpace = (getViewStack()->getDisplay().getWidth()-16)/6-6;
  62:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	xpcc::ChoiceMenuEntry entry(text, availableSpace, valuePtr, defaultValue);
  63:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	this->entries.append(entry);
  64:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** }
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 
  66:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** void
  67:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** xpcc::ChoiceMenu::initialise()
  68:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** {
  28              		.loc 1 68 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34 0000 10B4     		push	{r4}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 4
  37              		.cfi_offset 4, -4
  38              	.LBB341:
  39              	.LBB342:
  40              	.LBB343:
  41              		.file 2 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp"
   1:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** // coding: utf-8
   2:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** // ----------------------------------------------------------------------------
   3:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** /* Copyright (c) 2009, Roboterclub Aachen e.V.
   4:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp ****  * All rights reserved.
   5:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp ****  * 
   6:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp ****  * Redistribution and use in source and binary forms, with or without
   7:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp ****  * modification, are permitted provided that the following conditions are met:
   8:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp ****  * 
   9:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp ****  *     * Redistributions of source code must retain the above copyright
  10:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp ****  *       notice, this list of conditions and the following disclaimer.
  11:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp ****  *     * Redistributions in binary form must reproduce the above copyright
  12:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp ****  *       notice, this list of conditions and the following disclaimer in the
  13:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp ****  *       documentation and/or other materials provided with the distribution.
  14:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp ****  *     * Neither the name of the Roboterclub Aachen e.V. nor the
  15:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp ****  *       names of its contributors may be used to endorse or promote products
  16:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp ****  *       derived from this software without specific prior written permission.
  17:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp ****  * 
  18:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp ****  * THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
  19:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp ****  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  20:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  21:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp ****  * DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
  22:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  23:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  24:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  25:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  26:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  27:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  28:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp ****  */
  29:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** // ----------------------------------------------------------------------------
  30:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 
  31:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** #ifndef	XPCC__DOUBLY_LINKED_LIST_HPP
  32:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	#error	"Don't include this file directly, use 'doubly_linked_list.hpp' instead"
  33:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** #endif
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** // ----------------------------------------------------------------------------
  36:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** template <typename T, typename Allocator>
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::DoublyLinkedList(const Allocator& allocator) :
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	nodeAllocator(allocator), front(0), back(0)
  39:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** {
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** }
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** template <typename T, typename Allocator>
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::~DoublyLinkedList()
  44:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** {
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	while (this->front != 0)
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	{
  47:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 		Node *node = this->front;
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 		this->front = this->front->next;
  49:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 		
  50:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 		Allocator::destroy(&node->value);
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 		this->nodeAllocator.deallocate(node);
  52:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	}
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** }
  54:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 
  55:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** template <typename T, typename Allocator>
  56:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** bool
  57:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::isEmpty() const
  58:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** {
  59:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	return (this->front == 0);
  60:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** }
  61:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 
  62:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** template <typename T, typename Allocator>
  63:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** std::size_t
  64:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::getSize() const
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** {
  66:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	std::size_t count = 0;
  67:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	for (const_iterator it = this->begin(); it != this->end(); ++it) {
  68:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 		count++;
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	}
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	return count;
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** }
  72:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 
  73:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** // ----------------------------------------------------------------------------
  74:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** template <typename T, typename Allocator>
  75:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** bool
  76:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::prepend(const T& value)
  77:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** {
  78:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	// allocate memory for the new node and copy the value into it
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	Node *node = this->nodeAllocator.allocate(1);
  80:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	Allocator::construct(&node->value, value);
  81:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	
  82:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	// hook the node into the list
  83:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	node->next = this->front;
  84:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	node->previous = 0;
  85:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	
  86:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	if (this->front == 0)
  87:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	{
  88:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 		// node it the first entry
  89:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 		this->back = node;
  90:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	}
  91:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	else {
  92:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 		this->front->previous = node;
  93:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	}
  94:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	this->front = node;
  95:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	
  96:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	return true;
  97:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** }
  98:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 
  99:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** template <typename T, typename Allocator>
 100:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** void
 101:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::append(const T& value)
 102:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** {
 103:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	// allocate memory for the new node and copy the value into it
 104:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	Node *node = this->nodeAllocator.allocate(1);
 105:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	Allocator::construct(&node->value, value);
 106:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	
 107:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	// hook the node into the list
 108:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	node->next = 0;
 109:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	node->previous = this->back;
 110:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	
 111:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	if (this->back == 0)
 112:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	{
 113:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 		// first entry in the list
 114:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 		this->front = node;
 115:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	}
 116:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	else {
 117:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 		this->back->next = node;
 118:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	}
 119:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	this->back = node;
 120:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** }
 121:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** // ----------------------------------------------------------------------------
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** template <typename T, typename Allocator>
 124:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** void
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::removeFront()
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** {
 127:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	// remove node from the list
 128:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	Node *node = this->front;
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	
 130:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	if (this->front->next == 0)
 131:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	{
 132:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 		// last entry in the list
 133:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 		this->front = 0;
 134:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 		this->back = 0;
 135:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	}
 136:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	else {
 137:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 		this->front = this->front->next;
 138:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 		this->front->previous = 0;
 139:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	}
 140:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	
 141:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	// call destructor and free memory
 142:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	Allocator::destroy(&node->value);
 143:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	this->nodeAllocator.deallocate(node);
 144:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** }
 145:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 
 146:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** template <typename T, typename Allocator>
 147:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** void
 148:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::removeBack()
 149:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** {
 150:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	// remove node from the list
 151:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	Node *node = this->back;
 152:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	
 153:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	if (this->back->previous == 0)
 154:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	{
 155:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 		// last entry in the list
 156:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 		this->front = 0;
 157:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 		this->back = 0;
 158:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	}
 159:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	else {
 160:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 		this->back = this->back->previous;
 161:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 		this->back->next = 0;
 162:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	}
 163:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	
 164:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	// call destructor and free memory
 165:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	Allocator::destroy(&node->value);
 166:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	this->nodeAllocator.deallocate(node);
 167:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** }
 168:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 
 169:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** // ----------------------------------------------------------------------------
 170:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** template <typename T, typename Allocator>
 171:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** inline const T&
 172:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::getFront() const
 173:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** {
 174:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	return this->front->value;
 175:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** }
 176:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 
 177:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** template <typename T, typename Allocator>
 178:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** inline const T&
 179:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::getBack() const
 180:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** {
 181:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	return this->back->value;
 182:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** }
 183:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 
 184:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** // ----------------------------------------------------------------------------
 185:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** template <typename T, typename Allocator>
 186:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** typename xpcc::DoublyLinkedList<T, Allocator>::iterator 
 187:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::begin()
 188:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** {
 189:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	return iterator(this->front);
  42              		.loc 2 189 0
  43 0002 C46A     		ldr	r4, [r0, #44]
  44              	.LVL1:
  45              	.LBE343:
  46              	.LBE342:
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	EntryList::iterator iter = this->entries.begin();
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	for(; iter!= this->entries.end(); ++iter){
  47              		.loc 1 70 0
  48 0004 2346     		mov	r3, r4
  49 0006 2CB1     		cbz	r4, .L6
  50              	.LVL2:
  51              	.L5:
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 		(*iter->valuePtr) = iter->defaultValue;
  52              		.loc 1 71 0
  53 0008 197E     		ldrb	r1, [r3, #24]	@ zero_extendqisi2
  54 000a 5A69     		ldr	r2, [r3, #20]
  55              	.LBB344:
  56              	.LBB345:
  57              		.file 3 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_im
   1:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** // coding: utf-8
   2:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** // ----------------------------------------------------------------------------
   3:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** /* Copyright (c) 2009, Roboterclub Aachen e.V.
   4:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp ****  * All rights reserved.
   5:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp ****  * 
   6:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp ****  * Redistribution and use in source and binary forms, with or without
   7:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp ****  * modification, are permitted provided that the following conditions are met:
   8:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp ****  * 
   9:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp ****  *     * Redistributions of source code must retain the above copyright
  10:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp ****  *       notice, this list of conditions and the following disclaimer.
  11:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp ****  *     * Redistributions in binary form must reproduce the above copyright
  12:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp ****  *       notice, this list of conditions and the following disclaimer in the
  13:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp ****  *       documentation and/or other materials provided with the distribution.
  14:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp ****  *     * Neither the name of the Roboterclub Aachen e.V. nor the
  15:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp ****  *       names of its contributors may be used to endorse or promote products
  16:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp ****  *       derived from this software without specific prior written permission.
  17:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp ****  * 
  18:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp ****  * THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
  19:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp ****  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  20:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  21:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp ****  * DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
  22:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  23:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  24:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  25:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  26:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  27:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  28:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp ****  */
  29:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** // ----------------------------------------------------------------------------
  30:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 
  31:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** #ifndef	XPCC__DOUBLY_LINKED_LIST_HPP
  32:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 	#error	"Don't include this file directly, use 'doubly_linked_list.hpp' instead"
  33:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** #endif
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** // ----------------------------------------------------------------------------
  36:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** // Iterators
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** // ----------------------------------------------------------------------------
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 
  39:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** // const iterator
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** template <typename T, typename Allocator>
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::const_iterator::const_iterator() :
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 	node(0)
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** {
  44:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** }
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** template <typename T, typename Allocator>
  47:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::const_iterator::const_iterator(
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 		const Node* node) :
  49:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 	node(node)
  50:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** {
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** }
  52:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** template <typename T, typename Allocator>
  54:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::const_iterator::const_iterator(
  55:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 		const iterator& other) :
  56:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 	node(other.node)
  57:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** {
  58:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** }
  59:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 
  60:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** template <typename T, typename Allocator>
  61:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::const_iterator::const_iterator(
  62:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 		const const_iterator& other) :
  63:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 	node(other.node)
  64:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** {
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** }
  66:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 
  67:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** template <typename T, typename Allocator>
  68:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** typename xpcc::DoublyLinkedList<T, Allocator>::const_iterator&
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::const_iterator::operator = (
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 		const const_iterator& other)
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** {
  72:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 	this->node = other.node;
  73:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 	return *this;
  74:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** }
  75:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 
  76:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** template <typename T, typename Allocator>
  77:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** typename xpcc::DoublyLinkedList<T, Allocator>::const_iterator&
  78:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::const_iterator::operator ++ ()
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** {
  80:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 	this->node = this->node->next;
  81:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 	return *this;
  82:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** }
  83:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 
  84:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** template <typename T, typename Allocator>
  85:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** typename xpcc::DoublyLinkedList<T, Allocator>::const_iterator&
  86:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::const_iterator::operator -- ()
  87:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** {
  88:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 	this->node = this->node->previous;
  89:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 	return *this;
  90:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** }
  91:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 
  92:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** template <typename T, typename Allocator>
  93:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** bool
  94:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::const_iterator::operator == (
  95:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 		const const_iterator& other) const
  96:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** {
  97:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 	return (node == other.node);
  98:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** }
  99:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 
 100:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** template <typename T, typename Allocator>
 101:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** bool
 102:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::const_iterator::operator != (
 103:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 		const const_iterator& other) const
 104:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** {
 105:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 	return (node != other.node);
 106:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** }
 107:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 
 108:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** template <typename T, typename Allocator>
 109:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** const T&
 110:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::const_iterator::operator * () const
 111:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** {
 112:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 	return this->node->value;
 113:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** }
 114:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 
 115:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** template <typename T, typename Allocator>
 116:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** const T* 
 117:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::const_iterator::operator -> () const
 118:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** {
 119:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 	return &this->node->value;
 120:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** }
 121:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** // iterator
 124:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** template <typename T, typename Allocator>
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::iterator::iterator() :
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 	node(0)
 127:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** {
 128:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** }
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 
 130:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** template <typename T, typename Allocator>
 131:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::iterator::iterator(Node* node) :
 132:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 	node(node)
 133:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** {
 134:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** }
 135:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 
 136:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** template <typename T, typename Allocator>
 137:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::iterator::iterator(
 138:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 		const iterator& other) :
 139:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 	node(other.node)
 140:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** {
 141:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** }
 142:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 
 143:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** template <typename T, typename Allocator>
 144:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** typename xpcc::DoublyLinkedList<T, Allocator>::iterator&
 145:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::iterator::operator = (const iterator& other)
 146:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** {
 147:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 	this->node = other.node;
 148:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 	return *this;
 149:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** }
 150:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 
 151:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** template <typename T, typename Allocator>
 152:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** typename xpcc::DoublyLinkedList<T, Allocator>::iterator&
 153:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::iterator::operator ++ ()
 154:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** {
 155:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 	this->node = this->node->next;
  58              		.loc 3 155 0
  59 000c 1B6A     		ldr	r3, [r3, #32]
  60              	.LVL3:
  61              	.LBE345:
  62              	.LBE344:
  63              		.loc 1 71 0
  64 000e 1170     		strb	r1, [r2, #0]
  65              	.LVL4:
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	for(; iter!= this->entries.end(); ++iter){
  66              		.loc 1 70 0
  67 0010 002B     		cmp	r3, #0
  68 0012 F9D1     		bne	.L5
  69              	.LVL5:
  70              	.L6:
  72:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	}
  73:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	this->position = 0;
  71              		.loc 1 73 0
  72 0014 0023     		movs	r3, #0
  73              	.LVL6:
  74 0016 80F82630 		strb	r3, [r0, #38]
  74:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	this->homePosition = 0;
  75              		.loc 1 74 0
  76 001a 80F82530 		strb	r3, [r0, #37]
  77              	.LVL7:
  75:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	if (this->entries.begin()->text.needsScrolling())
  78              		.loc 1 75 0
  79 001e 6289     		ldrh	r2, [r4, #10]
  80 0020 A389     		ldrh	r3, [r4, #12]
  81 0022 9A42     		cmp	r2, r3
  82 0024 03D9     		bls	.L1
  83              	.LVL8:
  84              	.LBB346:
  85              	.LBB347:
  86              		.file 4 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp"
   1:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** // coding: utf-8
   2:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** // ----------------------------------------------------------------------------
   3:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** /* Copyright (c) 2013, Roboterclub Aachen e.V.
   4:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp ****  * All rights reserved.
   5:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp ****  * 
   6:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp ****  * Redistribution and use in source and binary forms, with or without
   7:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp ****  * modification, are permitted provided that the following conditions are met:
   8:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp ****  * 
   9:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp ****  *     * Redistributions of source code must retain the above copyright
  10:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp ****  *       notice, this list of conditions and the following disclaimer.
  11:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp ****  *     * Redistributions in binary form must reproduce the above copyright
  12:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp ****  *       notice, this list of conditions and the following disclaimer in the
  13:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp ****  *       documentation and/or other materials provided with the distribution.
  14:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp ****  *     * Neither the name of the Roboterclub Aachen e.V. nor the
  15:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp ****  *       names of its contributors may be used to endorse or promote products
  16:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp ****  *       derived from this software without specific prior written permission.
  17:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp ****  * 
  18:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp ****  * THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
  19:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp ****  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  20:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  21:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp ****  * DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
  22:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  23:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  24:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  25:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  26:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  27:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  28:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp ****  */
  29:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** // ----------------------------------------------------------------------------
  30:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 
  31:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** #ifndef XPCC__SCROLLABLE_TEXT_HPP
  32:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** #define XPCC__SCROLLABLE_TEXT_HPP
  33:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** #include <stdint.h>
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 
  36:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** namespace xpcc
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** {
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 
  39:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 	 /**
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 	 * @brief The ScrollableText class scrolls the text if the
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 	 *        required space of the string is less than the
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 	 *        available.
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 	 *
  44:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 	 *\author Thorsten Lajewski
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 	 *\ingroup display_menu
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 	 *\warning This class only works in combination with xpcc::font::FixedWidth5x8
  47:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 	 *\todo A better implementation is needed.
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 	 */
  49:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 	class ScrollableText
  50:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 	{
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 	public:
  52:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		/**
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		 * @param text string which should be displayed on the Graphic Display
  54:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		 * @param space number of letters, which can be displayed at once
  55:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		 */
  56:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		ScrollableText(const char* text, uint16_t space);
  57:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		
  58:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		ScrollableText(const ScrollableText& text);
  59:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 
  60:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		ScrollableText& operator=(const ScrollableText& text);
  61:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 
  62:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		~ScrollableText();
  63:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 	
  64:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		/**
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		 *determines if the text can be displayed without scrolling
  66:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		 */
  67:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		inline bool 
  68:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		needsScrolling()
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		{
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 			return length > space;
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		}
  72:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		
  73:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		/**
  74:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		 * @brief getText return the part of the text which should be displayed next
  75:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		 *
  76:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		 * If the text needs scrolling and the scrolling is not paused, each call to this
  77:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		 * function returns another part of the text which is displaced by one letter.
  78:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		 *
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		 * @return part of the text
  80:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		 */
  81:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		const char*
  82:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		getText();
  83:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		
  84:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		/**
  85:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		 * @brief toogle the scrolling
  86:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		 */
  87:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		inline void
  88:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		toogle()
  89:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		{
  90:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 			this->paused = !this->paused;
  87              		.loc 4 90 0
  88 0026 2378     		ldrb	r3, [r4, #0]	@ zero_extendqisi2
  89 0028 83F00103 		eor	r3, r3, #1
  90 002c 2370     		strb	r3, [r4, #0]
  91              	.LVL9:
  92              	.L1:
  93              	.LBE347:
  94              	.LBE346:
  95              	.LBE341:
  76:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	{
  77:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 
  78:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 		this->entries.begin()->text.toogle();
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	}
  80:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** }
  96              		.loc 1 80 0
  97 002e 10BC     		pop	{r4}
  98 0030 7047     		bx	lr
  99              		.cfi_endproc
 100              	.LFE1384:
 102 0032 00BF     		.section	.text._ZN4xpcc12AbstractMenuD2Ev,"axG",%progbits,_ZN4xpcc12AbstractMenuD5Ev,comdat
 103              		.align	2
 104              		.weak	_ZN4xpcc12AbstractMenuD2Ev
 105              		.thumb
 106              		.thumb_func
 108              	_ZN4xpcc12AbstractMenuD2Ev:
 109              	.LFB1372:
 110              		.file 5 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp"
   1:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp **** // coding: utf-8
   2:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp **** // ----------------------------------------------------------------------------
   3:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp **** /* Copyright (c) 2013, Roboterclub Aachen e.V.
   4:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp ****  * All rights reserved.
   5:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp ****  * 
   6:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp ****  * Redistribution and use in source and binary forms, with or without
   7:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp ****  * modification, are permitted provided that the following conditions are met:
   8:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp ****  * 
   9:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp ****  *     * Redistributions of source code must retain the above copyright
  10:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp ****  *       notice, this list of conditions and the following disclaimer.
  11:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp ****  *     * Redistributions in binary form must reproduce the above copyright
  12:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp ****  *       notice, this list of conditions and the following disclaimer in the
  13:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp ****  *       documentation and/or other materials provided with the distribution.
  14:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp ****  *     * Neither the name of the Roboterclub Aachen e.V. nor the
  15:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp ****  *       names of its contributors may be used to endorse or promote products
  16:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp ****  *       derived from this software without specific prior written permission.
  17:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp ****  * 
  18:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp ****  * THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
  19:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp ****  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  20:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  21:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp ****  * DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
  22:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  23:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  24:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  25:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  26:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  27:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  28:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp ****  */
  29:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp **** // ----------------------------------------------------------------------------
  30:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp **** 
  31:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp **** #ifndef XPCC__ABSTRACT_MENU_HPP
  32:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp **** #define XPCC__ABSTRACT_MENU_HPP
  33:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp **** 
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp **** #include "view_stack.hpp"
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp **** #include "abstract_view.hpp"
  36:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp **** 
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp **** namespace xpcc{
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp **** 	
  39:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp **** 	 /**
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp **** 	 * @brief The AbstractMenu class is the same as the AbstractView class,
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp **** 	 *        except it forces the developer to reimplement the handling
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp **** 	 *        of button presses.
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp **** 	 *
  44:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp **** 	 * \author Thorsten Lajewski
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp **** 	 * \ingroup display_menu
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp **** 	 */
  47:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp **** 	class AbstractMenu: public AbstractView
 111              		.loc 5 47 0
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115              	.LVL10:
 116              	.LBB349:
 117 0000 034B     		ldr	r3, .L10
 118              	.LBE349:
 119 0002 10B5     		push	{r4, lr}
 120              	.LCFI1:
 121              		.cfi_def_cfa_offset 8
 122              		.cfi_offset 4, -8
 123              		.cfi_offset 14, -4
 124              		.loc 5 47 0
 125 0004 0446     		mov	r4, r0
 126              	.LBB350:
 127 0006 0360     		str	r3, [r0, #0]
 128 0008 024B     		ldr	r3, .L10+4
 129 000a 9847     		blx	r3
 130              	.LVL11:
 131              	.LBE350:
 132 000c 2046     		mov	r0, r4
 133 000e 10BD     		pop	{r4, pc}
 134              	.L11:
 135              		.align	2
 136              	.L10:
 137 0010 08000000 		.word	_ZTVN4xpcc12AbstractMenuE+8
 138 0014 00000000 		.word	_ZN4xpcc12AbstractViewD2Ev
 139              		.cfi_endproc
 140              	.LFE1372:
 142              		.weak	_ZN4xpcc12AbstractMenuD1Ev
 143              		.thumb_set _ZN4xpcc12AbstractMenuD1Ev,_ZN4xpcc12AbstractMenuD2Ev
 144              		.section	.text._ZN4xpcc10ChoiceMenu10hasChangedEv,"ax",%progbits
 145              		.align	2
 146              		.global	_ZN4xpcc10ChoiceMenu10hasChangedEv
 147              		.thumb
 148              		.thumb_func
 150              	_ZN4xpcc10ChoiceMenu10hasChangedEv:
 151              	.LFB1387:
  81:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 
  82:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** void
  83:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** xpcc::ChoiceMenu::setTitle(const char* text)
  84:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** {
  85:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	this->title = text;
  86:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** }
  87:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 
  88:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 
  89:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** void
  90:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** xpcc::ChoiceMenu::draw()
  91:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** {
  92:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	xpcc::GraphicDisplay* display = &getViewStack()->getDisplay();
  93:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	display->clear();
  94:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	display->setCursor(0,2);
  95:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	(*display) << this->title;
  96:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	display->drawLine(0, 10, display->getWidth(), 10);
  97:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 
  98:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	uint8_t i, count = this->entries.getSize();
  99:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	EntryList::iterator iter = this->entries.begin();
 100:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 
 101:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	for(uint8_t j=0; j<this->homePosition; ++j)
 102:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	{
 103:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 		++iter;
 104:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	}
 105:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 
 106:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	for (i = 0; i < this->maximalDrawnEntrys; i++)
 107:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	{
 108:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 		if (this->homePosition + i >= count)
 109:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 			break;
 110:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 
 111:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 		display->setCursor(4, 12+i*8);
 112:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 		if (this->position - this->homePosition == i) {
 113:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 				(*display) << ">"; // TODO schönes Zeichen nehmen
 114:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 		}
 115:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 		else {
 116:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 				(*display) << " ";
 117:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 		}
 118:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 
 119:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 		(*display) << iter->text.getText();
 120:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 		display->setCursor(display->getWidth()- 8 - 5*6,12+i*8);
 121:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 		if(*(iter->valuePtr) == true)
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 		{
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 			(*display) << "TRUE";
 124:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 		}
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 		else{
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 			(*display) << "FALSE";
 127:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 		}
 128:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 		//(*display) << iter->text;
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 		++iter;
 130:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	}
 131:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 
 132:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	// TODO wenn möglich pfeil nach oben und nach unten einfügen
 133:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** }
 134:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 
 135:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** bool
 136:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** xpcc::ChoiceMenu::hasChanged()
 137:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** {
 152              		.loc 1 137 0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 0
 155              		@ frame_needed = 0, uses_anonymous_args = 0
 156              	.LVL12:
 157              	.LBB363:
 158              	.LBB364:
 159              		.file 6 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp"
   1:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** // coding: utf-8
   2:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** // ----------------------------------------------------------------------------
   3:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** /* Copyright (c) 2009, Roboterclub Aachen e.V.
   4:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp ****  * All rights reserved.
   5:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp ****  *
   6:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp ****  * Redistribution and use in source and binary forms, with or without
   7:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp ****  * modification, are permitted provided that the following conditions are met:
   8:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp ****  *
   9:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp ****  *     * Redistributions of source code must retain the above copyright
  10:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp ****  *       notice, this list of conditions and the following disclaimer.
  11:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp ****  *     * Redistributions in binary form must reproduce the above copyright
  12:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp ****  *       notice, this list of conditions and the following disclaimer in the
  13:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp ****  *       documentation and/or other materials provided with the distribution.
  14:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp ****  *     * Neither the name of the Roboterclub Aachen e.V. nor the
  15:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp ****  *       names of its contributors may be used to endorse or promote products
  16:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp ****  *       derived from this software without specific prior written permission.
  17:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp ****  *
  18:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp ****  * THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
  19:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp ****  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  20:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  21:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp ****  * DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
  22:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  23:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  24:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  25:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  26:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  27:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  28:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp ****  */
  29:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** // ----------------------------------------------------------------------------
  30:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** 
  31:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** #ifndef	XPCC__TIMEOUT_HPP
  32:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** 	#error	"Don't include this file directly, use 'periodic_timer.hpp' instead!"
  33:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** #endif
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** 
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** template<typename T>
  36:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** xpcc::PeriodicTimer<T>::PeriodicTimer(const Timestamp interval) :
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** 	timer(interval), interval(interval), isRunning_(true)
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** {
  39:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** 	if (interval == 0) {
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** 		stop();
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** 	}
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** }
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** 
  44:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** template<typename T>
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** void
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** xpcc::PeriodicTimer<T>::stop()
  47:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** {
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** 	timer.stop();
  49:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** 	isRunning_ = false;
  50:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** }
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** 
  52:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** template<typename T>
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** bool
  54:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** xpcc::PeriodicTimer<T>::isRunning() const
  55:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** {
  56:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** 	return isRunning_;
  57:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** }
  58:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** 
  59:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** template<typename T>
  60:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** void
  61:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** xpcc::PeriodicTimer<T>::restart(const Timestamp interval)
  62:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** {
  63:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** 	timer.restart(interval);
  64:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** 	this->interval = interval;
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** 	this->isRunning_ = true;
  66:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** }
  67:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** 
  68:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** template<typename T>
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** void
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** xpcc::PeriodicTimer<T>::restart()
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** {
  72:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** 	timer.restart(this->interval);
  73:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** 	this->isRunning_ = true;
  74:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** }
  75:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** 
  76:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** template<typename T>
  77:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** bool
  78:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** xpcc::PeriodicTimer<T>::isExpired()
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** {
  80:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** 	if (isRunning_ and timer.isExpired()) {
 160              		.loc 6 80 0
 161 0000 037E     		ldrb	r3, [r0, #24]	@ zero_extendqisi2
 162              	.LBE364:
 163              	.LBE363:
 164              		.loc 1 137 0
 165 0002 70B5     		push	{r4, r5, r6, lr}
 166              	.LCFI2:
 167              		.cfi_def_cfa_offset 16
 168              		.cfi_offset 4, -16
 169              		.cfi_offset 5, -12
 170              		.cfi_offset 6, -8
 171              		.cfi_offset 14, -4
 172              		.loc 1 137 0
 173 0004 0446     		mov	r4, r0
 174              	.LVL13:
 175              	.LBB382:
 176              	.LBB378:
 177              		.loc 6 80 0
 178 0006 33B9     		cbnz	r3, .L23
 179              	.LVL14:
 180              	.L13:
 181              	.LBE378:
 182              	.LBE382:
 138:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	if (timer.isExpired() || this->buttonAction)
 183              		.loc 1 138 0
 184 0008 207F     		ldrb	r0, [r4, #28]	@ zero_extendqisi2
 185 000a 18B1     		cbz	r0, .L24
 186              	.L15:
 187              	.LBB383:
 188              	.LBB384:
 139:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	{
 140:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 		if (this->buttonAction) this->buttonAction=false;
 189              		.loc 1 140 0
 190 000c 0023     		movs	r3, #0
 191 000e 2377     		strb	r3, [r4, #28]
 192 0010 0120     		movs	r0, #1
 193 0012 70BD     		pop	{r4, r5, r6, pc}
 194              	.L24:
 195              	.LBE384:
 196              	.LBE383:
 141:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 
 142:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 		return true;
 143:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	}
 144:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	else
 145:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	{
 146:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 		return false;
 147:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	}
 148:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** }
 197              		.loc 1 148 0
 198 0014 70BD     		pop	{r4, r5, r6, pc}
 199              	.LVL15:
 200              	.L23:
 201              	.LBB387:
 202              	.LBB379:
 203              	.LBB365:
 204              	.LBB366:
 205              		.file 7 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp"
   1:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** // coding: utf-8
   2:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** // ----------------------------------------------------------------------------
   3:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** /* Copyright (c) 2009, Roboterclub Aachen e.V.
   4:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp ****  * All rights reserved.
   5:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp ****  *
   6:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp ****  * Redistribution and use in source and binary forms, with or without
   7:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp ****  * modification, are permitted provided that the following conditions are met:
   8:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp ****  *
   9:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp ****  *     * Redistributions of source code must retain the above copyright
  10:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp ****  *       notice, this list of conditions and the following disclaimer.
  11:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp ****  *     * Redistributions in binary form must reproduce the above copyright
  12:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp ****  *       notice, this list of conditions and the following disclaimer in the
  13:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp ****  *       documentation and/or other materials provided with the distribution.
  14:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp ****  *     * Neither the name of the Roboterclub Aachen e.V. nor the
  15:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp ****  *       names of its contributors may be used to endorse or promote products
  16:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp ****  *       derived from this software without specific prior written permission.
  17:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp ****  *
  18:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp ****  * THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
  19:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp ****  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  20:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  21:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp ****  * DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
  22:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  23:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  24:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  25:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  26:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  27:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  28:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp ****  */
  29:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** // ----------------------------------------------------------------------------
  30:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 
  31:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** #ifndef	XPCC__TIMEOUT_HPP
  32:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 	#error	"Don't include this file directly, use 'timeout.hpp' instead!"
  33:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** #endif
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** template<typename T>
  36:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** xpcc::Timeout<T>::Timeout() :
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 	endTime(0), state(EXPIRED)
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** {
  39:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** }
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** template<typename T>
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** xpcc::Timeout<T>::Timeout(const Timestamp time) :
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 	endTime(T::now() + time), state(ACTIVE)
  44:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** {
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** }
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 
  47:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** template<typename T>
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** bool
  49:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** xpcc::Timeout<T>::isExpired()
  50:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** {
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 	if (state == ACTIVE)
 206              		.loc 7 51 0
 207 0016 037C     		ldrb	r3, [r0, #16]	@ zero_extendqisi2
  52:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 	{
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 		if (T::now() >= endTime)
 208              		.loc 7 53 0
 209 0018 0A4D     		ldr	r5, .L25
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 	if (state == ACTIVE)
 210              		.loc 7 51 0
 211 001a 012B     		cmp	r3, #1
 212 001c 09D0     		beq	.L21
 213              	.LVL16:
 214              	.L14:
 215 001e 6669     		ldr	r6, [r4, #20]
 216              	.LVL17:
 217              	.LBE366:
 218              	.LBE365:
 219              	.LBB370:
 220              	.LBB371:
  54:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 		{
  55:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 			state = EXPIRED;
  56:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 		}
  57:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 		else {
  58:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 			return false;
  59:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 		}
  60:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 	}
  61:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 	
  62:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 	return true;
  63:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** }
  64:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** template<typename T>
  66:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** bool
  67:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** xpcc::Timeout<T>::isActive() const
  68:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** {
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 	return (this->state != STOPPED);
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** }
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 
  72:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** template<typename T>
  73:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** void
  74:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** xpcc::Timeout<T>::stop()
  75:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** {
  76:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 	this->state = STOPPED;
  77:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** }
  78:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 
  80:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** template<typename T>
  81:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** void
  82:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** xpcc::Timeout<T>::restart(Timestamp time)
  83:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** {
  84:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 	endTime = T::now() + time;
 221              		.loc 7 84 0
 222 0020 A847     		blx	r5
 223              	.LVL18:
 224              	.LBE371:
 225              	.LBE370:
 226              	.LBE379:
 227              	.LBE387:
 228              	.LBB388:
 229              	.LBB385:
 140:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 		if (this->buttonAction) this->buttonAction=false;
 230              		.loc 1 140 0
 231 0022 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 232              	.LBE385:
 233              	.LBE388:
 234              	.LBB389:
 235              	.LBB380:
 236              	.LBB376:
 237              	.LBB374:
 238              	.LBB372:
 239              	.LBB373:
 240              		.file 8 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp"
   1:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** // coding: utf-8
   2:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** // ----------------------------------------------------------------------------
   3:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** /* Copyright (c) 2009, Roboterclub Aachen e.V.
   4:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  * All rights reserved.
   5:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  *
   6:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  * Redistribution and use in source and binary forms, with or without
   7:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  * modification, are permitted provided that the following conditions are met:
   8:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  * 
   9:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  *     * Redistributions of source code must retain the above copyright
  10:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  *       notice, this list of conditions and the following disclaimer.
  11:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  *     * Redistributions in binary form must reproduce the above copyright
  12:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  *       notice, this list of conditions and the following disclaimer in the
  13:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  *       documentation and/or other materials provided with the distribution.
  14:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  *     * Neither the name of the Roboterclub Aachen e.V. nor the
  15:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  *       names of its contributors may be used to endorse or promote products
  16:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  *       derived from this software without specific prior written permission.
  17:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  *
  18:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  * THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
  19:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  20:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  21:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  * DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
  22:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  23:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  24:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  25:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  26:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  27:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  28:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  */
  29:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** // ----------------------------------------------------------------------------
  30:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 
  31:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** #ifndef	XPCC__TIMESTAMP_HPP
  32:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** #define	XPCC__TIMESTAMP_HPP
  33:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** #include <stdint.h>
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 
  36:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** #include <xpcc/io/iostream.hpp>
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** #include <xpcc/utils/arithmetic_traits.hpp>
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 
  39:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** namespace xpcc
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** {
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 	/**
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 	 * \brief	Simple 16-bit timestamp
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 	 * 
  44:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 	 * The timestamp is calculated in milliseconds.
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 	 *
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 	 * \author	Fabian Greif
  47:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 	 * \ingroup	workflow
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 	 */ 
  49:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 	class Timestamp
  50:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 	{
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 	public:
  52:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		typedef uint_fast16_t Type;
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		
  54:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 	public:
  55:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		///\param time in ms
  56:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		Timestamp(const uint_fast16_t time = 0) : 
  57:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 			time(time)
  58:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		{
  59:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		}
  60:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		
  61:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		inline uint_fast16_t
  62:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		getTime() const
  63:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		{
  64:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 			return this->time;
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		}
  66:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 
  67:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		inline Timestamp
  68:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		operator + (const Timestamp& other) const
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		{
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 			return Timestamp(time + other.time);
 241              		.loc 8 70 0
 242 0024 3618     		adds	r6, r6, r0
 243              	.LVL19:
 244              	.LBE373:
 245              	.LBE372:
  85:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 	state = ACTIVE;
 246              		.loc 7 85 0
 247 0026 0120     		movs	r0, #1
 248              	.LBE374:
  84:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 	endTime = T::now() + time;
 249              		.loc 7 84 0
 250 0028 E660     		str	r6, [r4, #12]
 251              	.LBB375:
 252              		.loc 7 85 0
 253 002a 2074     		strb	r0, [r4, #16]
 254              	.LVL20:
 255              	.LBE375:
 256              	.LBE376:
 257              	.LBE380:
 258              	.LBE389:
 259              	.LBB390:
 260              	.LBB386:
 140:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 		if (this->buttonAction) this->buttonAction=false;
 261              		.loc 1 140 0
 262 002c 002B     		cmp	r3, #0
 263 002e EDD1     		bne	.L15
 264 0030 70BD     		pop	{r4, r5, r6, pc}
 265              	.LVL21:
 266              	.L21:
 267              	.LBE386:
 268              	.LBE390:
 269              	.LBB391:
 270              	.LBB381:
 271              	.LBB377:
 272              	.LBB369:
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 		if (T::now() >= endTime)
 273              		.loc 7 53 0
 274 0032 A847     		blx	r5
 275              	.LVL22:
 276              	.LBB367:
 277              	.LBB368:
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		}
  72:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		
  73:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		inline Timestamp
  74:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		operator - (const Timestamp& other) const
  75:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		{
  76:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 			return Timestamp(time - other.time);
  77:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		}
  78:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		inline bool
  80:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		operator == (const Timestamp& other) const
  81:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		{
  82:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 			return (time == other.time);
  83:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		}
  84:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		
  85:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		inline bool
  86:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		operator != (const Timestamp& other) const
  87:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		{
  88:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 			return (time != other.time);
  89:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		}
  90:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		
  91:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		inline bool
  92:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		operator < (const Timestamp& other) const
  93:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		{
  94:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 			return ((int_fast16_t) (time - other.time)) < 0;
  95:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		}
  96:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		
  97:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		inline bool
  98:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		operator > (const Timestamp& other) const
  99:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		{
 100:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 			return ((int_fast16_t) (time - other.time)) > 0;
 101:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		}
 102:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		
 103:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		inline bool
 104:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		operator <= (const Timestamp& other) const
 105:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		{
 106:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 			return ((int_fast16_t) (time - other.time)) <= 0;
 107:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		}
 108:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		
 109:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		inline bool
 110:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		operator >= (const Timestamp& other) const
 111:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		{
 112:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 			return ((int_fast16_t) (time - other.time)) >= 0;
 278              		.loc 8 112 0
 279 0034 E368     		ldr	r3, [r4, #12]
 280 0036 C01A     		subs	r0, r0, r3
 281              	.LBE368:
 282              	.LBE367:
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 		if (T::now() >= endTime)
 283              		.loc 7 53 0
 284 0038 0028     		cmp	r0, #0
 285 003a E5DB     		blt	.L13
  55:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 			state = EXPIRED;
 286              		.loc 7 55 0
 287 003c 0223     		movs	r3, #2
 288 003e 2374     		strb	r3, [r4, #16]
 289 0040 EDE7     		b	.L14
 290              	.L26:
 291 0042 00BF     		.align	2
 292              	.L25:
 293 0044 00000000 		.word	_ZN4xpcc5Clock3nowEv
 294              	.LBE369:
 295              	.LBE377:
 296              	.LBE381:
 297              	.LBE391:
 298              		.cfi_endproc
 299              	.LFE1387:
 301              		.section	.text._ZN4xpcc10ChoiceMenu16shortButtonPressENS_11MenuButtons6ButtonE,"ax",%progbits
 302              		.align	2
 303              		.global	_ZN4xpcc10ChoiceMenu16shortButtonPressENS_11MenuButtons6ButtonE
 304              		.thumb
 305              		.thumb_func
 307              	_ZN4xpcc10ChoiceMenu16shortButtonPressENS_11MenuButtons6ButtonE:
 308              	.LFB1388:
 149:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 
 150:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 
 151:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** void
 152:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** xpcc::ChoiceMenu::shortButtonPress(xpcc::MenuButtons::Button button)
 153:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** {
 309              		.loc 1 153 0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 0
 312              		@ frame_needed = 0, uses_anonymous_args = 0
 313              	.LVL23:
 314 0000 38B5     		push	{r3, r4, r5, lr}
 315              	.LCFI3:
 316              		.cfi_def_cfa_offset 16
 317              		.cfi_offset 3, -16
 318              		.cfi_offset 4, -12
 319              		.cfi_offset 5, -8
 320              		.cfi_offset 14, -4
 321              		.loc 1 153 0
 322 0002 0446     		mov	r4, r0
 323              	.LBB466:
 154:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	switch(button)
 324              		.loc 1 154 0
 325 0004 0429     		cmp	r1, #4
 326 0006 07D8     		bhi	.L27
 327 0008 DFE801F0 		tbb	[pc, r1]
 328              	.L34:
 329 000c 19       		.byte	(.L29-.L34)/2
 330 000d 03       		.byte	(.L30-.L34)/2
 331 000e 1C       		.byte	(.L31-.L34)/2
 332 000f 39       		.byte	(.L32-.L34)/2
 333 0010 07       		.byte	(.L33-.L34)/2
 334 0011 00       		.align	1
 335              	.L30:
 336              	.LBB467:
 155:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	{
 156:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 		case xpcc::MenuButtons::DOWN:
 157:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 		{
 158:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 			if (this->position + 1U < this->entries.getSize())
 159:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 			{
 160:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 				EntryList::iterator iter = this->entries.begin();
 161:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 
 162:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 				for (uint8_t j=0; j<this->position;  ++j)
 163:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 				{
 164:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 					++iter;
 165:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 				}
 166:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 				iter->text.toogle();
 167:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 				iter->text.setToStart();
 168:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 
 169:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 				if (this->position - this->homePosition == this->maximalDrawnEntrys - 1)
 170:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 				{
 171:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 					this->homePosition += 1;
 172:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 					this->position += 1;
 173:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 					++iter;
 174:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 					iter->text.toogle();
 175:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 				}
 176:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 				else
 177:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 				{
 178:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 					this->position += 1;
 179:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 					++iter;
 180:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 					iter->text.toogle();
 181:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 				}
 182:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 				this->buttonAction=true;
 183:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 			}
 184:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 			break;
 185:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 		}
 186:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 		case xpcc::MenuButtons::UP:
 187:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 		{
 188:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 			if (this->position > 0)
 189:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 			{
 190:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 				EntryList::iterator iter = this->entries.begin();
 191:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 
 192:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 				for (uint8_t j = 0; j < this->position; ++j)
 193:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 				{
 194:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 					++iter;
 195:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 				}
 196:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 
 197:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 				iter->text.toogle();
 198:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 				iter->text.setToStart();
 199:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 
 200:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 				if (this->position == this->homePosition)
 201:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 				{
 202:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 					this->homePosition -= 1;
 203:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 					this->position -= 1;
 204:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 					--iter;
 205:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 					iter->text.toogle();
 206:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 				}
 207:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 				else
 208:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 				{
 209:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 					this->position -= 1;
 210:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 					--iter;
 211:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 					iter->text.toogle();
 212:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 				}
 213:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 				this->buttonAction = true;
 214:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 			}
 215:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 			break;
 216:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 		}
 217:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 		case xpcc::MenuButtons::LEFT:
 218:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 		{
 219:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 			this->remove();
 220:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 			break;
 221:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 		}
 222:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 		case xpcc::MenuButtons::OK:
 223:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 		{
 224:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 			EntryList::iterator iter = this->entries.begin();
 225:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 
 226:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 			for (uint8_t j = 0; j < this->position; ++j)
 227:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 			{
 228:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 				++iter;
 229:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 			}
 230:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 
 231:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 			*(iter->valuePtr) = !(*iter->valuePtr);
 232:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 			this->buttonAction = true;
 233:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 			break;
 234:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 		}
 235:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 		case xpcc::MenuButtons::RIGHT:
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 		{
 237:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 			this->openNextScreen();
 337              		.loc 1 237 0
 338 0012 0368     		ldr	r3, [r0, #0]
 339 0014 1B6A     		ldr	r3, [r3, #32]
 340 0016 9847     		blx	r3
 341              	.LVL24:
 342              	.L27:
 343 0018 38BD     		pop	{r3, r4, r5, pc}
 344              	.LVL25:
 345              	.L33:
 346              	.LBB468:
 347              	.LBB469:
 226:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 			for (uint8_t j = 0; j < this->position; ++j)
 348              		.loc 1 226 0
 349 001a 90F82610 		ldrb	r1, [r0, #38]	@ zero_extendqisi2
 350              	.LVL26:
 351              	.LBE469:
 352              	.LBB472:
 353              	.LBB473:
 354              		.loc 2 189 0
 355 001e C26A     		ldr	r2, [r0, #44]
 356              	.LVL27:
 357              	.LBE473:
 358              	.LBE472:
 359              	.LBB474:
 226:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 			for (uint8_t j = 0; j < this->position; ++j)
 360              		.loc 1 226 0
 361 0020 29B1     		cbz	r1, .L43
 362 0022 0023     		movs	r3, #0
 363              	.LVL28:
 364              	.L44:
 365 0024 0133     		adds	r3, r3, #1
 366 0026 DBB2     		uxtb	r3, r3
 367 0028 8B42     		cmp	r3, r1
 368              	.LBB470:
 369              	.LBB471:
 370              		.loc 3 155 0
 371 002a 126A     		ldr	r2, [r2, #32]
 372              	.LVL29:
 373              	.LBE471:
 374              	.LBE470:
 226:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 			for (uint8_t j = 0; j < this->position; ++j)
 375              		.loc 1 226 0
 376 002c FAD3     		bcc	.L44
 377              	.LVL30:
 378              	.L43:
 379              	.LBE474:
 231:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 			*(iter->valuePtr) = !(*iter->valuePtr);
 380              		.loc 1 231 0
 381 002e 5369     		ldr	r3, [r2, #20]
 382              	.LVL31:
 383              	.L62:
 384              	.LBE468:
 385              	.LBB475:
 386              	.LBB476:
 387              	.LBB477:
 388              	.LBB478:
 389              		.loc 4 90 0
 390 0030 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 391 0032 82F00102 		eor	r2, r2, #1
 392 0036 1A70     		strb	r2, [r3, #0]
 393              	.LVL32:
 394              	.L42:
 395              	.LBE478:
 396              	.LBE477:
 213:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 				this->buttonAction = true;
 397              		.loc 1 213 0
 398 0038 0123     		movs	r3, #1
 399              	.LVL33:
 400 003a 2377     		strb	r3, [r4, #28]
 401 003c 38BD     		pop	{r3, r4, r5, pc}
 402              	.LVL34:
 403              	.L29:
 404              	.LBE476:
 405              	.LBE475:
 219:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 			this->remove();
 406              		.loc 1 219 0
 407 003e 304B     		ldr	r3, .L65
 408 0040 9847     		blx	r3
 409              	.LVL35:
 220:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 			break;
 410              		.loc 1 220 0
 411 0042 38BD     		pop	{r3, r4, r5, pc}
 412              	.LVL36:
 413              	.L31:
 414              	.LBB495:
 188:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 			if (this->position > 0)
 415              		.loc 1 188 0
 416 0044 90F82620 		ldrb	r2, [r0, #38]	@ zero_extendqisi2
 417 0048 002A     		cmp	r2, #0
 418 004a E5D0     		beq	.L27
 419              	.LVL37:
 420              	.LBB492:
 421              	.LBB479:
 422              	.LBB480:
 423              		.loc 2 189 0
 424 004c C56A     		ldr	r5, [r0, #44]
 425              	.LVL38:
 192:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 				for (uint8_t j = 0; j < this->position; ++j)
 426              		.loc 1 192 0
 427 004e 0023     		movs	r3, #0
 428              	.LVL39:
 429              	.L40:
 430              	.LBE480:
 431              	.LBE479:
 432              	.LBB481:
 433 0050 0133     		adds	r3, r3, #1
 434 0052 DBB2     		uxtb	r3, r3
 435 0054 9A42     		cmp	r2, r3
 436              	.LBB482:
 437              	.LBB483:
 438              		.loc 3 155 0
 439 0056 2D6A     		ldr	r5, [r5, #32]
 440              	.LVL40:
 441              	.LBE483:
 442              	.LBE482:
 192:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 				for (uint8_t j = 0; j < this->position; ++j)
 443              		.loc 1 192 0
 444 0058 FAD8     		bhi	.L40
 445              	.LVL41:
 446              	.LBE481:
 447              	.LBB484:
 448              	.LBB485:
 449              		.loc 4 90 0
 450 005a 2B78     		ldrb	r3, [r5, #0]	@ zero_extendqisi2
 451              	.LVL42:
 452 005c 83F00103 		eor	r3, r3, #1
 453 0060 2B70     		strb	r3, [r5, #0]
 454              	.LVL43:
 455              	.LBE485:
 456              	.LBE484:
 198:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 				iter->text.setToStart();
 457              		.loc 1 198 0
 458 0062 2846     		mov	r0, r5
 459              	.LVL44:
 460 0064 274B     		ldr	r3, .L65+4
 461 0066 9847     		blx	r3
 462              	.LVL45:
 200:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 				if (this->position == this->homePosition)
 463              		.loc 1 200 0
 464 0068 94F82630 		ldrb	r3, [r4, #38]	@ zero_extendqisi2
 465 006c 94F82520 		ldrb	r2, [r4, #37]	@ zero_extendqisi2
 466 0070 9A42     		cmp	r2, r3
 467 0072 39D0     		beq	.L63
 209:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 					this->position -= 1;
 468              		.loc 1 209 0
 469 0074 013B     		subs	r3, r3, #1
 470 0076 84F82630 		strb	r3, [r4, #38]
 471              	.LVL46:
 472              	.LBB486:
 473              	.LBB487:
 156:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 	return *this;
 157:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** }
 158:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 
 159:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** template <typename T, typename Allocator>
 160:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** typename xpcc::DoublyLinkedList<T, Allocator>::iterator&
 161:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::iterator::operator -- ()
 162:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** {
 163:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 	this->node = this->node->previous;
 474              		.loc 3 163 0
 475 007a EB69     		ldr	r3, [r5, #28]
 476 007c D8E7     		b	.L62
 477              	.LVL47:
 478              	.L32:
 479              	.LBE487:
 480              	.LBE486:
 481              	.LBE492:
 482              	.LBE495:
 483              	.LBE467:
 484              	.LBE466:
 485              	.LBB500:
 486              	.LBB501:
 487              	.LBB502:
 488              	.LBB503:
 158:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 			if (this->position + 1U < this->entries.getSize())
 489              		.loc 1 158 0
 490 007e 90F82610 		ldrb	r1, [r0, #38]	@ zero_extendqisi2
 491              	.LVL48:
 492              	.LBB504:
 493              	.LBB505:
 494              	.LBB506:
 495              	.LBB507:
 496              	.LBB508:
 190:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** }
 191:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 
 192:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** template <typename T, typename Allocator>
 193:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** typename xpcc::DoublyLinkedList<T, Allocator>::iterator
 194:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::end()
 195:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** {
 196:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	return iterator(0);
 197:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** }
 198:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 
 199:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** template <typename T, typename Allocator>
 200:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** typename xpcc::DoublyLinkedList<T, Allocator>::const_iterator 
 201:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::begin() const
 202:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** {
 203:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	return const_iterator(this->front);
 497              		.loc 2 203 0
 498 0082 C56A     		ldr	r5, [r0, #44]
 499              	.LBE508:
 500              	.LBE507:
 501              	.LBE506:
 502              	.LBE505:
 503              	.LBE504:
 158:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 			if (this->position + 1U < this->entries.getSize())
 504              		.loc 1 158 0
 505 0084 481C     		adds	r0, r1, #1
 506              	.LVL49:
 507              	.LBB513:
 508              	.LBB512:
 509              	.LBB511:
  67:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	for (const_iterator it = this->begin(); it != this->end(); ++it) {
 510              		.loc 2 67 0
 511 0086 002D     		cmp	r5, #0
 512 0088 C6D0     		beq	.L27
 513 008a 2B46     		mov	r3, r5
 514 008c 0022     		movs	r2, #0
 515              	.LVL50:
 516              	.L35:
 517              	.LBB509:
 518              	.LBB510:
  80:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 	this->node = this->node->next;
 519              		.loc 3 80 0
 520 008e 1B6A     		ldr	r3, [r3, #32]
 521              	.LVL51:
 522              	.LBE510:
 523              	.LBE509:
  68:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 		count++;
 524              		.loc 2 68 0
 525 0090 0132     		adds	r2, r2, #1
 526              	.LVL52:
  67:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	for (const_iterator it = this->begin(); it != this->end(); ++it) {
 527              		.loc 2 67 0
 528 0092 002B     		cmp	r3, #0
 529 0094 FBD1     		bne	.L35
 530              	.LBE511:
 531              	.LBE512:
 532              	.LBE513:
 158:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 			if (this->position + 1U < this->entries.getSize())
 533              		.loc 1 158 0
 534 0096 9042     		cmp	r0, r2
 535 0098 BED2     		bcs	.L27
 536              	.LVL53:
 537              	.LBB514:
 538              	.LBB515:
 162:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 				for (uint8_t j=0; j<this->position;  ++j)
 539              		.loc 1 162 0
 540 009a 21B1     		cbz	r1, .L36
 541              	.LVL54:
 542              	.L37:
 543 009c 0133     		adds	r3, r3, #1
 544 009e DBB2     		uxtb	r3, r3
 545 00a0 9942     		cmp	r1, r3
 546              	.LBB516:
 547              	.LBB517:
 155:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 	this->node = this->node->next;
 548              		.loc 3 155 0
 549 00a2 2D6A     		ldr	r5, [r5, #32]
 550              	.LVL55:
 551              	.LBE517:
 552              	.LBE516:
 162:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 				for (uint8_t j=0; j<this->position;  ++j)
 553              		.loc 1 162 0
 554 00a4 FAD8     		bhi	.L37
 555              	.LVL56:
 556              	.L36:
 557              	.LBE515:
 558              	.LBB518:
 559              	.LBB519:
 560              		.loc 4 90 0
 561 00a6 2B78     		ldrb	r3, [r5, #0]	@ zero_extendqisi2
 562 00a8 83F00103 		eor	r3, r3, #1
 563 00ac 2B70     		strb	r3, [r5, #0]
 564              	.LVL57:
 565              	.LBE519:
 566              	.LBE518:
 167:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 				iter->text.setToStart();
 567              		.loc 1 167 0
 568 00ae 2846     		mov	r0, r5
 569 00b0 144B     		ldr	r3, .L65+4
 570 00b2 9847     		blx	r3
 571              	.LVL58:
 169:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 				if (this->position - this->homePosition == this->maximalDrawnEntrys - 1)
 572              		.loc 1 169 0
 573 00b4 94F82630 		ldrb	r3, [r4, #38]	@ zero_extendqisi2
 574 00b8 94F82520 		ldrb	r2, [r4, #37]	@ zero_extendqisi2
 575 00bc 94F82410 		ldrb	r1, [r4, #36]	@ zero_extendqisi2
 576 00c0 981A     		subs	r0, r3, r2
 577 00c2 0139     		subs	r1, r1, #1
 578 00c4 8842     		cmp	r0, r1
 579 00c6 0AD0     		beq	.L64
 178:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 					this->position += 1;
 580              		.loc 1 178 0
 581 00c8 0133     		adds	r3, r3, #1
 582              	.L61:
 583 00ca 84F82630 		strb	r3, [r4, #38]
 584              	.LVL59:
 585              	.LBB520:
 586              	.LBB521:
 155:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 	this->node = this->node->next;
 587              		.loc 3 155 0
 588 00ce 2B6A     		ldr	r3, [r5, #32]
 589              	.LVL60:
 590              	.LBE521:
 591              	.LBE520:
 592              	.LBB522:
 593              	.LBB523:
 594              		.loc 4 90 0
 595 00d0 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 596 00d2 82F00102 		eor	r2, r2, #1
 597 00d6 1A70     		strb	r2, [r3, #0]
 598              	.LBE523:
 599              	.LBE522:
 600              	.LBE514:
 601              	.LBE503:
 602              	.LBE502:
 603              	.LBE501:
 604              	.LBE500:
 605              	.LBB528:
 606              	.LBB498:
 607              	.LBB496:
 608              	.LBB493:
 213:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 				this->buttonAction = true;
 609              		.loc 1 213 0
 610 00d8 0123     		movs	r3, #1
 611              	.LVL61:
 612 00da 2377     		strb	r3, [r4, #28]
 613 00dc 38BD     		pop	{r3, r4, r5, pc}
 614              	.LVL62:
 615              	.L64:
 616              	.LBE493:
 617              	.LBE496:
 618              	.LBE498:
 619              	.LBE528:
 620              	.LBB529:
 621              	.LBB527:
 622              	.LBB526:
 623              	.LBB525:
 624              	.LBB524:
 171:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 					this->homePosition += 1;
 625              		.loc 1 171 0
 626 00de 0132     		adds	r2, r2, #1
 172:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 					this->position += 1;
 627              		.loc 1 172 0
 628 00e0 0133     		adds	r3, r3, #1
 171:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 					this->homePosition += 1;
 629              		.loc 1 171 0
 630 00e2 84F82520 		strb	r2, [r4, #37]
 631 00e6 F0E7     		b	.L61
 632              	.LVL63:
 633              	.L63:
 634              	.LBE524:
 635              	.LBE525:
 636              	.LBE526:
 637              	.LBE527:
 638              	.LBE529:
 639              	.LBB530:
 640              	.LBB499:
 641              	.LBB497:
 642              	.LBB494:
 202:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 					this->homePosition -= 1;
 643              		.loc 1 202 0
 644 00e8 013A     		subs	r2, r2, #1
 645 00ea 84F82520 		strb	r2, [r4, #37]
 203:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 					this->position -= 1;
 646              		.loc 1 203 0
 647 00ee 84F82620 		strb	r2, [r4, #38]
 648              	.LVL64:
 649              	.LBB488:
 650              	.LBB489:
 651              		.loc 3 163 0
 652 00f2 EB69     		ldr	r3, [r5, #28]
 653              	.LVL65:
 654              	.LBE489:
 655              	.LBE488:
 656              	.LBB490:
 657              	.LBB491:
 658              		.loc 4 90 0
 659 00f4 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 660 00f6 82F00102 		eor	r2, r2, #1
 661 00fa 1A70     		strb	r2, [r3, #0]
 662 00fc 9CE7     		b	.L42
 663              	.L66:
 664 00fe 00BF     		.align	2
 665              	.L65:
 666 0100 00000000 		.word	_ZN4xpcc12AbstractView6removeEv
 667 0104 00000000 		.word	_ZN4xpcc14ScrollableText10setToStartEv
 668              	.LBE491:
 669              	.LBE490:
 670              	.LBE494:
 671              	.LBE497:
 672              	.LBE499:
 673              	.LBE530:
 674              		.cfi_endproc
 675              	.LFE1388:
 677              		.section	.text._ZN4xpcc12AbstractMenuD0Ev,"axG",%progbits,_ZN4xpcc12AbstractMenuD0Ev,comdat
 678              		.align	2
 679              		.weak	_ZN4xpcc12AbstractMenuD0Ev
 680              		.thumb
 681              		.thumb_func
 683              	_ZN4xpcc12AbstractMenuD0Ev:
 684              	.LFB1374:
 685              		.loc 5 47 0
 686              		.cfi_startproc
 687              		@ args = 0, pretend = 0, frame = 0
 688              		@ frame_needed = 0, uses_anonymous_args = 0
 689              	.LVL66:
 690              	.LBB534:
 691              	.LBB535:
 692 0000 054B     		ldr	r3, .L68
 693              	.LBE535:
 694              	.LBE534:
 695 0002 10B5     		push	{r4, lr}
 696              	.LCFI4:
 697              		.cfi_def_cfa_offset 8
 698              		.cfi_offset 4, -8
 699              		.cfi_offset 14, -4
 700              		.loc 5 47 0
 701 0004 0446     		mov	r4, r0
 702              	.LVL67:
 703              	.LBB537:
 704              	.LBB536:
 705 0006 0360     		str	r3, [r0, #0]
 706 0008 044B     		ldr	r3, .L68+4
 707 000a 9847     		blx	r3
 708              	.LVL68:
 709              	.LBE536:
 710              	.LBE537:
 711 000c 2046     		mov	r0, r4
 712 000e 044B     		ldr	r3, .L68+8
 713 0010 9847     		blx	r3
 714              	.LVL69:
 715 0012 2046     		mov	r0, r4
 716 0014 10BD     		pop	{r4, pc}
 717              	.L69:
 718 0016 00BF     		.align	2
 719              	.L68:
 720 0018 08000000 		.word	_ZTVN4xpcc12AbstractMenuE+8
 721 001c 00000000 		.word	_ZN4xpcc12AbstractViewD2Ev
 722 0020 00000000 		.word	_ZdlPv
 723              		.cfi_endproc
 724              	.LFE1374:
 726              		.section	.text._ZN4xpcc10ChoiceMenu4drawEv,"ax",%progbits
 727              		.align	2
 728              		.global	_ZN4xpcc10ChoiceMenu4drawEv
 729              		.thumb
 730              		.thumb_func
 732              	_ZN4xpcc10ChoiceMenu4drawEv:
 733              	.LFB1386:
  91:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** {
 734              		.loc 1 91 0
 735              		.cfi_startproc
 736              		@ args = 0, pretend = 0, frame = 0
 737              		@ frame_needed = 0, uses_anonymous_args = 0
 738              	.LVL70:
 739              	.LBB588:
 740              	.LBB589:
 741              	.LBB590:
 742              		.file 9 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp"
   1:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** // coding: utf-8
   2:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** // ----------------------------------------------------------------------------
   3:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** /* Copyright (c) 2013, Roboterclub Aachen e.V.
   4:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  * All rights reserved.
   5:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  * 
   6:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  * Redistribution and use in source and binary forms, with or without
   7:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  * modification, are permitted provided that the following conditions are met:
   8:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  * 
   9:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  *     * Redistributions of source code must retain the above copyright
  10:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  *       notice, this list of conditions and the following disclaimer.
  11:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  *     * Redistributions in binary form must reproduce the above copyright
  12:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  *       notice, this list of conditions and the following disclaimer in the
  13:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  *       documentation and/or other materials provided with the distribution.
  14:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  *     * Neither the name of the Roboterclub Aachen e.V. nor the
  15:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  *       names of its contributors may be used to endorse or promote products
  16:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  *       derived from this software without specific prior written permission.
  17:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  * 
  18:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  * THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
  19:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  20:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  21:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  * DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
  22:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  23:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  24:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  25:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  26:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  27:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  28:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  */
  29:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** // ----------------------------------------------------------------------------
  30:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 
  31:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** #ifndef XPCC__VIEWSTACK_HPP
  32:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** #define XPCC__VIEWSTACK_HPP
  33:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** #include "../display/graphic_display.hpp"
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** #include "../../../container/stack.hpp"
  36:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** #include "../../../container/linked_list.hpp"
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** #include "menu_buttons.hpp"
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** #include "abstract_view.hpp"
  39:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** namespace xpcc
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** {
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 	/**
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 	* \brief Stack which handles the displaying
  44:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 	*        of views on the graphic display.
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 	*
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 	* This class also deallocates the views passed
  47:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 	* to the stack.
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 	*
  49:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 	* \ingroup	display_menu
  50:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 	* \author	Thorsten Lajewski
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 	*/
  52:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 	class ViewStack
  54:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 	{
  55:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 	public:
  56:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		ViewStack(xpcc::GraphicDisplay* display);
  57:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		
  58:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		virtual ~ViewStack();
  59:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		
  60:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		/**
  61:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		 * @brief get the top view from the stack
  62:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		 * @return pointer to view from stack
  63:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		 */
  64:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		inline xpcc::AbstractView* 
  66:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		get()
  67:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		{
  68:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 			return this->stack.get();
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		}
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		/**
  72:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		 * @brief push new view on top of stack the new
  73:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		 *        view will be displayed instead of the old
  74:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		 *        one
  75:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		 *
  76:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		 * @param view next displayed view
  77:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		 */
  78:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		inline void
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		push(xpcc::AbstractView* view)
  80:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		{
  81:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 			this->stack.push(view);
  82:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 			this->getDisplay().clear();
  83:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 			xpcc::AbstractView* top = this->get();
  84:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 			top->draw();
  85:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 			this->display->update();
  86:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		}
  87:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 
  88:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		/**
  89:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		 * @brief getDisplay access underlying GraphicDisplay
  90:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		 */
  91:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		inline xpcc::GraphicDisplay&
  92:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		getDisplay()
  93:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		{
  94:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 			return *this->display;
 743              		.loc 9 94 0
 744 0000 4368     		ldr	r3, [r0, #4]
 745              	.LBE590:
 746              	.LBE589:
 747              	.LBE588:
  91:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** {
 748              		.loc 1 91 0
 749 0002 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 750              	.LCFI5:
 751              		.cfi_def_cfa_offset 36
 752              		.cfi_offset 4, -36
 753              		.cfi_offset 5, -32
 754              		.cfi_offset 6, -28
 755              		.cfi_offset 7, -24
 756              		.cfi_offset 8, -20
 757              		.cfi_offset 9, -16
 758              		.cfi_offset 10, -12
 759              		.cfi_offset 11, -8
 760              		.cfi_offset 14, -4
 761              	.LBB672:
 762              	.LBB592:
 763              	.LBB591:
 764              		.loc 9 94 0
 765 0006 5C68     		ldr	r4, [r3, #4]
 766              	.LBE591:
 767              	.LBE592:
  93:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	display->clear();
 768              		.loc 1 93 0
 769 0008 2368     		ldr	r3, [r4, #0]
 770              	.LBE672:
  91:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** {
 771              		.loc 1 91 0
 772 000a 8046     		mov	r8, r0
 773              	.LVL71:
 774              	.LBB673:
  93:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	display->clear();
 775              		.loc 1 93 0
 776 000c 1B69     		ldr	r3, [r3, #16]
 777              	.LBE673:
  91:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** {
 778              		.loc 1 91 0
 779 000e 83B0     		sub	sp, sp, #12
 780              	.LCFI6:
 781              		.cfi_def_cfa_offset 48
 782              	.LBB674:
  93:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	display->clear();
 783              		.loc 1 93 0
 784 0010 2046     		mov	r0, r4
 785              	.LVL72:
 786 0012 9847     		blx	r3
 787              	.LVL73:
 788              	.LBB593:
 789              	.LBB594:
 790              	.LBB595:
 791              		.file 10 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp"
   1:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // coding: utf-8
   2:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
   3:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** /* Copyright (c) 2011, Roboterclub Aachen e.V.
   4:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp ****  * All rights reserved.
   5:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp ****  *
   6:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp ****  * Redistribution and use in source and binary forms, with or without
   7:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp ****  * modification, are permitted provided that the following conditions are met:
   8:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp ****  *
   9:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp ****  *     * Redistributions of source code must retain the above copyright
  10:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp ****  *       notice, this list of conditions and the following disclaimer.
  11:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp ****  *     * Redistributions in binary form must reproduce the above copyright
  12:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp ****  *       notice, this list of conditions and the following disclaimer in the
  13:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp ****  *       documentation and/or other materials provided with the distribution.
  14:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp ****  *     * Neither the name of the Roboterclub Aachen e.V. nor the
  15:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp ****  *       names of its contributors may be used to endorse or promote products
  16:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp ****  *       derived from this software without specific prior written permission.
  17:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp ****  *
  18:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp ****  * THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
  19:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp ****  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  20:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  21:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp ****  * DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
  22:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  23:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  24:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  25:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  26:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  27:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  28:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp ****  */
  29:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
  30:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
  31:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** #ifndef XPCC__VECTOR2_HPP
  32:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	#error	"Don't include this file directly, use 'vector2.hpp' instead!"
  33:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** #endif
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** #include <cmath>
  36:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
  39:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::Vector() :
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	x(),
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	y()
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
  44:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
  47:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::Vector(const T& inX, const T& inY) :
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	x(inX),
  49:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	y(inY)
  50:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
  52:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
  54:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
  55:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::Vector(
  56:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 		const xpcc::Vector<T, 1> &inX,
  57:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 		const xpcc::Vector<T, 1> &inY) :
  58:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	x(inX.x),
  59:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	y(inY.x)
  60:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
  61:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
  62:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
  63:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
  64:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::Vector(const T &inX, const xpcc::Vector<T, 1> &inY) :
  66:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	x(inX),
  67:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	y(inY.x)
  68:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
  72:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
  73:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::Vector(const xpcc::Vector<T, 1> &inX, const T &inY) :
  74:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	x(inX.x),
  75:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	y(inY)
  76:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
  77:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
  78:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
  80:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
  81:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::Vector(T inVal) :
  82:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	x(inVal),
  83:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	y(inVal)
  84:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
  85:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
  86:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
  87:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
  88:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
  89:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::Vector(const xpcc::Matrix<T, 2, 1> &rhs) :
  90:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	x(reinterpret_cast<const T*>(&rhs)[0]),
  91:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	y(reinterpret_cast<const T*>(&rhs)[1])
  92:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
  93:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
  94:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
  95:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
  96:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
  97:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::Vector(const Vector &rhs) :
  98:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	x(rhs.x),
  99:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	y(rhs.y)
 100:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
 101:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
 102:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
 103:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
 104:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
 105:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** void
 106:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::set(const T& newX, const T& newY)
 107:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
 108:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	this->x = newX;
 109:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	this->y = newY;
 110:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
 111:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
 112:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
 113:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
 114:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** void
 115:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::setX(const T& value)
 116:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
 117:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	this->x = value;
 118:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
 119:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
 120:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
 121:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** void
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::setY(const T& value)
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
 124:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	this->y = value;
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
 127:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
 128:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** const T&
 130:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::getX() const
 131:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
 132:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	return this->x;
 133:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
 134:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
 135:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
 136:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** const T&
 137:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::getY() const
 138:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
 139:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	return this->y;
 140:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
 141:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
 142:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
 143:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
 144:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** T
 145:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::getLength() const
 146:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
 147:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	float tx = this->x;
 148:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	float ty = this->y;
 149:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	
 150:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	return GeometricTraits<T>::round(std::sqrt(tx*tx + ty*ty));
 151:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
 152:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
 153:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
 154:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
 155:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** typename xpcc::Vector<T, 2>::WideType
 156:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::getLengthSquared() const
 157:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
 158:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	WideType tx = static_cast<WideType>(this->x);
 159:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	WideType ty = static_cast<WideType>(this->y);
 160:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	
 161:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	return tx * tx + ty * ty;
 162:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
 163:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
 164:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
 165:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
 166:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** float
 167:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::getAngle() const
 168:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
 169:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	return std::atan2(this->y, this->x);
 170:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
 171:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
 172:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
 173:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
 174:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>&
 175:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::normalize()
 176:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
 177:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	T length = this->getLength();
 178:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	
 179:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	this->x = this->x / length;
 180:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	this->y = this->y / length;
 181:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	
 182:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	return *this;
 183:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
 184:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
 185:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
 186:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
 187:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>
 188:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::normalized() const
 189:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
 190:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	Vector a(*this);
 191:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	a.normalize();
 192:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	return a;
 193:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
 194:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
 195:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
 196:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
 197:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>&
 198:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::scale(float length)
 199:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
 200:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	float factor = length / getLength();
 201:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	
 202:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	this->x = this->x * factor;
 203:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	this->y = this->y * factor;
 204:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	
 205:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	return *this;
 206:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
 207:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
 208:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
 209:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
 210:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>
 211:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::scaled(float length) const
 212:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
 213:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	Vector a(*this);
 214:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	a.scale(length);
 215:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	return a;
 216:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
 217:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
 218:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
 219:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
 220:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>&
 221:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::rotate(float phi)
 222:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
 223:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	float c = std::cos(phi);
 224:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	float s = std::sin(phi);
 225:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	
 226:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	// without rounding the result might be false for T = integer
 227:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	T tx =    GeometricTraits<T>::round(c * this->x - s * this->y);
 228:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	this->y = GeometricTraits<T>::round(s * this->x + c * this->y);
 229:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	this->x = tx;
 230:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	
 231:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	return *this;
 232:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
 233:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
 234:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
 235:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>&
 237:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::translate(const Vector<T, 2>& vector)
 238:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
 239:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	this->x += vector.x;
 240:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	this->y += vector.y;
 241:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	
 242:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	return *this;
 243:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
 244:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
 245:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
 246:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
 247:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** typename xpcc::Vector<T, 2>::WideType
 248:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::getDistanceTo(const Vector<T, 2>& other) const
 249:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
 250:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	return (other - *this).getLength();
 251:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
 252:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
 253:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
 254:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
 255:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** float
 256:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::getAngleTo(const Vector<T, 2>& other) const
 257:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
 258:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	return (other - *this).getAngle();
 259:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
 260:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
 261:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
 262:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
 263:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** typename xpcc::Vector<T, 2>::WideType
 264:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::dot(const xpcc::Vector<T, 2>& other) const
 265:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
 266:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	return (static_cast<WideType>(this->x) * static_cast<WideType>(other.x) +
 267:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 			static_cast<WideType>(this->y) * static_cast<WideType>(other.y));
 268:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
 269:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
 270:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
 271:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
 272:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** typename xpcc::Vector<T, 2>::WideType
 273:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::cross(const xpcc::Vector<T, 2>& other) const
 274:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
 275:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	return (static_cast<WideType>(this->x) * static_cast<WideType>(other.y) -
 276:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 			static_cast<WideType>(this->y) * static_cast<WideType>(other.x));
 277:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
 278:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
 279:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
 280:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T> template<typename U>
 281:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<U, 2>
 282:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::convert() const
 283:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
 284:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	return Vector<U, 2>(static_cast<U>(this->x), static_cast<U>(this->y));
 285:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
 286:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
 289:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::toOrthogonalVector() const
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
 292:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	return xpcc::Vector<T, 2>(y, -x);
 293:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
 294:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
 295:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
 296:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
 297:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>
 298:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::perpendicular() const
 299:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
 300:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	return xpcc::Vector<T, 2>(y, -x);
 301:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
 302:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
 303:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
 304:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
 305:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** int_fast8_t
 306:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::ccw(const Vector& a, const Vector& b,
 307:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 		const Vector& c)
 308:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
 309:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	WideType dx1 = b.x - a.x;
 310:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	WideType dy1 = b.y - a.y;
 311:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	WideType dx2 = c.x - a.x;
 312:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	WideType dy2 = c.y - a.y;
 313:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	
 314:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	WideType d1 = dx1 * dy2;
 315:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	WideType d2 = dy1 * dx2;
 316:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	
 317:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	if (d1 > d2) {
 318:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 		return 1;
 319:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	}
 320:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	else if (d1 < d2) {
 321:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 		return -1;
 322:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	}
 323:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	else
 324:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	{
 325:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 		if ((dx1 * dx2 < 0) || (dy1 * dy2 < 0)) {
 326:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 			return -1;
 327:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 		}
 328:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 		else
 329:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 		{
 330:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 			if ((dx1 * dx1 + dy1 * dy1) >= (dx2 * dx2 + dy2 * dy2)) {
 331:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 				return 0;
 332:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 			}
 333:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 			else {
 334:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 				return 1;
 335:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 			}
 336:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 		}
 337:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	}
 338:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
 339:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
 340:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
 341:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
 342:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>& xpcc::Vector<T, 2>::operator = (const xpcc::Vector<T, 2> &rhs)
 343:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
 344:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	x = rhs.x;
 792              		.loc 10 344 0
 793 0014 0022     		movs	r2, #0
 794              	.LBE595:
 795              	.LBE594:
 796              	.LBE593:
 797              	.LBB598:
 798              	.LBB599:
 799              		.file 11 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp"
   1:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** // coding: utf-8
   2:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** // ----------------------------------------------------------------------------
   3:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** /* Copyright (c) 2009, Roboterclub Aachen e.V.
   4:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * All rights reserved.
   5:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *
   6:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * Redistribution and use in source and binary forms, with or without
   7:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * modification, are permitted provided that the following conditions are met:
   8:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * 
   9:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *     * Redistributions of source code must retain the above copyright
  10:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *       notice, this list of conditions and the following disclaimer.
  11:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *     * Redistributions in binary form must reproduce the above copyright
  12:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *       notice, this list of conditions and the following disclaimer in the
  13:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *       documentation and/or other materials provided with the distribution.
  14:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *     * Neither the name of the Roboterclub Aachen e.V. nor the
  15:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *       names of its contributors may be used to endorse or promote products
  16:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *       derived from this software without specific prior written permission.
  17:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *
  18:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
  19:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  20:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  21:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
  22:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  23:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  24:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  25:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  26:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  27:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  28:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  */
  29:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** // ----------------------------------------------------------------------------
  30:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
  31:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #ifndef XPCC__IOSTREAM_HPP
  32:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #define XPCC__IOSTREAM_HPP
  33:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #include <xpcc/architecture/utils.hpp>
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
  36:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #include "iodevice.hpp"
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #include "iodevice_wrapper.hpp"
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
  39:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** namespace xpcc
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** {
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	/**
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	 * \brief 	This Formats all primary types into a string stream for
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	 * 			output or it reads values from a input and converts them to
  44:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	 * 			a given type;
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	 *
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	 * \ingroup io
  47:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	 * \author	Martin Rosekeit <martin.rosekeit@rwth-aachen.de>
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	 */
  49:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	class IOStream
  50:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	{
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	public :
  52:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		/**
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		 * \brief	Constructor
  54:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		 * 
  55:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		 * \param	device	device to write the stream to
  56:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		 * 
  57:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		 * \code
  58:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		 *	MyIODevice device;
  59:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		 *	IOStream stream( device );
  60:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		 * \endcode
  61:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		 */
  62:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		IOStream(IODevice& device);
  63:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
  64:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		inline IOStream&
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		write(char c)
  66:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
  67:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->device->write(c);
  68:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		inline IOStream&
  72:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		flush()
  73:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
  74:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->device->flush();
  75:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->mode = Mode::Ascii;
  76:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
  77:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
  78:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		/// set the output mode to Mode::Binary style for \c char and \c char*
  80:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
  81:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		bin()
  82:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
  83:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->mode = Mode::Binary;
  84:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
  85:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
  86:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
  87:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		/// set the output mode to Mode::Hexadecimal style for \c char and \c char*
  88:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
  89:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		hex()
  90:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
  91:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->mode = Mode::Hexadecimal;
  92:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
  93:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
  94:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
  95:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		/// set the output mode to Mode::Ascii style for \c char and \c char*
  96:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
  97:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ascii()
  98:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
  99:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->mode = Mode::Ascii;
 100:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 101:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 102:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 103:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 104:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		IOStream&
 105:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const unsigned char& v)
 106:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 107:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 108:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeInteger(static_cast<uint16_t>(v));
 109:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 110:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 111:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 112:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 113:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else {
 114:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 115:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 116:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 117:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 118:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
 119:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		IOStream&
 120:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const char& v)
 121:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 124:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 127:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 128:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else {
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 130:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 131:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 132:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 133:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 134:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 135:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const uint16_t& v)
 136:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 137:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 138:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeInteger(v);
 139:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 140:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 141:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v >> 8));
 142:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v & 0xff));
 143:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 144:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else {
 145:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v >> 8));
 146:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v & 0xff));
 147:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 148:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 149:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 150:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
 151:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 152:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const int16_t& v)
 153:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 154:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 155:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeInteger(v);
 156:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 157:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 158:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v >> 8));
 159:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v & 0xff));
 160:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 161:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else {
 162:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v >> 8));
 163:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v & 0xff));
 164:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 165:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 166:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 167:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
 168:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 169:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const uint32_t& v)
 170:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 171:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 172:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeInteger(v);
 173:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 174:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 175:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v >> 24));
 176:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v >> 16));
 177:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v >> 8));
 178:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v & 0xff));
 179:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 180:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else {
 181:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v >> 24));
 182:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v >> 16));
 183:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v >> 8));
 184:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v & 0xff));
 185:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 186:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 187:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 188:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
 189:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 190:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const int32_t& v)
 191:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 192:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 193:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeInteger(v);
 194:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 195:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 196:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v >> 24));
 197:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v >> 16));
 198:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v >> 8));
 199:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v & 0xff));
 200:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 201:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else {
 202:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v >> 24));
 203:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v >> 16));
 204:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v >> 8));
 205:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v & 0xff));
 206:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 207:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 208:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 209:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 210:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #if defined(XPCC__OS_OSX)
 211:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		// For APPLE 'int64_t' is of type 'int'. Therefore there is no
 212:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		// function here for the default type 'long int'. As 'long int' has the same
 213:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		// width as 'int64_t' we just use a typedef here.
 214:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 215:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const long int& v)
 216:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 217:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int64_t>(v));
 218:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 219:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 220:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 221:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 222:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const long unsigned int& v)
 223:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 224:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<uint64_t>(v));
 225:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 226:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 227:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #endif
 228:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 229:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #if defined(XPCC__CPU_ARM) || defined(XPCC__CPU_AVR32)
 230:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		// For ARM 'int32_t' is of type 'long'. Therefore there is no
 231:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		// function here for the default type 'int'. As 'int' has the same
 232:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		// width as 'int32_t' we just use a typedef here.
 233:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 234:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const int& v)
 235:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 237:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 238:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 239:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 240:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 241:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const unsigned int& v)
 242:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 243:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<uint32_t>(v));
 244:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 245:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 246:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #endif
 247:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 248:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** // The 64-bit types on the AVR are extremely slow and are
 249:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** // therefore excluded here
 250:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #if !defined(XPCC__CPU_AVR)
 251:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 252:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const uint64_t& v)
 253:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 254:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(v);
 255:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 256:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 257:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 258:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 259:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const int64_t& v)
 260:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 261:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(v);
 262:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 263:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 264:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #endif
 265:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 266:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 267:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const float& v)
 268:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 269:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeFloat(v);
 270:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 271:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 272:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
 273:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 274:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const double& v)
 275:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 276:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #if defined(XPCC__CPU_AVR)
 277:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeFloat(static_cast<float>(v));
 278:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #else
 279:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeDouble(v);
 280:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #endif
 281:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 282:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 283:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
 284:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		IOStream&
 285:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const char* s)
 286:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 800              		.loc 11 287 0
 801 0016 A368     		ldr	r3, [r4, #8]
 802              	.LBE599:
 803              	.LBE598:
  95:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	(*display) << this->title;
 804              		.loc 1 95 0
 805 0018 D8F82010 		ldr	r1, [r8, #32]
 806              	.LBB604:
 807              	.LBB597:
 808              	.LBB596:
 809              		.loc 10 344 0
 810 001c A284     		strh	r2, [r4, #36]	@ movhi
 345:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	y = rhs.y;
 811              		.loc 10 345 0
 812 001e 0222     		movs	r2, #2
 813 0020 E284     		strh	r2, [r4, #38]	@ movhi
 814              	.LBE596:
 815              	.LBE597:
 816              	.LBE604:
  95:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	(*display) << this->title;
 817              		.loc 1 95 0
 818 0022 261D     		adds	r6, r4, #4
 819              	.LVL74:
 820              	.LBB605:
 821              	.LBB602:
 822              		.loc 11 287 0
 823 0024 002B     		cmp	r3, #0
 824 0026 00F0AB80 		beq	.L105
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 289:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 825              		.loc 11 290 0
 826 002a 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 827              		.loc 11 291 0
 828 002c 3046     		mov	r0, r6
 829 002e 0CBF     		ite	eq
 830 0030 574B     		ldreq	r3, .L113
 292:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 293:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else {
 294:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(s);
 831              		.loc 11 294 0
 832 0032 584B     		ldrne	r3, .L113+4
 833 0034 9847     		blx	r3
 834              	.LVL75:
 835              	.L72:
 836              	.LBE602:
 837              	.LBE605:
  96:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	display->drawLine(0, 10, display->getWidth(), 10);
 838              		.loc 1 96 0
 839 0036 2368     		ldr	r3, [r4, #0]
 840 0038 574D     		ldr	r5, .L113+8
 841 003a 9B68     		ldr	r3, [r3, #8]
 842 003c 2046     		mov	r0, r4
 843 003e 9847     		blx	r3
 844              	.LVL76:
 845 0040 0A22     		movs	r2, #10
 846 0042 03B2     		sxth	r3, r0
 847 0044 0092     		str	r2, [sp, #0]
 848 0046 2046     		mov	r0, r4
 849 0048 0021     		movs	r1, #0
 850 004a A847     		blx	r5
 851              	.LVL77:
 852              	.LBB606:
 853              	.LBB607:
 854              	.LBB608:
 855              	.LBB609:
 856              	.LBB610:
 857              		.loc 2 203 0
 858 004c D8F82C50 		ldr	r5, [r8, #44]
 859              	.LVL78:
 860              	.LBE610:
 861              	.LBE609:
  67:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	for (const_iterator it = this->begin(); it != this->end(); ++it) {
 862              		.loc 2 67 0
 863 0050 002D     		cmp	r5, #0
 864 0052 00F09A80 		beq	.L97
 865 0056 2B46     		mov	r3, r5
 866 0058 4FF0000A 		mov	sl, #0
 867              	.LVL79:
 868              	.L75:
 869              	.LBB611:
 870              	.LBB612:
  80:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 	this->node = this->node->next;
 871              		.loc 3 80 0
 872 005c 1B6A     		ldr	r3, [r3, #32]
 873              	.LVL80:
 874              	.LBE612:
 875              	.LBE611:
  68:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 		count++;
 876              		.loc 2 68 0
 877 005e 0AF1010A 		add	sl, sl, #1
 878              	.LVL81:
  67:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	for (const_iterator it = this->begin(); it != this->end(); ++it) {
 879              		.loc 2 67 0
 880 0062 002B     		cmp	r3, #0
 881 0064 FAD1     		bne	.L75
 882              	.LVL82:
 883              	.L74:
 884              	.LBE608:
 885              	.LBE607:
 886              	.LBE606:
 887              	.LBB615:
 101:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	for(uint8_t j=0; j<this->homePosition; ++j)
 888              		.loc 1 101 0 discriminator 1
 889 0066 98F82520 		ldrb	r2, [r8, #37]	@ zero_extendqisi2
 890 006a 2AB1     		cbz	r2, .L76
 101:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	for(uint8_t j=0; j<this->homePosition; ++j)
 891              		.loc 1 101 0 is_stmt 0
 892 006c 0023     		movs	r3, #0
 893              	.LVL83:
 894              	.L77:
 895 006e 0133     		adds	r3, r3, #1
 896 0070 DBB2     		uxtb	r3, r3
 897 0072 9342     		cmp	r3, r2
 898              	.LBB616:
 899              	.LBB617:
 155:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 	this->node = this->node->next;
 900              		.loc 3 155 0 is_stmt 1
 901 0074 2D6A     		ldr	r5, [r5, #32]
 902              	.LVL84:
 903              	.LBE617:
 904              	.LBE616:
 101:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	for(uint8_t j=0; j<this->homePosition; ++j)
 905              		.loc 1 101 0
 906 0076 FAD3     		bcc	.L77
 907              	.LVL85:
 908              	.L76:
 909              	.LBE615:
 106:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	for (i = 0; i < this->maximalDrawnEntrys; i++)
 910              		.loc 1 106 0 discriminator 1
 911 0078 98F82430 		ldrb	r3, [r8, #36]	@ zero_extendqisi2
 912 007c 002B     		cmp	r3, #0
 913 007e 76D0     		beq	.L70
 914              		.file 12 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_displ
   1:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** // coding: utf-8
   2:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** // ----------------------------------------------------------------------------
   3:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** /* Copyright (c) 2009, Roboterclub Aachen e.V.
   4:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp ****  * All rights reserved.
   5:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp ****  *
   6:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp ****  * Redistribution and use in source and binary forms, with or without
   7:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp ****  * modification, are permitted provided that the following conditions are met:
   8:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp ****  * 
   9:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp ****  *     * Redistributions of source code must retain the above copyright
  10:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp ****  *       notice, this list of conditions and the following disclaimer.
  11:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp ****  *     * Redistributions in binary form must reproduce the above copyright
  12:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp ****  *       notice, this list of conditions and the following disclaimer in the
  13:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp ****  *       documentation and/or other materials provided with the distribution.
  14:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp ****  *     * Neither the name of the Roboterclub Aachen e.V. nor the
  15:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp ****  *       names of its contributors may be used to endorse or promote products
  16:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp ****  *       derived from this software without specific prior written permission.
  17:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp ****  *
  18:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp ****  * THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
  19:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp ****  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  20:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  21:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp ****  * DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
  22:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  23:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  24:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  25:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  26:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  27:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  28:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp ****  */
  29:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** // ----------------------------------------------------------------------------
  30:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 
  31:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** #ifndef XPCC__GRAPHIC_DISPLAY_HPP
  32:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** #define XPCC__GRAPHIC_DISPLAY_HPP
  33:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** #include <xpcc/architecture/driver/accessor.hpp>
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** #include <xpcc/math/geometry.hpp>
  36:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** #include <xpcc/io/iodevice.hpp>
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** #include <xpcc/io/iostream.hpp>
  39:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** #include "font.hpp"
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** namespace xpcc
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** {
  44:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	namespace glcd
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	{
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		typedef Vector<int16_t, 2> Point;
  47:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		// RGB16 (565) Format
  49:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		class Color
  50:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		{
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		public:
  52:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			static ALWAYS_INLINE Color white()   { return Color(0xffff); };
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			static ALWAYS_INLINE Color yellow()  { return Color(0xFFE0); };
  54:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			static ALWAYS_INLINE Color magenta() { return Color(0xF81F); };
  55:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			static ALWAYS_INLINE Color red()     { return Color(0xF800); };
  56:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			static ALWAYS_INLINE Color orange()  { return Color(0xFD20); };
  57:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			static ALWAYS_INLINE Color sliver()  { return Color(0xC618); };
  58:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			static ALWAYS_INLINE Color gray()    { return Color(0x8410); };
  59:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			static ALWAYS_INLINE Color maroon()  { return Color(0x8000); };
  60:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			static ALWAYS_INLINE Color lime()    { return Color(0x07E0); };
  61:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			static ALWAYS_INLINE Color green()   { return Color(0x0400); };
  62:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			static ALWAYS_INLINE Color blue()    { return Color(0x001F); };
  63:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			static ALWAYS_INLINE Color navy()    { return Color(0x0010); };
  64:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			static ALWAYS_INLINE Color black()   { return Color(0x0000); };
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			
  66:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			/**
  67:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			 * @param	red
  68:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			 * 		Range [0..255]
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			 * @param	green
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			 * 		Range [0..255]
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			 * @param	blue
  72:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			 * 		Range [0..255]
  73:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			 */
  74:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			Color(uint8_t red, uint8_t green, uint8_t blue) :
  75:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 				color(((static_cast<uint16_t>(red >> 3) << 11) |
  76:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 						(static_cast<uint16_t>(green >> 2) << 5) |
  77:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 						static_cast<uint16_t>(blue >> 3)))
  78:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			{
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			}
  80:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			
  81:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			Color(uint16_t color) :
  82:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 				color(color)
  83:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			{
  84:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			}
  85:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			
  86:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			inline uint16_t
  87:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			getValue() const
  88:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			{
  89:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 				return color;
  90:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			}
  91:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			
  92:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			bool
  93:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			operator == (const Color& other) const {
  94:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 				return (color == other.color);
  95:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			}
  96:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			
  97:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		private:
  98:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			uint16_t color;
  99:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		};
 100:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	}
 101:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	
 102:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	// TODO
 103:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** //	enum class Orientation : uint8_t
 104:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** //	{
 105:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** //		Portrait, 				//< Connector top
 106:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** //		LandscapeRight,			//< Connector right
 107:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** //		LandscapeLeft,			//< Connector left
 108:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** //		PortraitUpsideDown,		//< Connector bottom
 109:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** //	};
 110:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	
 111:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	/**
 112:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * Base class for graphical displays. 
 113:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * 
 114:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * Coordinate System:
 115:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * \code
 116:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * (0, 0)
 117:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 *    +---------------------+
 118:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 *    |  ----> X            |
 119:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 *    | |                   |
 120:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 *    | |                   |
 121:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 *    | V Y                 |
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 *    |                     |
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 *    |                     |
 124:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 *    |                     |
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 *    +---------------------+
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 *                e.g. (127, 63)
 127:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * \endcode
 128:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * 
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * The size (width and height) of a graphics primitive always correspond
 130:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * to its mathematical model, ignoring the rendered with. As everything
 131:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * is drawn one pixel wide, the pixels will be rendered to the right and
 132:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * below the mathematically defined points.
 133:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * 
 134:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * \ingroup	lcd
 135:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 */
 136:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	/*
 137:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * TODO
 138:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * 
 139:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * setBrush() and setPen() for filling and the border?
 140:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * possible Brush/Pen modes:
 141:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * - NONE
 142:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * - BLACK
 143:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * - WHITE
 144:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * - INVERT
 145:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * 
 146:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * Text mode:
 147:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * - left adjusted (default)
 148:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * - right adjusted
 149:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * - centered
 150:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * 
 151:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * All modes relative to the current viewport. This would make
 152:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * drawing a menu system easier.
 153:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 */
 154:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	class GraphicDisplay : public IOStream
 155:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	{
 156:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	public:
 157:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		friend class VirtualGraphicDisplay;
 158:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 
 159:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		GraphicDisplay();
 160:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 161:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		virtual
 162:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		~GraphicDisplay()
 163:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		{
 164:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		}
 165:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 166:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		/**
 167:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * Number of pixel in horizontal direction.
 168:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 */
 169:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		virtual uint16_t
 170:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		getWidth() const = 0;
 171:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 
 172:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		/**
 173:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * Number of pixel in vertical direction.
 174:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 */
 175:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		virtual uint16_t
 176:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		getHeight() const = 0;
 177:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 
 178:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		/**
 179:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * Clear screen and reset the cursor.
 180:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 */
 181:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		virtual void
 182:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		clear() = 0;
 183:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 184:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		/**
 185:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * Transfer the content of the RAM buffer to the real display.
 186:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 */
 187:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		virtual void
 188:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		update() = 0;
 189:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 190:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		/**
 191:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * Set a new foreground color.
 192:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * 
 193:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * The foreground color is used for all drawing operations. Default
 194:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * is white.
 195:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * 
 196:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * @see	setBackgroundColor()
 197:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 */
 198:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		void
 199:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		setColor(const glcd::Color& color);
 200:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 201:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		inline glcd::Color
 202:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		getForegroundColor() const
 203:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		{
 204:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			return this->foregroundColor;
 205:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		}
 206:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 207:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		/**
 208:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * Set new background color.
 209:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * 
 210:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * The background color used when clearing the screen. Default is black.
 211:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * 
 212:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * @see	setColor()
 213:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 */
 214:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		void
 215:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		setBackgroundColor(const glcd::Color& color);
 216:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 217:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		/**
 218:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * Limit the coordinate system to a smaller area.
 219:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * 
 220:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * The default viewport is the complete screen.
 221:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 */
 222:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		//void
 223:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		//setViewport();
 224:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 225:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		// TODO Set a clipping area
 226:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		// Everything drawn outside this area will be discarded.
 227:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		//void
 228:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		//setClippingWindow();
 229:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 230:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		/**
 231:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * Draw a pixel in currently active foreground color.
 232:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * 
 233:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * \param	x	x-position
 234:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * \param	y	y-position
 235:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 */
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		inline void
 237:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		drawPixel(int16_t x, int16_t y)
 238:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		{
 239:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			(this->*draw)(x, y);
 240:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		}
 241:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 242:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		inline void
 243:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		drawPixel(glcd::Point center)
 244:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		{
 245:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			(this->*draw)(center.x, center.y);
 246:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		}
 247:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 248:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		/**
 249:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * Draw a line.
 250:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * 
 251:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * Uses the faster drawHorizontalLine() or drawVerticalLine() if
 252:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * possible, otherwise the line is rastered with the Bresenham line
 253:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * algorithm.
 254:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * 
 255:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * \param start	first point
 256:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * \param end	second point
 257:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 */
 258:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		inline void
 259:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		drawLine(glcd::Point start, glcd::Point end)
 260:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		{
 261:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			this->drawLine(start.getX(), start.getY(), end.getX(), end.getY());
 262:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		}
 263:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 264:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		/**
 265:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * Draw a line specified by x and y coordinates of both points.
 266:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 */
 267:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		void
 268:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		drawLine(int16_t x1, int16_t y1, int16_t x2, int16_t y2);
 269:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 270:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		inline void
 271:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		drawRectangle(int16_t x, int16_t y, uint16_t width, uint16_t height)
 272:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		{
 273:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			drawRectangle(glcd::Point(x, y), width, height);
 274:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		}
 275:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 276:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		/**
 277:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * Draw a rectangle.
 278:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 */
 279:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		void
 280:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		drawRectangle(glcd::Point upperLeft, uint16_t width, uint16_t height);
 281:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 282:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		/**
 283:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * Draw a rectangle with rounded corners.
 284:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 */
 285:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		void
 286:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		drawRoundedRectangle(glcd::Point upperLeft,
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 				uint16_t width, uint16_t height,
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 				uint16_t radius);
 289:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		/**
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * Draw a circle
 292:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * 
 293:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * Uses the midpoint circle algorithm.
 294:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * 
 295:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * \param center	Center of the circle
 296:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * \param radius	Radius of the circle
 297:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 */
 298:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		void
 299:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		drawCircle(glcd::Point center, uint16_t radius);
 300:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 301:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		/**
 302:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * Draw an ellipse.
 303:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * 
 304:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * Uses a variation of the midpoint algorithm. May be improved through
 305:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * simplification of the used formula.
 306:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * 
 307:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * \param center	Center of the ellipse
 308:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * \param rx		radius in x-direction
 309:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * \param ry		radius in y-direction
 310:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 */
 311:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		void
 312:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		drawEllipse(glcd::Point center, int16_t rx, int16_t ry);
 313:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 314:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		/**
 315:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * Draw an image.
 316:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * 
 317:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * The first byte in the image data specifies the with, the second
 318:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * byte the height. Afterwards the actual image data.
 319:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * 
 320:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * \param upperLeft		Upper left corner
 321:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * \param image			Image data
 322:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * 
 323:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * \see	drawImage()
 324:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 */
 325:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		void
 326:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		drawImage(glcd::Point upperLeft, xpcc::accessor::Flash<uint8_t> image);
 327:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 328:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		/**
 329:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * Draw an image.
 330:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * 
 331:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * \p data is the actual image data without any size information.
 332:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 */
 333:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		virtual void
 334:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		drawImageRaw(glcd::Point upperLeft,
 335:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 				uint16_t width, uint16_t height,
 336:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 				xpcc::accessor::Flash<uint8_t> data);
 337:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 338:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		/**
 339:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * Fill a rectangle.
 340:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 */
 341:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		void
 342:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		fillRectangle(glcd::Point upperLeft, uint16_t width, uint16_t height);
 343:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 344:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		inline void
 345:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		fillRectangle(int16_t x, int16_t y, uint16_t width, uint16_t height)
 346:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		{
 347:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			fillRectangle(glcd::Point(x, y), width, height);
 348:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		}
 349:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 350:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		/**
 351:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * Fill a circle.
 352:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 */
 353:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		void
 354:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		fillCircle(glcd::Point center, uint16_t radius);
 355:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 356:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	public:
 357:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		/**
 358:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * Set a new font.
 359:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * 
 360:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * Default font is xpcc::font::FixedWidth5x8.
 361:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * 
 362:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * \param	newFont	Active font
 363:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * \see		xpcc::font
 364:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 */
 365:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		inline void
 366:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		setFont(const uint8_t *newFont)
 367:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		{
 368:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			this->font = xpcc::accessor::asFlash(newFont);
 369:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		}
 370:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 371:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		/**
 372:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * Get the height of a character.
 373:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 */
 374:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		uint8_t
 375:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		getFontHeight() const;
 376:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 377:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		/**
 378:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * Set the cursor for text drawing.
 379:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * 
 380:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * \param	position	Cursor position
 381:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 */
 382:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		inline void
 383:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		setCursor(glcd::Point position)
 384:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		{
 385:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			this->cursor = position;
 386:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		}
 387:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 388:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		/**
 389:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * Set the cursor for text drawing.
 390:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * 
 391:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * \param	x	Cursor x-position
 392:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * \param	y	Cursor y-position
 393:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 */
 394:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		inline void
 395:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		setCursor(int16_t x, int16_t y)
 396:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		{
 397:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			this->cursor = glcd::Point(x, y);
 398:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		}
 399:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 400:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		inline void
 401:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		setCursorX(int16_t x)
 402:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		{
 403:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			this->cursor.x = x;
 404:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		}
 405:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 406:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		inline void
 407:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		setCursorY(int16_t y)
 408:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		{
 409:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			this->cursor.y = y;
 410:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		}
 411:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 412:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		inline glcd::Point
 413:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		getCursor() const
 414:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		{
 415:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			return this->cursor;
 416:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		}
 417:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 418:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		/**
 419:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * Write a single character.
 420:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 */
 421:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		void
 422:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		write(char c);
 423:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 424:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	protected:
 425:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		/// helper method for drawCircle() and drawEllipse()
 426:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		void
 427:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		drawCircle4(glcd::Point center, int16_t x, int16_t y);
 428:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 429:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		virtual void
 430:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		drawHorizontalLine(glcd::Point start, uint16_t length);
 431:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 432:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		virtual void
 433:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		drawVerticalLine(glcd::Point start, uint16_t length);
 434:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 435:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		virtual void
 436:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		setPixel(int16_t x, int16_t y) = 0;
 437:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 438:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		virtual void
 439:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		clearPixel(int16_t x, int16_t y) = 0;
 440:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 441:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		virtual bool
 442:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		getPixel(int16_t x, int16_t y) = 0;
 443:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 444:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	protected:
 445:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		// Interface class for the IOStream
 446:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		class Writer : public IODevice
 915              		.loc 12 446 0
 916 0080 5FFA8AFA 		uxtb	sl, sl
 108:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 		if (this->homePosition + i >= count)
 917              		.loc 1 108 0
 918 0084 5245     		cmp	r2, sl
 919 0086 72DA     		bge	.L70
 920 0088 0023     		movs	r3, #0
 921 008a 1F46     		mov	r7, r3
 922 008c DFF81CB1 		ldr	fp, .L113+28
 923 0090 15E0     		b	.L80
 924              	.LVL86:
 925              	.L110:
 926              	.LBB618:
 927              	.LBB619:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 928              		.loc 11 287 0
 929 0092 7368     		ldr	r3, [r6, #4]
 930 0094 002B     		cmp	r3, #0
 931 0096 5ED0     		beq	.L106
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 932              		.loc 11 290 0
 933 0098 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 934              		.loc 11 291 0
 935 009a 3046     		mov	r0, r6
 936 009c 3F49     		ldr	r1, .L113+12
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 937              		.loc 11 290 0
 938 009e 43D0     		beq	.L104
 939              	.LVL87:
 940              	.L95:
 941              	.LBE619:
 942              	.LBE618:
 943              	.LBB623:
 944              	.LBB624:
 945              		.loc 11 294 0
 946 00a0 3C4B     		ldr	r3, .L113+4
 947 00a2 9847     		blx	r3
 948              	.LVL88:
 949              	.L92:
 950              	.LBE624:
 951              	.LBE623:
 106:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	for (i = 0; i < this->maximalDrawnEntrys; i++)
 952              		.loc 1 106 0
 953 00a4 0137     		adds	r7, r7, #1
 954 00a6 98F82430 		ldrb	r3, [r8, #36]	@ zero_extendqisi2
 955              	.LBB629:
 956              	.LBB630:
 155:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_iterator_impl.hpp **** 	this->node = this->node->next;
 957              		.loc 3 155 0
 958 00aa 2D6A     		ldr	r5, [r5, #32]
 959              	.LVL89:
 960              	.LBE630:
 961              	.LBE629:
 106:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	for (i = 0; i < this->maximalDrawnEntrys; i++)
 962              		.loc 1 106 0
 963 00ac FFB2     		uxtb	r7, r7
 964              	.LVL90:
 965 00ae BB42     		cmp	r3, r7
 966 00b0 5DD9     		bls	.L70
 108:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 		if (this->homePosition + i >= count)
 967              		.loc 1 108 0
 968 00b2 98F82520 		ldrb	r2, [r8, #37]	@ zero_extendqisi2
 969 00b6 D219     		adds	r2, r2, r7
 970 00b8 5245     		cmp	r2, sl
 971 00ba 3B46     		mov	r3, r7
 972 00bc 57DA     		bge	.L70
 973              	.LVL91:
 974              	.L80:
 111:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 		display->setCursor(4, 12+i*8);
 975              		.loc 1 111 0
 976 00be 4FEAC709 		lsl	r9, r7, #3
 977              	.LBB631:
 978              	.LBB632:
 979              	.LBB633:
 344:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	x = rhs.x;
 980              		.loc 10 344 0
 981 00c2 0422     		movs	r2, #4
 982              	.LBE633:
 983              	.LBE632:
 984              	.LBE631:
 111:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 		display->setCursor(4, 12+i*8);
 985              		.loc 1 111 0
 986 00c4 09F10C09 		add	r9, r9, #12
 987              	.LVL92:
 988              	.LBB636:
 989              	.LBB635:
 990              	.LBB634:
 344:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	x = rhs.x;
 991              		.loc 10 344 0
 992 00c8 A284     		strh	r2, [r4, #36]	@ movhi
 993              		.loc 10 345 0
 994 00ca A4F82690 		strh	r9, [r4, #38]	@ movhi
 995              	.LBE634:
 996              	.LBE635:
 997              	.LBE636:
 112:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 		if (this->position - this->homePosition == i) {
 998              		.loc 1 112 0
 999 00ce 98F82610 		ldrb	r1, [r8, #38]	@ zero_extendqisi2
 1000 00d2 98F82520 		ldrb	r2, [r8, #37]	@ zero_extendqisi2
 1001 00d6 8A1A     		subs	r2, r1, r2
 1002 00d8 9342     		cmp	r3, r2
 1003              	.LBB637:
 1004              	.LBB638:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 1005              		.loc 11 287 0
 1006 00da 7368     		ldr	r3, [r6, #4]
 1007              	.LBE638:
 1008              	.LBE637:
 112:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 		if (this->position - this->homePosition == i) {
 1009              		.loc 1 112 0
 1010 00dc 27D0     		beq	.L107
 1011              	.LVL93:
 1012              	.LBB643:
 1013              	.LBB644:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 1014              		.loc 11 287 0
 1015 00de 002B     		cmp	r3, #0
 1016 00e0 33D0     		beq	.L108
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 1017              		.loc 11 290 0
 1018 00e2 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 1019              		.loc 11 291 0
 1020 00e4 3046     		mov	r0, r6
 1021 00e6 2E49     		ldr	r1, .L113+16
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 1022              		.loc 11 290 0
 1023 00e8 27D0     		beq	.L103
 1024              	.LVL94:
 1025              	.L86:
 1026              		.loc 11 294 0
 1027 00ea 2A4B     		ldr	r3, .L113+4
 1028 00ec 9847     		blx	r3
 1029              	.LVL95:
 1030              	.L83:
 1031              	.LBE644:
 1032              	.LBE643:
 119:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 		(*display) << iter->text.getText();
 1033              		.loc 1 119 0
 1034 00ee 2846     		mov	r0, r5
 1035 00f0 D847     		blx	fp
 1036              	.LVL96:
 1037              	.LBB649:
 1038              	.LBB650:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 1039              		.loc 11 287 0
 1040 00f2 7368     		ldr	r3, [r6, #4]
 1041              	.LBE650:
 1042              	.LBE649:
 119:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 		(*display) << iter->text.getText();
 1043              		.loc 1 119 0
 1044 00f4 0146     		mov	r1, r0
 1045              	.LVL97:
 1046              	.LBB655:
 1047              	.LBB653:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 1048              		.loc 11 287 0
 1049 00f6 1BB3     		cbz	r3, .L109
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 1050              		.loc 11 290 0
 1051 00f8 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 1052              		.loc 11 291 0
 1053 00fa 3046     		mov	r0, r6
 1054              	.LVL98:
 1055 00fc 0CBF     		ite	eq
 1056 00fe 244B     		ldreq	r3, .L113
 1057              		.loc 11 294 0
 1058 0100 244B     		ldrne	r3, .L113+4
 1059 0102 9847     		blx	r3
 1060              	.LVL99:
 1061              	.L88:
 1062              	.LBE653:
 1063              	.LBE655:
 120:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 		display->setCursor(display->getWidth()- 8 - 5*6,12+i*8);
 1064              		.loc 1 120 0
 1065 0104 2368     		ldr	r3, [r4, #0]
 1066 0106 2046     		mov	r0, r4
 1067 0108 9B68     		ldr	r3, [r3, #8]
 1068 010a 9847     		blx	r3
 1069              	.LVL100:
 121:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 		if(*(iter->valuePtr) == true)
 1070              		.loc 1 121 0
 1071 010c 6B69     		ldr	r3, [r5, #20]
 1072              	.LBB656:
 1073              	.LBB657:
 1074              	.LBB658:
 1075              		.loc 10 345 0
 1076 010e A4F82690 		strh	r9, [r4, #38]	@ movhi
 1077              	.LVL101:
 1078              	.LBE658:
 1079              	.LBE657:
 1080              	.LBE656:
 121:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 		if(*(iter->valuePtr) == true)
 1081              		.loc 1 121 0
 1082 0112 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 120:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 		display->setCursor(display->getWidth()- 8 - 5*6,12+i*8);
 1083              		.loc 1 120 0
 1084 0114 2638     		subs	r0, r0, #38
 1085              	.LVL102:
 1086              	.LBB661:
 1087              	.LBB660:
 1088              	.LBB659:
 344:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	x = rhs.x;
 1089              		.loc 10 344 0
 1090 0116 A084     		strh	r0, [r4, #36]	@ movhi
 1091              	.LBE659:
 1092              	.LBE660:
 1093              	.LBE661:
 121:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 		if(*(iter->valuePtr) == true)
 1094              		.loc 1 121 0
 1095 0118 002B     		cmp	r3, #0
 1096 011a BAD1     		bne	.L110
 1097              	.LVL103:
 1098              	.LBB662:
 1099              	.LBB627:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 1100              		.loc 11 287 0
 1101 011c 7368     		ldr	r3, [r6, #4]
 1102 011e 03B3     		cbz	r3, .L111
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 1103              		.loc 11 290 0
 1104 0120 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 1105              		.loc 11 291 0
 1106 0122 3046     		mov	r0, r6
 1107 0124 1F49     		ldr	r1, .L113+20
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 1108              		.loc 11 290 0
 1109 0126 BBD1     		bne	.L95
 1110              	.LVL104:
 1111              	.L104:
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 1112              		.loc 11 291 0
 1113 0128 194B     		ldr	r3, .L113
 1114 012a 9847     		blx	r3
 1115              	.LVL105:
 1116 012c BAE7     		b	.L92
 1117              	.LVL106:
 1118              	.L107:
 1119              	.LBE627:
 1120              	.LBE662:
 1121              	.LBB663:
 1122              	.LBB641:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 1123              		.loc 11 287 0
 1124 012e 002B     		cmp	r3, #0
 1125 0130 20D0     		beq	.L112
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 1126              		.loc 11 290 0
 1127 0132 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 1128              		.loc 11 291 0
 1129 0134 3046     		mov	r0, r6
 1130 0136 1C49     		ldr	r1, .L113+24
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 1131              		.loc 11 290 0
 1132 0138 D7D1     		bne	.L86
 1133              	.LVL107:
 1134              	.L103:
 1135              	.LBE641:
 1136              	.LBE663:
 1137              	.LBB664:
 1138              	.LBB647:
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 1139              		.loc 11 291 0
 1140 013a 154B     		ldr	r3, .L113
 1141 013c 9847     		blx	r3
 1142              	.LVL108:
 1143 013e D6E7     		b	.L83
 1144              	.LVL109:
 1145              	.L109:
 1146              	.LBE647:
 1147              	.LBE664:
 1148              	.LBB665:
 1149              	.LBB654:
 1150              	.LBB651:
 1151              	.LBB652:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 1152              		.loc 11 288 0
 1153 0140 3068     		ldr	r0, [r6, #0]
 1154              	.LVL110:
 1155 0142 0368     		ldr	r3, [r0, #0]
 1156 0144 DB68     		ldr	r3, [r3, #12]
 1157 0146 9847     		blx	r3
 1158              	.LVL111:
 1159 0148 DCE7     		b	.L88
 1160              	.LVL112:
 1161              	.L108:
 1162              	.LBE652:
 1163              	.LBE651:
 1164              	.LBE654:
 1165              	.LBE665:
 1166              	.LBB666:
 1167              	.LBB648:
 1168              	.LBB645:
 1169              	.LBB646:
 1170 014a 3068     		ldr	r0, [r6, #0]
 1171 014c 1449     		ldr	r1, .L113+16
 1172 014e 0368     		ldr	r3, [r0, #0]
 1173 0150 DB68     		ldr	r3, [r3, #12]
 1174 0152 9847     		blx	r3
 1175              	.LVL113:
 1176 0154 CBE7     		b	.L83
 1177              	.LVL114:
 1178              	.L106:
 1179              	.LBE646:
 1180              	.LBE645:
 1181              	.LBE648:
 1182              	.LBE666:
 1183              	.LBB667:
 1184              	.LBB622:
 1185              	.LBB620:
 1186              	.LBB621:
 1187 0156 3068     		ldr	r0, [r6, #0]
 1188 0158 1049     		ldr	r1, .L113+12
 1189 015a 0368     		ldr	r3, [r0, #0]
 1190 015c DB68     		ldr	r3, [r3, #12]
 1191 015e 9847     		blx	r3
 1192              	.LVL115:
 1193 0160 A0E7     		b	.L92
 1194              	.LVL116:
 1195              	.L111:
 1196              	.LBE621:
 1197              	.LBE620:
 1198              	.LBE622:
 1199              	.LBE667:
 1200              	.LBB668:
 1201              	.LBB628:
 1202              	.LBB625:
 1203              	.LBB626:
 1204 0162 3068     		ldr	r0, [r6, #0]
 1205 0164 0F49     		ldr	r1, .L113+20
 1206 0166 0368     		ldr	r3, [r0, #0]
 1207 0168 DB68     		ldr	r3, [r3, #12]
 1208 016a 9847     		blx	r3
 1209              	.LVL117:
 1210 016c 9AE7     		b	.L92
 1211              	.LVL118:
 1212              	.L70:
 1213              	.LBE626:
 1214              	.LBE625:
 1215              	.LBE628:
 1216              	.LBE668:
 1217              	.LBE674:
 133:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** }
 1218              		.loc 1 133 0
 1219 016e 03B0     		add	sp, sp, #12
 1220 0170 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 1221              	.LVL119:
 1222              	.L112:
 1223              	.LBB675:
 1224              	.LBB669:
 1225              	.LBB642:
 1226              	.LBB639:
 1227              	.LBB640:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 1228              		.loc 11 288 0
 1229 0174 3068     		ldr	r0, [r6, #0]
 1230 0176 0C49     		ldr	r1, .L113+24
 1231 0178 0368     		ldr	r3, [r0, #0]
 1232 017a DB68     		ldr	r3, [r3, #12]
 1233 017c 9847     		blx	r3
 1234              	.LVL120:
 1235 017e B6E7     		b	.L83
 1236              	.LVL121:
 1237              	.L105:
 1238              	.LBE640:
 1239              	.LBE639:
 1240              	.LBE642:
 1241              	.LBE669:
 1242              	.LBB670:
 1243              	.LBB603:
 1244              	.LBB600:
 1245              	.LBB601:
 1246 0180 6068     		ldr	r0, [r4, #4]
 1247 0182 0368     		ldr	r3, [r0, #0]
 1248 0184 DB68     		ldr	r3, [r3, #12]
 1249 0186 9847     		blx	r3
 1250              	.LVL122:
 1251 0188 55E7     		b	.L72
 1252              	.LVL123:
 1253              	.L97:
 1254              	.LBE601:
 1255              	.LBE600:
 1256              	.LBE603:
 1257              	.LBE670:
 1258              	.LBB671:
 1259              	.LBB614:
 1260              	.LBB613:
  66:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	std::size_t count = 0;
 1261              		.loc 2 66 0
 1262 018a AA46     		mov	sl, r5
 1263 018c 6BE7     		b	.L74
 1264              	.L114:
 1265 018e 00BF     		.align	2
 1266              	.L113:
 1267 0190 00000000 		.word	_ZN4xpcc8IOStream8writeBinEPKc
 1268 0194 00000000 		.word	_ZN4xpcc8IOStream8writeHexEPKc
 1269 0198 00000000 		.word	_ZN4xpcc14GraphicDisplay8drawLineEssss
 1270 019c 08000000 		.word	.LC2
 1271 01a0 04000000 		.word	.LC1
 1272 01a4 10000000 		.word	.LC3
 1273 01a8 00000000 		.word	.LC0
 1274 01ac 00000000 		.word	_ZN4xpcc14ScrollableText7getTextEv
 1275              	.LBE613:
 1276              	.LBE614:
 1277              	.LBE671:
 1278              	.LBE675:
 1279              		.cfi_endproc
 1280              	.LFE1386:
 1282              		.section	.text._ZN4xpcc10ChoiceMenuD2Ev,"axG",%progbits,_ZN4xpcc10ChoiceMenuD5Ev,comdat
 1283              		.align	2
 1284              		.weak	_ZN4xpcc10ChoiceMenuD2Ev
 1285              		.thumb
 1286              		.thumb_func
 1288              	_ZN4xpcc10ChoiceMenuD2Ev:
 1289              	.LFB1469:
 1290              		.file 13 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.hpp"
   1:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.hpp **** #ifndef CHOICE_MENU_HPP
   2:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.hpp **** #define CHOICE_MENU_HPP
   3:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.hpp **** #include "abstract_menu.hpp"
   4:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.hpp **** #include "scrollable_text.hpp"
   5:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.hpp **** #include "choice_menu_entry.hpp"
   6:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.hpp **** #include <xpcc/container/doubly_linked_list.hpp>
   7:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.hpp **** #include <xpcc/workflow/periodic_timer.hpp>
   8:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.hpp **** 
   9:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.hpp **** namespace xpcc{
  10:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.hpp **** 
  11:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.hpp **** 	 /**
  12:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.hpp **** 	 * @brief The ChoiceMenu class provides a simmliar list like the Standard Menu.
  13:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.hpp **** 	 *        In the ChoiceMenu each entry is associated with a boolean variable,
  14:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.hpp **** 	 *        which can be changed by pressing the OK Button.
  15:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.hpp **** 	 *
  16:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.hpp **** 	 *        Controls:
  17:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.hpp **** 	 *        DOWN - select next entry
  18:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.hpp **** 	 *        UP  -  select previous entry
  19:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.hpp **** 	 *        OK - toogle boolean value of selected entry
  20:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.hpp **** 	 *        LEFT - remove screen from stack
  21:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.hpp **** 	 *        RIGHT - put next screen on stack
  22:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.hpp **** 	 *
  23:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.hpp **** 	 *    \author Thorsten Lajewski
  24:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.hpp **** 	 *    \ingroup display_menu
  25:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.hpp **** 	 *
  26:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.hpp **** 	 */
  27:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.hpp **** 	class  ChoiceMenu: public AbstractMenu
 1291              		.loc 13 27 0
 1292              		.cfi_startproc
 1293              		@ args = 0, pretend = 0, frame = 0
 1294              		@ frame_needed = 0, uses_anonymous_args = 0
 1295              	.LVL124:
 1296 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1297              	.LCFI7:
 1298              		.cfi_def_cfa_offset 24
 1299              		.cfi_offset 4, -24
 1300              		.cfi_offset 5, -20
 1301              		.cfi_offset 6, -16
 1302              		.cfi_offset 7, -12
 1303              		.cfi_offset 8, -8
 1304              		.cfi_offset 14, -4
 1305              	.LBB692:
 1306              		.loc 13 27 0
 1307 0004 0D4B     		ldr	r3, .L122
 1308              	.LBB693:
 1309              	.LBB694:
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	while (this->front != 0)
 1310              		.loc 2 45 0
 1311 0006 C46A     		ldr	r4, [r0, #44]
 1312              	.LBE694:
 1313              	.LBE693:
 1314              		.loc 13 27 0
 1315 0008 0546     		mov	r5, r0
 1316              	.LBE692:
 1317 000a 8046     		mov	r8, r0
 1318              	.LBB708:
 1319 000c 45F8283B 		str	r3, [r5], #40
 1320              	.LVL125:
 1321              	.LBB705:
 1322              	.LBB704:
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	while (this->front != 0)
 1323              		.loc 2 45 0
 1324 0010 54B1     		cbz	r4, .L118
 1325 0012 0B4F     		ldr	r7, .L122+4
 1326 0014 0B4E     		ldr	r6, .L122+8
 1327              	.LVL126:
 1328              	.L117:
 1329              	.LBB695:
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 		this->front = this->front->next;
 1330              		.loc 2 48 0
 1331 0016 236A     		ldr	r3, [r4, #32]
 1332              	.LBB696:
 1333              	.LBB697:
 1334              	.LBB698:
 1335              		.file 14 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu_entry.hpp"
   1:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu_entry.hpp **** #ifndef CHOICE_MENU_ENTRY_HPP
   2:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu_entry.hpp **** #define CHOICE_MENU_ENTRY_HPP
   3:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu_entry.hpp **** 
   4:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu_entry.hpp **** 
   5:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu_entry.hpp **** // coding: utf-8
   6:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu_entry.hpp **** // ----------------------------------------------------------------------------
   7:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu_entry.hpp **** /* Copyright (c) 2011, Roboterclub Aachen e.V.
   8:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu_entry.hpp ****  * All rights reserved.
   9:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu_entry.hpp ****  *
  10:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu_entry.hpp ****  * Redistribution and use in source and binary forms, with or without
  11:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu_entry.hpp ****  * modification, are permitted provided that the following conditions are met:
  12:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu_entry.hpp ****  *
  13:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu_entry.hpp ****  *     * Redistributions of source code must retain the above copyright
  14:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu_entry.hpp ****  *       notice, this list of conditions and the following disclaimer.
  15:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu_entry.hpp ****  *     * Redistributions in binary form must reproduce the above copyright
  16:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu_entry.hpp ****  *       notice, this list of conditions and the following disclaimer in the
  17:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu_entry.hpp ****  *       documentation and/or other materials provided with the distribution.
  18:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu_entry.hpp ****  *     * Neither the name of the Roboterclub Aachen e.V. nor the
  19:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu_entry.hpp ****  *       names of its contributors may be used to endorse or promote products
  20:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu_entry.hpp ****  *       derived from this software without specific prior written permission.
  21:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu_entry.hpp ****  *
  22:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu_entry.hpp ****  * THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
  23:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu_entry.hpp ****  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  24:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu_entry.hpp ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu_entry.hpp ****  * DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
  26:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu_entry.hpp ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  27:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu_entry.hpp ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu_entry.hpp ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  29:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu_entry.hpp ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  30:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu_entry.hpp ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  31:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu_entry.hpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu_entry.hpp ****  */
  33:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu_entry.hpp **** // ----------------------------------------------------------------------------
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu_entry.hpp **** 
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu_entry.hpp **** #ifndef XPCC__CHOICE_MENU_ENTRY
  36:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu_entry.hpp **** #define XPCC__CHOICE_MENU_ENTRY
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu_entry.hpp **** 
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu_entry.hpp **** #include <stdint.h>
  39:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu_entry.hpp **** #include "scrollable_text.hpp"
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu_entry.hpp **** 
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu_entry.hpp **** 
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu_entry.hpp **** namespace xpcc
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu_entry.hpp **** {
  44:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu_entry.hpp **** 	class ChoiceMenuEntry
 1336              		.loc 14 44 0
 1337 0018 2046     		mov	r0, r4
 1338              	.LBE698:
 1339              	.LBE697:
 1340              	.LBE696:
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 		this->front = this->front->next;
 1341              		.loc 2 48 0
 1342 001a 6B60     		str	r3, [r5, #4]
 1343              	.LVL127:
 1344              	.LBB701:
 1345              	.LBB700:
 1346              	.LBB699:
 1347              		.loc 14 44 0
 1348 001c B847     		blx	r7
 1349              	.LVL128:
 1350              	.LBE699:
 1351              	.LBE700:
 1352              	.LBE701:
 1353              	.LBB702:
 1354              	.LBB703:
 1355              		.file 15 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp"
   1:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** // coding: utf-8
   2:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** // ----------------------------------------------------------------------------
   3:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** /* Copyright (c) 2009, Roboterclub Aachen e.V.
   4:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  * All rights reserved.
   5:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  *
   6:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  * Redistribution and use in source and binary forms, with or without
   7:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  * modification, are permitted provided that the following conditions are met:
   8:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  * 
   9:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  *     * Redistributions of source code must retain the above copyright
  10:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  *       notice, this list of conditions and the following disclaimer.
  11:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  *     * Redistributions in binary form must reproduce the above copyright
  12:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  *       notice, this list of conditions and the following disclaimer in the
  13:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  *       documentation and/or other materials provided with the distribution.
  14:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  *     * Neither the name of the Roboterclub Aachen e.V. nor the
  15:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  *       names of its contributors may be used to endorse or promote products
  16:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  *       derived from this software without specific prior written permission.
  17:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  *
  18:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  * THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
  19:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  20:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  21:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  * DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
  22:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  23:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  24:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  25:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  26:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  27:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  28:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  */
  29:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** // ----------------------------------------------------------------------------
  30:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 
  31:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** #ifndef XPCC_ALLOCATOR__DYNAMIC_HPP
  32:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** #define XPCC_ALLOCATOR__DYNAMIC_HPP
  33:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** #include "allocator_base.hpp"
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 
  36:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** namespace xpcc
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** {
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 	namespace allocator
  39:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 	{
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 		/**
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 		 * \brief	Dynamic memory allocator
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 		 * 
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 		 * Wrapper for the underlying memory management. No additional
  44:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 		 * management is done.
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 		 * 
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 		 * \ingroup	allocator
  47:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 		 * \author	Fabian Greif
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 		 */
  49:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 		template <typename T>
  50:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 		class Dynamic : public AllocatorBase<T>
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 		{
  52:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 		public:
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			template <typename U>
  54:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			struct rebind
  55:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			{
  56:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 				typedef Dynamic<U> other;
  57:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			};
  58:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			
  59:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 		public:
  60:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			Dynamic() :
  61:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 				AllocatorBase<T>()
  62:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			{
  63:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			}
  64:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			Dynamic(const Dynamic& other) :
  66:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 				AllocatorBase<T>(other)
  67:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			{
  68:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			}
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			template <typename U>
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			Dynamic(const Dynamic<U>&) :
  72:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 				AllocatorBase<T>()
  73:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			{
  74:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			}
  75:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			
  76:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			T*
  77:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			allocate(size_t n)
  78:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			{
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 				// allocate the memory without calling the constructor
  80:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 				// of the associated data-type.
  81:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 				return static_cast<T*>(::operator new(n * sizeof(T)));
  82:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			}
  83:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			
  84:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			void
  85:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			deallocate(T* p)
  86:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			{
  87:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 				// it is important to use this form here, otherwise the
  88:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 				// destructor of p will be called which is unwanted here.
  89:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 				// The destructor can be called with the destroy()-method.
  90:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 				::operator delete(p);
 1356              		.loc 15 90 0
 1357 001e 2046     		mov	r0, r4
 1358 0020 B047     		blx	r6
 1359              	.LVL129:
 1360              	.LBE703:
 1361              	.LBE702:
 1362              	.LBE695:
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	while (this->front != 0)
 1363              		.loc 2 45 0
 1364 0022 6C68     		ldr	r4, [r5, #4]
 1365              	.LVL130:
 1366 0024 002C     		cmp	r4, #0
 1367 0026 F6D1     		bne	.L117
 1368              	.L118:
 1369              	.LVL131:
 1370              	.LBE704:
 1371              	.LBE705:
 1372              	.LBB706:
 1373              	.LBB707:
 1374              		.loc 5 47 0
 1375 0028 074B     		ldr	r3, .L122+12
 1376 002a 4046     		mov	r0, r8
 1377 002c C8F80030 		str	r3, [r8, #0]
 1378 0030 064B     		ldr	r3, .L122+16
 1379 0032 9847     		blx	r3
 1380              	.LVL132:
 1381              	.LBE707:
 1382              	.LBE706:
 1383              	.LBE708:
 1384              		.loc 13 27 0
 1385 0034 4046     		mov	r0, r8
 1386 0036 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1387              	.L123:
 1388 003a 00BF     		.align	2
 1389              	.L122:
 1390 003c 08000000 		.word	.LANCHOR0+8
 1391 0040 00000000 		.word	_ZN4xpcc14ScrollableTextD1Ev
 1392 0044 00000000 		.word	_ZdlPv
 1393 0048 08000000 		.word	_ZTVN4xpcc12AbstractMenuE+8
 1394 004c 00000000 		.word	_ZN4xpcc12AbstractViewD2Ev
 1395              		.cfi_endproc
 1396              	.LFE1469:
 1398              		.weak	_ZN4xpcc10ChoiceMenuD1Ev
 1399              		.thumb_set _ZN4xpcc10ChoiceMenuD1Ev,_ZN4xpcc10ChoiceMenuD2Ev
 1400              		.section	.text._ZN4xpcc10ChoiceMenuD0Ev,"axG",%progbits,_ZN4xpcc10ChoiceMenuD0Ev,comdat
 1401              		.align	2
 1402              		.weak	_ZN4xpcc10ChoiceMenuD0Ev
 1403              		.thumb
 1404              		.thumb_func
 1406              	_ZN4xpcc10ChoiceMenuD0Ev:
 1407              	.LFB1471:
 1408              		.loc 13 27 0
 1409              		.cfi_startproc
 1410              		@ args = 0, pretend = 0, frame = 0
 1411              		@ frame_needed = 0, uses_anonymous_args = 0
 1412              	.LVL133:
 1413 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1414              	.LCFI8:
 1415              		.cfi_def_cfa_offset 24
 1416              		.cfi_offset 4, -24
 1417              		.cfi_offset 5, -20
 1418              		.cfi_offset 6, -16
 1419              		.cfi_offset 7, -12
 1420              		.cfi_offset 8, -8
 1421              		.cfi_offset 14, -4
 1422              	.LBB726:
 1423              	.LBB727:
 1424              		.loc 13 27 0
 1425 0004 0E4B     		ldr	r3, .L131
 1426              	.LBB728:
 1427              	.LBB729:
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	while (this->front != 0)
 1428              		.loc 2 45 0
 1429 0006 C46A     		ldr	r4, [r0, #44]
 1430 0008 0E4E     		ldr	r6, .L131+4
 1431              	.LBE729:
 1432              	.LBE728:
 1433              		.loc 13 27 0
 1434 000a 0546     		mov	r5, r0
 1435              	.LBE727:
 1436              	.LBE726:
 1437 000c 8046     		mov	r8, r0
 1438              	.LVL134:
 1439              	.LBB744:
 1440              	.LBB743:
 1441 000e 45F8283B 		str	r3, [r5], #40
 1442              	.LVL135:
 1443              	.LBB740:
 1444              	.LBB739:
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	while (this->front != 0)
 1445              		.loc 2 45 0
 1446 0012 4CB1     		cbz	r4, .L127
 1447 0014 0C4F     		ldr	r7, .L131+8
 1448              	.LVL136:
 1449              	.L126:
 1450              	.LBB730:
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 		this->front = this->front->next;
 1451              		.loc 2 48 0
 1452 0016 236A     		ldr	r3, [r4, #32]
 1453              	.LBB731:
 1454              	.LBB732:
 1455              	.LBB733:
 1456              		.loc 14 44 0
 1457 0018 2046     		mov	r0, r4
 1458              	.LBE733:
 1459              	.LBE732:
 1460              	.LBE731:
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 		this->front = this->front->next;
 1461              		.loc 2 48 0
 1462 001a 6B60     		str	r3, [r5, #4]
 1463              	.LVL137:
 1464              	.LBB736:
 1465              	.LBB735:
 1466              	.LBB734:
 1467              		.loc 14 44 0
 1468 001c B847     		blx	r7
 1469              	.LVL138:
 1470              	.LBE734:
 1471              	.LBE735:
 1472              	.LBE736:
 1473              	.LBB737:
 1474              	.LBB738:
 1475              		.loc 15 90 0
 1476 001e 2046     		mov	r0, r4
 1477 0020 B047     		blx	r6
 1478              	.LVL139:
 1479              	.LBE738:
 1480              	.LBE737:
 1481              	.LBE730:
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	while (this->front != 0)
 1482              		.loc 2 45 0
 1483 0022 6C68     		ldr	r4, [r5, #4]
 1484              	.LVL140:
 1485 0024 002C     		cmp	r4, #0
 1486 0026 F6D1     		bne	.L126
 1487              	.L127:
 1488              	.LVL141:
 1489              	.LBE739:
 1490              	.LBE740:
 1491              	.LBB741:
 1492              	.LBB742:
 1493              		.loc 5 47 0
 1494 0028 084B     		ldr	r3, .L131+12
 1495 002a 4046     		mov	r0, r8
 1496 002c C8F80030 		str	r3, [r8, #0]
 1497 0030 074B     		ldr	r3, .L131+16
 1498 0032 9847     		blx	r3
 1499              	.LVL142:
 1500              	.LBE742:
 1501              	.LBE741:
 1502              	.LBE743:
 1503              	.LBE744:
 1504              		.loc 13 27 0
 1505 0034 4046     		mov	r0, r8
 1506 0036 B047     		blx	r6
 1507              	.LVL143:
 1508 0038 4046     		mov	r0, r8
 1509 003a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1510              	.L132:
 1511 003e 00BF     		.align	2
 1512              	.L131:
 1513 0040 08000000 		.word	.LANCHOR0+8
 1514 0044 00000000 		.word	_ZdlPv
 1515 0048 00000000 		.word	_ZN4xpcc14ScrollableTextD1Ev
 1516 004c 08000000 		.word	_ZTVN4xpcc12AbstractMenuE+8
 1517 0050 00000000 		.word	_ZN4xpcc12AbstractViewD2Ev
 1518              		.cfi_endproc
 1519              	.LFE1471:
 1521              		.section	.text._ZN4xpcc10ChoiceMenuC2EPNS_9ViewStackEh,"ax",%progbits
 1522              		.align	2
 1523              		.global	_ZN4xpcc10ChoiceMenuC2EPNS_9ViewStackEh
 1524              		.thumb
 1525              		.thumb_func
 1527              	_ZN4xpcc10ChoiceMenuC2EPNS_9ViewStackEh:
 1528              	.LFB1375:
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** xpcc::ChoiceMenu::ChoiceMenu(xpcc::ViewStack* stack, uint8_t identifier) :
 1529              		.loc 1 34 0
 1530              		.cfi_startproc
 1531              		@ args = 0, pretend = 0, frame = 0
 1532              		@ frame_needed = 0, uses_anonymous_args = 0
 1533              	.LVL144:
 1534 0000 70B5     		push	{r4, r5, r6, lr}
 1535              	.LCFI9:
 1536              		.cfi_def_cfa_offset 16
 1537              		.cfi_offset 4, -16
 1538              		.cfi_offset 5, -12
 1539              		.cfi_offset 6, -8
 1540              		.cfi_offset 14, -4
 1541              	.LBB770:
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	position(0)
 1542              		.loc 1 41 0
 1543 0002 154B     		ldr	r3, .L135
 1544              	.LBE770:
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** xpcc::ChoiceMenu::ChoiceMenu(xpcc::ViewStack* stack, uint8_t identifier) :
 1545              		.loc 1 34 0
 1546 0004 0446     		mov	r4, r0
 1547              	.LBB796:
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	position(0)
 1548              		.loc 1 41 0
 1549 0006 9847     		blx	r3
 1550              	.LVL145:
 1551 0008 144B     		ldr	r3, .L135+4
 1552 000a 4FF4FA75 		mov	r5, #500
 1553 000e 2360     		str	r3, [r4, #0]
 1554 0010 6581     		strh	r5, [r4, #10]	@ movhi
 1555              	.LVL146:
 1556              	.LBB771:
 1557              	.LBB772:
 1558              	.LBB773:
 1559              	.LBB774:
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 	endTime(T::now() + time), state(ACTIVE)
 1560              		.loc 7 43 0
 1561 0012 134B     		ldr	r3, .L135+8
 1562 0014 9847     		blx	r3
 1563              	.LVL147:
 1564              	.LBE774:
 1565              	.LBE773:
 1566              	.LBE772:
 1567              	.LBE771:
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	position(0)
 1568              		.loc 1 41 0
 1569 0016 0023     		movs	r3, #0
 1570              	.LBB786:
 1571              	.LBB787:
 1572              		.loc 9 94 0
 1573 0018 6268     		ldr	r2, [r4, #4]
 1574              	.LBE787:
 1575              	.LBE786:
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	position(0)
 1576              		.loc 1 41 0
 1577 001a 84F82530 		strb	r3, [r4, #37]
 1578 001e 84F82630 		strb	r3, [r4, #38]
 1579              	.LBB789:
 1580              	.LBB788:
 1581              		.loc 9 94 0
 1582 0022 5268     		ldr	r2, [r2, #4]
 1583              	.LBE788:
 1584              	.LBE789:
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	position(0)
 1585              		.loc 1 41 0
 1586 0024 0F49     		ldr	r1, .L135+12
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	this->maximalDrawnEntrys = (getViewStack()->getDisplay().getHeight()- 16) / 8 ;
 1587              		.loc 1 43 0
 1588 0026 1668     		ldr	r6, [r2, #0]
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	position(0)
 1589              		.loc 1 41 0
 1590 0028 2162     		str	r1, [r4, #32]
 1591              	.LBB790:
 1592              	.LBB782:
 1593              	.LBB779:
 1594              	.LBB777:
 1595              	.LBB775:
 1596              	.LBB776:
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 			return Timestamp(time + other.time);
 1597              		.loc 8 70 0
 1598 002a 4019     		adds	r0, r0, r5
 1599              	.LVL148:
 1600              	.LBE776:
 1601              	.LBE775:
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 	endTime(T::now() + time), state(ACTIVE)
 1602              		.loc 7 43 0
 1603 002c 0121     		movs	r1, #1
 1604              	.LBE777:
 1605              	.LBE779:
 1606              	.LBE782:
 1607              	.LBE790:
 1608              	.LBB791:
 1609              	.LBB792:
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	nodeAllocator(allocator), front(0), back(0)
 1610              		.loc 2 38 0
 1611 002e E362     		str	r3, [r4, #44]
 1612 0030 2363     		str	r3, [r4, #48]
 1613              	.LBE792:
 1614              	.LBE791:
 1615              	.LBB793:
 1616              	.LBB783:
 1617              	.LBB780:
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 	endTime(T::now() + time), state(ACTIVE)
 1618              		.loc 7 43 0
 1619 0032 E060     		str	r0, [r4, #12]
 1620              	.LBE780:
 1621              	.LBE783:
 1622              	.LBE793:
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	position(0)
 1623              		.loc 1 41 0
 1624 0034 2377     		strb	r3, [r4, #28]
 1625              	.LBB794:
 1626              	.LBB784:
 1627              	.LBB781:
 1628              	.LBB778:
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 	endTime(T::now() + time), state(ACTIVE)
 1629              		.loc 7 43 0
 1630 0036 2174     		strb	r1, [r4, #16]
 1631              	.LBE778:
 1632              	.LBE781:
 1633              	.LBE784:
 1634              	.LBE794:
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	this->maximalDrawnEntrys = (getViewStack()->getDisplay().getHeight()- 16) / 8 ;
 1635              		.loc 1 43 0
 1636 0038 F368     		ldr	r3, [r6, #12]
 1637              	.LBB795:
 1638              	.LBB785:
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** 	timer(interval), interval(interval), isRunning_(true)
 1639              		.loc 6 37 0
 1640 003a 6561     		str	r5, [r4, #20]
 1641 003c 2176     		strb	r1, [r4, #24]
 1642              	.LVL149:
 1643              	.LBE785:
 1644              	.LBE795:
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	this->maximalDrawnEntrys = (getViewStack()->getDisplay().getHeight()- 16) / 8 ;
 1645              		.loc 1 43 0
 1646 003e 1046     		mov	r0, r2
 1647              	.LVL150:
 1648 0040 9847     		blx	r3
 1649              	.LVL151:
 1650 0042 B0F11003 		subs	r3, r0, #16
 1651 0046 48BF     		it	mi
 1652 0048 A0F10903 		submi	r3, r0, #9
 1653 004c DB10     		asrs	r3, r3, #3
 1654 004e 84F82430 		strb	r3, [r4, #36]
 1655              	.LBE796:
  44:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** }
 1656              		.loc 1 44 0
 1657 0052 2046     		mov	r0, r4
 1658 0054 70BD     		pop	{r4, r5, r6, pc}
 1659              	.L136:
 1660 0056 00BF     		.align	2
 1661              	.L135:
 1662 0058 00000000 		.word	_ZN4xpcc12AbstractMenuC2EPNS_9ViewStackEh
 1663 005c 08000000 		.word	.LANCHOR0+8
 1664 0060 00000000 		.word	_ZN4xpcc5Clock3nowEv
 1665 0064 18000000 		.word	.LC4
 1666              		.cfi_endproc
 1667              	.LFE1375:
 1669              		.global	_ZN4xpcc10ChoiceMenuC1EPNS_9ViewStackEh
 1670              		.thumb_set _ZN4xpcc10ChoiceMenuC1EPNS_9ViewStackEh,_ZN4xpcc10ChoiceMenuC2EPNS_9ViewStackEh
 1671              		.section	.text._ZN4xpcc10ChoiceMenuC2EPNS_9ViewStackEhPKc,"ax",%progbits
 1672              		.align	2
 1673              		.global	_ZN4xpcc10ChoiceMenuC2EPNS_9ViewStackEhPKc
 1674              		.thumb
 1675              		.thumb_func
 1677              	_ZN4xpcc10ChoiceMenuC2EPNS_9ViewStackEhPKc:
 1678              	.LFB1378:
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** xpcc::ChoiceMenu::ChoiceMenu(xpcc::ViewStack* stack, uint8_t identifier, const char* title) :
 1679              		.loc 1 46 0
 1680              		.cfi_startproc
 1681              		@ args = 0, pretend = 0, frame = 0
 1682              		@ frame_needed = 0, uses_anonymous_args = 0
 1683              	.LVL152:
 1684 0000 70B5     		push	{r4, r5, r6, lr}
 1685              	.LCFI10:
 1686              		.cfi_def_cfa_offset 16
 1687              		.cfi_offset 4, -16
 1688              		.cfi_offset 5, -12
 1689              		.cfi_offset 6, -8
 1690              		.cfi_offset 14, -4
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** xpcc::ChoiceMenu::ChoiceMenu(xpcc::ViewStack* stack, uint8_t identifier, const char* title) :
 1691              		.loc 1 46 0
 1692 0002 1E46     		mov	r6, r3
 1693              	.LBB822:
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	position(0)
 1694              		.loc 1 53 0
 1695 0004 144B     		ldr	r3, .L139
 1696              	.LVL153:
 1697              	.LBE822:
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** xpcc::ChoiceMenu::ChoiceMenu(xpcc::ViewStack* stack, uint8_t identifier, const char* title) :
 1698              		.loc 1 46 0
 1699 0006 0446     		mov	r4, r0
 1700              	.LBB845:
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	position(0)
 1701              		.loc 1 53 0
 1702 0008 9847     		blx	r3
 1703              	.LVL154:
 1704 000a 144B     		ldr	r3, .L139+4
 1705 000c 4FF4FA75 		mov	r5, #500
 1706 0010 2360     		str	r3, [r4, #0]
 1707 0012 6581     		strh	r5, [r4, #10]	@ movhi
 1708              	.LVL155:
 1709              	.LBB823:
 1710              	.LBB824:
 1711              	.LBB825:
 1712              	.LBB826:
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 	endTime(T::now() + time), state(ACTIVE)
 1713              		.loc 7 43 0
 1714 0014 124B     		ldr	r3, .L139+8
 1715 0016 9847     		blx	r3
 1716              	.LVL156:
 1717              	.LBE826:
 1718              	.LBE825:
 1719              	.LBE824:
 1720              	.LBE823:
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	position(0)
 1721              		.loc 1 53 0
 1722 0018 0022     		movs	r2, #0
 1723              	.LBB835:
 1724              	.LBB836:
 1725              		.loc 9 94 0
 1726 001a 6168     		ldr	r1, [r4, #4]
 1727              	.LBE836:
 1728              	.LBE835:
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	position(0)
 1729              		.loc 1 53 0
 1730 001c 84F82520 		strb	r2, [r4, #37]
 1731 0020 84F82620 		strb	r2, [r4, #38]
 1732              	.LBB838:
 1733              	.LBB837:
 1734              		.loc 9 94 0
 1735 0024 4968     		ldr	r1, [r1, #4]
 1736              	.LBE837:
 1737              	.LBE838:
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	position(0)
 1738              		.loc 1 53 0
 1739 0026 2662     		str	r6, [r4, #32]
  55:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	this->maximalDrawnEntrys = (getViewStack()->getDisplay().getHeight()- 16) / 8 ;
 1740              		.loc 1 55 0
 1741 0028 0E68     		ldr	r6, [r1, #0]
 1742              	.LVL157:
 1743              	.LBB839:
 1744              	.LBB840:
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	nodeAllocator(allocator), front(0), back(0)
 1745              		.loc 2 38 0
 1746 002a E262     		str	r2, [r4, #44]
 1747              	.LBE840:
 1748              	.LBE839:
 1749              	.LBB842:
 1750              	.LBB833:
 1751              	.LBB831:
 1752              	.LBB829:
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 	endTime(T::now() + time), state(ACTIVE)
 1753              		.loc 7 43 0
 1754 002c 0123     		movs	r3, #1
 1755              	.LBB827:
 1756              	.LBB828:
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 			return Timestamp(time + other.time);
 1757              		.loc 8 70 0
 1758 002e 4019     		adds	r0, r0, r5
 1759              	.LVL158:
 1760              	.LBE828:
 1761              	.LBE827:
 1762              	.LBE829:
 1763              	.LBE831:
 1764              	.LBE833:
 1765              	.LBE842:
 1766              	.LBB843:
 1767              	.LBB841:
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	nodeAllocator(allocator), front(0), back(0)
 1768              		.loc 2 38 0
 1769 0030 2263     		str	r2, [r4, #48]
 1770              	.LBE841:
 1771              	.LBE843:
 1772              	.LBB844:
 1773              	.LBB834:
 1774              	.LBB832:
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout_impl.hpp **** 	endTime(T::now() + time), state(ACTIVE)
 1775              		.loc 7 43 0
 1776 0032 E060     		str	r0, [r4, #12]
 1777              	.LBB830:
 1778 0034 2374     		strb	r3, [r4, #16]
 1779              	.LBE830:
 1780              	.LBE832:
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer_impl.hpp **** 	timer(interval), interval(interval), isRunning_(true)
 1781              		.loc 6 37 0
 1782 0036 2376     		strb	r3, [r4, #24]
 1783              	.LVL159:
 1784 0038 6561     		str	r5, [r4, #20]
 1785              	.LBE834:
 1786              	.LBE844:
  55:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	this->maximalDrawnEntrys = (getViewStack()->getDisplay().getHeight()- 16) / 8 ;
 1787              		.loc 1 55 0
 1788 003a F368     		ldr	r3, [r6, #12]
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	position(0)
 1789              		.loc 1 53 0
 1790 003c 2277     		strb	r2, [r4, #28]
  55:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	this->maximalDrawnEntrys = (getViewStack()->getDisplay().getHeight()- 16) / 8 ;
 1791              		.loc 1 55 0
 1792 003e 0846     		mov	r0, r1
 1793              	.LVL160:
 1794 0040 9847     		blx	r3
 1795              	.LVL161:
 1796 0042 B0F11003 		subs	r3, r0, #16
 1797 0046 48BF     		it	mi
 1798 0048 A0F10903 		submi	r3, r0, #9
 1799 004c DB10     		asrs	r3, r3, #3
 1800 004e 84F82430 		strb	r3, [r4, #36]
 1801              	.LBE845:
  56:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** }
 1802              		.loc 1 56 0
 1803 0052 2046     		mov	r0, r4
 1804 0054 70BD     		pop	{r4, r5, r6, pc}
 1805              	.L140:
 1806 0056 00BF     		.align	2
 1807              	.L139:
 1808 0058 00000000 		.word	_ZN4xpcc12AbstractMenuC2EPNS_9ViewStackEh
 1809 005c 08000000 		.word	.LANCHOR0+8
 1810 0060 00000000 		.word	_ZN4xpcc5Clock3nowEv
 1811              		.cfi_endproc
 1812              	.LFE1378:
 1814              		.global	_ZN4xpcc10ChoiceMenuC1EPNS_9ViewStackEhPKc
 1815              		.thumb_set _ZN4xpcc10ChoiceMenuC1EPNS_9ViewStackEhPKc,_ZN4xpcc10ChoiceMenuC2EPNS_9ViewStackEhPKc
 1816              		.section	.text._ZN4xpcc10ChoiceMenu8addEntryEPKcPbb,"ax",%progbits
 1817              		.align	2
 1818              		.global	_ZN4xpcc10ChoiceMenu8addEntryEPKcPbb
 1819              		.thumb
 1820              		.thumb_func
 1822              	_ZN4xpcc10ChoiceMenu8addEntryEPKcPbb:
 1823              	.LFB1380:
  60:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** {
 1824              		.loc 1 60 0
 1825              		.cfi_startproc
 1826              		@ args = 0, pretend = 0, frame = 40
 1827              		@ frame_needed = 0, uses_anonymous_args = 0
 1828              	.LVL162:
 1829 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1830              	.LCFI11:
 1831              		.cfi_def_cfa_offset 24
 1832              		.cfi_offset 4, -24
 1833              		.cfi_offset 5, -20
 1834              		.cfi_offset 6, -16
 1835              		.cfi_offset 7, -12
 1836              		.cfi_offset 8, -8
 1837              		.cfi_offset 14, -4
 1838              	.LBB864:
  61:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	static uint16_t availableSpace = (getViewStack()->getDisplay().getWidth()-16)/6-6;
 1839              		.loc 1 61 0
 1840 0004 1F4C     		ldr	r4, .L151
 1841 0006 2668     		ldr	r6, [r4, #0]
 1842              	.LBE864:
  60:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** {
 1843              		.loc 1 60 0
 1844 0008 1F46     		mov	r7, r3
 1845              	.LBB879:
  61:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	static uint16_t availableSpace = (getViewStack()->getDisplay().getWidth()-16)/6-6;
 1846              		.loc 1 61 0
 1847 000a F307     		lsls	r3, r6, #31
 1848              	.LVL163:
 1849              	.LBE879:
  60:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** {
 1850              		.loc 1 60 0
 1851 000c 8CB0     		sub	sp, sp, #48
 1852              	.LCFI12:
 1853              		.cfi_def_cfa_offset 72
  60:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** {
 1854              		.loc 1 60 0
 1855 000e 0546     		mov	r5, r0
 1856 0010 9046     		mov	r8, r2
 1857              	.LBB880:
  61:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	static uint16_t availableSpace = (getViewStack()->getDisplay().getWidth()-16)/6-6;
 1858              		.loc 1 61 0
 1859 0012 20D5     		bpl	.L142
 1860 0014 1C4B     		ldr	r3, .L151+4
 1861 0016 1A88     		ldrh	r2, [r3, #0]
 1862              	.LVL164:
 1863              	.L143:
  62:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	xpcc::ChoiceMenuEntry entry(text, availableSpace, valuePtr, defaultValue);
 1864              		.loc 1 62 0
 1865 0018 4346     		mov	r3, r8
 1866 001a 1C4C     		ldr	r4, .L151+8
 1867 001c 0097     		str	r7, [sp, #0]
 1868 001e 05A8     		add	r0, sp, #20
 1869 0020 A047     		blx	r4
 1870              	.LVL165:
 1871              	.LBB865:
 1872              	.LBB866:
 1873              	.LBB867:
 1874              	.LBB868:
  81:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 				return static_cast<T*>(::operator new(n * sizeof(T)));
 1875              		.loc 15 81 0
 1876 0022 2420     		movs	r0, #36
 1877 0024 1A4B     		ldr	r3, .L151+12
 1878 0026 9847     		blx	r3
 1879              	.LVL166:
 1880              	.LBE868:
 1881              	.LBE867:
 1882              	.LBB869:
 1883              	.LBB870:
 1884              		.file 16 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp"
   1:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** // coding: utf-8
   2:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** // ----------------------------------------------------------------------------
   3:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** /* Copyright (c) 2009, Roboterclub Aachen e.V.
   4:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp ****  * All rights reserved.
   5:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp ****  *
   6:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp ****  * Redistribution and use in source and binary forms, with or without
   7:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp ****  * modification, are permitted provided that the following conditions are met:
   8:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp ****  * 
   9:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp ****  *     * Redistributions of source code must retain the above copyright
  10:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp ****  *       notice, this list of conditions and the following disclaimer.
  11:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp ****  *     * Redistributions in binary form must reproduce the above copyright
  12:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp ****  *       notice, this list of conditions and the following disclaimer in the
  13:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp ****  *       documentation and/or other materials provided with the distribution.
  14:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp ****  *     * Neither the name of the Roboterclub Aachen e.V. nor the
  15:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp ****  *       names of its contributors may be used to endorse or promote products
  16:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp ****  *       derived from this software without specific prior written permission.
  17:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp ****  *
  18:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp ****  * THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
  19:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp ****  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  20:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  21:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp ****  * DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
  22:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  23:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  24:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  25:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  26:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  27:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  28:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp ****  */
  29:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** // ----------------------------------------------------------------------------
  30:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 
  31:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** #ifndef XPCC_ALLOCATOR__ALLOCATOR_BASE_HPP
  32:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** #define XPCC_ALLOCATOR__ALLOCATOR_BASE_HPP
  33:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** #include <cstddef>
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** #include <new>		// needed for placement new
  36:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** namespace xpcc
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** {
  39:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 	namespace allocator
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 	{
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 		/**
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 		 * \brief	Base class for all allocator types
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 		 * 
  44:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 		 * \internal
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 		 * 
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 		 * \ingroup	allocator
  47:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 		 * \author	Fabian Greif
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 		 */
  49:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 		template <typename T>
  50:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 		class AllocatorBase
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 		{
  52:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 		public:
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 			/**
  54:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 			 * \brief	Construct an object
  55:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 			 * 
  56:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 			 * Constructs an object of type T (the template parameter) on the
  57:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 			 * location pointed by p using its copy constructor to initialize
  58:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 			 * its value to \p value.
  59:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 			 * 
  60:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 			 * Notice that this does not allocate space for the element, it
  61:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 			 * should already be available at p.
  62:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 			 */
  63:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 			static inline void
  64:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 			construct(T* p, const T& value)
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 			{
  66:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 				// placement new
  67:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 				::new((void *) p) T(value);
 1885              		.loc 16 67 0
 1886 0028 0446     		mov	r4, r0
 1887 002a 38B1     		cbz	r0, .L144
 1888              	.LVL167:
 1889              	.LBB871:
 1890              	.LBB872:
 1891              		.loc 14 44 0
 1892 002c 194B     		ldr	r3, .L151+16
 1893 002e 05A9     		add	r1, sp, #20
 1894              	.LVL168:
 1895 0030 9847     		blx	r3
 1896              	.LVL169:
 1897 0032 9DF82C20 		ldrb	r2, [sp, #44]	@ zero_extendqisi2
 1898 0036 0A9B     		ldr	r3, [sp, #40]
 1899 0038 2276     		strb	r2, [r4, #24]
 1900 003a 6361     		str	r3, [r4, #20]
 1901              	.LVL170:
 1902              	.L144:
 1903              	.LBE872:
 1904              	.LBE871:
 1905              	.LBE870:
 1906              	.LBE869:
 109:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	node->previous = this->back;
 1907              		.loc 2 109 0
 1908 003c 2B6B     		ldr	r3, [r5, #48]
 108:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	node->next = 0;
 1909              		.loc 2 108 0
 1910 003e 0022     		movs	r2, #0
 1911 0040 2262     		str	r2, [r4, #32]
 109:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	node->previous = this->back;
 1912              		.loc 2 109 0
 1913 0042 E361     		str	r3, [r4, #28]
 111:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	if (this->back == 0)
 1914              		.loc 2 111 0
 1915 0044 DBB1     		cbz	r3, .L150
 117:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 		this->back->next = node;
 1916              		.loc 2 117 0
 1917 0046 1C62     		str	r4, [r3, #32]
 1918              	.L146:
 119:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 	this->back = node;
 1919              		.loc 2 119 0
 1920 0048 2C63     		str	r4, [r5, #48]
 1921              	.LVL171:
 1922              	.LBE866:
 1923              	.LBE865:
 1924              	.LBB874:
 1925              	.LBB875:
 1926              		.loc 14 44 0
 1927 004a 05A8     		add	r0, sp, #20
 1928              	.LVL172:
 1929 004c 124B     		ldr	r3, .L151+20
 1930 004e 9847     		blx	r3
 1931              	.LVL173:
 1932              	.LBE875:
 1933              	.LBE874:
 1934              	.LBE880:
  64:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** }
 1935              		.loc 1 64 0
 1936 0050 0CB0     		add	sp, sp, #48
 1937 0052 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1938              	.LVL174:
 1939              	.L142:
 1940              	.LBB881:
 1941              	.LBB876:
 1942              	.LBB877:
 1943              		.loc 9 94 0 discriminator 1
 1944 0056 4368     		ldr	r3, [r0, #4]
 1945 0058 5868     		ldr	r0, [r3, #4]
 1946              	.LVL175:
 1947              	.LBE877:
 1948              	.LBE876:
  61:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	static uint16_t availableSpace = (getViewStack()->getDisplay().getWidth()-16)/6-6;
 1949              		.loc 1 61 0 discriminator 1
 1950 005a 0368     		ldr	r3, [r0, #0]
 1951              	.LVL176:
 1952 005c 9B68     		ldr	r3, [r3, #8]
 1953 005e 0391     		str	r1, [sp, #12]
 1954 0060 9847     		blx	r3
 1955              	.LVL177:
 1956 0062 0E4A     		ldr	r2, .L151+24
 1957 0064 0399     		ldr	r1, [sp, #12]
 1958 0066 1038     		subs	r0, r0, #16
 1959 0068 82FB0032 		smull	r3, r2, r2, r0
 1960 006c A2EBE072 		sub	r2, r2, r0, asr #31
 1961 0070 054B     		ldr	r3, .L151+4
 1962 0072 063A     		subs	r2, r2, #6
 1963 0074 92B2     		uxth	r2, r2
 1964 0076 1A80     		strh	r2, [r3, #0]	@ movhi
 1965 0078 0123     		movs	r3, #1
 1966 007a 2360     		str	r3, [r4, #0]
 1967 007c CCE7     		b	.L143
 1968              	.LVL178:
 1969              	.L150:
 1970              	.LBB878:
 1971              	.LBB873:
 114:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list_impl.hpp **** 		this->front = node;
 1972              		.loc 2 114 0
 1973 007e EC62     		str	r4, [r5, #44]
 1974 0080 E2E7     		b	.L146
 1975              	.L152:
 1976 0082 00BF     		.align	2
 1977              	.L151:
 1978 0084 00000000 		.word	.LANCHOR1
 1979 0088 00000000 		.word	.LANCHOR2
 1980 008c 00000000 		.word	_ZN4xpcc15ChoiceMenuEntryC1EPKctPbb
 1981 0090 00000000 		.word	_Znwj
 1982 0094 00000000 		.word	_ZN4xpcc14ScrollableTextC1ERKS0_
 1983 0098 00000000 		.word	_ZN4xpcc14ScrollableTextD1Ev
 1984 009c ABAAAA2A 		.word	715827883
 1985              	.LBE873:
 1986              	.LBE878:
 1987              	.LBE881:
 1988              		.cfi_endproc
 1989              	.LFE1380:
 1991              		.section	.text._ZN4xpcc10ChoiceMenu8setTitleEPKc,"ax",%progbits
 1992              		.align	2
 1993              		.global	_ZN4xpcc10ChoiceMenu8setTitleEPKc
 1994              		.thumb
 1995              		.thumb_func
 1997              	_ZN4xpcc10ChoiceMenu8setTitleEPKc:
 1998              	.LFB1385:
  84:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** {
 1999              		.loc 1 84 0
 2000              		.cfi_startproc
 2001              		@ args = 0, pretend = 0, frame = 0
 2002              		@ frame_needed = 0, uses_anonymous_args = 0
 2003              		@ link register save eliminated.
 2004              	.LVL179:
  85:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/choice_menu.cpp **** 	this->title = text;
 2005              		.loc 1 85 0
 2006 0000 0162     		str	r1, [r0, #32]
 2007 0002 7047     		bx	lr
 2008              		.cfi_endproc
 2009              	.LFE1385:
 2011              		.global	_ZTVN4xpcc10ChoiceMenuE
 2012              		.weak	_ZTVN4xpcc12AbstractMenuE
 2013              		.section	.rodata._ZTVN4xpcc12AbstractMenuE,"aG",%progbits,_ZTVN4xpcc12AbstractMenuE,comdat
 2014              		.align	3
 2017              	_ZTVN4xpcc12AbstractMenuE:
 2018 0000 00000000 		.word	0
 2019 0004 00000000 		.word	0
 2020 0008 00000000 		.word	_ZN4xpcc12AbstractMenuD1Ev
 2021 000c 00000000 		.word	_ZN4xpcc12AbstractMenuD0Ev
 2022 0010 00000000 		.word	_ZN4xpcc12AbstractView6updateEv
 2023 0014 00000000 		.word	__cxa_pure_virtual
 2024 0018 00000000 		.word	__cxa_pure_virtual
 2025 001c 00000000 		.word	__cxa_pure_virtual
 2026 0020 00000000 		.word	_ZN4xpcc12AbstractView8onRemoveEv
 2027 0024 00000000 		.section	.bss._ZGVZN4xpcc10ChoiceMenu8addEntryEPKcPbbE14availableSpace,"aw",%nobits
 2028              		.align	2
 2029              		.set	.LANCHOR1,. + 0
 2032              	_ZGVZN4xpcc10ChoiceMenu8addEntryEPKcPbbE14availableSpace:
 2033 0000 00000000 		.space	4
 2034              		.section	.rodata.str1.4,"aMS",%progbits,1
 2035              		.align	2
 2036              	.LC0:
 2037 0000 3E00     		.ascii	">\000"
 2038 0002 0000     		.space	2
 2039              	.LC1:
 2040 0004 2000     		.ascii	" \000"
 2041 0006 0000     		.space	2
 2042              	.LC2:
 2043 0008 54525545 		.ascii	"TRUE\000"
 2043      00
 2044 000d 000000   		.space	3
 2045              	.LC3:
 2046 0010 46414C53 		.ascii	"FALSE\000"
 2046      4500
 2047 0016 0000     		.space	2
 2048              	.LC4:
 2049 0018 00       		.ascii	"\000"
 2050 0019 000000   		.section	.bss._ZZN4xpcc10ChoiceMenu8addEntryEPKcPbbE14availableSpace,"aw",%nobits
 2051              		.align	1
 2052              		.set	.LANCHOR2,. + 0
 2055              	_ZZN4xpcc10ChoiceMenu8addEntryEPKcPbbE14availableSpace:
 2056 0000 0000     		.space	2
 2057              		.section	.rodata._ZTVN4xpcc10ChoiceMenuE,"a",%progbits
 2058              		.align	3
 2059              		.set	.LANCHOR0,. + 0
 2062              	_ZTVN4xpcc10ChoiceMenuE:
 2063 0000 00000000 		.word	0
 2064 0004 00000000 		.word	0
 2065 0008 00000000 		.word	_ZN4xpcc10ChoiceMenuD1Ev
 2066 000c 00000000 		.word	_ZN4xpcc10ChoiceMenuD0Ev
 2067 0010 00000000 		.word	_ZN4xpcc12AbstractView6updateEv
 2068 0014 00000000 		.word	_ZN4xpcc10ChoiceMenu10hasChangedEv
 2069 0018 00000000 		.word	_ZN4xpcc10ChoiceMenu4drawEv
 2070 001c 00000000 		.word	_ZN4xpcc10ChoiceMenu16shortButtonPressENS_11MenuButtons6ButtonE
 2071 0020 00000000 		.word	_ZN4xpcc12AbstractView8onRemoveEv
 2072 0024 00000000 		.word	_ZN4xpcc10ChoiceMenu10initialiseEv
 2073 0028 00000000 		.word	__cxa_pure_virtual
 2074 002c 00000000 		.text
 2075              	.Letext0:
 2076              		.file 17 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/include/stddef.h"
 2077              		.file 18 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/st
 2078              		.file 19 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp"
 2079              		.file 20 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/geometric_traits.hpp"
 2080              		.file 21 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2.hpp"
 2081              		.file 22 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector1.hpp"
 2082              		.file 23 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector1_impl.hpp"
 2083              		.file 24 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/matrix.hpp"
 2084              		.file 25 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/matrix_impl.hpp"
 2085              		.file 26 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/accessor/ram.hpp"
 2086              		.file 27 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_buttons.hpp"
 2087              		.file 28 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_view.hpp"
 2088              		.file 29 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/clock.hpp"
 2089              		.file 30 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timeout.hpp"
 2090              		.file 31 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/periodic_timer.hpp"
 2091              		.file 32 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/doubly_linked_list.hpp"
 2092              		.file 33 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c+
 2093              		.file 34 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c+
 2094              		.file 35 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c+
 2095              		.file 36 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c+
 2096              		.file 37 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/st
 2097              		.file 38 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c+
 2098              		.file 39 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/st
 2099              		.file 40 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c+
 2100              		.file 41 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/template_metaprogramming.hpp"
 2101              		.file 42 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:00000000 choice_menu.cpp
     /tmp/cc24oQqL.s:20     .text._ZN4xpcc10ChoiceMenu10initialiseEv:00000000 $t
     /tmp/cc24oQqL.s:25     .text._ZN4xpcc10ChoiceMenu10initialiseEv:00000000 _ZN4xpcc10ChoiceMenu10initialiseEv
     /tmp/cc24oQqL.s:103    .text._ZN4xpcc12AbstractMenuD2Ev:00000000 $t
     /tmp/cc24oQqL.s:108    .text._ZN4xpcc12AbstractMenuD2Ev:00000000 _ZN4xpcc12AbstractMenuD2Ev
     /tmp/cc24oQqL.s:137    .text._ZN4xpcc12AbstractMenuD2Ev:00000010 $d
     /tmp/cc24oQqL.s:2017   .rodata._ZTVN4xpcc12AbstractMenuE:00000000 _ZTVN4xpcc12AbstractMenuE
     /tmp/cc24oQqL.s:108    .text._ZN4xpcc12AbstractMenuD2Ev:00000000 _ZN4xpcc12AbstractMenuD1Ev
     /tmp/cc24oQqL.s:145    .text._ZN4xpcc10ChoiceMenu10hasChangedEv:00000000 $t
     /tmp/cc24oQqL.s:150    .text._ZN4xpcc10ChoiceMenu10hasChangedEv:00000000 _ZN4xpcc10ChoiceMenu10hasChangedEv
     /tmp/cc24oQqL.s:293    .text._ZN4xpcc10ChoiceMenu10hasChangedEv:00000044 $d
     /tmp/cc24oQqL.s:302    .text._ZN4xpcc10ChoiceMenu16shortButtonPressENS_11MenuButtons6ButtonE:00000000 $t
     /tmp/cc24oQqL.s:307    .text._ZN4xpcc10ChoiceMenu16shortButtonPressENS_11MenuButtons6ButtonE:00000000 _ZN4xpcc10ChoiceMenu16shortButtonPressENS_11MenuButtons6ButtonE
     /tmp/cc24oQqL.s:329    .text._ZN4xpcc10ChoiceMenu16shortButtonPressENS_11MenuButtons6ButtonE:0000000c $d
     /tmp/cc24oQqL.s:666    .text._ZN4xpcc10ChoiceMenu16shortButtonPressENS_11MenuButtons6ButtonE:00000100 $d
     /tmp/cc24oQqL.s:678    .text._ZN4xpcc12AbstractMenuD0Ev:00000000 $t
     /tmp/cc24oQqL.s:683    .text._ZN4xpcc12AbstractMenuD0Ev:00000000 _ZN4xpcc12AbstractMenuD0Ev
     /tmp/cc24oQqL.s:720    .text._ZN4xpcc12AbstractMenuD0Ev:00000018 $d
     /tmp/cc24oQqL.s:727    .text._ZN4xpcc10ChoiceMenu4drawEv:00000000 $t
     /tmp/cc24oQqL.s:732    .text._ZN4xpcc10ChoiceMenu4drawEv:00000000 _ZN4xpcc10ChoiceMenu4drawEv
     /tmp/cc24oQqL.s:1267   .text._ZN4xpcc10ChoiceMenu4drawEv:00000190 $d
     /tmp/cc24oQqL.s:1283   .text._ZN4xpcc10ChoiceMenuD2Ev:00000000 $t
     /tmp/cc24oQqL.s:1288   .text._ZN4xpcc10ChoiceMenuD2Ev:00000000 _ZN4xpcc10ChoiceMenuD2Ev
     /tmp/cc24oQqL.s:1390   .text._ZN4xpcc10ChoiceMenuD2Ev:0000003c $d
     /tmp/cc24oQqL.s:1288   .text._ZN4xpcc10ChoiceMenuD2Ev:00000000 _ZN4xpcc10ChoiceMenuD1Ev
     /tmp/cc24oQqL.s:1401   .text._ZN4xpcc10ChoiceMenuD0Ev:00000000 $t
     /tmp/cc24oQqL.s:1406   .text._ZN4xpcc10ChoiceMenuD0Ev:00000000 _ZN4xpcc10ChoiceMenuD0Ev
     /tmp/cc24oQqL.s:1513   .text._ZN4xpcc10ChoiceMenuD0Ev:00000040 $d
     /tmp/cc24oQqL.s:1522   .text._ZN4xpcc10ChoiceMenuC2EPNS_9ViewStackEh:00000000 $t
     /tmp/cc24oQqL.s:1527   .text._ZN4xpcc10ChoiceMenuC2EPNS_9ViewStackEh:00000000 _ZN4xpcc10ChoiceMenuC2EPNS_9ViewStackEh
     /tmp/cc24oQqL.s:1662   .text._ZN4xpcc10ChoiceMenuC2EPNS_9ViewStackEh:00000058 $d
     /tmp/cc24oQqL.s:1527   .text._ZN4xpcc10ChoiceMenuC2EPNS_9ViewStackEh:00000000 _ZN4xpcc10ChoiceMenuC1EPNS_9ViewStackEh
     /tmp/cc24oQqL.s:1672   .text._ZN4xpcc10ChoiceMenuC2EPNS_9ViewStackEhPKc:00000000 $t
     /tmp/cc24oQqL.s:1677   .text._ZN4xpcc10ChoiceMenuC2EPNS_9ViewStackEhPKc:00000000 _ZN4xpcc10ChoiceMenuC2EPNS_9ViewStackEhPKc
     /tmp/cc24oQqL.s:1808   .text._ZN4xpcc10ChoiceMenuC2EPNS_9ViewStackEhPKc:00000058 $d
     /tmp/cc24oQqL.s:1677   .text._ZN4xpcc10ChoiceMenuC2EPNS_9ViewStackEhPKc:00000000 _ZN4xpcc10ChoiceMenuC1EPNS_9ViewStackEhPKc
     /tmp/cc24oQqL.s:1817   .text._ZN4xpcc10ChoiceMenu8addEntryEPKcPbb:00000000 $t
     /tmp/cc24oQqL.s:1822   .text._ZN4xpcc10ChoiceMenu8addEntryEPKcPbb:00000000 _ZN4xpcc10ChoiceMenu8addEntryEPKcPbb
     /tmp/cc24oQqL.s:1978   .text._ZN4xpcc10ChoiceMenu8addEntryEPKcPbb:00000084 $d
     /tmp/cc24oQqL.s:1992   .text._ZN4xpcc10ChoiceMenu8setTitleEPKc:00000000 $t
     /tmp/cc24oQqL.s:1997   .text._ZN4xpcc10ChoiceMenu8setTitleEPKc:00000000 _ZN4xpcc10ChoiceMenu8setTitleEPKc
     /tmp/cc24oQqL.s:2062   .rodata._ZTVN4xpcc10ChoiceMenuE:00000000 _ZTVN4xpcc10ChoiceMenuE
     /tmp/cc24oQqL.s:2014   .rodata._ZTVN4xpcc12AbstractMenuE:00000000 $d
     /tmp/cc24oQqL.s:2028   .bss._ZGVZN4xpcc10ChoiceMenu8addEntryEPKcPbbE14availableSpace:00000000 $d
     /tmp/cc24oQqL.s:2032   .bss._ZGVZN4xpcc10ChoiceMenu8addEntryEPKcPbbE14availableSpace:00000000 _ZGVZN4xpcc10ChoiceMenu8addEntryEPKcPbbE14availableSpace
     /tmp/cc24oQqL.s:2035   .rodata.str1.4:00000000 $d
     /tmp/cc24oQqL.s:2051   .bss._ZZN4xpcc10ChoiceMenu8addEntryEPKcPbbE14availableSpace:00000000 $d
     /tmp/cc24oQqL.s:2055   .bss._ZZN4xpcc10ChoiceMenu8addEntryEPKcPbbE14availableSpace:00000000 _ZZN4xpcc10ChoiceMenu8addEntryEPKcPbbE14availableSpace
     /tmp/cc24oQqL.s:2058   .rodata._ZTVN4xpcc10ChoiceMenuE:00000000 $d
                     .debug_frame:00000010 $d
     /tmp/cc24oQqL.s:334    .text._ZN4xpcc10ChoiceMenu16shortButtonPressENS_11MenuButtons6ButtonE:00000011 $d
     /tmp/cc24oQqL.s:334    .text._ZN4xpcc10ChoiceMenu16shortButtonPressENS_11MenuButtons6ButtonE:00000012 $t
                           .group:00000000 _ZN4xpcc12AbstractMenuD5Ev
                           .group:00000000 _ZN4xpcc10ChoiceMenuD5Ev

UNDEFINED SYMBOLS
_ZN4xpcc12AbstractViewD2Ev
_ZN4xpcc5Clock3nowEv
_ZN4xpcc12AbstractView6removeEv
_ZN4xpcc14ScrollableText10setToStartEv
_ZdlPv
_ZN4xpcc8IOStream8writeBinEPKc
_ZN4xpcc8IOStream8writeHexEPKc
_ZN4xpcc14GraphicDisplay8drawLineEssss
_ZN4xpcc14ScrollableText7getTextEv
_ZN4xpcc14ScrollableTextD1Ev
_ZN4xpcc12AbstractMenuC2EPNS_9ViewStackEh
_ZN4xpcc15ChoiceMenuEntryC1EPKctPbb
_Znwj
_ZN4xpcc14ScrollableTextC1ERKS0_
_ZN4xpcc12AbstractView6updateEv
__cxa_pure_virtual
_ZN4xpcc12AbstractView8onRemoveEv
