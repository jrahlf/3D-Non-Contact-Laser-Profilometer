   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 2
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"standard_menu.cpp"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text._ZN4xpcc12StandardMenu21selectedEntryFunctionEh,"ax",%progbits
  20              		.align	2
  21              		.global	_ZN4xpcc12StandardMenu21selectedEntryFunctionEh
  22              		.thumb
  23              		.thumb_func
  25              	_ZN4xpcc12StandardMenu21selectedEntryFunctionEh:
  26              	.LFB1397:
  27              		.file 1 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp"
   1:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** // coding: utf-8
   2:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** // ----------------------------------------------------------------------------
   3:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** /* Copyright (c) 2011, Roboterclub Aachen e.V.
   4:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp ****  * All rights reserved.
   5:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp ****  * 
   6:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp ****  * Redistribution and use in source and binary forms, with or without
   7:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp ****  * modification, are permitted provided that the following conditions are met:
   8:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp ****  * 
   9:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp ****  *     * Redistributions of source code must retain the above copyright
  10:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp ****  *       notice, this list of conditions and the following disclaimer.
  11:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp ****  *     * Redistributions in binary form must reproduce the above copyright
  12:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp ****  *       notice, this list of conditions and the following disclaimer in the
  13:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp ****  *       documentation and/or other materials provided with the distribution.
  14:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp ****  *     * Neither the name of the Roboterclub Aachen e.V. nor the
  15:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp ****  *       names of its contributors may be used to endorse or promote products
  16:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp ****  *       derived from this software without specific prior written permission.
  17:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp ****  * 
  18:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp ****  * THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
  19:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp ****  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  20:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  21:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp ****  * DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
  22:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  23:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  24:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  25:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  26:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  27:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  28:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp ****  */
  29:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** // ----------------------------------------------------------------------------
  30:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 
  31:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** #include "standard_menu.hpp"
  32:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 
  33:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** xpcc::MenuEntry::MenuEntry(const char* text, uint16_t space, MenuEntryCallback func):
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	text(text, space),
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	callback(func)
  36:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** {
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** }
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 
  39:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** xpcc::StandardMenu::StandardMenu(xpcc::ViewStack* stack, uint8_t identifier) :
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	xpcc::AbstractMenu(stack, identifier),
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	display_update_time(500),
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	timer(display_update_time),
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	buttonAction(false),
  44:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	title(""),
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	homePosition(0),
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	position(0)
  47:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** {
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	this->maximalDrawnEntrys = (getViewStack()->getDisplay().getHeight()- 16) / 8 ;
  49:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** }
  50:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** xpcc::StandardMenu::StandardMenu(xpcc::ViewStack* stack, uint8_t identifier, const char* title) :
  52:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	xpcc::AbstractMenu(stack, identifier),
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	display_update_time(500),
  54:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	timer(display_update_time),
  55:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	buttonAction(false),
  56:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	title(title),
  57:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	homePosition(0),
  58:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	position(0)
  59:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** {
  60:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	this->maximalDrawnEntrys = (getViewStack()->getDisplay().getHeight()- 16) / 8 ;
  61:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** }
  62:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 
  63:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** xpcc::StandardMenu::~StandardMenu()
  64:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** {
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** }
  66:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 
  67:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** void
  68:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** xpcc::StandardMenu::addEntry(const char* text, MenuEntryCallback func)
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** {
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	xpcc::MenuEntry entry(text, (getViewStack()->getDisplay().getWidth()-16)/6, func);
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	this->entries.append(entry);
  72:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** }
  73:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 
  74:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** void
  75:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** xpcc::StandardMenu::setTitle(const char* text)
  76:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** {
  77:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	this->title = text;
  78:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** }
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 
  80:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 
  81:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** void
  82:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** xpcc::StandardMenu::draw()
  83:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** {
  84:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	xpcc::GraphicDisplay* display = &getViewStack()->getDisplay();
  85:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	display->clear();
  86:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	display->setCursor(0,2);
  87:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	(*display) << this->title;
  88:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	display->drawLine(0, 10, display->getWidth(), 10);
  89:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 
  90:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	uint8_t i, count = this->entries.getSize();
  91:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	EntryList::iterator iter = this->entries.begin();
  92:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 
  93:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	for(uint8_t j=0; j<this->homePosition; ++j)
  94:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	{
  95:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 		++iter;
  96:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	}
  97:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 
  98:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	for (i = 0; i < this->maximalDrawnEntrys; i++)
  99:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	{
 100:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 		if (this->homePosition + i >= count)
 101:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 			break;
 102:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 
 103:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 		display->setCursor(4, 12+i*8);
 104:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 		if (this->position - this->homePosition == i) {
 105:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 				(*display) << ">"; // TODO add nicer symbol
 106:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 		}
 107:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 		else {
 108:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 				(*display) << " ";
 109:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 		}
 110:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 		
 111:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 		(*display) << iter->text.getText();
 112:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 		++iter;
 113:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	}
 114:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 
 115:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	// todo add file up and / or down if some entrys are not displayed on screen
 116:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** }
 117:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 
 118:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** bool
 119:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** xpcc::StandardMenu::hasChanged()
 120:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** {
 121:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	if (timer.isExpired() || this->buttonAction)
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	{
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 		if (this->buttonAction) this->buttonAction=false;
 124:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 		return true;
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	}
 127:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	else
 128:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	{
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 		return false;
 130:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	}
 131:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** }
 132:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 
 133:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** void
 134:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** xpcc::StandardMenu::selectedEntryFunction(uint8_t /*selected*/)
 135:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** {
  28              		.loc 1 135 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE1397:
  38 0002 00BF     		.section	.text._ZN4xpcc12AbstractMenuD2Ev,"axG",%progbits,_ZN4xpcc12AbstractMenuD5Ev,comdat
  39              		.align	2
  40              		.weak	_ZN4xpcc12AbstractMenuD2Ev
  41              		.thumb
  42              		.thumb_func
  44              	_ZN4xpcc12AbstractMenuD2Ev:
  45              	.LFB1378:
  46              		.file 2 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp"
   1:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp **** // coding: utf-8
   2:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp **** // ----------------------------------------------------------------------------
   3:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp **** /* Copyright (c) 2013, Roboterclub Aachen e.V.
   4:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp ****  * All rights reserved.
   5:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp ****  * 
   6:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp ****  * Redistribution and use in source and binary forms, with or without
   7:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp ****  * modification, are permitted provided that the following conditions are met:
   8:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp ****  * 
   9:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp ****  *     * Redistributions of source code must retain the above copyright
  10:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp ****  *       notice, this list of conditions and the following disclaimer.
  11:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp ****  *     * Redistributions in binary form must reproduce the above copyright
  12:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp ****  *       notice, this list of conditions and the following disclaimer in the
  13:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp ****  *       documentation and/or other materials provided with the distribution.
  14:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp ****  *     * Neither the name of the Roboterclub Aachen e.V. nor the
  15:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp ****  *       names of its contributors may be used to endorse or promote products
  16:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp ****  *       derived from this software without specific prior written permission.
  17:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp ****  * 
  18:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp ****  * THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
  19:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp ****  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  20:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  21:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp ****  * DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
  22:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  23:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  24:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  25:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  26:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  27:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  28:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp ****  */
  29:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp **** // ----------------------------------------------------------------------------
  30:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp **** 
  31:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp **** #ifndef XPCC__ABSTRACT_MENU_HPP
  32:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp **** #define XPCC__ABSTRACT_MENU_HPP
  33:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp **** 
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp **** #include "view_stack.hpp"
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp **** #include "abstract_view.hpp"
  36:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp **** 
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp **** namespace xpcc{
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp **** 	
  39:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp **** 	 /**
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp **** 	 * @brief The AbstractMenu class is the same as the AbstractView class,
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp **** 	 *        except it forces the developer to reimplement the handling
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp **** 	 *        of button presses.
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp **** 	 *
  44:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp **** 	 * \author Thorsten Lajewski
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp **** 	 * \ingroup display_menu
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp **** 	 */
  47:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_menu.hpp **** 	class AbstractMenu: public AbstractView
  47              		.loc 2 47 0
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              	.LVL1:
  52              	.LBB294:
  53              		.loc 2 47 0
  54 0000 034B     		ldr	r3, .L3
  55              	.LBE294:
  56 0002 10B5     		push	{r4, lr}
  57              	.LCFI0:
  58              		.cfi_def_cfa_offset 8
  59              		.cfi_offset 4, -8
  60              		.cfi_offset 14, -4
  61              		.loc 2 47 0
  62 0004 0446     		mov	r4, r0
  63              	.LBB295:
  64 0006 0360     		str	r3, [r0, #0]
  65 0008 024B     		ldr	r3, .L3+4
  66 000a 9847     		blx	r3
  67              	.LVL2:
  68              	.LBE295:
  69 000c 2046     		mov	r0, r4
  70 000e 10BD     		pop	{r4, pc}
  71              	.L4:
  72              		.align	2
  73              	.L3:
  74 0010 08000000 		.word	_ZTVN4xpcc12AbstractMenuE+8
  75 0014 00000000 		.word	_ZN4xpcc12AbstractViewD2Ev
  76              		.cfi_endproc
  77              	.LFE1378:
  79              		.weak	_ZN4xpcc12AbstractMenuD1Ev
  80              		.thumb_set _ZN4xpcc12AbstractMenuD1Ev,_ZN4xpcc12AbstractMenuD2Ev
  81              		.section	.text._ZN4xpcc12StandardMenu10hasChangedEv,"ax",%progbits
  82              		.align	2
  83              		.global	_ZN4xpcc12StandardMenu10hasChangedEv
  84              		.thumb
  85              		.thumb_func
  87              	_ZN4xpcc12StandardMenu10hasChangedEv:
  88              	.LFB1396:
 120:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** {
  89              		.loc 1 120 0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              	.LVL3:
  94              	.LBB308:
  95              	.LBB309:
  96              		.file 3 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodi
   1:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** // coding: utf-8
   2:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** // ----------------------------------------------------------------------------
   3:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** /* Copyright (c) 2009, Roboterclub Aachen e.V.
   4:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp ****  * All rights reserved.
   5:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp ****  *
   6:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp ****  * Redistribution and use in source and binary forms, with or without
   7:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp ****  * modification, are permitted provided that the following conditions are met:
   8:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp ****  *
   9:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp ****  *     * Redistributions of source code must retain the above copyright
  10:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp ****  *       notice, this list of conditions and the following disclaimer.
  11:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp ****  *     * Redistributions in binary form must reproduce the above copyright
  12:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp ****  *       notice, this list of conditions and the following disclaimer in the
  13:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp ****  *       documentation and/or other materials provided with the distribution.
  14:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp ****  *     * Neither the name of the Roboterclub Aachen e.V. nor the
  15:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp ****  *       names of its contributors may be used to endorse or promote products
  16:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp ****  *       derived from this software without specific prior written permission.
  17:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp ****  *
  18:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp ****  * THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
  19:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp ****  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  20:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  21:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp ****  * DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
  22:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  23:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  24:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  25:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  26:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  27:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  28:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp ****  */
  29:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** // ----------------------------------------------------------------------------
  30:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** 
  31:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** #ifndef	XPCC__TIMEOUT_HPP
  32:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** 	#error	"Don't include this file directly, use 'periodic_timer.hpp' instead!"
  33:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** #endif
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** 
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** template<typename T>
  36:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** xpcc::PeriodicTimer<T>::PeriodicTimer(const Timestamp interval) :
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** 	timer(interval), interval(interval), isRunning_(true)
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** {
  39:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** 	if (interval == 0) {
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** 		stop();
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** 	}
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** }
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** 
  44:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** template<typename T>
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** void
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** xpcc::PeriodicTimer<T>::stop()
  47:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** {
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** 	timer.stop();
  49:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** 	isRunning_ = false;
  50:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** }
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** 
  52:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** template<typename T>
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** bool
  54:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** xpcc::PeriodicTimer<T>::isRunning() const
  55:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** {
  56:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** 	return isRunning_;
  57:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** }
  58:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** 
  59:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** template<typename T>
  60:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** void
  61:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** xpcc::PeriodicTimer<T>::restart(const Timestamp interval)
  62:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** {
  63:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** 	timer.restart(interval);
  64:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** 	this->interval = interval;
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** 	this->isRunning_ = true;
  66:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** }
  67:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** 
  68:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** template<typename T>
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** void
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** xpcc::PeriodicTimer<T>::restart()
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** {
  72:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** 	timer.restart(this->interval);
  73:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** 	this->isRunning_ = true;
  74:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** }
  75:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** 
  76:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** template<typename T>
  77:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** bool
  78:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** xpcc::PeriodicTimer<T>::isExpired()
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** {
  80:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** 	if (isRunning_ and timer.isExpired()) {
  97              		.loc 3 80 0
  98 0000 037E     		ldrb	r3, [r0, #24]	@ zero_extendqisi2
  99              	.LBE309:
 100              	.LBE308:
 120:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** {
 101              		.loc 1 120 0
 102 0002 70B5     		push	{r4, r5, r6, lr}
 103              	.LCFI1:
 104              		.cfi_def_cfa_offset 16
 105              		.cfi_offset 4, -16
 106              		.cfi_offset 5, -12
 107              		.cfi_offset 6, -8
 108              		.cfi_offset 14, -4
 120:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** {
 109              		.loc 1 120 0
 110 0004 0446     		mov	r4, r0
 111              	.LVL4:
 112              	.LBB327:
 113              	.LBB323:
 114              		.loc 3 80 0
 115 0006 33B9     		cbnz	r3, .L17
 116              	.LVL5:
 117              	.L6:
 118              	.LBE323:
 119              	.LBE327:
 121:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	if (timer.isExpired() || this->buttonAction)
 120              		.loc 1 121 0
 121 0008 207F     		ldrb	r0, [r4, #28]	@ zero_extendqisi2
 122 000a 18B1     		cbz	r0, .L18
 123              	.L8:
 124              	.LBB328:
 125              	.LBB329:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 		if (this->buttonAction) this->buttonAction=false;
 126              		.loc 1 123 0
 127 000c 0023     		movs	r3, #0
 128 000e 2377     		strb	r3, [r4, #28]
 129 0010 0120     		movs	r0, #1
 130 0012 70BD     		pop	{r4, r5, r6, pc}
 131              	.L18:
 132              	.LBE329:
 133              	.LBE328:
 131:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** }
 134              		.loc 1 131 0
 135 0014 70BD     		pop	{r4, r5, r6, pc}
 136              	.LVL6:
 137              	.L17:
 138              	.LBB332:
 139              	.LBB324:
 140              	.LBB310:
 141              	.LBB311:
 142              		.file 4 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout
   1:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** // coding: utf-8
   2:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** // ----------------------------------------------------------------------------
   3:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** /* Copyright (c) 2009, Roboterclub Aachen e.V.
   4:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp ****  * All rights reserved.
   5:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp ****  *
   6:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp ****  * Redistribution and use in source and binary forms, with or without
   7:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp ****  * modification, are permitted provided that the following conditions are met:
   8:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp ****  *
   9:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp ****  *     * Redistributions of source code must retain the above copyright
  10:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp ****  *       notice, this list of conditions and the following disclaimer.
  11:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp ****  *     * Redistributions in binary form must reproduce the above copyright
  12:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp ****  *       notice, this list of conditions and the following disclaimer in the
  13:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp ****  *       documentation and/or other materials provided with the distribution.
  14:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp ****  *     * Neither the name of the Roboterclub Aachen e.V. nor the
  15:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp ****  *       names of its contributors may be used to endorse or promote products
  16:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp ****  *       derived from this software without specific prior written permission.
  17:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp ****  *
  18:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp ****  * THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
  19:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp ****  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  20:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  21:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp ****  * DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
  22:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  23:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  24:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  25:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  26:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  27:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  28:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp ****  */
  29:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** // ----------------------------------------------------------------------------
  30:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** 
  31:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** #ifndef	XPCC__TIMEOUT_HPP
  32:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** 	#error	"Don't include this file directly, use 'timeout.hpp' instead!"
  33:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** #endif
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** 
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** template<typename T>
  36:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** xpcc::Timeout<T>::Timeout() :
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** 	endTime(0), state(EXPIRED)
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** {
  39:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** }
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** 
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** template<typename T>
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** xpcc::Timeout<T>::Timeout(const Timestamp time) :
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** 	endTime(T::now() + time), state(ACTIVE)
  44:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** {
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** }
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** 
  47:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** template<typename T>
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** bool
  49:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** xpcc::Timeout<T>::isExpired()
  50:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** {
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** 	if (state == ACTIVE)
 143              		.loc 4 51 0
 144 0016 037C     		ldrb	r3, [r0, #16]	@ zero_extendqisi2
  52:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** 	{
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** 		if (T::now() >= endTime)
 145              		.loc 4 53 0
 146 0018 0A4D     		ldr	r5, .L19
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** 	if (state == ACTIVE)
 147              		.loc 4 51 0
 148 001a 012B     		cmp	r3, #1
 149 001c 09D0     		beq	.L14
 150              	.LVL7:
 151              	.L7:
 152 001e 6669     		ldr	r6, [r4, #20]
 153              	.LVL8:
 154              	.LBE311:
 155              	.LBE310:
 156              	.LBB315:
 157              	.LBB316:
  54:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** 		{
  55:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** 			state = EXPIRED;
  56:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** 		}
  57:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** 		else {
  58:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** 			return false;
  59:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** 		}
  60:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** 	}
  61:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** 	
  62:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** 	return true;
  63:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** }
  64:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** 
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** template<typename T>
  66:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** bool
  67:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** xpcc::Timeout<T>::isActive() const
  68:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** {
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** 	return (this->state != STOPPED);
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** }
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** 
  72:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** template<typename T>
  73:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** void
  74:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** xpcc::Timeout<T>::stop()
  75:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** {
  76:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** 	this->state = STOPPED;
  77:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** }
  78:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** 
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** 
  80:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** template<typename T>
  81:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** void
  82:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** xpcc::Timeout<T>::restart(Timestamp time)
  83:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** {
  84:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** 	endTime = T::now() + time;
 158              		.loc 4 84 0
 159 0020 A847     		blx	r5
 160              	.LVL9:
 161              	.LBE316:
 162              	.LBE315:
 163              	.LBE324:
 164              	.LBE332:
 165              	.LBB333:
 166              	.LBB330:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 		if (this->buttonAction) this->buttonAction=false;
 167              		.loc 1 123 0
 168 0022 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 169              	.LBE330:
 170              	.LBE333:
 171              	.LBB334:
 172              	.LBB325:
 173              	.LBB321:
 174              	.LBB319:
 175              	.LBB317:
 176              	.LBB318:
 177              		.file 5 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp"
   1:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** // coding: utf-8
   2:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** // ----------------------------------------------------------------------------
   3:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** /* Copyright (c) 2009, Roboterclub Aachen e.V.
   4:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  * All rights reserved.
   5:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  *
   6:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  * Redistribution and use in source and binary forms, with or without
   7:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  * modification, are permitted provided that the following conditions are met:
   8:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  * 
   9:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  *     * Redistributions of source code must retain the above copyright
  10:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  *       notice, this list of conditions and the following disclaimer.
  11:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  *     * Redistributions in binary form must reproduce the above copyright
  12:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  *       notice, this list of conditions and the following disclaimer in the
  13:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  *       documentation and/or other materials provided with the distribution.
  14:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  *     * Neither the name of the Roboterclub Aachen e.V. nor the
  15:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  *       names of its contributors may be used to endorse or promote products
  16:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  *       derived from this software without specific prior written permission.
  17:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  *
  18:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  * THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
  19:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  20:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  21:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  * DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
  22:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  23:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  24:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  25:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  26:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  27:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  28:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp ****  */
  29:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** // ----------------------------------------------------------------------------
  30:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 
  31:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** #ifndef	XPCC__TIMESTAMP_HPP
  32:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** #define	XPCC__TIMESTAMP_HPP
  33:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** #include <stdint.h>
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 
  36:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** #include <xpcc/io/iostream.hpp>
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** #include <xpcc/utils/arithmetic_traits.hpp>
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 
  39:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** namespace xpcc
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** {
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 	/**
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 	 * \brief	Simple 16-bit timestamp
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 	 * 
  44:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 	 * The timestamp is calculated in milliseconds.
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 	 *
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 	 * \author	Fabian Greif
  47:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 	 * \ingroup	workflow
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 	 */ 
  49:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 	class Timestamp
  50:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 	{
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 	public:
  52:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		typedef uint_fast16_t Type;
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		
  54:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 	public:
  55:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		///\param time in ms
  56:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		Timestamp(const uint_fast16_t time = 0) : 
  57:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 			time(time)
  58:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		{
  59:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		}
  60:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		
  61:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		inline uint_fast16_t
  62:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		getTime() const
  63:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		{
  64:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 			return this->time;
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		}
  66:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 
  67:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		inline Timestamp
  68:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		operator + (const Timestamp& other) const
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		{
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 			return Timestamp(time + other.time);
 178              		.loc 5 70 0
 179 0024 3618     		adds	r6, r6, r0
 180              	.LVL10:
 181              	.LBE318:
 182              	.LBE317:
  85:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** 	state = ACTIVE;
 183              		.loc 4 85 0
 184 0026 0120     		movs	r0, #1
 185              	.LBE319:
  84:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** 	endTime = T::now() + time;
 186              		.loc 4 84 0
 187 0028 E660     		str	r6, [r4, #12]
 188              	.LBB320:
 189              		.loc 4 85 0
 190 002a 2074     		strb	r0, [r4, #16]
 191              	.LVL11:
 192              	.LBE320:
 193              	.LBE321:
 194              	.LBE325:
 195              	.LBE334:
 196              	.LBB335:
 197              	.LBB331:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 		if (this->buttonAction) this->buttonAction=false;
 198              		.loc 1 123 0
 199 002c 002B     		cmp	r3, #0
 200 002e EDD1     		bne	.L8
 201 0030 70BD     		pop	{r4, r5, r6, pc}
 202              	.LVL12:
 203              	.L14:
 204              	.LBE331:
 205              	.LBE335:
 206              	.LBB336:
 207              	.LBB326:
 208              	.LBB322:
 209              	.LBB314:
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** 		if (T::now() >= endTime)
 210              		.loc 4 53 0
 211 0032 A847     		blx	r5
 212              	.LVL13:
 213              	.LBB312:
 214              	.LBB313:
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		}
  72:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		
  73:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		inline Timestamp
  74:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		operator - (const Timestamp& other) const
  75:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		{
  76:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 			return Timestamp(time - other.time);
  77:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		}
  78:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		inline bool
  80:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		operator == (const Timestamp& other) const
  81:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		{
  82:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 			return (time == other.time);
  83:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		}
  84:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		
  85:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		inline bool
  86:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		operator != (const Timestamp& other) const
  87:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		{
  88:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 			return (time != other.time);
  89:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		}
  90:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		
  91:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		inline bool
  92:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		operator < (const Timestamp& other) const
  93:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		{
  94:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 			return ((int_fast16_t) (time - other.time)) < 0;
  95:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		}
  96:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		
  97:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		inline bool
  98:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		operator > (const Timestamp& other) const
  99:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		{
 100:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 			return ((int_fast16_t) (time - other.time)) > 0;
 101:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		}
 102:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		
 103:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		inline bool
 104:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		operator <= (const Timestamp& other) const
 105:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		{
 106:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 			return ((int_fast16_t) (time - other.time)) <= 0;
 107:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		}
 108:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		
 109:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		inline bool
 110:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		operator >= (const Timestamp& other) const
 111:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 		{
 112:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 			return ((int_fast16_t) (time - other.time)) >= 0;
 215              		.loc 5 112 0
 216 0034 E368     		ldr	r3, [r4, #12]
 217 0036 C01A     		subs	r0, r0, r3
 218              	.LBE313:
 219              	.LBE312:
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** 		if (T::now() >= endTime)
 220              		.loc 4 53 0
 221 0038 0028     		cmp	r0, #0
 222 003a E5DB     		blt	.L6
  55:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** 			state = EXPIRED;
 223              		.loc 4 55 0
 224 003c 0223     		movs	r3, #2
 225 003e 2374     		strb	r3, [r4, #16]
 226 0040 EDE7     		b	.L7
 227              	.L20:
 228 0042 00BF     		.align	2
 229              	.L19:
 230 0044 00000000 		.word	_ZN4xpcc5Clock3nowEv
 231              	.LBE314:
 232              	.LBE322:
 233              	.LBE326:
 234              	.LBE336:
 235              		.cfi_endproc
 236              	.LFE1396:
 238              		.section	.text._ZN4xpcc12StandardMenu16shortButtonPressENS_11MenuButtons6ButtonE,"ax",%progbits
 239              		.align	2
 240              		.global	_ZN4xpcc12StandardMenu16shortButtonPressENS_11MenuButtons6ButtonE
 241              		.thumb
 242              		.thumb_func
 244              	_ZN4xpcc12StandardMenu16shortButtonPressENS_11MenuButtons6ButtonE:
 245              	.LFB1398:
 136:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 
 137:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** }
 138:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 
 139:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** void
 140:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** xpcc::StandardMenu::shortButtonPress(xpcc::MenuButtons::Button button)
 141:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** {
 246              		.loc 1 141 0
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 0
 249              		@ frame_needed = 0, uses_anonymous_args = 0
 250              	.LVL14:
 251 0000 38B5     		push	{r3, r4, r5, lr}
 252              	.LCFI2:
 253              		.cfi_def_cfa_offset 16
 254              		.cfi_offset 3, -16
 255              		.cfi_offset 4, -12
 256              		.cfi_offset 5, -8
 257              		.cfi_offset 14, -4
 258              		.loc 1 141 0
 259 0002 0446     		mov	r4, r0
 260              	.LBB435:
 142:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	switch(button)
 261              		.loc 1 142 0
 262 0004 0329     		cmp	r1, #3
 263 0006 17D8     		bhi	.L21
 264 0008 DFE801F0 		tbb	[pc, r1]
 265              	.L27:
 266 000c 6E       		.byte	(.L23-.L27)/2
 267 000d 02       		.byte	(.L24-.L27)/2
 268 000e 4D       		.byte	(.L25-.L27)/2
 269 000f 17       		.byte	(.L26-.L27)/2
 270              		.align	1
 271              	.L24:
 272              	.LVL15:
 273              	.LBB436:
 274              	.LBB437:
 275              	.LBB438:
 143:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	{
 144:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 		case xpcc::MenuButtons::DOWN:
 145:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 		{
 146:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 			if (this->position + 1U < this->entries.getSize())
 147:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 			{
 148:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 				EntryList::iterator iter = this->entries.begin();
 149:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 
 150:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 				for (uint8_t j=0; j<this->position;  ++j)
 151:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 				{
 152:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 					++iter;
 153:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 				}
 154:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 				iter->text.toogle();
 155:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 				iter->text.setToStart();
 156:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 
 157:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 				if (this->position - this->homePosition == this->maximalDrawnEntrys - 1)
 158:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 				{
 159:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 					this->homePosition += 1;
 160:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 					this->position += 1;
 161:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 					++iter;
 162:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 					iter->text.toogle();
 163:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 				}
 164:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 				else
 165:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 				{
 166:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 					this->position += 1;
 167:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 					++iter;
 168:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 					iter->text.toogle();
 169:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 				}
 170:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 				this->selectedEntryFunction(this->position);
 171:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 				this->buttonAction=true;
 172:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 			}
 173:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 			break;
 174:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 		}
 175:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 		case xpcc::MenuButtons::UP:
 176:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 		{
 177:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 			if (this->position > 0)
 178:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 			{
 179:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 				EntryList::iterator iter = this->entries.begin();
 180:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 
 181:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 				for (uint8_t j = 0; j < this->position; ++j)
 182:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 				{
 183:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 					++iter;
 184:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 				}
 185:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 
 186:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 				iter->text.toogle();
 187:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 				iter->text.setToStart();
 188:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 
 189:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 				if (this->position == this->homePosition)
 190:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 				{
 191:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 					this->homePosition -= 1;
 192:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 					this->position -= 1;
 193:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 					--iter;
 194:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 					iter->text.toogle();
 195:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 				}
 196:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 				else
 197:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 				{
 198:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 					this->position -= 1;
 199:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 					--iter;
 200:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 					iter->text.toogle();
 201:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 				}
 202:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 				this->selectedEntryFunction(this->position);
 203:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 				this->buttonAction = true;
 204:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 			}
 205:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 			break;
 206:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 		}
 207:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 		case xpcc::MenuButtons::LEFT:
 208:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 		{
 209:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 			this->remove();
 210:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 			break;
 211:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 		}
 212:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 		case xpcc::MenuButtons::OK:
 213:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 		{
 214:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 			break;
 215:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 		}
 216:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 		case xpcc::MenuButtons::RIGHT:
 217:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 		{
 218:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 			EntryList::iterator iter = this->entries.begin();
 219:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 
 220:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 			for (uint8_t j = 0; j < this->position; ++j)
 276              		.loc 1 220 0
 277 0010 90F82610 		ldrb	r1, [r0, #38]	@ zero_extendqisi2
 278              	.LVL16:
 279              	.LBE438:
 280              	.LBB441:
 281              	.LBB442:
 282              		.file 6 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly
   1:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** // coding: utf-8
   2:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** // ----------------------------------------------------------------------------
   3:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** /* Copyright (c) 2009, Roboterclub Aachen e.V.
   4:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp ****  * All rights reserved.
   5:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp ****  * 
   6:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp ****  * Redistribution and use in source and binary forms, with or without
   7:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp ****  * modification, are permitted provided that the following conditions are met:
   8:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp ****  * 
   9:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp ****  *     * Redistributions of source code must retain the above copyright
  10:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp ****  *       notice, this list of conditions and the following disclaimer.
  11:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp ****  *     * Redistributions in binary form must reproduce the above copyright
  12:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp ****  *       notice, this list of conditions and the following disclaimer in the
  13:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp ****  *       documentation and/or other materials provided with the distribution.
  14:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp ****  *     * Neither the name of the Roboterclub Aachen e.V. nor the
  15:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp ****  *       names of its contributors may be used to endorse or promote products
  16:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp ****  *       derived from this software without specific prior written permission.
  17:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp ****  * 
  18:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp ****  * THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
  19:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp ****  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  20:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  21:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp ****  * DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
  22:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  23:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  24:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  25:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  26:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  27:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  28:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp ****  */
  29:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** // ----------------------------------------------------------------------------
  30:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 
  31:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** #ifndef	XPCC__DOUBLY_LINKED_LIST_HPP
  32:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	#error	"Don't include this file directly, use 'doubly_linked_list.hpp' instead"
  33:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** #endif
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** // ----------------------------------------------------------------------------
  36:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** template <typename T, typename Allocator>
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::DoublyLinkedList(const Allocator& allocator) :
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	nodeAllocator(allocator), front(0), back(0)
  39:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** {
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** }
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** template <typename T, typename Allocator>
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::~DoublyLinkedList()
  44:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** {
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	while (this->front != 0)
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	{
  47:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 		Node *node = this->front;
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 		this->front = this->front->next;
  49:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 		
  50:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 		Allocator::destroy(&node->value);
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 		this->nodeAllocator.deallocate(node);
  52:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	}
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** }
  54:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 
  55:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** template <typename T, typename Allocator>
  56:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** bool
  57:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::isEmpty() const
  58:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** {
  59:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	return (this->front == 0);
  60:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** }
  61:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 
  62:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** template <typename T, typename Allocator>
  63:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** std::size_t
  64:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::getSize() const
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** {
  66:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	std::size_t count = 0;
  67:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	for (const_iterator it = this->begin(); it != this->end(); ++it) {
  68:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 		count++;
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	}
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	return count;
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** }
  72:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 
  73:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** // ----------------------------------------------------------------------------
  74:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** template <typename T, typename Allocator>
  75:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** bool
  76:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::prepend(const T& value)
  77:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** {
  78:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	// allocate memory for the new node and copy the value into it
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	Node *node = this->nodeAllocator.allocate(1);
  80:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	Allocator::construct(&node->value, value);
  81:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	
  82:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	// hook the node into the list
  83:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	node->next = this->front;
  84:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	node->previous = 0;
  85:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	
  86:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	if (this->front == 0)
  87:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	{
  88:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 		// node it the first entry
  89:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 		this->back = node;
  90:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	}
  91:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	else {
  92:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 		this->front->previous = node;
  93:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	}
  94:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	this->front = node;
  95:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	
  96:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	return true;
  97:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** }
  98:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 
  99:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** template <typename T, typename Allocator>
 100:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** void
 101:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::append(const T& value)
 102:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** {
 103:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	// allocate memory for the new node and copy the value into it
 104:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	Node *node = this->nodeAllocator.allocate(1);
 105:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	Allocator::construct(&node->value, value);
 106:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	
 107:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	// hook the node into the list
 108:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	node->next = 0;
 109:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	node->previous = this->back;
 110:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	
 111:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	if (this->back == 0)
 112:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	{
 113:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 		// first entry in the list
 114:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 		this->front = node;
 115:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	}
 116:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	else {
 117:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 		this->back->next = node;
 118:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	}
 119:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	this->back = node;
 120:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** }
 121:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** // ----------------------------------------------------------------------------
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** template <typename T, typename Allocator>
 124:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** void
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::removeFront()
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** {
 127:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	// remove node from the list
 128:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	Node *node = this->front;
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	
 130:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	if (this->front->next == 0)
 131:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	{
 132:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 		// last entry in the list
 133:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 		this->front = 0;
 134:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 		this->back = 0;
 135:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	}
 136:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	else {
 137:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 		this->front = this->front->next;
 138:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 		this->front->previous = 0;
 139:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	}
 140:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	
 141:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	// call destructor and free memory
 142:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	Allocator::destroy(&node->value);
 143:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	this->nodeAllocator.deallocate(node);
 144:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** }
 145:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 
 146:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** template <typename T, typename Allocator>
 147:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** void
 148:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::removeBack()
 149:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** {
 150:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	// remove node from the list
 151:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	Node *node = this->back;
 152:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	
 153:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	if (this->back->previous == 0)
 154:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	{
 155:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 		// last entry in the list
 156:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 		this->front = 0;
 157:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 		this->back = 0;
 158:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	}
 159:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	else {
 160:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 		this->back = this->back->previous;
 161:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 		this->back->next = 0;
 162:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	}
 163:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	
 164:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	// call destructor and free memory
 165:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	Allocator::destroy(&node->value);
 166:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	this->nodeAllocator.deallocate(node);
 167:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** }
 168:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 
 169:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** // ----------------------------------------------------------------------------
 170:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** template <typename T, typename Allocator>
 171:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** inline const T&
 172:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::getFront() const
 173:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** {
 174:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	return this->front->value;
 175:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** }
 176:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 
 177:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** template <typename T, typename Allocator>
 178:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** inline const T&
 179:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::getBack() const
 180:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** {
 181:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	return this->back->value;
 182:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** }
 183:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 
 184:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** // ----------------------------------------------------------------------------
 185:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** template <typename T, typename Allocator>
 186:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** typename xpcc::DoublyLinkedList<T, Allocator>::iterator 
 187:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::begin()
 188:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** {
 189:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	return iterator(this->front);
 283              		.loc 6 189 0
 284 0014 C26A     		ldr	r2, [r0, #44]
 285              	.LVL17:
 286              	.LBE442:
 287              	.LBE441:
 288              	.LBB443:
 289              		.loc 1 220 0
 290 0016 29B1     		cbz	r1, .L36
 291 0018 0023     		movs	r3, #0
 292              	.LVL18:
 293              	.L37:
 294 001a 0133     		adds	r3, r3, #1
 295 001c DBB2     		uxtb	r3, r3
 296 001e 8B42     		cmp	r3, r1
 297              	.LBB439:
 298              	.LBB440:
 299              		.file 7 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly
   1:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** // coding: utf-8
   2:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** // ----------------------------------------------------------------------------
   3:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** /* Copyright (c) 2009, Roboterclub Aachen e.V.
   4:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp ****  * All rights reserved.
   5:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp ****  * 
   6:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp ****  * Redistribution and use in source and binary forms, with or without
   7:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp ****  * modification, are permitted provided that the following conditions are met:
   8:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp ****  * 
   9:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp ****  *     * Redistributions of source code must retain the above copyright
  10:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp ****  *       notice, this list of conditions and the following disclaimer.
  11:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp ****  *     * Redistributions in binary form must reproduce the above copyright
  12:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp ****  *       notice, this list of conditions and the following disclaimer in the
  13:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp ****  *       documentation and/or other materials provided with the distribution.
  14:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp ****  *     * Neither the name of the Roboterclub Aachen e.V. nor the
  15:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp ****  *       names of its contributors may be used to endorse or promote products
  16:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp ****  *       derived from this software without specific prior written permission.
  17:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp ****  * 
  18:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp ****  * THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
  19:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp ****  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  20:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  21:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp ****  * DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
  22:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  23:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  24:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  25:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  26:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  27:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  28:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp ****  */
  29:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** // ----------------------------------------------------------------------------
  30:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** 
  31:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** #ifndef	XPCC__DOUBLY_LINKED_LIST_HPP
  32:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** 	#error	"Don't include this file directly, use 'doubly_linked_list.hpp' instead"
  33:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** #endif
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** 
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** // ----------------------------------------------------------------------------
  36:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** // Iterators
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** // ----------------------------------------------------------------------------
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** 
  39:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** // const iterator
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** template <typename T, typename Allocator>
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::const_iterator::const_iterator() :
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** 	node(0)
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** {
  44:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** }
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** 
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** template <typename T, typename Allocator>
  47:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::const_iterator::const_iterator(
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** 		const Node* node) :
  49:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** 	node(node)
  50:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** {
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** }
  52:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** 
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** template <typename T, typename Allocator>
  54:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::const_iterator::const_iterator(
  55:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** 		const iterator& other) :
  56:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** 	node(other.node)
  57:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** {
  58:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** }
  59:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** 
  60:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** template <typename T, typename Allocator>
  61:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::const_iterator::const_iterator(
  62:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** 		const const_iterator& other) :
  63:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** 	node(other.node)
  64:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** {
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** }
  66:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** 
  67:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** template <typename T, typename Allocator>
  68:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** typename xpcc::DoublyLinkedList<T, Allocator>::const_iterator&
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::const_iterator::operator = (
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** 		const const_iterator& other)
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** {
  72:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** 	this->node = other.node;
  73:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** 	return *this;
  74:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** }
  75:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** 
  76:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** template <typename T, typename Allocator>
  77:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** typename xpcc::DoublyLinkedList<T, Allocator>::const_iterator&
  78:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::const_iterator::operator ++ ()
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** {
  80:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** 	this->node = this->node->next;
  81:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** 	return *this;
  82:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** }
  83:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** 
  84:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** template <typename T, typename Allocator>
  85:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** typename xpcc::DoublyLinkedList<T, Allocator>::const_iterator&
  86:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::const_iterator::operator -- ()
  87:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** {
  88:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** 	this->node = this->node->previous;
  89:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** 	return *this;
  90:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** }
  91:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** 
  92:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** template <typename T, typename Allocator>
  93:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** bool
  94:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::const_iterator::operator == (
  95:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** 		const const_iterator& other) const
  96:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** {
  97:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** 	return (node == other.node);
  98:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** }
  99:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** 
 100:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** template <typename T, typename Allocator>
 101:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** bool
 102:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::const_iterator::operator != (
 103:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** 		const const_iterator& other) const
 104:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** {
 105:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** 	return (node != other.node);
 106:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** }
 107:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** 
 108:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** template <typename T, typename Allocator>
 109:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** const T&
 110:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::const_iterator::operator * () const
 111:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** {
 112:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** 	return this->node->value;
 113:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** }
 114:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** 
 115:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** template <typename T, typename Allocator>
 116:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** const T* 
 117:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::const_iterator::operator -> () const
 118:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** {
 119:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** 	return &this->node->value;
 120:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** }
 121:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** 
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** 
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** // iterator
 124:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** template <typename T, typename Allocator>
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::iterator::iterator() :
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** 	node(0)
 127:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** {
 128:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** }
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** 
 130:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** template <typename T, typename Allocator>
 131:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::iterator::iterator(Node* node) :
 132:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** 	node(node)
 133:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** {
 134:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** }
 135:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** 
 136:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** template <typename T, typename Allocator>
 137:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::iterator::iterator(
 138:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** 		const iterator& other) :
 139:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** 	node(other.node)
 140:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** {
 141:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** }
 142:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** 
 143:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** template <typename T, typename Allocator>
 144:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** typename xpcc::DoublyLinkedList<T, Allocator>::iterator&
 145:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::iterator::operator = (const iterator& other)
 146:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** {
 147:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** 	this->node = other.node;
 148:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** 	return *this;
 149:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** }
 150:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** 
 151:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** template <typename T, typename Allocator>
 152:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** typename xpcc::DoublyLinkedList<T, Allocator>::iterator&
 153:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::iterator::operator ++ ()
 154:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** {
 155:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** 	this->node = this->node->next;
 300              		.loc 7 155 0
 301 0020 526A     		ldr	r2, [r2, #36]
 302              	.LVL19:
 303              	.LBE440:
 304              	.LBE439:
 305              		.loc 1 220 0
 306 0022 FAD3     		bcc	.L37
 307              	.LVL20:
 308              	.L36:
 309              	.LBE443:
 310              	.LBB444:
 311              	.LBB445:
 312              		.file 8 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_entry_callback.hpp"
   1:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_entry_callback.hpp **** // coding: utf-8
   2:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_entry_callback.hpp **** // ----------------------------------------------------------------------------
   3:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_entry_callback.hpp **** /* Copyright (c) 2011, Roboterclub Aachen e.V.
   4:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_entry_callback.hpp ****  * All rights reserved.
   5:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_entry_callback.hpp ****  * 
   6:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_entry_callback.hpp ****  * Redistribution and use in source and binary forms, with or without
   7:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_entry_callback.hpp ****  * modification, are permitted provided that the following conditions are met:
   8:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_entry_callback.hpp ****  * 
   9:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_entry_callback.hpp ****  *     * Redistributions of source code must retain the above copyright
  10:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_entry_callback.hpp ****  *       notice, this list of conditions and the following disclaimer.
  11:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_entry_callback.hpp ****  *     * Redistributions in binary form must reproduce the above copyright
  12:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_entry_callback.hpp ****  *       notice, this list of conditions and the following disclaimer in the
  13:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_entry_callback.hpp ****  *       documentation and/or other materials provided with the distribution.
  14:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_entry_callback.hpp ****  *     * Neither the name of the Roboterclub Aachen e.V. nor the
  15:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_entry_callback.hpp ****  *       names of its contributors may be used to endorse or promote products
  16:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_entry_callback.hpp ****  *       derived from this software without specific prior written permission.
  17:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_entry_callback.hpp ****  * 
  18:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_entry_callback.hpp ****  * THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
  19:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_entry_callback.hpp ****  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  20:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_entry_callback.hpp ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  21:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_entry_callback.hpp ****  * DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
  22:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_entry_callback.hpp ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  23:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_entry_callback.hpp ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  24:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_entry_callback.hpp ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  25:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_entry_callback.hpp ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  26:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_entry_callback.hpp ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  27:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_entry_callback.hpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  28:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_entry_callback.hpp ****  */
  29:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_entry_callback.hpp **** // ----------------------------------------------------------------------------
  30:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_entry_callback.hpp **** 
  31:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_entry_callback.hpp **** #ifndef XPCC__MENU_ENTRY_CALLBACK
  32:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_entry_callback.hpp **** #define XPCC__MENU_ENTRY_CALLBACK
  33:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_entry_callback.hpp **** 
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_entry_callback.hpp **** #include "abstract_menu.hpp"
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_entry_callback.hpp **** 
  36:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_entry_callback.hpp **** namespace xpcc
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_entry_callback.hpp **** {
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_entry_callback.hpp **** 	class MenuEntryCallback
  39:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_entry_callback.hpp **** 	{
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_entry_callback.hpp **** 	public:
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_entry_callback.hpp **** 			typedef void (xpcc::AbstractMenu::*Function)();
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_entry_callback.hpp **** 
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_entry_callback.hpp **** 			template <typename M>
  44:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_entry_callback.hpp **** 			MenuEntryCallback(M *menu, void (M::*function)()) :
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_entry_callback.hpp **** 				menu(reinterpret_cast<xpcc::AbstractMenu *>(menu)),
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_entry_callback.hpp **** 				function(reinterpret_cast<Function>(function))
  47:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_entry_callback.hpp **** 			{
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_entry_callback.hpp **** 			}
  49:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_entry_callback.hpp **** 
  50:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_entry_callback.hpp **** 			inline void
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_entry_callback.hpp **** 			call() const
  52:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_entry_callback.hpp **** 			{
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_entry_callback.hpp **** 				(menu->*function)();
 313              		.loc 8 53 0
 314 0024 D369     		ldr	r3, [r2, #28]
 315 0026 D907     		lsls	r1, r3, #31
 316 0028 61D5     		bpl	.L57
 317 002a 5B10     		asrs	r3, r3, #1
 318 002c 5069     		ldr	r0, [r2, #20]
 319              	.LVL21:
 320 002e 9169     		ldr	r1, [r2, #24]
 321 0030 C258     		ldr	r2, [r0, r3]
 322              	.LVL22:
 323 0032 5258     		ldr	r2, [r2, r1]
 324 0034 C018     		adds	r0, r0, r3
 325              	.L39:
 326 0036 9047     		blx	r2
 327              	.LVL23:
 328              	.L21:
 329 0038 38BD     		pop	{r3, r4, r5, pc}
 330              	.LVL24:
 331              	.L26:
 332              	.LBE445:
 333              	.LBE444:
 334              	.LBE437:
 335              	.LBB448:
 146:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 			if (this->position + 1U < this->entries.getSize())
 336              		.loc 1 146 0
 337 003a 90F82610 		ldrb	r1, [r0, #38]	@ zero_extendqisi2
 338              	.LVL25:
 339              	.LBB449:
 340              	.LBB450:
 341              	.LBB451:
 342              	.LBB452:
 343              	.LBB453:
 190:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** }
 191:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 
 192:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** template <typename T, typename Allocator>
 193:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** typename xpcc::DoublyLinkedList<T, Allocator>::iterator
 194:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::end()
 195:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** {
 196:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	return iterator(0);
 197:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** }
 198:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 
 199:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** template <typename T, typename Allocator>
 200:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** typename xpcc::DoublyLinkedList<T, Allocator>::const_iterator 
 201:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::begin() const
 202:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** {
 203:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	return const_iterator(this->front);
 344              		.loc 6 203 0
 345 003e C56A     		ldr	r5, [r0, #44]
 346              	.LBE453:
 347              	.LBE452:
 348              	.LBE451:
 349              	.LBE450:
 350              	.LBE449:
 146:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 			if (this->position + 1U < this->entries.getSize())
 351              		.loc 1 146 0
 352 0040 481C     		adds	r0, r1, #1
 353              	.LVL26:
 354              	.LBB458:
 355              	.LBB457:
 356              	.LBB456:
  67:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	for (const_iterator it = this->begin(); it != this->end(); ++it) {
 357              		.loc 6 67 0
 358 0042 002D     		cmp	r5, #0
 359 0044 F8D0     		beq	.L21
 360 0046 2B46     		mov	r3, r5
 361 0048 0022     		movs	r2, #0
 362              	.LVL27:
 363              	.L28:
 364              	.LBB454:
 365              	.LBB455:
  80:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** 	this->node = this->node->next;
 366              		.loc 7 80 0
 367 004a 5B6A     		ldr	r3, [r3, #36]
 368              	.LVL28:
 369              	.LBE455:
 370              	.LBE454:
  68:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 		count++;
 371              		.loc 6 68 0
 372 004c 0132     		adds	r2, r2, #1
 373              	.LVL29:
  67:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	for (const_iterator it = this->begin(); it != this->end(); ++it) {
 374              		.loc 6 67 0
 375 004e 002B     		cmp	r3, #0
 376 0050 FBD1     		bne	.L28
 377              	.LBE456:
 378              	.LBE457:
 379              	.LBE458:
 146:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 			if (this->position + 1U < this->entries.getSize())
 380              		.loc 1 146 0
 381 0052 9042     		cmp	r0, r2
 382 0054 F0D2     		bcs	.L21
 383              	.LVL30:
 384              	.LBB459:
 385              	.LBB460:
 150:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 				for (uint8_t j=0; j<this->position;  ++j)
 386              		.loc 1 150 0 discriminator 1
 387 0056 21B1     		cbz	r1, .L29
 388              	.LVL31:
 389              	.L30:
 150:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 				for (uint8_t j=0; j<this->position;  ++j)
 390              		.loc 1 150 0 is_stmt 0
 391 0058 0133     		adds	r3, r3, #1
 392 005a DBB2     		uxtb	r3, r3
 393 005c 9942     		cmp	r1, r3
 394              	.LBB461:
 395              	.LBB462:
 396              		.loc 7 155 0 is_stmt 1
 397 005e 6D6A     		ldr	r5, [r5, #36]
 398              	.LVL32:
 399              	.LBE462:
 400              	.LBE461:
 150:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 				for (uint8_t j=0; j<this->position;  ++j)
 401              		.loc 1 150 0
 402 0060 FAD8     		bhi	.L30
 403              	.LVL33:
 404              	.L29:
 405              	.LBE460:
 406              	.LBB463:
 407              	.LBB464:
 408              		.file 9 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp"
   1:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** // coding: utf-8
   2:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** // ----------------------------------------------------------------------------
   3:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** /* Copyright (c) 2013, Roboterclub Aachen e.V.
   4:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp ****  * All rights reserved.
   5:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp ****  * 
   6:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp ****  * Redistribution and use in source and binary forms, with or without
   7:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp ****  * modification, are permitted provided that the following conditions are met:
   8:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp ****  * 
   9:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp ****  *     * Redistributions of source code must retain the above copyright
  10:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp ****  *       notice, this list of conditions and the following disclaimer.
  11:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp ****  *     * Redistributions in binary form must reproduce the above copyright
  12:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp ****  *       notice, this list of conditions and the following disclaimer in the
  13:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp ****  *       documentation and/or other materials provided with the distribution.
  14:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp ****  *     * Neither the name of the Roboterclub Aachen e.V. nor the
  15:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp ****  *       names of its contributors may be used to endorse or promote products
  16:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp ****  *       derived from this software without specific prior written permission.
  17:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp ****  * 
  18:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp ****  * THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
  19:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp ****  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  20:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  21:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp ****  * DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
  22:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  23:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  24:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  25:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  26:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  27:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  28:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp ****  */
  29:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** // ----------------------------------------------------------------------------
  30:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 
  31:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** #ifndef XPCC__SCROLLABLE_TEXT_HPP
  32:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** #define XPCC__SCROLLABLE_TEXT_HPP
  33:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** #include <stdint.h>
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 
  36:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** namespace xpcc
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** {
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 
  39:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 	 /**
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 	 * @brief The ScrollableText class scrolls the text if the
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 	 *        required space of the string is less than the
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 	 *        available.
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 	 *
  44:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 	 *\author Thorsten Lajewski
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 	 *\ingroup display_menu
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 	 *\warning This class only works in combination with xpcc::font::FixedWidth5x8
  47:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 	 *\todo A better implementation is needed.
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 	 */
  49:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 	class ScrollableText
  50:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 	{
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 	public:
  52:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		/**
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		 * @param text string which should be displayed on the Graphic Display
  54:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		 * @param space number of letters, which can be displayed at once
  55:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		 */
  56:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		ScrollableText(const char* text, uint16_t space);
  57:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		
  58:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		ScrollableText(const ScrollableText& text);
  59:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 
  60:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		ScrollableText& operator=(const ScrollableText& text);
  61:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 
  62:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		~ScrollableText();
  63:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 	
  64:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		/**
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		 *determines if the text can be displayed without scrolling
  66:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		 */
  67:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		inline bool 
  68:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		needsScrolling()
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		{
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 			return length > space;
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		}
  72:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		
  73:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		/**
  74:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		 * @brief getText return the part of the text which should be displayed next
  75:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		 *
  76:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		 * If the text needs scrolling and the scrolling is not paused, each call to this
  77:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		 * function returns another part of the text which is displaced by one letter.
  78:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		 *
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		 * @return part of the text
  80:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		 */
  81:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		const char*
  82:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		getText();
  83:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		
  84:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		/**
  85:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		 * @brief toogle the scrolling
  86:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		 */
  87:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		inline void
  88:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		toogle()
  89:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 		{
  90:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/scrollable_text.hpp **** 			this->paused = !this->paused;
 409              		.loc 9 90 0
 410 0062 2B78     		ldrb	r3, [r5, #0]	@ zero_extendqisi2
 411 0064 83F00103 		eor	r3, r3, #1
 412 0068 2B70     		strb	r3, [r5, #0]
 413              	.LVL34:
 414              	.LBE464:
 415              	.LBE463:
 155:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 				iter->text.setToStart();
 416              		.loc 1 155 0
 417 006a 2846     		mov	r0, r5
 418 006c 2A4B     		ldr	r3, .L60
 419 006e 9847     		blx	r3
 420              	.LVL35:
 157:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 				if (this->position - this->homePosition == this->maximalDrawnEntrys - 1)
 421              		.loc 1 157 0
 422 0070 94F82630 		ldrb	r3, [r4, #38]	@ zero_extendqisi2
 423 0074 94F82520 		ldrb	r2, [r4, #37]	@ zero_extendqisi2
 424 0078 94F82410 		ldrb	r1, [r4, #36]	@ zero_extendqisi2
 425 007c 981A     		subs	r0, r3, r2
 426 007e 0139     		subs	r1, r1, #1
 427 0080 8842     		cmp	r0, r1
 428 0082 39D0     		beq	.L58
 166:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 					this->position += 1;
 429              		.loc 1 166 0
 430 0084 0133     		adds	r3, r3, #1
 431              	.L56:
 432 0086 84F82630 		strb	r3, [r4, #38]
 433              	.LVL36:
 434              	.LBB465:
 435              	.LBB466:
 436              		.loc 7 155 0
 437 008a 6B6A     		ldr	r3, [r5, #36]
 438              	.LVL37:
 439              	.LBE466:
 440              	.LBE465:
 441              	.LBB467:
 442              	.LBB468:
 443              		.loc 9 90 0
 444 008c 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 445 008e 82F00102 		eor	r2, r2, #1
 446 0092 1A70     		strb	r2, [r3, #0]
 447              	.LVL38:
 448              	.L35:
 449              	.LBE468:
 450              	.LBE467:
 451              	.LBE459:
 452              	.LBE448:
 453              	.LBE436:
 454              	.LBE435:
 455              	.LBB492:
 456              	.LBB493:
 457              	.LBB494:
 202:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 				this->selectedEntryFunction(this->position);
 458              		.loc 1 202 0
 459 0094 2368     		ldr	r3, [r4, #0]
 460 0096 94F82610 		ldrb	r1, [r4, #38]	@ zero_extendqisi2
 461 009a DB69     		ldr	r3, [r3, #28]
 462 009c 2046     		mov	r0, r4
 463 009e 9847     		blx	r3
 464              	.LVL39:
 203:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 				this->buttonAction = true;
 465              		.loc 1 203 0
 466 00a0 0123     		movs	r3, #1
 467 00a2 2377     		strb	r3, [r4, #28]
 468 00a4 38BD     		pop	{r3, r4, r5, pc}
 469              	.LVL40:
 470              	.L25:
 471              	.LBE494:
 472              	.LBE493:
 473              	.LBE492:
 474              	.LBB495:
 475              	.LBB491:
 476              	.LBB470:
 177:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 			if (this->position > 0)
 477              		.loc 1 177 0
 478 00a6 90F82620 		ldrb	r2, [r0, #38]	@ zero_extendqisi2
 479 00aa 002A     		cmp	r2, #0
 480 00ac C4D0     		beq	.L21
 481              	.LVL41:
 482              	.LBB471:
 483              	.LBB472:
 484              	.LBB473:
 189:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	return iterator(this->front);
 485              		.loc 6 189 0
 486 00ae C56A     		ldr	r5, [r0, #44]
 487              	.LVL42:
 181:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 				for (uint8_t j = 0; j < this->position; ++j)
 488              		.loc 1 181 0
 489 00b0 0023     		movs	r3, #0
 490              	.LVL43:
 491              	.L33:
 492              	.LBE473:
 493              	.LBE472:
 494              	.LBB474:
 495 00b2 0133     		adds	r3, r3, #1
 496 00b4 DBB2     		uxtb	r3, r3
 497 00b6 9A42     		cmp	r2, r3
 498              	.LBB475:
 499              	.LBB476:
 500              		.loc 7 155 0
 501 00b8 6D6A     		ldr	r5, [r5, #36]
 502              	.LVL44:
 503              	.LBE476:
 504              	.LBE475:
 181:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 				for (uint8_t j = 0; j < this->position; ++j)
 505              		.loc 1 181 0
 506 00ba FAD8     		bhi	.L33
 507              	.LVL45:
 508              	.LBE474:
 509              	.LBB477:
 510              	.LBB478:
 511              		.loc 9 90 0
 512 00bc 2B78     		ldrb	r3, [r5, #0]	@ zero_extendqisi2
 513              	.LVL46:
 514 00be 83F00103 		eor	r3, r3, #1
 515 00c2 2B70     		strb	r3, [r5, #0]
 516              	.LVL47:
 517              	.LBE478:
 518              	.LBE477:
 187:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 				iter->text.setToStart();
 519              		.loc 1 187 0
 520 00c4 2846     		mov	r0, r5
 521              	.LVL48:
 522 00c6 144B     		ldr	r3, .L60
 523 00c8 9847     		blx	r3
 524              	.LVL49:
 189:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 				if (this->position == this->homePosition)
 525              		.loc 1 189 0
 526 00ca 94F82630 		ldrb	r3, [r4, #38]	@ zero_extendqisi2
 527 00ce 94F82520 		ldrb	r2, [r4, #37]	@ zero_extendqisi2
 528 00d2 9A42     		cmp	r2, r3
 529 00d4 15D0     		beq	.L59
 198:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 					this->position -= 1;
 530              		.loc 1 198 0
 531 00d6 013B     		subs	r3, r3, #1
 532 00d8 84F82630 		strb	r3, [r4, #38]
 533              	.LVL50:
 534              	.LBB479:
 535              	.LBB480:
 156:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** 	return *this;
 157:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** }
 158:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** 
 159:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** template <typename T, typename Allocator>
 160:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** typename xpcc::DoublyLinkedList<T, Allocator>::iterator&
 161:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** xpcc::DoublyLinkedList<T, Allocator>::iterator::operator -- ()
 162:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** {
 163:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** 	this->node = this->node->previous;
 536              		.loc 7 163 0
 537 00dc 2B6A     		ldr	r3, [r5, #32]
 538              	.LVL51:
 539              	.LBE480:
 540              	.LBE479:
 541              	.LBB481:
 542              	.LBB482:
 543              		.loc 9 90 0
 544 00de 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 545 00e0 82F00102 		eor	r2, r2, #1
 546 00e4 1A70     		strb	r2, [r3, #0]
 547 00e6 D5E7     		b	.L35
 548              	.LVL52:
 549              	.L23:
 550              	.LBE482:
 551              	.LBE481:
 552              	.LBE471:
 553              	.LBE470:
 209:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 			this->remove();
 554              		.loc 1 209 0
 555 00e8 0C4B     		ldr	r3, .L60+4
 556 00ea 9847     		blx	r3
 557              	.LVL53:
 210:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 			break;
 558              		.loc 1 210 0
 559 00ec 38BD     		pop	{r3, r4, r5, pc}
 560              	.LVL54:
 561              	.L57:
 562 00ee 5069     		ldr	r0, [r2, #20]
 563              	.LVL55:
 564              	.LBB488:
 565              	.LBB447:
 566              	.LBB446:
 567              		.loc 8 53 0
 568 00f0 9269     		ldr	r2, [r2, #24]
 569              	.LVL56:
 570 00f2 00EB6300 		add	r0, r0, r3, asr #1
 571 00f6 9EE7     		b	.L39
 572              	.LVL57:
 573              	.L58:
 574              	.LBE446:
 575              	.LBE447:
 576              	.LBE488:
 577              	.LBB489:
 578              	.LBB469:
 159:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 					this->homePosition += 1;
 579              		.loc 1 159 0
 580 00f8 0132     		adds	r2, r2, #1
 160:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 					this->position += 1;
 581              		.loc 1 160 0
 582 00fa 0133     		adds	r3, r3, #1
 159:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 					this->homePosition += 1;
 583              		.loc 1 159 0
 584 00fc 84F82520 		strb	r2, [r4, #37]
 585 0100 C1E7     		b	.L56
 586              	.LVL58:
 587              	.L59:
 588              	.LBE469:
 589              	.LBE489:
 590              	.LBB490:
 591              	.LBB487:
 191:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 					this->homePosition -= 1;
 592              		.loc 1 191 0
 593 0102 013A     		subs	r2, r2, #1
 594 0104 84F82520 		strb	r2, [r4, #37]
 192:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 					this->position -= 1;
 595              		.loc 1 192 0
 596 0108 84F82620 		strb	r2, [r4, #38]
 597              	.LVL59:
 598              	.LBB483:
 599              	.LBB484:
 600              		.loc 7 163 0
 601 010c 2B6A     		ldr	r3, [r5, #32]
 602              	.LVL60:
 603              	.LBE484:
 604              	.LBE483:
 605              	.LBB485:
 606              	.LBB486:
 607              		.loc 9 90 0
 608 010e 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 609 0110 82F00102 		eor	r2, r2, #1
 610 0114 1A70     		strb	r2, [r3, #0]
 611 0116 BDE7     		b	.L35
 612              	.L61:
 613              		.align	2
 614              	.L60:
 615 0118 00000000 		.word	_ZN4xpcc14ScrollableText10setToStartEv
 616 011c 00000000 		.word	_ZN4xpcc12AbstractView6removeEv
 617              	.LBE486:
 618              	.LBE485:
 619              	.LBE487:
 620              	.LBE490:
 621              	.LBE491:
 622              	.LBE495:
 623              		.cfi_endproc
 624              	.LFE1398:
 626              		.section	.text._ZN4xpcc12AbstractMenuD0Ev,"axG",%progbits,_ZN4xpcc12AbstractMenuD0Ev,comdat
 627              		.align	2
 628              		.weak	_ZN4xpcc12AbstractMenuD0Ev
 629              		.thumb
 630              		.thumb_func
 632              	_ZN4xpcc12AbstractMenuD0Ev:
 633              	.LFB1380:
 634              		.loc 2 47 0
 635              		.cfi_startproc
 636              		@ args = 0, pretend = 0, frame = 0
 637              		@ frame_needed = 0, uses_anonymous_args = 0
 638              	.LVL61:
 639              	.LBB499:
 640              	.LBB500:
 641 0000 054B     		ldr	r3, .L63
 642              	.LBE500:
 643              	.LBE499:
 644 0002 10B5     		push	{r4, lr}
 645              	.LCFI3:
 646              		.cfi_def_cfa_offset 8
 647              		.cfi_offset 4, -8
 648              		.cfi_offset 14, -4
 649              		.loc 2 47 0
 650 0004 0446     		mov	r4, r0
 651              	.LVL62:
 652              	.LBB502:
 653              	.LBB501:
 654 0006 0360     		str	r3, [r0, #0]
 655 0008 044B     		ldr	r3, .L63+4
 656 000a 9847     		blx	r3
 657              	.LVL63:
 658              	.LBE501:
 659              	.LBE502:
 660 000c 2046     		mov	r0, r4
 661 000e 044B     		ldr	r3, .L63+8
 662 0010 9847     		blx	r3
 663              	.LVL64:
 664 0012 2046     		mov	r0, r4
 665 0014 10BD     		pop	{r4, pc}
 666              	.L64:
 667 0016 00BF     		.align	2
 668              	.L63:
 669 0018 08000000 		.word	_ZTVN4xpcc12AbstractMenuE+8
 670 001c 00000000 		.word	_ZN4xpcc12AbstractViewD2Ev
 671 0020 00000000 		.word	_ZdlPv
 672              		.cfi_endproc
 673              	.LFE1380:
 675              		.section	.text._ZN4xpcc12StandardMenu4drawEv,"ax",%progbits
 676              		.align	2
 677              		.global	_ZN4xpcc12StandardMenu4drawEv
 678              		.thumb
 679              		.thumb_func
 681              	_ZN4xpcc12StandardMenu4drawEv:
 682              	.LFB1395:
  83:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** {
 683              		.loc 1 83 0
 684              		.cfi_startproc
 685              		@ args = 0, pretend = 0, frame = 0
 686              		@ frame_needed = 0, uses_anonymous_args = 0
 687              	.LVL65:
 688              	.LBB542:
 689              	.LBB543:
 690              	.LBB544:
 691              		.file 10 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp"
   1:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** // coding: utf-8
   2:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** // ----------------------------------------------------------------------------
   3:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** /* Copyright (c) 2013, Roboterclub Aachen e.V.
   4:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  * All rights reserved.
   5:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  * 
   6:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  * Redistribution and use in source and binary forms, with or without
   7:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  * modification, are permitted provided that the following conditions are met:
   8:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  * 
   9:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  *     * Redistributions of source code must retain the above copyright
  10:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  *       notice, this list of conditions and the following disclaimer.
  11:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  *     * Redistributions in binary form must reproduce the above copyright
  12:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  *       notice, this list of conditions and the following disclaimer in the
  13:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  *       documentation and/or other materials provided with the distribution.
  14:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  *     * Neither the name of the Roboterclub Aachen e.V. nor the
  15:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  *       names of its contributors may be used to endorse or promote products
  16:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  *       derived from this software without specific prior written permission.
  17:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  * 
  18:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  * THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
  19:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  20:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  21:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  * DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
  22:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  23:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  24:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  25:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  26:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  27:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  28:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp ****  */
  29:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** // ----------------------------------------------------------------------------
  30:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 
  31:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** #ifndef XPCC__VIEWSTACK_HPP
  32:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** #define XPCC__VIEWSTACK_HPP
  33:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** #include "../display/graphic_display.hpp"
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** #include "../../../container/stack.hpp"
  36:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** #include "../../../container/linked_list.hpp"
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** #include "menu_buttons.hpp"
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** #include "abstract_view.hpp"
  39:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** namespace xpcc
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** {
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 	/**
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 	* \brief Stack which handles the displaying
  44:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 	*        of views on the graphic display.
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 	*
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 	* This class also deallocates the views passed
  47:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 	* to the stack.
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 	*
  49:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 	* \ingroup	display_menu
  50:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 	* \author	Thorsten Lajewski
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 	*/
  52:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 	class ViewStack
  54:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 	{
  55:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 	public:
  56:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		ViewStack(xpcc::GraphicDisplay* display);
  57:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		
  58:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		virtual ~ViewStack();
  59:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		
  60:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		/**
  61:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		 * @brief get the top view from the stack
  62:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		 * @return pointer to view from stack
  63:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		 */
  64:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		inline xpcc::AbstractView* 
  66:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		get()
  67:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		{
  68:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 			return this->stack.get();
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		}
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		/**
  72:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		 * @brief push new view on top of stack the new
  73:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		 *        view will be displayed instead of the old
  74:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		 *        one
  75:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		 *
  76:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		 * @param view next displayed view
  77:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		 */
  78:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		inline void
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		push(xpcc::AbstractView* view)
  80:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		{
  81:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 			this->stack.push(view);
  82:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 			this->getDisplay().clear();
  83:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 			xpcc::AbstractView* top = this->get();
  84:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 			top->draw();
  85:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 			this->display->update();
  86:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		}
  87:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 
  88:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		/**
  89:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		 * @brief getDisplay access underlying GraphicDisplay
  90:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		 */
  91:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		inline xpcc::GraphicDisplay&
  92:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		getDisplay()
  93:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 		{
  94:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/view_stack.hpp **** 			return *this->display;
 692              		.loc 10 94 0
 693 0000 4368     		ldr	r3, [r0, #4]
 694              	.LBE544:
 695              	.LBE543:
 696              	.LBE542:
  83:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** {
 697              		.loc 1 83 0
 698 0002 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, sl, lr}
 699              	.LCFI4:
 700              		.cfi_def_cfa_offset 32
 701              		.cfi_offset 4, -32
 702              		.cfi_offset 5, -28
 703              		.cfi_offset 6, -24
 704              		.cfi_offset 7, -20
 705              		.cfi_offset 8, -16
 706              		.cfi_offset 9, -12
 707              		.cfi_offset 10, -8
 708              		.cfi_offset 14, -4
 709              	.LBB603:
 710              	.LBB546:
 711              	.LBB545:
 712              		.loc 10 94 0
 713 0006 D3F80480 		ldr	r8, [r3, #4]
 714              	.LBE545:
 715              	.LBE546:
  85:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	display->clear();
 716              		.loc 1 85 0
 717 000a D8F80030 		ldr	r3, [r8, #0]
 718              	.LBE603:
  83:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** {
 719              		.loc 1 83 0
 720 000e 0646     		mov	r6, r0
 721              	.LVL66:
 722              	.LBB604:
  85:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	display->clear();
 723              		.loc 1 85 0
 724 0010 1B69     		ldr	r3, [r3, #16]
 725              	.LBE604:
  83:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** {
 726              		.loc 1 83 0
 727 0012 82B0     		sub	sp, sp, #8
 728              	.LCFI5:
 729              		.cfi_def_cfa_offset 40
 730              	.LBB605:
  85:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	display->clear();
 731              		.loc 1 85 0
 732 0014 4046     		mov	r0, r8
 733              	.LVL67:
 734 0016 9847     		blx	r3
 735              	.LVL68:
 736              	.LBB547:
 737              	.LBB548:
 738              	.LBB549:
 739              		.file 11 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp"
   1:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // coding: utf-8
   2:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
   3:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** /* Copyright (c) 2011, Roboterclub Aachen e.V.
   4:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp ****  * All rights reserved.
   5:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp ****  *
   6:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp ****  * Redistribution and use in source and binary forms, with or without
   7:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp ****  * modification, are permitted provided that the following conditions are met:
   8:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp ****  *
   9:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp ****  *     * Redistributions of source code must retain the above copyright
  10:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp ****  *       notice, this list of conditions and the following disclaimer.
  11:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp ****  *     * Redistributions in binary form must reproduce the above copyright
  12:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp ****  *       notice, this list of conditions and the following disclaimer in the
  13:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp ****  *       documentation and/or other materials provided with the distribution.
  14:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp ****  *     * Neither the name of the Roboterclub Aachen e.V. nor the
  15:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp ****  *       names of its contributors may be used to endorse or promote products
  16:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp ****  *       derived from this software without specific prior written permission.
  17:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp ****  *
  18:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp ****  * THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
  19:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp ****  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  20:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  21:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp ****  * DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
  22:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  23:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  24:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  25:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  26:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  27:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  28:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp ****  */
  29:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
  30:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
  31:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** #ifndef XPCC__VECTOR2_HPP
  32:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	#error	"Don't include this file directly, use 'vector2.hpp' instead!"
  33:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** #endif
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** #include <cmath>
  36:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
  39:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::Vector() :
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	x(),
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	y()
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
  44:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
  47:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::Vector(const T& inX, const T& inY) :
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	x(inX),
  49:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	y(inY)
  50:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
  52:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
  54:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
  55:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::Vector(
  56:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 		const xpcc::Vector<T, 1> &inX,
  57:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 		const xpcc::Vector<T, 1> &inY) :
  58:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	x(inX.x),
  59:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	y(inY.x)
  60:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
  61:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
  62:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
  63:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
  64:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::Vector(const T &inX, const xpcc::Vector<T, 1> &inY) :
  66:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	x(inX),
  67:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	y(inY.x)
  68:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
  72:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
  73:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::Vector(const xpcc::Vector<T, 1> &inX, const T &inY) :
  74:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	x(inX.x),
  75:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	y(inY)
  76:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
  77:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
  78:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
  80:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
  81:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::Vector(T inVal) :
  82:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	x(inVal),
  83:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	y(inVal)
  84:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
  85:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
  86:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
  87:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
  88:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
  89:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::Vector(const xpcc::Matrix<T, 2, 1> &rhs) :
  90:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	x(reinterpret_cast<const T*>(&rhs)[0]),
  91:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	y(reinterpret_cast<const T*>(&rhs)[1])
  92:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
  93:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
  94:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
  95:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
  96:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
  97:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::Vector(const Vector &rhs) :
  98:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	x(rhs.x),
  99:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	y(rhs.y)
 100:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
 101:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
 102:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
 103:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
 104:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
 105:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** void
 106:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::set(const T& newX, const T& newY)
 107:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
 108:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	this->x = newX;
 109:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	this->y = newY;
 110:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
 111:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
 112:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
 113:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
 114:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** void
 115:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::setX(const T& value)
 116:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
 117:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	this->x = value;
 118:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
 119:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
 120:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
 121:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** void
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::setY(const T& value)
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
 124:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	this->y = value;
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
 127:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
 128:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** const T&
 130:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::getX() const
 131:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
 132:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	return this->x;
 133:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
 134:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
 135:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
 136:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** const T&
 137:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::getY() const
 138:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
 139:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	return this->y;
 140:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
 141:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
 142:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
 143:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
 144:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** T
 145:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::getLength() const
 146:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
 147:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	float tx = this->x;
 148:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	float ty = this->y;
 149:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	
 150:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	return GeometricTraits<T>::round(std::sqrt(tx*tx + ty*ty));
 151:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
 152:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
 153:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
 154:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
 155:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** typename xpcc::Vector<T, 2>::WideType
 156:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::getLengthSquared() const
 157:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
 158:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	WideType tx = static_cast<WideType>(this->x);
 159:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	WideType ty = static_cast<WideType>(this->y);
 160:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	
 161:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	return tx * tx + ty * ty;
 162:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
 163:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
 164:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
 165:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
 166:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** float
 167:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::getAngle() const
 168:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
 169:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	return std::atan2(this->y, this->x);
 170:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
 171:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
 172:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
 173:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
 174:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>&
 175:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::normalize()
 176:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
 177:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	T length = this->getLength();
 178:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	
 179:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	this->x = this->x / length;
 180:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	this->y = this->y / length;
 181:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	
 182:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	return *this;
 183:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
 184:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
 185:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
 186:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
 187:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>
 188:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::normalized() const
 189:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
 190:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	Vector a(*this);
 191:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	a.normalize();
 192:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	return a;
 193:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
 194:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
 195:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
 196:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
 197:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>&
 198:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::scale(float length)
 199:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
 200:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	float factor = length / getLength();
 201:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	
 202:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	this->x = this->x * factor;
 203:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	this->y = this->y * factor;
 204:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	
 205:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	return *this;
 206:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
 207:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
 208:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
 209:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
 210:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>
 211:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::scaled(float length) const
 212:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
 213:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	Vector a(*this);
 214:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	a.scale(length);
 215:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	return a;
 216:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
 217:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
 218:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
 219:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
 220:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>&
 221:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::rotate(float phi)
 222:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
 223:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	float c = std::cos(phi);
 224:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	float s = std::sin(phi);
 225:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	
 226:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	// without rounding the result might be false for T = integer
 227:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	T tx =    GeometricTraits<T>::round(c * this->x - s * this->y);
 228:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	this->y = GeometricTraits<T>::round(s * this->x + c * this->y);
 229:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	this->x = tx;
 230:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	
 231:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	return *this;
 232:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
 233:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
 234:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
 235:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>&
 237:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::translate(const Vector<T, 2>& vector)
 238:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
 239:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	this->x += vector.x;
 240:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	this->y += vector.y;
 241:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	
 242:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	return *this;
 243:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
 244:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
 245:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
 246:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
 247:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** typename xpcc::Vector<T, 2>::WideType
 248:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::getDistanceTo(const Vector<T, 2>& other) const
 249:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
 250:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	return (other - *this).getLength();
 251:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
 252:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
 253:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
 254:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
 255:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** float
 256:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::getAngleTo(const Vector<T, 2>& other) const
 257:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
 258:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	return (other - *this).getAngle();
 259:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
 260:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
 261:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
 262:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
 263:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** typename xpcc::Vector<T, 2>::WideType
 264:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::dot(const xpcc::Vector<T, 2>& other) const
 265:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
 266:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	return (static_cast<WideType>(this->x) * static_cast<WideType>(other.x) +
 267:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 			static_cast<WideType>(this->y) * static_cast<WideType>(other.y));
 268:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
 269:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
 270:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
 271:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
 272:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** typename xpcc::Vector<T, 2>::WideType
 273:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::cross(const xpcc::Vector<T, 2>& other) const
 274:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
 275:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	return (static_cast<WideType>(this->x) * static_cast<WideType>(other.y) -
 276:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 			static_cast<WideType>(this->y) * static_cast<WideType>(other.x));
 277:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
 278:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
 279:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
 280:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T> template<typename U>
 281:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<U, 2>
 282:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::convert() const
 283:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
 284:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	return Vector<U, 2>(static_cast<U>(this->x), static_cast<U>(this->y));
 285:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
 286:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
 289:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::toOrthogonalVector() const
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
 292:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	return xpcc::Vector<T, 2>(y, -x);
 293:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
 294:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
 295:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
 296:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
 297:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>
 298:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::perpendicular() const
 299:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
 300:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	return xpcc::Vector<T, 2>(y, -x);
 301:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
 302:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
 303:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
 304:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
 305:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** int_fast8_t
 306:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>::ccw(const Vector& a, const Vector& b,
 307:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 		const Vector& c)
 308:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
 309:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	WideType dx1 = b.x - a.x;
 310:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	WideType dy1 = b.y - a.y;
 311:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	WideType dx2 = c.x - a.x;
 312:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	WideType dy2 = c.y - a.y;
 313:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	
 314:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	WideType d1 = dx1 * dy2;
 315:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	WideType d2 = dy1 * dx2;
 316:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	
 317:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	if (d1 > d2) {
 318:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 		return 1;
 319:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	}
 320:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	else if (d1 < d2) {
 321:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 		return -1;
 322:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	}
 323:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	else
 324:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	{
 325:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 		if ((dx1 * dx2 < 0) || (dy1 * dy2 < 0)) {
 326:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 			return -1;
 327:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 		}
 328:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 		else
 329:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 		{
 330:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 			if ((dx1 * dx1 + dy1 * dy1) >= (dx2 * dx2 + dy2 * dy2)) {
 331:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 				return 0;
 332:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 			}
 333:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 			else {
 334:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 				return 1;
 335:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 			}
 336:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 		}
 337:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	}
 338:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** }
 339:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 
 340:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** // ----------------------------------------------------------------------------
 341:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** template<typename T>
 342:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** xpcc::Vector<T, 2>& xpcc::Vector<T, 2>::operator = (const xpcc::Vector<T, 2> &rhs)
 343:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** {
 344:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	x = rhs.x;
 740              		.loc 11 344 0
 741 0018 0022     		movs	r2, #0
 742              	.LBE549:
 743              	.LBE548:
 744              	.LBE547:
 745              	.LBB552:
 746              	.LBB553:
 747              		.file 12 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp"
   1:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** // coding: utf-8
   2:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** // ----------------------------------------------------------------------------
   3:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** /* Copyright (c) 2009, Roboterclub Aachen e.V.
   4:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * All rights reserved.
   5:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *
   6:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * Redistribution and use in source and binary forms, with or without
   7:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * modification, are permitted provided that the following conditions are met:
   8:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * 
   9:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *     * Redistributions of source code must retain the above copyright
  10:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *       notice, this list of conditions and the following disclaimer.
  11:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *     * Redistributions in binary form must reproduce the above copyright
  12:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *       notice, this list of conditions and the following disclaimer in the
  13:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *       documentation and/or other materials provided with the distribution.
  14:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *     * Neither the name of the Roboterclub Aachen e.V. nor the
  15:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *       names of its contributors may be used to endorse or promote products
  16:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *       derived from this software without specific prior written permission.
  17:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *
  18:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
  19:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  20:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  21:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
  22:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  23:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  24:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  25:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  26:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  27:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  28:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  */
  29:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** // ----------------------------------------------------------------------------
  30:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
  31:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #ifndef XPCC__IOSTREAM_HPP
  32:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #define XPCC__IOSTREAM_HPP
  33:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #include <xpcc/architecture/utils.hpp>
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
  36:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #include "iodevice.hpp"
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #include "iodevice_wrapper.hpp"
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
  39:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** namespace xpcc
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** {
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	/**
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	 * \brief 	This Formats all primary types into a string stream for
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	 * 			output or it reads values from a input and converts them to
  44:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	 * 			a given type;
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	 *
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	 * \ingroup io
  47:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	 * \author	Martin Rosekeit <martin.rosekeit@rwth-aachen.de>
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	 */
  49:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	class IOStream
  50:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	{
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	public :
  52:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		/**
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		 * \brief	Constructor
  54:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		 * 
  55:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		 * \param	device	device to write the stream to
  56:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		 * 
  57:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		 * \code
  58:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		 *	MyIODevice device;
  59:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		 *	IOStream stream( device );
  60:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		 * \endcode
  61:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		 */
  62:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		IOStream(IODevice& device);
  63:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
  64:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		inline IOStream&
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		write(char c)
  66:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
  67:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->device->write(c);
  68:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		inline IOStream&
  72:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		flush()
  73:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
  74:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->device->flush();
  75:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->mode = Mode::Ascii;
  76:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
  77:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
  78:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		/// set the output mode to Mode::Binary style for \c char and \c char*
  80:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
  81:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		bin()
  82:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
  83:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->mode = Mode::Binary;
  84:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
  85:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
  86:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
  87:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		/// set the output mode to Mode::Hexadecimal style for \c char and \c char*
  88:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
  89:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		hex()
  90:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
  91:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->mode = Mode::Hexadecimal;
  92:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
  93:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
  94:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
  95:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		/// set the output mode to Mode::Ascii style for \c char and \c char*
  96:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
  97:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ascii()
  98:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
  99:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->mode = Mode::Ascii;
 100:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 101:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 102:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 103:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 104:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		IOStream&
 105:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const unsigned char& v)
 106:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 107:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 108:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeInteger(static_cast<uint16_t>(v));
 109:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 110:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 111:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 112:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 113:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else {
 114:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 115:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 116:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 117:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 118:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
 119:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		IOStream&
 120:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const char& v)
 121:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 124:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 127:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 128:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else {
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 130:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 131:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 132:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 133:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 134:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 135:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const uint16_t& v)
 136:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 137:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 138:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeInteger(v);
 139:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 140:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 141:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v >> 8));
 142:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v & 0xff));
 143:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 144:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else {
 145:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v >> 8));
 146:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v & 0xff));
 147:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 148:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 149:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 150:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
 151:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 152:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const int16_t& v)
 153:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 154:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 155:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeInteger(v);
 156:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 157:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 158:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v >> 8));
 159:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v & 0xff));
 160:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 161:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else {
 162:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v >> 8));
 163:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v & 0xff));
 164:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 165:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 166:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 167:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
 168:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 169:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const uint32_t& v)
 170:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 171:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 172:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeInteger(v);
 173:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 174:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 175:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v >> 24));
 176:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v >> 16));
 177:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v >> 8));
 178:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v & 0xff));
 179:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 180:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else {
 181:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v >> 24));
 182:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v >> 16));
 183:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v >> 8));
 184:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v & 0xff));
 185:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 186:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 187:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 188:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
 189:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 190:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const int32_t& v)
 191:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 192:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 193:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeInteger(v);
 194:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 195:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 196:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v >> 24));
 197:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v >> 16));
 198:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v >> 8));
 199:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v & 0xff));
 200:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 201:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else {
 202:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v >> 24));
 203:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v >> 16));
 204:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v >> 8));
 205:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v & 0xff));
 206:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 207:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 208:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 209:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 210:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #if defined(XPCC__OS_OSX)
 211:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		// For APPLE 'int64_t' is of type 'int'. Therefore there is no
 212:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		// function here for the default type 'long int'. As 'long int' has the same
 213:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		// width as 'int64_t' we just use a typedef here.
 214:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 215:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const long int& v)
 216:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 217:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int64_t>(v));
 218:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 219:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 220:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 221:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 222:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const long unsigned int& v)
 223:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 224:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<uint64_t>(v));
 225:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 226:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 227:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #endif
 228:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 229:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #if defined(XPCC__CPU_ARM) || defined(XPCC__CPU_AVR32)
 230:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		// For ARM 'int32_t' is of type 'long'. Therefore there is no
 231:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		// function here for the default type 'int'. As 'int' has the same
 232:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		// width as 'int32_t' we just use a typedef here.
 233:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 234:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const int& v)
 235:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 237:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 238:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 239:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 240:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 241:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const unsigned int& v)
 242:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 243:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<uint32_t>(v));
 244:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 245:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 246:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #endif
 247:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 248:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** // The 64-bit types on the AVR are extremely slow and are
 249:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** // therefore excluded here
 250:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #if !defined(XPCC__CPU_AVR)
 251:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 252:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const uint64_t& v)
 253:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 254:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(v);
 255:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 256:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 257:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 258:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 259:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const int64_t& v)
 260:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 261:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(v);
 262:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 263:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 264:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #endif
 265:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 266:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 267:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const float& v)
 268:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 269:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeFloat(v);
 270:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 271:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 272:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
 273:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 274:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const double& v)
 275:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 276:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #if defined(XPCC__CPU_AVR)
 277:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeFloat(static_cast<float>(v));
 278:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #else
 279:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeDouble(v);
 280:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #endif
 281:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 282:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 283:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
 284:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		IOStream&
 285:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const char* s)
 286:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 748              		.loc 12 287 0
 749 001a D8F80830 		ldr	r3, [r8, #8]
 750              	.LBE553:
 751              	.LBE552:
  87:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	(*display) << this->title;
 752              		.loc 1 87 0
 753 001e 316A     		ldr	r1, [r6, #32]
 754              	.LBB558:
 755              	.LBB551:
 756              	.LBB550:
 757              		.loc 11 344 0
 758 0020 A8F82420 		strh	r2, [r8, #36]	@ movhi
 345:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	y = rhs.y;
 759              		.loc 11 345 0
 760 0024 0222     		movs	r2, #2
 761 0026 A8F82620 		strh	r2, [r8, #38]	@ movhi
 762              	.LBE550:
 763              	.LBE551:
 764              	.LBE558:
  87:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	(*display) << this->title;
 765              		.loc 1 87 0
 766 002a 08F10407 		add	r7, r8, #4
 767              	.LVL69:
 768              	.LBB559:
 769              	.LBB556:
 770              		.loc 12 287 0
 771 002e 002B     		cmp	r3, #0
 772 0030 7BD0     		beq	.L93
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 289:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 773              		.loc 12 290 0
 774 0032 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 775              		.loc 12 291 0
 776 0034 3846     		mov	r0, r7
 777 0036 0CBF     		ite	eq
 778 0038 404B     		ldreq	r3, .L97
 292:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 293:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else {
 294:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(s);
 779              		.loc 12 294 0
 780 003a 414B     		ldrne	r3, .L97+4
 781 003c 9847     		blx	r3
 782              	.LVL70:
 783              	.L67:
 784              	.LBE556:
 785              	.LBE559:
  88:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	display->drawLine(0, 10, display->getWidth(), 10);
 786              		.loc 1 88 0
 787 003e D8F80030 		ldr	r3, [r8, #0]
 788 0042 404C     		ldr	r4, .L97+8
 789 0044 9B68     		ldr	r3, [r3, #8]
 790 0046 4046     		mov	r0, r8
 791 0048 9847     		blx	r3
 792              	.LVL71:
 793 004a 0A22     		movs	r2, #10
 794 004c 03B2     		sxth	r3, r0
 795 004e 0092     		str	r2, [sp, #0]
 796 0050 4046     		mov	r0, r8
 797 0052 0021     		movs	r1, #0
 798 0054 A047     		blx	r4
 799              	.LVL72:
 800              	.LBB560:
 801              	.LBB561:
 802              	.LBB562:
 803              	.LBB563:
 804              	.LBB564:
 805              		.loc 6 203 0
 806 0056 F56A     		ldr	r5, [r6, #44]
 807              	.LVL73:
 808              	.LBE564:
 809              	.LBE563:
  67:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	for (const_iterator it = this->begin(); it != this->end(); ++it) {
 810              		.loc 6 67 0
 811 0058 002D     		cmp	r5, #0
 812 005a 6CD0     		beq	.L86
 813 005c 2B46     		mov	r3, r5
 814 005e 0022     		movs	r2, #0
 815              	.LVL74:
 816              	.L70:
 817              	.LBB565:
 818              	.LBB566:
  80:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** 	this->node = this->node->next;
 819              		.loc 7 80 0
 820 0060 5B6A     		ldr	r3, [r3, #36]
 821              	.LVL75:
 822              	.LBE566:
 823              	.LBE565:
  68:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 		count++;
 824              		.loc 6 68 0
 825 0062 0132     		adds	r2, r2, #1
 826              	.LVL76:
  67:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	for (const_iterator it = this->begin(); it != this->end(); ++it) {
 827              		.loc 6 67 0
 828 0064 002B     		cmp	r3, #0
 829 0066 FBD1     		bne	.L70
 830              	.LVL77:
 831              	.L69:
 832              	.LBE562:
 833              	.LBE561:
 834              	.LBE560:
 835              	.LBB569:
  93:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	for(uint8_t j=0; j<this->homePosition; ++j)
 836              		.loc 1 93 0 discriminator 1
 837 0068 96F82510 		ldrb	r1, [r6, #37]	@ zero_extendqisi2
 838 006c 29B1     		cbz	r1, .L71
  93:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	for(uint8_t j=0; j<this->homePosition; ++j)
 839              		.loc 1 93 0 is_stmt 0
 840 006e 0023     		movs	r3, #0
 841              	.LVL78:
 842              	.L72:
 843 0070 0133     		adds	r3, r3, #1
 844 0072 DBB2     		uxtb	r3, r3
 845 0074 8B42     		cmp	r3, r1
 846              	.LBB570:
 847              	.LBB571:
 155:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** 	this->node = this->node->next;
 848              		.loc 7 155 0 is_stmt 1
 849 0076 6D6A     		ldr	r5, [r5, #36]
 850              	.LVL79:
 851              	.LBE571:
 852              	.LBE570:
  93:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	for(uint8_t j=0; j<this->homePosition; ++j)
 853              		.loc 1 93 0
 854 0078 FAD3     		bcc	.L72
 855              	.LVL80:
 856              	.L71:
 857              	.LBE569:
  98:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	for (i = 0; i < this->maximalDrawnEntrys; i++)
 858              		.loc 1 98 0 discriminator 1
 859 007a 96F82430 		ldrb	r3, [r6, #36]	@ zero_extendqisi2
 860 007e 002B     		cmp	r3, #0
 861 0080 4AD0     		beq	.L65
 862              		.file 13 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_displ
   1:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** // coding: utf-8
   2:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** // ----------------------------------------------------------------------------
   3:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** /* Copyright (c) 2009, Roboterclub Aachen e.V.
   4:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp ****  * All rights reserved.
   5:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp ****  *
   6:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp ****  * Redistribution and use in source and binary forms, with or without
   7:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp ****  * modification, are permitted provided that the following conditions are met:
   8:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp ****  * 
   9:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp ****  *     * Redistributions of source code must retain the above copyright
  10:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp ****  *       notice, this list of conditions and the following disclaimer.
  11:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp ****  *     * Redistributions in binary form must reproduce the above copyright
  12:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp ****  *       notice, this list of conditions and the following disclaimer in the
  13:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp ****  *       documentation and/or other materials provided with the distribution.
  14:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp ****  *     * Neither the name of the Roboterclub Aachen e.V. nor the
  15:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp ****  *       names of its contributors may be used to endorse or promote products
  16:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp ****  *       derived from this software without specific prior written permission.
  17:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp ****  *
  18:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp ****  * THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
  19:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp ****  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  20:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  21:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp ****  * DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
  22:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  23:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  24:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  25:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  26:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  27:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  28:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp ****  */
  29:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** // ----------------------------------------------------------------------------
  30:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 
  31:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** #ifndef XPCC__GRAPHIC_DISPLAY_HPP
  32:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** #define XPCC__GRAPHIC_DISPLAY_HPP
  33:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** #include <xpcc/architecture/driver/accessor.hpp>
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** #include <xpcc/math/geometry.hpp>
  36:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** #include <xpcc/io/iodevice.hpp>
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** #include <xpcc/io/iostream.hpp>
  39:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** #include "font.hpp"
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** namespace xpcc
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** {
  44:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	namespace glcd
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	{
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		typedef Vector<int16_t, 2> Point;
  47:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		// RGB16 (565) Format
  49:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		class Color
  50:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		{
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		public:
  52:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			static ALWAYS_INLINE Color white()   { return Color(0xffff); };
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			static ALWAYS_INLINE Color yellow()  { return Color(0xFFE0); };
  54:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			static ALWAYS_INLINE Color magenta() { return Color(0xF81F); };
  55:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			static ALWAYS_INLINE Color red()     { return Color(0xF800); };
  56:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			static ALWAYS_INLINE Color orange()  { return Color(0xFD20); };
  57:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			static ALWAYS_INLINE Color sliver()  { return Color(0xC618); };
  58:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			static ALWAYS_INLINE Color gray()    { return Color(0x8410); };
  59:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			static ALWAYS_INLINE Color maroon()  { return Color(0x8000); };
  60:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			static ALWAYS_INLINE Color lime()    { return Color(0x07E0); };
  61:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			static ALWAYS_INLINE Color green()   { return Color(0x0400); };
  62:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			static ALWAYS_INLINE Color blue()    { return Color(0x001F); };
  63:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			static ALWAYS_INLINE Color navy()    { return Color(0x0010); };
  64:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			static ALWAYS_INLINE Color black()   { return Color(0x0000); };
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			
  66:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			/**
  67:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			 * @param	red
  68:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			 * 		Range [0..255]
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			 * @param	green
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			 * 		Range [0..255]
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			 * @param	blue
  72:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			 * 		Range [0..255]
  73:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			 */
  74:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			Color(uint8_t red, uint8_t green, uint8_t blue) :
  75:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 				color(((static_cast<uint16_t>(red >> 3) << 11) |
  76:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 						(static_cast<uint16_t>(green >> 2) << 5) |
  77:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 						static_cast<uint16_t>(blue >> 3)))
  78:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			{
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			}
  80:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			
  81:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			Color(uint16_t color) :
  82:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 				color(color)
  83:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			{
  84:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			}
  85:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			
  86:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			inline uint16_t
  87:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			getValue() const
  88:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			{
  89:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 				return color;
  90:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			}
  91:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			
  92:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			bool
  93:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			operator == (const Color& other) const {
  94:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 				return (color == other.color);
  95:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			}
  96:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			
  97:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		private:
  98:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			uint16_t color;
  99:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		};
 100:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	}
 101:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	
 102:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	// TODO
 103:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** //	enum class Orientation : uint8_t
 104:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** //	{
 105:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** //		Portrait, 				//< Connector top
 106:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** //		LandscapeRight,			//< Connector right
 107:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** //		LandscapeLeft,			//< Connector left
 108:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** //		PortraitUpsideDown,		//< Connector bottom
 109:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** //	};
 110:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	
 111:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	/**
 112:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * Base class for graphical displays. 
 113:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * 
 114:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * Coordinate System:
 115:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * \code
 116:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * (0, 0)
 117:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 *    +---------------------+
 118:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 *    |  ----> X            |
 119:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 *    | |                   |
 120:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 *    | |                   |
 121:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 *    | V Y                 |
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 *    |                     |
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 *    |                     |
 124:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 *    |                     |
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 *    +---------------------+
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 *                e.g. (127, 63)
 127:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * \endcode
 128:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * 
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * The size (width and height) of a graphics primitive always correspond
 130:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * to its mathematical model, ignoring the rendered with. As everything
 131:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * is drawn one pixel wide, the pixels will be rendered to the right and
 132:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * below the mathematically defined points.
 133:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * 
 134:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * \ingroup	lcd
 135:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 */
 136:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	/*
 137:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * TODO
 138:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * 
 139:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * setBrush() and setPen() for filling and the border?
 140:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * possible Brush/Pen modes:
 141:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * - NONE
 142:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * - BLACK
 143:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * - WHITE
 144:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * - INVERT
 145:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * 
 146:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * Text mode:
 147:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * - left adjusted (default)
 148:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * - right adjusted
 149:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * - centered
 150:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * 
 151:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * All modes relative to the current viewport. This would make
 152:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 * drawing a menu system easier.
 153:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	 */
 154:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	class GraphicDisplay : public IOStream
 155:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	{
 156:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	public:
 157:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		friend class VirtualGraphicDisplay;
 158:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 
 159:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		GraphicDisplay();
 160:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 161:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		virtual
 162:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		~GraphicDisplay()
 163:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		{
 164:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		}
 165:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 166:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		/**
 167:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * Number of pixel in horizontal direction.
 168:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 */
 169:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		virtual uint16_t
 170:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		getWidth() const = 0;
 171:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 
 172:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		/**
 173:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * Number of pixel in vertical direction.
 174:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 */
 175:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		virtual uint16_t
 176:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		getHeight() const = 0;
 177:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 
 178:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		/**
 179:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * Clear screen and reset the cursor.
 180:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 */
 181:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		virtual void
 182:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		clear() = 0;
 183:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 184:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		/**
 185:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * Transfer the content of the RAM buffer to the real display.
 186:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 */
 187:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		virtual void
 188:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		update() = 0;
 189:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 190:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		/**
 191:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * Set a new foreground color.
 192:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * 
 193:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * The foreground color is used for all drawing operations. Default
 194:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * is white.
 195:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * 
 196:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * @see	setBackgroundColor()
 197:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 */
 198:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		void
 199:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		setColor(const glcd::Color& color);
 200:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 201:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		inline glcd::Color
 202:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		getForegroundColor() const
 203:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		{
 204:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			return this->foregroundColor;
 205:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		}
 206:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 207:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		/**
 208:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * Set new background color.
 209:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * 
 210:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * The background color used when clearing the screen. Default is black.
 211:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * 
 212:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * @see	setColor()
 213:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 */
 214:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		void
 215:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		setBackgroundColor(const glcd::Color& color);
 216:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 217:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		/**
 218:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * Limit the coordinate system to a smaller area.
 219:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * 
 220:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * The default viewport is the complete screen.
 221:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 */
 222:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		//void
 223:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		//setViewport();
 224:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 225:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		// TODO Set a clipping area
 226:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		// Everything drawn outside this area will be discarded.
 227:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		//void
 228:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		//setClippingWindow();
 229:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 230:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		/**
 231:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * Draw a pixel in currently active foreground color.
 232:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * 
 233:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * \param	x	x-position
 234:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * \param	y	y-position
 235:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 */
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		inline void
 237:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		drawPixel(int16_t x, int16_t y)
 238:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		{
 239:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			(this->*draw)(x, y);
 240:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		}
 241:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 242:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		inline void
 243:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		drawPixel(glcd::Point center)
 244:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		{
 245:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			(this->*draw)(center.x, center.y);
 246:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		}
 247:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 248:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		/**
 249:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * Draw a line.
 250:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * 
 251:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * Uses the faster drawHorizontalLine() or drawVerticalLine() if
 252:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * possible, otherwise the line is rastered with the Bresenham line
 253:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * algorithm.
 254:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * 
 255:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * \param start	first point
 256:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * \param end	second point
 257:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 */
 258:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		inline void
 259:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		drawLine(glcd::Point start, glcd::Point end)
 260:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		{
 261:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			this->drawLine(start.getX(), start.getY(), end.getX(), end.getY());
 262:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		}
 263:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 264:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		/**
 265:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * Draw a line specified by x and y coordinates of both points.
 266:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 */
 267:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		void
 268:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		drawLine(int16_t x1, int16_t y1, int16_t x2, int16_t y2);
 269:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 270:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		inline void
 271:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		drawRectangle(int16_t x, int16_t y, uint16_t width, uint16_t height)
 272:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		{
 273:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			drawRectangle(glcd::Point(x, y), width, height);
 274:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		}
 275:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 276:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		/**
 277:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * Draw a rectangle.
 278:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 */
 279:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		void
 280:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		drawRectangle(glcd::Point upperLeft, uint16_t width, uint16_t height);
 281:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 282:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		/**
 283:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * Draw a rectangle with rounded corners.
 284:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 */
 285:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		void
 286:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		drawRoundedRectangle(glcd::Point upperLeft,
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 				uint16_t width, uint16_t height,
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 				uint16_t radius);
 289:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		/**
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * Draw a circle
 292:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * 
 293:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * Uses the midpoint circle algorithm.
 294:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * 
 295:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * \param center	Center of the circle
 296:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * \param radius	Radius of the circle
 297:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 */
 298:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		void
 299:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		drawCircle(glcd::Point center, uint16_t radius);
 300:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 301:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		/**
 302:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * Draw an ellipse.
 303:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * 
 304:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * Uses a variation of the midpoint algorithm. May be improved through
 305:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * simplification of the used formula.
 306:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * 
 307:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * \param center	Center of the ellipse
 308:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * \param rx		radius in x-direction
 309:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * \param ry		radius in y-direction
 310:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 */
 311:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		void
 312:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		drawEllipse(glcd::Point center, int16_t rx, int16_t ry);
 313:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 314:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		/**
 315:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * Draw an image.
 316:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * 
 317:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * The first byte in the image data specifies the with, the second
 318:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * byte the height. Afterwards the actual image data.
 319:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * 
 320:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * \param upperLeft		Upper left corner
 321:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * \param image			Image data
 322:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * 
 323:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * \see	drawImage()
 324:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 */
 325:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		void
 326:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		drawImage(glcd::Point upperLeft, xpcc::accessor::Flash<uint8_t> image);
 327:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 328:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		/**
 329:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * Draw an image.
 330:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * 
 331:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * \p data is the actual image data without any size information.
 332:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 */
 333:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		virtual void
 334:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		drawImageRaw(glcd::Point upperLeft,
 335:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 				uint16_t width, uint16_t height,
 336:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 				xpcc::accessor::Flash<uint8_t> data);
 337:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 338:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		/**
 339:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * Fill a rectangle.
 340:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 */
 341:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		void
 342:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		fillRectangle(glcd::Point upperLeft, uint16_t width, uint16_t height);
 343:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 344:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		inline void
 345:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		fillRectangle(int16_t x, int16_t y, uint16_t width, uint16_t height)
 346:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		{
 347:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			fillRectangle(glcd::Point(x, y), width, height);
 348:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		}
 349:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 350:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		/**
 351:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * Fill a circle.
 352:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 */
 353:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		void
 354:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		fillCircle(glcd::Point center, uint16_t radius);
 355:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 356:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	public:
 357:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		/**
 358:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * Set a new font.
 359:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * 
 360:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * Default font is xpcc::font::FixedWidth5x8.
 361:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * 
 362:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * \param	newFont	Active font
 363:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * \see		xpcc::font
 364:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 */
 365:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		inline void
 366:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		setFont(const uint8_t *newFont)
 367:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		{
 368:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			this->font = xpcc::accessor::asFlash(newFont);
 369:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		}
 370:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 371:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		/**
 372:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * Get the height of a character.
 373:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 */
 374:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		uint8_t
 375:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		getFontHeight() const;
 376:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 377:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		/**
 378:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * Set the cursor for text drawing.
 379:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * 
 380:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * \param	position	Cursor position
 381:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 */
 382:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		inline void
 383:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		setCursor(glcd::Point position)
 384:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		{
 385:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			this->cursor = position;
 386:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		}
 387:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 388:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		/**
 389:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * Set the cursor for text drawing.
 390:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * 
 391:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * \param	x	Cursor x-position
 392:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * \param	y	Cursor y-position
 393:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 */
 394:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		inline void
 395:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		setCursor(int16_t x, int16_t y)
 396:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		{
 397:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			this->cursor = glcd::Point(x, y);
 398:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		}
 399:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 400:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		inline void
 401:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		setCursorX(int16_t x)
 402:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		{
 403:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			this->cursor.x = x;
 404:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		}
 405:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 406:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		inline void
 407:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		setCursorY(int16_t y)
 408:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		{
 409:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			this->cursor.y = y;
 410:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		}
 411:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 412:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		inline glcd::Point
 413:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		getCursor() const
 414:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		{
 415:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 			return this->cursor;
 416:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		}
 417:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 418:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		/**
 419:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 * Write a single character.
 420:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		 */
 421:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		void
 422:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		write(char c);
 423:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 424:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	protected:
 425:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		/// helper method for drawCircle() and drawEllipse()
 426:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		void
 427:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		drawCircle4(glcd::Point center, int16_t x, int16_t y);
 428:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 429:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		virtual void
 430:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		drawHorizontalLine(glcd::Point start, uint16_t length);
 431:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 432:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		virtual void
 433:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		drawVerticalLine(glcd::Point start, uint16_t length);
 434:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 435:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		virtual void
 436:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		setPixel(int16_t x, int16_t y) = 0;
 437:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 438:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		virtual void
 439:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		clearPixel(int16_t x, int16_t y) = 0;
 440:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 441:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		virtual bool
 442:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		getPixel(int16_t x, int16_t y) = 0;
 443:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		
 444:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 	protected:
 445:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		// Interface class for the IOStream
 446:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../display/graphic_display.hpp **** 		class Writer : public IODevice
 863              		.loc 13 446 0
 864 0082 5FFA82F9 		uxtb	r9, r2
 100:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 		if (this->homePosition + i >= count)
 865              		.loc 1 100 0
 866 0086 8945     		cmp	r9, r1
 867 0088 46DD     		ble	.L65
 868 008a 0023     		movs	r3, #0
 869 008c 1C46     		mov	r4, r3
 870 008e DFF8C0A0 		ldr	sl, .L97+20
 871 0092 1FE0     		b	.L75
 872              	.LVL81:
 873              	.L76:
 874              	.LBB572:
 875              	.LBB573:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 876              		.loc 12 287 0
 877 0094 002B     		cmp	r3, #0
 878 0096 39D0     		beq	.L94
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 879              		.loc 12 290 0
 880 0098 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 881              		.loc 12 291 0
 882 009a 3846     		mov	r0, r7
 883 009c 2A49     		ldr	r1, .L97+12
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 884              		.loc 12 290 0
 885 009e 2DD0     		beq	.L92
 886              	.LVL82:
 887              	.L81:
 888              		.loc 12 294 0
 889 00a0 274B     		ldr	r3, .L97+4
 890 00a2 9847     		blx	r3
 891              	.LVL83:
 892              	.L78:
 893              	.LBE573:
 894              	.LBE572:
 111:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 		(*display) << iter->text.getText();
 895              		.loc 1 111 0
 896 00a4 2846     		mov	r0, r5
 897 00a6 D047     		blx	sl
 898              	.LVL84:
 899              	.LBB578:
 900              	.LBB579:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 901              		.loc 12 287 0
 902 00a8 7B68     		ldr	r3, [r7, #4]
 903              	.LBE579:
 904              	.LBE578:
 111:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 		(*display) << iter->text.getText();
 905              		.loc 1 111 0
 906 00aa 0146     		mov	r1, r0
 907              	.LVL85:
 908              	.LBB584:
 909              	.LBB582:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 910              		.loc 12 287 0
 911 00ac 4BB3     		cbz	r3, .L95
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 912              		.loc 12 290 0
 913 00ae 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 914              		.loc 12 291 0
 915 00b0 3846     		mov	r0, r7
 916              	.LVL86:
 917 00b2 0CBF     		ite	eq
 918 00b4 214B     		ldreq	r3, .L97
 919              		.loc 12 294 0
 920 00b6 224B     		ldrne	r3, .L97+4
 921 00b8 9847     		blx	r3
 922              	.LVL87:
 923              	.L83:
 924              	.LBE582:
 925              	.LBE584:
  98:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	for (i = 0; i < this->maximalDrawnEntrys; i++)
 926              		.loc 1 98 0
 927 00ba 0134     		adds	r4, r4, #1
 928              	.LVL88:
 929 00bc 96F82430 		ldrb	r3, [r6, #36]	@ zero_extendqisi2
 930              	.LBB585:
 931              	.LBB586:
 155:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_iterator_impl.hpp **** 	this->node = this->node->next;
 932              		.loc 7 155 0
 933 00c0 6D6A     		ldr	r5, [r5, #36]
 934              	.LVL89:
 935              	.LBE586:
 936              	.LBE585:
  98:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	for (i = 0; i < this->maximalDrawnEntrys; i++)
 937              		.loc 1 98 0
 938 00c2 E4B2     		uxtb	r4, r4
 939              	.LVL90:
 940 00c4 A342     		cmp	r3, r4
 941 00c6 27D9     		bls	.L65
 100:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 		if (this->homePosition + i >= count)
 942              		.loc 1 100 0
 943 00c8 96F82520 		ldrb	r2, [r6, #37]	@ zero_extendqisi2
 944 00cc 1219     		adds	r2, r2, r4
 945 00ce 4A45     		cmp	r2, r9
 946 00d0 2346     		mov	r3, r4
 947 00d2 21DA     		bge	.L65
 948              	.LVL91:
 949              	.L75:
 103:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 		display->setCursor(4, 12+i*8);
 950              		.loc 1 103 0
 951 00d4 E200     		lsls	r2, r4, #3
 952 00d6 0C32     		adds	r2, r2, #12
 953              	.LBB587:
 954              	.LBB588:
 955              	.LBB589:
 344:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2_impl.hpp **** 	x = rhs.x;
 956              		.loc 11 344 0
 957 00d8 0421     		movs	r1, #4
 958 00da A8F82410 		strh	r1, [r8, #36]	@ movhi
 959              		.loc 11 345 0
 960 00de A8F82620 		strh	r2, [r8, #38]	@ movhi
 961              	.LBE589:
 962              	.LBE588:
 963              	.LBE587:
 104:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 		if (this->position - this->homePosition == i) {
 964              		.loc 1 104 0
 965 00e2 96F82610 		ldrb	r1, [r6, #38]	@ zero_extendqisi2
 966 00e6 96F82520 		ldrb	r2, [r6, #37]	@ zero_extendqisi2
 967 00ea 8A1A     		subs	r2, r1, r2
 968 00ec 9342     		cmp	r3, r2
 969              	.LBB590:
 970              	.LBB591:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 971              		.loc 12 287 0
 972 00ee 7B68     		ldr	r3, [r7, #4]
 973              	.LBE591:
 974              	.LBE590:
 104:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 		if (this->position - this->homePosition == i) {
 975              		.loc 1 104 0
 976 00f0 D0D1     		bne	.L76
 977              	.LVL92:
 978              	.LBB596:
 979              	.LBB594:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 980              		.loc 12 287 0
 981 00f2 A3B1     		cbz	r3, .L96
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 982              		.loc 12 290 0
 983 00f4 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 984              		.loc 12 291 0
 985 00f6 3846     		mov	r0, r7
 986 00f8 1449     		ldr	r1, .L97+16
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 987              		.loc 12 290 0
 988 00fa D1D1     		bne	.L81
 989              	.LVL93:
 990              	.L92:
 991              	.LBE594:
 992              	.LBE596:
 993              	.LBB597:
 994              	.LBB576:
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 995              		.loc 12 291 0
 996 00fc 0F4B     		ldr	r3, .L97
 997 00fe 9847     		blx	r3
 998              	.LVL94:
 999 0100 D0E7     		b	.L78
 1000              	.LVL95:
 1001              	.L95:
 1002              	.LBE576:
 1003              	.LBE597:
 1004              	.LBB598:
 1005              	.LBB583:
 1006              	.LBB580:
 1007              	.LBB581:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 1008              		.loc 12 288 0
 1009 0102 3868     		ldr	r0, [r7, #0]
 1010              	.LVL96:
 1011 0104 0368     		ldr	r3, [r0, #0]
 1012 0106 DB68     		ldr	r3, [r3, #12]
 1013 0108 9847     		blx	r3
 1014              	.LVL97:
 1015 010a D6E7     		b	.L83
 1016              	.LVL98:
 1017              	.L94:
 1018              	.LBE581:
 1019              	.LBE580:
 1020              	.LBE583:
 1021              	.LBE598:
 1022              	.LBB599:
 1023              	.LBB577:
 1024              	.LBB574:
 1025              	.LBB575:
 1026 010c 3868     		ldr	r0, [r7, #0]
 1027 010e 0E49     		ldr	r1, .L97+12
 1028 0110 0368     		ldr	r3, [r0, #0]
 1029 0112 DB68     		ldr	r3, [r3, #12]
 1030 0114 9847     		blx	r3
 1031              	.LVL99:
 1032 0116 C5E7     		b	.L78
 1033              	.LVL100:
 1034              	.L65:
 1035              	.LBE575:
 1036              	.LBE574:
 1037              	.LBE577:
 1038              	.LBE599:
 1039              	.LBE605:
 116:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** }
 1040              		.loc 1 116 0
 1041 0118 02B0     		add	sp, sp, #8
 1042 011a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 1043              	.LVL101:
 1044              	.L96:
 1045              	.LBB606:
 1046              	.LBB600:
 1047              	.LBB595:
 1048              	.LBB592:
 1049              	.LBB593:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 1050              		.loc 12 288 0
 1051 011e 3868     		ldr	r0, [r7, #0]
 1052 0120 0A49     		ldr	r1, .L97+16
 1053 0122 0368     		ldr	r3, [r0, #0]
 1054 0124 DB68     		ldr	r3, [r3, #12]
 1055 0126 9847     		blx	r3
 1056              	.LVL102:
 1057 0128 BCE7     		b	.L78
 1058              	.LVL103:
 1059              	.L93:
 1060              	.LBE593:
 1061              	.LBE592:
 1062              	.LBE595:
 1063              	.LBE600:
 1064              	.LBB601:
 1065              	.LBB557:
 1066              	.LBB554:
 1067              	.LBB555:
 1068 012a D8F80400 		ldr	r0, [r8, #4]
 1069 012e 0368     		ldr	r3, [r0, #0]
 1070 0130 DB68     		ldr	r3, [r3, #12]
 1071 0132 9847     		blx	r3
 1072              	.LVL104:
 1073 0134 83E7     		b	.L67
 1074              	.LVL105:
 1075              	.L86:
 1076              	.LBE555:
 1077              	.LBE554:
 1078              	.LBE557:
 1079              	.LBE601:
 1080              	.LBB602:
 1081              	.LBB568:
 1082              	.LBB567:
  66:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	std::size_t count = 0;
 1083              		.loc 6 66 0
 1084 0136 2A46     		mov	r2, r5
 1085 0138 96E7     		b	.L69
 1086              	.L98:
 1087 013a 00BF     		.align	2
 1088              	.L97:
 1089 013c 00000000 		.word	_ZN4xpcc8IOStream8writeBinEPKc
 1090 0140 00000000 		.word	_ZN4xpcc8IOStream8writeHexEPKc
 1091 0144 00000000 		.word	_ZN4xpcc14GraphicDisplay8drawLineEssss
 1092 0148 04000000 		.word	.LC1
 1093 014c 00000000 		.word	.LC0
 1094 0150 00000000 		.word	_ZN4xpcc14ScrollableText7getTextEv
 1095              	.LBE567:
 1096              	.LBE568:
 1097              	.LBE602:
 1098              	.LBE606:
 1099              		.cfi_endproc
 1100              	.LFE1395:
 1102              		.section	.text._ZN4xpcc9MenuEntryC2EPKctNS_17MenuEntryCallbackE,"ax",%progbits
 1103              		.align	2
 1104              		.global	_ZN4xpcc9MenuEntryC2EPKctNS_17MenuEntryCallbackE
 1105              		.thumb
 1106              		.thumb_func
 1108              	_ZN4xpcc9MenuEntryC2EPKctNS_17MenuEntryCallbackE:
 1109              	.LFB1374:
  33:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** xpcc::MenuEntry::MenuEntry(const char* text, uint16_t space, MenuEntryCallback func):
 1110              		.loc 1 33 0
 1111              		.cfi_startproc
 1112              		@ args = 16, pretend = 8, frame = 0
 1113              		@ frame_needed = 0, uses_anonymous_args = 0
 1114              	.LVL106:
 1115 0000 82B0     		sub	sp, sp, #8
 1116              	.LCFI6:
 1117              		.cfi_def_cfa_offset 8
 1118 0002 38B5     		push	{r3, r4, r5, lr}
 1119              	.LCFI7:
 1120              		.cfi_def_cfa_offset 24
 1121              		.cfi_offset 3, -24
 1122              		.cfi_offset 4, -20
 1123              		.cfi_offset 5, -16
 1124              		.cfi_offset 14, -12
  33:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** xpcc::MenuEntry::MenuEntry(const char* text, uint16_t space, MenuEntryCallback func):
 1125              		.loc 1 33 0
 1126 0004 04AC     		add	r4, sp, #16
 1127 0006 0546     		mov	r5, r0
 1128 0008 44F8043F 		str	r3, [r4, #4]!
 1129              	.LBB608:
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	callback(func)
 1130              		.loc 1 35 0
 1131 000c 064B     		ldr	r3, .L100
 1132 000e 9847     		blx	r3
 1133              	.LVL107:
 1134 0010 94E80700 		ldmia	r4, {r0, r1, r2}
 1135 0014 05F11403 		add	r3, r5, #20
 1136 0018 83E80700 		stmia	r3, {r0, r1, r2}
 1137              	.LBE608:
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** }
 1138              		.loc 1 37 0
 1139 001c 2846     		mov	r0, r5
 1140 001e BDE83840 		pop	{r3, r4, r5, lr}
 1141 0022 02B0     		add	sp, sp, #8
 1142 0024 7047     		bx	lr
 1143              	.L101:
 1144 0026 00BF     		.align	2
 1145              	.L100:
 1146 0028 00000000 		.word	_ZN4xpcc14ScrollableTextC1EPKct
 1147              		.cfi_endproc
 1148              	.LFE1374:
 1150              		.global	_ZN4xpcc9MenuEntryC1EPKctNS_17MenuEntryCallbackE
 1151              		.thumb_set _ZN4xpcc9MenuEntryC1EPKctNS_17MenuEntryCallbackE,_ZN4xpcc9MenuEntryC2EPKctNS_17MenuEntr
 1152              		.section	.text._ZN4xpcc12StandardMenuC2EPNS_9ViewStackEh,"ax",%progbits
 1153              		.align	2
 1154              		.global	_ZN4xpcc12StandardMenuC2EPNS_9ViewStackEh
 1155              		.thumb
 1156              		.thumb_func
 1158              	_ZN4xpcc12StandardMenuC2EPNS_9ViewStackEh:
 1159              	.LFB1381:
  39:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** xpcc::StandardMenu::StandardMenu(xpcc::ViewStack* stack, uint8_t identifier) :
 1160              		.loc 1 39 0
 1161              		.cfi_startproc
 1162              		@ args = 0, pretend = 0, frame = 0
 1163              		@ frame_needed = 0, uses_anonymous_args = 0
 1164              	.LVL108:
 1165 0000 70B5     		push	{r4, r5, r6, lr}
 1166              	.LCFI8:
 1167              		.cfi_def_cfa_offset 16
 1168              		.cfi_offset 4, -16
 1169              		.cfi_offset 5, -12
 1170              		.cfi_offset 6, -8
 1171              		.cfi_offset 14, -4
 1172              	.LBB634:
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	position(0)
 1173              		.loc 1 46 0
 1174 0002 154B     		ldr	r3, .L104
 1175              	.LBE634:
  39:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** xpcc::StandardMenu::StandardMenu(xpcc::ViewStack* stack, uint8_t identifier) :
 1176              		.loc 1 39 0
 1177 0004 0446     		mov	r4, r0
 1178              	.LBB660:
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	position(0)
 1179              		.loc 1 46 0
 1180 0006 9847     		blx	r3
 1181              	.LVL109:
 1182 0008 144B     		ldr	r3, .L104+4
 1183 000a 4FF4FA75 		mov	r5, #500
 1184 000e 2360     		str	r3, [r4, #0]
 1185 0010 6581     		strh	r5, [r4, #10]	@ movhi
 1186              	.LVL110:
 1187              	.LBB635:
 1188              	.LBB636:
 1189              	.LBB637:
 1190              	.LBB638:
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** 	endTime(T::now() + time), state(ACTIVE)
 1191              		.loc 4 43 0
 1192 0012 134B     		ldr	r3, .L104+8
 1193 0014 9847     		blx	r3
 1194              	.LVL111:
 1195              	.LBE638:
 1196              	.LBE637:
 1197              	.LBE636:
 1198              	.LBE635:
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	position(0)
 1199              		.loc 1 46 0
 1200 0016 0023     		movs	r3, #0
 1201              	.LBB650:
 1202              	.LBB651:
 1203              		.loc 10 94 0
 1204 0018 6268     		ldr	r2, [r4, #4]
 1205              	.LBE651:
 1206              	.LBE650:
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	position(0)
 1207              		.loc 1 46 0
 1208 001a 84F82530 		strb	r3, [r4, #37]
 1209 001e 84F82630 		strb	r3, [r4, #38]
 1210              	.LBB653:
 1211              	.LBB652:
 1212              		.loc 10 94 0
 1213 0022 5268     		ldr	r2, [r2, #4]
 1214              	.LBE652:
 1215              	.LBE653:
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	position(0)
 1216              		.loc 1 46 0
 1217 0024 0F49     		ldr	r1, .L104+12
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	this->maximalDrawnEntrys = (getViewStack()->getDisplay().getHeight()- 16) / 8 ;
 1218              		.loc 1 48 0
 1219 0026 1668     		ldr	r6, [r2, #0]
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	position(0)
 1220              		.loc 1 46 0
 1221 0028 2162     		str	r1, [r4, #32]
 1222              	.LBB654:
 1223              	.LBB646:
 1224              	.LBB643:
 1225              	.LBB641:
 1226              	.LBB639:
 1227              	.LBB640:
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 			return Timestamp(time + other.time);
 1228              		.loc 5 70 0
 1229 002a 4019     		adds	r0, r0, r5
 1230              	.LVL112:
 1231              	.LBE640:
 1232              	.LBE639:
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** 	endTime(T::now() + time), state(ACTIVE)
 1233              		.loc 4 43 0
 1234 002c 0121     		movs	r1, #1
 1235              	.LBE641:
 1236              	.LBE643:
 1237              	.LBE646:
 1238              	.LBE654:
 1239              	.LBB655:
 1240              	.LBB656:
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	nodeAllocator(allocator), front(0), back(0)
 1241              		.loc 6 38 0
 1242 002e E362     		str	r3, [r4, #44]
 1243 0030 2363     		str	r3, [r4, #48]
 1244              	.LBE656:
 1245              	.LBE655:
 1246              	.LBB657:
 1247              	.LBB647:
 1248              	.LBB644:
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** 	endTime(T::now() + time), state(ACTIVE)
 1249              		.loc 4 43 0
 1250 0032 E060     		str	r0, [r4, #12]
 1251              	.LBE644:
 1252              	.LBE647:
 1253              	.LBE657:
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	position(0)
 1254              		.loc 1 46 0
 1255 0034 2377     		strb	r3, [r4, #28]
 1256              	.LBB658:
 1257              	.LBB648:
 1258              	.LBB645:
 1259              	.LBB642:
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** 	endTime(T::now() + time), state(ACTIVE)
 1260              		.loc 4 43 0
 1261 0036 2174     		strb	r1, [r4, #16]
 1262              	.LBE642:
 1263              	.LBE645:
 1264              	.LBE648:
 1265              	.LBE658:
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	this->maximalDrawnEntrys = (getViewStack()->getDisplay().getHeight()- 16) / 8 ;
 1266              		.loc 1 48 0
 1267 0038 F368     		ldr	r3, [r6, #12]
 1268              	.LBB659:
 1269              	.LBB649:
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** 	timer(interval), interval(interval), isRunning_(true)
 1270              		.loc 3 37 0
 1271 003a 6561     		str	r5, [r4, #20]
 1272 003c 2176     		strb	r1, [r4, #24]
 1273              	.LVL113:
 1274              	.LBE649:
 1275              	.LBE659:
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	this->maximalDrawnEntrys = (getViewStack()->getDisplay().getHeight()- 16) / 8 ;
 1276              		.loc 1 48 0
 1277 003e 1046     		mov	r0, r2
 1278              	.LVL114:
 1279 0040 9847     		blx	r3
 1280              	.LVL115:
 1281 0042 B0F11003 		subs	r3, r0, #16
 1282 0046 48BF     		it	mi
 1283 0048 A0F10903 		submi	r3, r0, #9
 1284 004c DB10     		asrs	r3, r3, #3
 1285 004e 84F82430 		strb	r3, [r4, #36]
 1286              	.LBE660:
  49:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** }
 1287              		.loc 1 49 0
 1288 0052 2046     		mov	r0, r4
 1289 0054 70BD     		pop	{r4, r5, r6, pc}
 1290              	.L105:
 1291 0056 00BF     		.align	2
 1292              	.L104:
 1293 0058 00000000 		.word	_ZN4xpcc12AbstractMenuC2EPNS_9ViewStackEh
 1294 005c 08000000 		.word	.LANCHOR0+8
 1295 0060 00000000 		.word	_ZN4xpcc5Clock3nowEv
 1296 0064 08000000 		.word	.LC2
 1297              		.cfi_endproc
 1298              	.LFE1381:
 1300              		.global	_ZN4xpcc12StandardMenuC1EPNS_9ViewStackEh
 1301              		.thumb_set _ZN4xpcc12StandardMenuC1EPNS_9ViewStackEh,_ZN4xpcc12StandardMenuC2EPNS_9ViewStackEh
 1302              		.section	.text._ZN4xpcc12StandardMenuC2EPNS_9ViewStackEhPKc,"ax",%progbits
 1303              		.align	2
 1304              		.global	_ZN4xpcc12StandardMenuC2EPNS_9ViewStackEhPKc
 1305              		.thumb
 1306              		.thumb_func
 1308              	_ZN4xpcc12StandardMenuC2EPNS_9ViewStackEhPKc:
 1309              	.LFB1384:
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** xpcc::StandardMenu::StandardMenu(xpcc::ViewStack* stack, uint8_t identifier, const char* title) :
 1310              		.loc 1 51 0
 1311              		.cfi_startproc
 1312              		@ args = 0, pretend = 0, frame = 0
 1313              		@ frame_needed = 0, uses_anonymous_args = 0
 1314              	.LVL116:
 1315 0000 70B5     		push	{r4, r5, r6, lr}
 1316              	.LCFI9:
 1317              		.cfi_def_cfa_offset 16
 1318              		.cfi_offset 4, -16
 1319              		.cfi_offset 5, -12
 1320              		.cfi_offset 6, -8
 1321              		.cfi_offset 14, -4
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** xpcc::StandardMenu::StandardMenu(xpcc::ViewStack* stack, uint8_t identifier, const char* title) :
 1322              		.loc 1 51 0
 1323 0002 1E46     		mov	r6, r3
 1324              	.LBB686:
  58:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	position(0)
 1325              		.loc 1 58 0
 1326 0004 144B     		ldr	r3, .L108
 1327              	.LVL117:
 1328              	.LBE686:
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** xpcc::StandardMenu::StandardMenu(xpcc::ViewStack* stack, uint8_t identifier, const char* title) :
 1329              		.loc 1 51 0
 1330 0006 0446     		mov	r4, r0
 1331              	.LBB709:
  58:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	position(0)
 1332              		.loc 1 58 0
 1333 0008 9847     		blx	r3
 1334              	.LVL118:
 1335 000a 144B     		ldr	r3, .L108+4
 1336 000c 4FF4FA75 		mov	r5, #500
 1337 0010 2360     		str	r3, [r4, #0]
 1338 0012 6581     		strh	r5, [r4, #10]	@ movhi
 1339              	.LVL119:
 1340              	.LBB687:
 1341              	.LBB688:
 1342              	.LBB689:
 1343              	.LBB690:
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** 	endTime(T::now() + time), state(ACTIVE)
 1344              		.loc 4 43 0
 1345 0014 124B     		ldr	r3, .L108+8
 1346 0016 9847     		blx	r3
 1347              	.LVL120:
 1348              	.LBE690:
 1349              	.LBE689:
 1350              	.LBE688:
 1351              	.LBE687:
  58:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	position(0)
 1352              		.loc 1 58 0
 1353 0018 0022     		movs	r2, #0
 1354              	.LBB699:
 1355              	.LBB700:
 1356              		.loc 10 94 0
 1357 001a 6168     		ldr	r1, [r4, #4]
 1358              	.LBE700:
 1359              	.LBE699:
  58:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	position(0)
 1360              		.loc 1 58 0
 1361 001c 84F82520 		strb	r2, [r4, #37]
 1362 0020 84F82620 		strb	r2, [r4, #38]
 1363              	.LBB702:
 1364              	.LBB701:
 1365              		.loc 10 94 0
 1366 0024 4968     		ldr	r1, [r1, #4]
 1367              	.LBE701:
 1368              	.LBE702:
  58:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	position(0)
 1369              		.loc 1 58 0
 1370 0026 2662     		str	r6, [r4, #32]
  60:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	this->maximalDrawnEntrys = (getViewStack()->getDisplay().getHeight()- 16) / 8 ;
 1371              		.loc 1 60 0
 1372 0028 0E68     		ldr	r6, [r1, #0]
 1373              	.LVL121:
 1374              	.LBB703:
 1375              	.LBB704:
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	nodeAllocator(allocator), front(0), back(0)
 1376              		.loc 6 38 0
 1377 002a E262     		str	r2, [r4, #44]
 1378              	.LBE704:
 1379              	.LBE703:
 1380              	.LBB706:
 1381              	.LBB697:
 1382              	.LBB695:
 1383              	.LBB693:
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** 	endTime(T::now() + time), state(ACTIVE)
 1384              		.loc 4 43 0
 1385 002c 0123     		movs	r3, #1
 1386              	.LBB691:
 1387              	.LBB692:
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/workflow/timestamp.hpp **** 			return Timestamp(time + other.time);
 1388              		.loc 5 70 0
 1389 002e 4019     		adds	r0, r0, r5
 1390              	.LVL122:
 1391              	.LBE692:
 1392              	.LBE691:
 1393              	.LBE693:
 1394              	.LBE695:
 1395              	.LBE697:
 1396              	.LBE706:
 1397              	.LBB707:
 1398              	.LBB705:
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	nodeAllocator(allocator), front(0), back(0)
 1399              		.loc 6 38 0
 1400 0030 2263     		str	r2, [r4, #48]
 1401              	.LBE705:
 1402              	.LBE707:
 1403              	.LBB708:
 1404              	.LBB698:
 1405              	.LBB696:
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeout_impl.hpp **** 	endTime(T::now() + time), state(ACTIVE)
 1406              		.loc 4 43 0
 1407 0032 E060     		str	r0, [r4, #12]
 1408              	.LBB694:
 1409 0034 2374     		strb	r3, [r4, #16]
 1410              	.LBE694:
 1411              	.LBE696:
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/periodic_timer_impl.hpp **** 	timer(interval), interval(interval), isRunning_(true)
 1412              		.loc 3 37 0
 1413 0036 2376     		strb	r3, [r4, #24]
 1414              	.LVL123:
 1415 0038 6561     		str	r5, [r4, #20]
 1416              	.LBE698:
 1417              	.LBE708:
  60:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	this->maximalDrawnEntrys = (getViewStack()->getDisplay().getHeight()- 16) / 8 ;
 1418              		.loc 1 60 0
 1419 003a F368     		ldr	r3, [r6, #12]
  58:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	position(0)
 1420              		.loc 1 58 0
 1421 003c 2277     		strb	r2, [r4, #28]
  60:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	this->maximalDrawnEntrys = (getViewStack()->getDisplay().getHeight()- 16) / 8 ;
 1422              		.loc 1 60 0
 1423 003e 0846     		mov	r0, r1
 1424              	.LVL124:
 1425 0040 9847     		blx	r3
 1426              	.LVL125:
 1427 0042 B0F11003 		subs	r3, r0, #16
 1428 0046 48BF     		it	mi
 1429 0048 A0F10903 		submi	r3, r0, #9
 1430 004c DB10     		asrs	r3, r3, #3
 1431 004e 84F82430 		strb	r3, [r4, #36]
 1432              	.LBE709:
  61:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** }
 1433              		.loc 1 61 0
 1434 0052 2046     		mov	r0, r4
 1435 0054 70BD     		pop	{r4, r5, r6, pc}
 1436              	.L109:
 1437 0056 00BF     		.align	2
 1438              	.L108:
 1439 0058 00000000 		.word	_ZN4xpcc12AbstractMenuC2EPNS_9ViewStackEh
 1440 005c 08000000 		.word	.LANCHOR0+8
 1441 0060 00000000 		.word	_ZN4xpcc5Clock3nowEv
 1442              		.cfi_endproc
 1443              	.LFE1384:
 1445              		.global	_ZN4xpcc12StandardMenuC1EPNS_9ViewStackEhPKc
 1446              		.thumb_set _ZN4xpcc12StandardMenuC1EPNS_9ViewStackEhPKc,_ZN4xpcc12StandardMenuC2EPNS_9ViewStackEhP
 1447              		.section	.text._ZN4xpcc12StandardMenuD2Ev,"ax",%progbits
 1448              		.align	2
 1449              		.global	_ZN4xpcc12StandardMenuD2Ev
 1450              		.thumb
 1451              		.thumb_func
 1453              	_ZN4xpcc12StandardMenuD2Ev:
 1454              	.LFB1387:
  63:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** xpcc::StandardMenu::~StandardMenu()
 1455              		.loc 1 63 0
 1456              		.cfi_startproc
 1457              		@ args = 0, pretend = 0, frame = 0
 1458              		@ frame_needed = 0, uses_anonymous_args = 0
 1459              	.LVL126:
 1460 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1461              	.LCFI10:
 1462              		.cfi_def_cfa_offset 24
 1463              		.cfi_offset 4, -24
 1464              		.cfi_offset 5, -20
 1465              		.cfi_offset 6, -16
 1466              		.cfi_offset 7, -12
 1467              		.cfi_offset 8, -8
 1468              		.cfi_offset 14, -4
 1469              	.LBB726:
  63:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** xpcc::StandardMenu::~StandardMenu()
 1470              		.loc 1 63 0
 1471 0004 0D4B     		ldr	r3, .L117
 1472              	.LBB727:
 1473              	.LBB728:
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	while (this->front != 0)
 1474              		.loc 6 45 0
 1475 0006 C46A     		ldr	r4, [r0, #44]
 1476              	.LBE728:
 1477              	.LBE727:
  63:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** xpcc::StandardMenu::~StandardMenu()
 1478              		.loc 1 63 0
 1479 0008 0546     		mov	r5, r0
 1480              	.LBE726:
 1481 000a 8046     		mov	r8, r0
 1482              	.LBB742:
 1483 000c 45F8283B 		str	r3, [r5], #40
 1484              	.LVL127:
 1485              	.LBB739:
 1486              	.LBB738:
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	while (this->front != 0)
 1487              		.loc 6 45 0
 1488 0010 54B1     		cbz	r4, .L113
 1489 0012 0B4F     		ldr	r7, .L117+4
 1490 0014 0B4E     		ldr	r6, .L117+8
 1491              	.LVL128:
 1492              	.L112:
 1493              	.LBB729:
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 		this->front = this->front->next;
 1494              		.loc 6 48 0
 1495 0016 636A     		ldr	r3, [r4, #36]
 1496              	.LBB730:
 1497              	.LBB731:
 1498              	.LBB732:
 1499              		.file 14 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.hpp"
   1:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.hpp **** // coding: utf-8
   2:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.hpp **** // ----------------------------------------------------------------------------
   3:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.hpp **** /* Copyright (c) 2011, Roboterclub Aachen e.V.
   4:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.hpp ****  * All rights reserved.
   5:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.hpp ****  * 
   6:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.hpp ****  * Redistribution and use in source and binary forms, with or without
   7:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.hpp ****  * modification, are permitted provided that the following conditions are met:
   8:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.hpp ****  * 
   9:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.hpp ****  *     * Redistributions of source code must retain the above copyright
  10:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.hpp ****  *       notice, this list of conditions and the following disclaimer.
  11:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.hpp ****  *     * Redistributions in binary form must reproduce the above copyright
  12:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.hpp ****  *       notice, this list of conditions and the following disclaimer in the
  13:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.hpp ****  *       documentation and/or other materials provided with the distribution.
  14:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.hpp ****  *     * Neither the name of the Roboterclub Aachen e.V. nor the
  15:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.hpp ****  *       names of its contributors may be used to endorse or promote products
  16:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.hpp ****  *       derived from this software without specific prior written permission.
  17:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.hpp ****  * 
  18:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.hpp ****  * THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
  19:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.hpp ****  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  20:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.hpp ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  21:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.hpp ****  * DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
  22:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.hpp ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  23:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.hpp ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  24:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.hpp ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  25:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.hpp ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  26:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.hpp ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  27:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.hpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  28:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.hpp ****  */
  29:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.hpp **** // ----------------------------------------------------------------------------
  30:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.hpp **** 
  31:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.hpp **** #ifndef XPCC__STANDARD_MENU_HPP
  32:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.hpp **** #define XPCC__STANDARD_MENU_HPP
  33:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.hpp **** 
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.hpp **** #include "abstract_menu.hpp"
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.hpp **** #include "scrollable_text.hpp"
  36:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.hpp **** #include "menu_entry_callback.hpp"
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.hpp **** #include "../../../container/doubly_linked_list.hpp"
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.hpp **** #include "../../../workflow/periodic_timer.hpp"
  39:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.hpp **** 
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.hpp **** 
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.hpp **** namespace xpcc
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.hpp **** {
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.hpp **** 
  44:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.hpp **** 	/**
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.hpp ****  	* \brief Menu Entry of Standard Menu
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.hpp **** 	*
  47:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.hpp **** 	* \ingroup	display_menu
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.hpp **** 	* \author	Thorsten Lajewski
  49:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.hpp **** 	*/
  50:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.hpp **** 	struct MenuEntry
 1500              		.loc 14 50 0
 1501 0018 2046     		mov	r0, r4
 1502              	.LBE732:
 1503              	.LBE731:
 1504              	.LBE730:
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 		this->front = this->front->next;
 1505              		.loc 6 48 0
 1506 001a 6B60     		str	r3, [r5, #4]
 1507              	.LVL129:
 1508              	.LBB735:
 1509              	.LBB734:
 1510              	.LBB733:
 1511              		.loc 14 50 0
 1512 001c B847     		blx	r7
 1513              	.LVL130:
 1514              	.LBE733:
 1515              	.LBE734:
 1516              	.LBE735:
 1517              	.LBB736:
 1518              	.LBB737:
 1519              		.file 15 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp"
   1:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** // coding: utf-8
   2:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** // ----------------------------------------------------------------------------
   3:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** /* Copyright (c) 2009, Roboterclub Aachen e.V.
   4:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  * All rights reserved.
   5:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  *
   6:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  * Redistribution and use in source and binary forms, with or without
   7:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  * modification, are permitted provided that the following conditions are met:
   8:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  * 
   9:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  *     * Redistributions of source code must retain the above copyright
  10:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  *       notice, this list of conditions and the following disclaimer.
  11:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  *     * Redistributions in binary form must reproduce the above copyright
  12:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  *       notice, this list of conditions and the following disclaimer in the
  13:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  *       documentation and/or other materials provided with the distribution.
  14:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  *     * Neither the name of the Roboterclub Aachen e.V. nor the
  15:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  *       names of its contributors may be used to endorse or promote products
  16:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  *       derived from this software without specific prior written permission.
  17:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  *
  18:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  * THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
  19:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  20:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  21:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  * DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
  22:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  23:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  24:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  25:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  26:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  27:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  28:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp ****  */
  29:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** // ----------------------------------------------------------------------------
  30:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 
  31:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** #ifndef XPCC_ALLOCATOR__DYNAMIC_HPP
  32:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** #define XPCC_ALLOCATOR__DYNAMIC_HPP
  33:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** #include "allocator_base.hpp"
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 
  36:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** namespace xpcc
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** {
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 	namespace allocator
  39:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 	{
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 		/**
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 		 * \brief	Dynamic memory allocator
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 		 * 
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 		 * Wrapper for the underlying memory management. No additional
  44:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 		 * management is done.
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 		 * 
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 		 * \ingroup	allocator
  47:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 		 * \author	Fabian Greif
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 		 */
  49:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 		template <typename T>
  50:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 		class Dynamic : public AllocatorBase<T>
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 		{
  52:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 		public:
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			template <typename U>
  54:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			struct rebind
  55:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			{
  56:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 				typedef Dynamic<U> other;
  57:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			};
  58:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			
  59:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 		public:
  60:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			Dynamic() :
  61:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 				AllocatorBase<T>()
  62:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			{
  63:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			}
  64:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			Dynamic(const Dynamic& other) :
  66:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 				AllocatorBase<T>(other)
  67:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			{
  68:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			}
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			template <typename U>
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			Dynamic(const Dynamic<U>&) :
  72:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 				AllocatorBase<T>()
  73:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			{
  74:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			}
  75:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			
  76:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			T*
  77:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			allocate(size_t n)
  78:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			{
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 				// allocate the memory without calling the constructor
  80:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 				// of the associated data-type.
  81:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 				return static_cast<T*>(::operator new(n * sizeof(T)));
  82:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			}
  83:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			
  84:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			void
  85:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			deallocate(T* p)
  86:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 			{
  87:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 				// it is important to use this form here, otherwise the
  88:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 				// destructor of p will be called which is unwanted here.
  89:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 				// The destructor can be called with the destroy()-method.
  90:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 				::operator delete(p);
 1520              		.loc 15 90 0
 1521 001e 2046     		mov	r0, r4
 1522 0020 B047     		blx	r6
 1523              	.LVL131:
 1524              	.LBE737:
 1525              	.LBE736:
 1526              	.LBE729:
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	while (this->front != 0)
 1527              		.loc 6 45 0
 1528 0022 6C68     		ldr	r4, [r5, #4]
 1529              	.LVL132:
 1530 0024 002C     		cmp	r4, #0
 1531 0026 F6D1     		bne	.L112
 1532              	.L113:
 1533              	.LVL133:
 1534              	.LBE738:
 1535              	.LBE739:
 1536              	.LBB740:
 1537              	.LBB741:
 1538              		.loc 2 47 0
 1539 0028 074B     		ldr	r3, .L117+12
 1540 002a 4046     		mov	r0, r8
 1541 002c C8F80030 		str	r3, [r8, #0]
 1542 0030 064B     		ldr	r3, .L117+16
 1543 0032 9847     		blx	r3
 1544              	.LVL134:
 1545              	.LBE741:
 1546              	.LBE740:
 1547              	.LBE742:
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** }
 1548              		.loc 1 65 0
 1549 0034 4046     		mov	r0, r8
 1550 0036 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1551              	.L118:
 1552 003a 00BF     		.align	2
 1553              	.L117:
 1554 003c 08000000 		.word	.LANCHOR0+8
 1555 0040 00000000 		.word	_ZN4xpcc14ScrollableTextD1Ev
 1556 0044 00000000 		.word	_ZdlPv
 1557 0048 08000000 		.word	_ZTVN4xpcc12AbstractMenuE+8
 1558 004c 00000000 		.word	_ZN4xpcc12AbstractViewD2Ev
 1559              		.cfi_endproc
 1560              	.LFE1387:
 1562              		.global	_ZN4xpcc12StandardMenuD1Ev
 1563              		.thumb_set _ZN4xpcc12StandardMenuD1Ev,_ZN4xpcc12StandardMenuD2Ev
 1564              		.section	.text._ZN4xpcc12StandardMenuD0Ev,"ax",%progbits
 1565              		.align	2
 1566              		.global	_ZN4xpcc12StandardMenuD0Ev
 1567              		.thumb
 1568              		.thumb_func
 1570              	_ZN4xpcc12StandardMenuD0Ev:
 1571              	.LFB1389:
  63:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** xpcc::StandardMenu::~StandardMenu()
 1572              		.loc 1 63 0
 1573              		.cfi_startproc
 1574              		@ args = 0, pretend = 0, frame = 0
 1575              		@ frame_needed = 0, uses_anonymous_args = 0
 1576              	.LVL135:
 1577 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1578              	.LCFI11:
 1579              		.cfi_def_cfa_offset 24
 1580              		.cfi_offset 4, -24
 1581              		.cfi_offset 5, -20
 1582              		.cfi_offset 6, -16
 1583              		.cfi_offset 7, -12
 1584              		.cfi_offset 8, -8
 1585              		.cfi_offset 14, -4
 1586              	.LBB760:
 1587              	.LBB761:
  63:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** xpcc::StandardMenu::~StandardMenu()
 1588              		.loc 1 63 0
 1589 0004 0E4B     		ldr	r3, .L126
 1590              	.LBB762:
 1591              	.LBB763:
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	while (this->front != 0)
 1592              		.loc 6 45 0
 1593 0006 C46A     		ldr	r4, [r0, #44]
 1594 0008 0E4E     		ldr	r6, .L126+4
 1595              	.LBE763:
 1596              	.LBE762:
  63:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** xpcc::StandardMenu::~StandardMenu()
 1597              		.loc 1 63 0
 1598 000a 0546     		mov	r5, r0
 1599              	.LBE761:
 1600              	.LBE760:
 1601 000c 8046     		mov	r8, r0
 1602              	.LVL136:
 1603              	.LBB778:
 1604              	.LBB777:
 1605 000e 45F8283B 		str	r3, [r5], #40
 1606              	.LVL137:
 1607              	.LBB774:
 1608              	.LBB773:
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	while (this->front != 0)
 1609              		.loc 6 45 0
 1610 0012 4CB1     		cbz	r4, .L122
 1611 0014 0C4F     		ldr	r7, .L126+8
 1612              	.LVL138:
 1613              	.L121:
 1614              	.LBB764:
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 		this->front = this->front->next;
 1615              		.loc 6 48 0
 1616 0016 636A     		ldr	r3, [r4, #36]
 1617              	.LBB765:
 1618              	.LBB766:
 1619              	.LBB767:
 1620              		.loc 14 50 0
 1621 0018 2046     		mov	r0, r4
 1622              	.LBE767:
 1623              	.LBE766:
 1624              	.LBE765:
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 		this->front = this->front->next;
 1625              		.loc 6 48 0
 1626 001a 6B60     		str	r3, [r5, #4]
 1627              	.LVL139:
 1628              	.LBB770:
 1629              	.LBB769:
 1630              	.LBB768:
 1631              		.loc 14 50 0
 1632 001c B847     		blx	r7
 1633              	.LVL140:
 1634              	.LBE768:
 1635              	.LBE769:
 1636              	.LBE770:
 1637              	.LBB771:
 1638              	.LBB772:
 1639              		.loc 15 90 0
 1640 001e 2046     		mov	r0, r4
 1641 0020 B047     		blx	r6
 1642              	.LVL141:
 1643              	.LBE772:
 1644              	.LBE771:
 1645              	.LBE764:
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	while (this->front != 0)
 1646              		.loc 6 45 0
 1647 0022 6C68     		ldr	r4, [r5, #4]
 1648              	.LVL142:
 1649 0024 002C     		cmp	r4, #0
 1650 0026 F6D1     		bne	.L121
 1651              	.L122:
 1652              	.LVL143:
 1653              	.LBE773:
 1654              	.LBE774:
 1655              	.LBB775:
 1656              	.LBB776:
 1657              		.loc 2 47 0
 1658 0028 084B     		ldr	r3, .L126+12
 1659 002a 4046     		mov	r0, r8
 1660 002c C8F80030 		str	r3, [r8, #0]
 1661 0030 074B     		ldr	r3, .L126+16
 1662 0032 9847     		blx	r3
 1663              	.LVL144:
 1664              	.LBE776:
 1665              	.LBE775:
 1666              	.LBE777:
 1667              	.LBE778:
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** }
 1668              		.loc 1 65 0
 1669 0034 4046     		mov	r0, r8
 1670 0036 B047     		blx	r6
 1671              	.LVL145:
 1672 0038 4046     		mov	r0, r8
 1673 003a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1674              	.L127:
 1675 003e 00BF     		.align	2
 1676              	.L126:
 1677 0040 08000000 		.word	.LANCHOR0+8
 1678 0044 00000000 		.word	_ZdlPv
 1679 0048 00000000 		.word	_ZN4xpcc14ScrollableTextD1Ev
 1680 004c 08000000 		.word	_ZTVN4xpcc12AbstractMenuE+8
 1681 0050 00000000 		.word	_ZN4xpcc12AbstractViewD2Ev
 1682              		.cfi_endproc
 1683              	.LFE1389:
 1685              		.section	.text._ZN4xpcc12StandardMenu8addEntryEPKcNS_17MenuEntryCallbackE,"ax",%progbits
 1686              		.align	2
 1687              		.global	_ZN4xpcc12StandardMenu8addEntryEPKcNS_17MenuEntryCallbackE
 1688              		.thumb
 1689              		.thumb_func
 1691              	_ZN4xpcc12StandardMenu8addEntryEPKcNS_17MenuEntryCallbackE:
 1692              	.LFB1390:
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** {
 1693              		.loc 1 69 0
 1694              		.cfi_startproc
 1695              		@ args = 12, pretend = 8, frame = 48
 1696              		@ frame_needed = 0, uses_anonymous_args = 0
 1697              	.LVL146:
 1698 0000 82B0     		sub	sp, sp, #8
 1699              	.LCFI12:
 1700              		.cfi_def_cfa_offset 8
 1701 0002 F0B5     		push	{r4, r5, r6, r7, lr}
 1702              	.LCFI13:
 1703              		.cfi_def_cfa_offset 28
 1704              		.cfi_offset 4, -28
 1705              		.cfi_offset 5, -24
 1706              		.cfi_offset 6, -20
 1707              		.cfi_offset 7, -16
 1708              		.cfi_offset 14, -12
 1709 0004 0646     		mov	r6, r0
 1710              	.LVL147:
 1711 0006 8DB0     		sub	sp, sp, #52
 1712              	.LCFI14:
 1713              		.cfi_def_cfa_offset 80
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** {
 1714              		.loc 1 69 0
 1715 0008 12A8     		add	r0, sp, #72
 1716              	.LVL148:
 1717 000a 80E80C00 		stmia	r0, {r2, r3}
 1718              	.LBB800:
 1719              	.LBB801:
 1720              	.LBB802:
 1721              		.loc 10 94 0
 1722 000e 7368     		ldr	r3, [r6, #4]
 1723              	.LBE802:
 1724              	.LBE801:
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	xpcc::MenuEntry entry(text, (getViewStack()->getDisplay().getWidth()-16)/6, func);
 1725              		.loc 1 70 0
 1726 0010 1D4F     		ldr	r7, .L136
 1727              	.LBB804:
 1728              	.LBB803:
 1729              		.loc 10 94 0
 1730 0012 5868     		ldr	r0, [r3, #4]
 1731              	.LBE803:
 1732              	.LBE804:
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	xpcc::MenuEntry entry(text, (getViewStack()->getDisplay().getWidth()-16)/6, func);
 1733              		.loc 1 70 0
 1734 0014 0368     		ldr	r3, [r0, #0]
 1735 0016 9B68     		ldr	r3, [r3, #8]
 1736              	.LBE800:
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** {
 1737              		.loc 1 69 0
 1738 0018 0D46     		mov	r5, r1
 1739              	.LBB819:
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	xpcc::MenuEntry entry(text, (getViewStack()->getDisplay().getWidth()-16)/6, func);
 1740              		.loc 1 70 0
 1741 001a 9847     		blx	r3
 1742              	.LVL149:
 1743 001c 12AC     		add	r4, sp, #72
 1744 001e 0346     		mov	r3, r0
 1745              	.LVL150:
 1746 0020 94E80700 		ldmia	r4, {r0, r1, r2}
 1747              	.LVL151:
 1748 0024 103B     		subs	r3, r3, #16
 1749              	.LVL152:
 1750 0026 87FB0347 		smull	r4, r7, r7, r3
 1751 002a A7EBE373 		sub	r3, r7, r3, asr #31
 1752              	.LVL153:
 1753 002e 01AC     		add	r4, sp, #4
 1754 0030 84E80700 		stmia	r4, {r0, r1, r2}
 1755              	.LBB805:
 1756              	.LBB806:
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	callback(func)
 1757              		.loc 1 35 0
 1758 0034 2946     		mov	r1, r5
 1759 0036 9AB2     		uxth	r2, r3
 1760 0038 04A8     		add	r0, sp, #16
 1761              	.LVL154:
 1762 003a 144B     		ldr	r3, .L136+4
 1763 003c 9847     		blx	r3
 1764              	.LVL155:
 1765 003e 94E80700 		ldmia	r4, {r0, r1, r2}
 1766 0042 09AC     		add	r4, sp, #36
 1767 0044 84E80700 		stmia	r4, {r0, r1, r2}
 1768              	.LVL156:
 1769              	.LBE806:
 1770              	.LBE805:
 1771              	.LBB807:
 1772              	.LBB808:
 1773              	.LBB809:
 1774              	.LBB810:
  81:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/dynamic.hpp **** 				return static_cast<T*>(::operator new(n * sizeof(T)));
 1775              		.loc 15 81 0
 1776 0048 114B     		ldr	r3, .L136+8
 1777 004a 2820     		movs	r0, #40
 1778 004c 9847     		blx	r3
 1779              	.LVL157:
 1780              	.LBE810:
 1781              	.LBE809:
 1782              	.LBB811:
 1783              	.LBB812:
 1784              		.file 16 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp"
   1:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** // coding: utf-8
   2:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** // ----------------------------------------------------------------------------
   3:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** /* Copyright (c) 2009, Roboterclub Aachen e.V.
   4:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp ****  * All rights reserved.
   5:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp ****  *
   6:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp ****  * Redistribution and use in source and binary forms, with or without
   7:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp ****  * modification, are permitted provided that the following conditions are met:
   8:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp ****  * 
   9:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp ****  *     * Redistributions of source code must retain the above copyright
  10:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp ****  *       notice, this list of conditions and the following disclaimer.
  11:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp ****  *     * Redistributions in binary form must reproduce the above copyright
  12:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp ****  *       notice, this list of conditions and the following disclaimer in the
  13:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp ****  *       documentation and/or other materials provided with the distribution.
  14:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp ****  *     * Neither the name of the Roboterclub Aachen e.V. nor the
  15:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp ****  *       names of its contributors may be used to endorse or promote products
  16:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp ****  *       derived from this software without specific prior written permission.
  17:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp ****  *
  18:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp ****  * THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
  19:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp ****  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  20:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  21:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp ****  * DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
  22:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  23:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  24:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  25:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  26:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  27:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  28:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp ****  */
  29:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** // ----------------------------------------------------------------------------
  30:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 
  31:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** #ifndef XPCC_ALLOCATOR__ALLOCATOR_BASE_HPP
  32:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** #define XPCC_ALLOCATOR__ALLOCATOR_BASE_HPP
  33:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** #include <cstddef>
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** #include <new>		// needed for placement new
  36:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** namespace xpcc
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** {
  39:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 	namespace allocator
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 	{
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 		/**
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 		 * \brief	Base class for all allocator types
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 		 * 
  44:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 		 * \internal
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 		 * 
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 		 * \ingroup	allocator
  47:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 		 * \author	Fabian Greif
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 		 */
  49:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 		template <typename T>
  50:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 		class AllocatorBase
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 		{
  52:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 		public:
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 			/**
  54:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 			 * \brief	Construct an object
  55:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 			 * 
  56:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 			 * Constructs an object of type T (the template parameter) on the
  57:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 			 * location pointed by p using its copy constructor to initialize
  58:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 			 * its value to \p value.
  59:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 			 * 
  60:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 			 * Notice that this does not allocate space for the element, it
  61:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 			 * should already be available at p.
  62:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 			 */
  63:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 			static inline void
  64:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 			construct(T* p, const T& value)
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 			{
  66:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 				// placement new
  67:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp **** 				::new((void *) p) T(value);
 1785              		.loc 16 67 0
 1786 004e 0546     		mov	r5, r0
 1787              	.LVL158:
 1788 0050 40B1     		cbz	r0, .L129
 1789              	.LVL159:
 1790              	.LBB813:
 1791              	.LBB814:
 1792              		.loc 14 50 0
 1793 0052 04A9     		add	r1, sp, #16
 1794              	.LVL160:
 1795 0054 0F4B     		ldr	r3, .L136+12
 1796 0056 9847     		blx	r3
 1797              	.LVL161:
 1798 0058 94E80700 		ldmia	r4, {r0, r1, r2}
 1799 005c 05F11403 		add	r3, r5, #20
 1800 0060 83E80700 		stmia	r3, {r0, r1, r2}
 1801              	.LVL162:
 1802              	.L129:
 1803              	.LBE814:
 1804              	.LBE813:
 1805              	.LBE812:
 1806              	.LBE811:
 109:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	node->previous = this->back;
 1807              		.loc 6 109 0
 1808 0064 336B     		ldr	r3, [r6, #48]
 108:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	node->next = 0;
 1809              		.loc 6 108 0
 1810 0066 0022     		movs	r2, #0
 1811 0068 6A62     		str	r2, [r5, #36]
 109:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	node->previous = this->back;
 1812              		.loc 6 109 0
 1813 006a 2B62     		str	r3, [r5, #32]
 111:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	if (this->back == 0)
 1814              		.loc 6 111 0
 1815 006c 4BB1     		cbz	r3, .L135
 117:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 		this->back->next = node;
 1816              		.loc 6 117 0
 1817 006e 5D62     		str	r5, [r3, #36]
 1818              	.L131:
 119:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 	this->back = node;
 1819              		.loc 6 119 0
 1820 0070 3563     		str	r5, [r6, #48]
 1821              	.LVL163:
 1822              	.LBE808:
 1823              	.LBE807:
 1824              	.LBB816:
 1825              	.LBB817:
 1826              		.loc 14 50 0
 1827 0072 04A8     		add	r0, sp, #16
 1828              	.LVL164:
 1829 0074 084B     		ldr	r3, .L136+16
 1830 0076 9847     		blx	r3
 1831              	.LVL165:
 1832              	.LBE817:
 1833              	.LBE816:
 1834              	.LBE819:
  72:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** }
 1835              		.loc 1 72 0
 1836 0078 0DB0     		add	sp, sp, #52
 1837 007a BDE8F040 		pop	{r4, r5, r6, r7, lr}
 1838 007e 02B0     		add	sp, sp, #8
 1839 0080 7047     		bx	lr
 1840              	.LVL166:
 1841              	.L135:
 1842              	.LBB820:
 1843              	.LBB818:
 1844              	.LBB815:
 114:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubly_linked_list_impl.hpp **** 		this->front = node;
 1845              		.loc 6 114 0
 1846 0082 F562     		str	r5, [r6, #44]
 1847 0084 F4E7     		b	.L131
 1848              	.L137:
 1849 0086 00BF     		.align	2
 1850              	.L136:
 1851 0088 ABAAAA2A 		.word	715827883
 1852 008c 00000000 		.word	_ZN4xpcc14ScrollableTextC1EPKct
 1853 0090 00000000 		.word	_Znwj
 1854 0094 00000000 		.word	_ZN4xpcc14ScrollableTextC1ERKS0_
 1855 0098 00000000 		.word	_ZN4xpcc14ScrollableTextD1Ev
 1856              	.LBE815:
 1857              	.LBE818:
 1858              	.LBE820:
 1859              		.cfi_endproc
 1860              	.LFE1390:
 1862              		.section	.text._ZN4xpcc12StandardMenu8setTitleEPKc,"ax",%progbits
 1863              		.align	2
 1864              		.global	_ZN4xpcc12StandardMenu8setTitleEPKc
 1865              		.thumb
 1866              		.thumb_func
 1868              	_ZN4xpcc12StandardMenu8setTitleEPKc:
 1869              	.LFB1394:
  76:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** {
 1870              		.loc 1 76 0
 1871              		.cfi_startproc
 1872              		@ args = 0, pretend = 0, frame = 0
 1873              		@ frame_needed = 0, uses_anonymous_args = 0
 1874              		@ link register save eliminated.
 1875              	.LVL167:
  77:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/standard_menu.cpp **** 	this->title = text;
 1876              		.loc 1 77 0
 1877 0000 0162     		str	r1, [r0, #32]
 1878 0002 7047     		bx	lr
 1879              		.cfi_endproc
 1880              	.LFE1394:
 1882              		.global	_ZTVN4xpcc12StandardMenuE
 1883              		.weak	_ZTVN4xpcc12AbstractMenuE
 1884              		.section	.rodata._ZTVN4xpcc12AbstractMenuE,"aG",%progbits,_ZTVN4xpcc12AbstractMenuE,comdat
 1885              		.align	3
 1888              	_ZTVN4xpcc12AbstractMenuE:
 1889 0000 00000000 		.word	0
 1890 0004 00000000 		.word	0
 1891 0008 00000000 		.word	_ZN4xpcc12AbstractMenuD1Ev
 1892 000c 00000000 		.word	_ZN4xpcc12AbstractMenuD0Ev
 1893 0010 00000000 		.word	_ZN4xpcc12AbstractView6updateEv
 1894 0014 00000000 		.word	__cxa_pure_virtual
 1895 0018 00000000 		.word	__cxa_pure_virtual
 1896 001c 00000000 		.word	__cxa_pure_virtual
 1897 0020 00000000 		.word	_ZN4xpcc12AbstractView8onRemoveEv
 1898 0024 00000000 		.section	.rodata._ZTVN4xpcc12StandardMenuE,"a",%progbits
 1899              		.align	3
 1900              		.set	.LANCHOR0,. + 0
 1903              	_ZTVN4xpcc12StandardMenuE:
 1904 0000 00000000 		.word	0
 1905 0004 00000000 		.word	0
 1906 0008 00000000 		.word	__cxa_pure_virtual
 1907 000c 00000000 		.word	__cxa_pure_virtual
 1908 0010 00000000 		.word	_ZN4xpcc12AbstractView6updateEv
 1909 0014 00000000 		.word	_ZN4xpcc12StandardMenu10hasChangedEv
 1910 0018 00000000 		.word	_ZN4xpcc12StandardMenu4drawEv
 1911 001c 00000000 		.word	_ZN4xpcc12StandardMenu16shortButtonPressENS_11MenuButtons6ButtonE
 1912 0020 00000000 		.word	_ZN4xpcc12AbstractView8onRemoveEv
 1913 0024 00000000 		.word	_ZN4xpcc12StandardMenu21selectedEntryFunctionEh
 1914              		.section	.rodata.str1.4,"aMS",%progbits,1
 1915              		.align	2
 1916              	.LC0:
 1917 0000 3E00     		.ascii	">\000"
 1918 0002 0000     		.space	2
 1919              	.LC1:
 1920 0004 2000     		.ascii	" \000"
 1921 0006 0000     		.space	2
 1922              	.LC2:
 1923 0008 00       		.ascii	"\000"
 1924 0009 000000   		.text
 1925              	.Letext0:
 1926              		.file 17 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/include/stddef.h"
 1927              		.file 18 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/st
 1928              		.file 19 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp"
 1929              		.file 20 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/geometric_traits.hpp"
 1930              		.file 21 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector2.hpp"
 1931              		.file 22 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector1.hpp"
 1932              		.file 23 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/geometry/vector1_impl.hpp"
 1933              		.file 24 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/matrix.hpp"
 1934              		.file 25 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/matrix_impl.hpp"
 1935              		.file 26 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/accessor/ram.hpp"
 1936              		.file 27 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/menu_buttons.hpp"
 1937              		.file 28 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/abstract_view.hpp"
 1938              		.file 29 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/clock.hpp"
 1939              		.file 30 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/timeou
 1940              		.file 31 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../workflow/period
 1941              		.file 32 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/ui/menu/../../../container/doubl
 1942              		.file 33 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c+
 1943              		.file 34 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c+
 1944              		.file 35 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c+
 1945              		.file 36 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c+
 1946              		.file 37 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/st
 1947              		.file 38 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c+
 1948              		.file 39 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/st
 1949              		.file 40 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c+
 1950              		.file 41 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/template_metaprogramming.hpp"
 1951              		.file 42 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:00000000 standard_menu.cpp
     /tmp/ccX7kape.s:20     .text._ZN4xpcc12StandardMenu21selectedEntryFunctionEh:00000000 $t
     /tmp/ccX7kape.s:25     .text._ZN4xpcc12StandardMenu21selectedEntryFunctionEh:00000000 _ZN4xpcc12StandardMenu21selectedEntryFunctionEh
     /tmp/ccX7kape.s:39     .text._ZN4xpcc12AbstractMenuD2Ev:00000000 $t
     /tmp/ccX7kape.s:44     .text._ZN4xpcc12AbstractMenuD2Ev:00000000 _ZN4xpcc12AbstractMenuD2Ev
     /tmp/ccX7kape.s:74     .text._ZN4xpcc12AbstractMenuD2Ev:00000010 $d
     /tmp/ccX7kape.s:1888   .rodata._ZTVN4xpcc12AbstractMenuE:00000000 _ZTVN4xpcc12AbstractMenuE
     /tmp/ccX7kape.s:44     .text._ZN4xpcc12AbstractMenuD2Ev:00000000 _ZN4xpcc12AbstractMenuD1Ev
     /tmp/ccX7kape.s:82     .text._ZN4xpcc12StandardMenu10hasChangedEv:00000000 $t
     /tmp/ccX7kape.s:87     .text._ZN4xpcc12StandardMenu10hasChangedEv:00000000 _ZN4xpcc12StandardMenu10hasChangedEv
     /tmp/ccX7kape.s:230    .text._ZN4xpcc12StandardMenu10hasChangedEv:00000044 $d
     /tmp/ccX7kape.s:239    .text._ZN4xpcc12StandardMenu16shortButtonPressENS_11MenuButtons6ButtonE:00000000 $t
     /tmp/ccX7kape.s:244    .text._ZN4xpcc12StandardMenu16shortButtonPressENS_11MenuButtons6ButtonE:00000000 _ZN4xpcc12StandardMenu16shortButtonPressENS_11MenuButtons6ButtonE
     /tmp/ccX7kape.s:266    .text._ZN4xpcc12StandardMenu16shortButtonPressENS_11MenuButtons6ButtonE:0000000c $d
     /tmp/ccX7kape.s:270    .text._ZN4xpcc12StandardMenu16shortButtonPressENS_11MenuButtons6ButtonE:00000010 $t
     /tmp/ccX7kape.s:615    .text._ZN4xpcc12StandardMenu16shortButtonPressENS_11MenuButtons6ButtonE:00000118 $d
     /tmp/ccX7kape.s:627    .text._ZN4xpcc12AbstractMenuD0Ev:00000000 $t
     /tmp/ccX7kape.s:632    .text._ZN4xpcc12AbstractMenuD0Ev:00000000 _ZN4xpcc12AbstractMenuD0Ev
     /tmp/ccX7kape.s:669    .text._ZN4xpcc12AbstractMenuD0Ev:00000018 $d
     /tmp/ccX7kape.s:676    .text._ZN4xpcc12StandardMenu4drawEv:00000000 $t
     /tmp/ccX7kape.s:681    .text._ZN4xpcc12StandardMenu4drawEv:00000000 _ZN4xpcc12StandardMenu4drawEv
     /tmp/ccX7kape.s:1089   .text._ZN4xpcc12StandardMenu4drawEv:0000013c $d
     /tmp/ccX7kape.s:1103   .text._ZN4xpcc9MenuEntryC2EPKctNS_17MenuEntryCallbackE:00000000 $t
     /tmp/ccX7kape.s:1108   .text._ZN4xpcc9MenuEntryC2EPKctNS_17MenuEntryCallbackE:00000000 _ZN4xpcc9MenuEntryC2EPKctNS_17MenuEntryCallbackE
     /tmp/ccX7kape.s:1146   .text._ZN4xpcc9MenuEntryC2EPKctNS_17MenuEntryCallbackE:00000028 $d
     /tmp/ccX7kape.s:1108   .text._ZN4xpcc9MenuEntryC2EPKctNS_17MenuEntryCallbackE:00000000 _ZN4xpcc9MenuEntryC1EPKctNS_17MenuEntryCallbackE
     /tmp/ccX7kape.s:1153   .text._ZN4xpcc12StandardMenuC2EPNS_9ViewStackEh:00000000 $t
     /tmp/ccX7kape.s:1158   .text._ZN4xpcc12StandardMenuC2EPNS_9ViewStackEh:00000000 _ZN4xpcc12StandardMenuC2EPNS_9ViewStackEh
     /tmp/ccX7kape.s:1293   .text._ZN4xpcc12StandardMenuC2EPNS_9ViewStackEh:00000058 $d
     /tmp/ccX7kape.s:1158   .text._ZN4xpcc12StandardMenuC2EPNS_9ViewStackEh:00000000 _ZN4xpcc12StandardMenuC1EPNS_9ViewStackEh
     /tmp/ccX7kape.s:1303   .text._ZN4xpcc12StandardMenuC2EPNS_9ViewStackEhPKc:00000000 $t
     /tmp/ccX7kape.s:1308   .text._ZN4xpcc12StandardMenuC2EPNS_9ViewStackEhPKc:00000000 _ZN4xpcc12StandardMenuC2EPNS_9ViewStackEhPKc
     /tmp/ccX7kape.s:1439   .text._ZN4xpcc12StandardMenuC2EPNS_9ViewStackEhPKc:00000058 $d
     /tmp/ccX7kape.s:1308   .text._ZN4xpcc12StandardMenuC2EPNS_9ViewStackEhPKc:00000000 _ZN4xpcc12StandardMenuC1EPNS_9ViewStackEhPKc
     /tmp/ccX7kape.s:1448   .text._ZN4xpcc12StandardMenuD2Ev:00000000 $t
     /tmp/ccX7kape.s:1453   .text._ZN4xpcc12StandardMenuD2Ev:00000000 _ZN4xpcc12StandardMenuD2Ev
     /tmp/ccX7kape.s:1554   .text._ZN4xpcc12StandardMenuD2Ev:0000003c $d
     /tmp/ccX7kape.s:1453   .text._ZN4xpcc12StandardMenuD2Ev:00000000 _ZN4xpcc12StandardMenuD1Ev
     /tmp/ccX7kape.s:1565   .text._ZN4xpcc12StandardMenuD0Ev:00000000 $t
     /tmp/ccX7kape.s:1570   .text._ZN4xpcc12StandardMenuD0Ev:00000000 _ZN4xpcc12StandardMenuD0Ev
     /tmp/ccX7kape.s:1677   .text._ZN4xpcc12StandardMenuD0Ev:00000040 $d
     /tmp/ccX7kape.s:1686   .text._ZN4xpcc12StandardMenu8addEntryEPKcNS_17MenuEntryCallbackE:00000000 $t
     /tmp/ccX7kape.s:1691   .text._ZN4xpcc12StandardMenu8addEntryEPKcNS_17MenuEntryCallbackE:00000000 _ZN4xpcc12StandardMenu8addEntryEPKcNS_17MenuEntryCallbackE
     /tmp/ccX7kape.s:1851   .text._ZN4xpcc12StandardMenu8addEntryEPKcNS_17MenuEntryCallbackE:00000088 $d
     /tmp/ccX7kape.s:1863   .text._ZN4xpcc12StandardMenu8setTitleEPKc:00000000 $t
     /tmp/ccX7kape.s:1868   .text._ZN4xpcc12StandardMenu8setTitleEPKc:00000000 _ZN4xpcc12StandardMenu8setTitleEPKc
     /tmp/ccX7kape.s:1903   .rodata._ZTVN4xpcc12StandardMenuE:00000000 _ZTVN4xpcc12StandardMenuE
     /tmp/ccX7kape.s:1885   .rodata._ZTVN4xpcc12AbstractMenuE:00000000 $d
     /tmp/ccX7kape.s:1899   .rodata._ZTVN4xpcc12StandardMenuE:00000000 $d
     /tmp/ccX7kape.s:1915   .rodata.str1.4:00000000 $d
                     .debug_frame:00000010 $d
                           .group:00000000 _ZN4xpcc12AbstractMenuD5Ev

UNDEFINED SYMBOLS
_ZN4xpcc12AbstractViewD2Ev
_ZN4xpcc5Clock3nowEv
_ZN4xpcc14ScrollableText10setToStartEv
_ZN4xpcc12AbstractView6removeEv
_ZdlPv
_ZN4xpcc8IOStream8writeBinEPKc
_ZN4xpcc8IOStream8writeHexEPKc
_ZN4xpcc14GraphicDisplay8drawLineEssss
_ZN4xpcc14ScrollableText7getTextEv
_ZN4xpcc14ScrollableTextC1EPKct
_ZN4xpcc12AbstractMenuC2EPNS_9ViewStackEh
_ZN4xpcc14ScrollableTextD1Ev
_Znwj
_ZN4xpcc14ScrollableTextC1ERKS0_
_ZN4xpcc12AbstractView6updateEv
__cxa_pure_virtual
_ZN4xpcc12AbstractView8onRemoveEv
