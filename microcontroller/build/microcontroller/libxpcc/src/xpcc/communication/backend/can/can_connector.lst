   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 2
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"can_connector.cpp"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text._ZN4xpcc16CanConnectorBase19convertToIdentifierERKNS_6HeaderEb,"ax",%progbits
  20              		.align	2
  21              		.global	_ZN4xpcc16CanConnectorBase19convertToIdentifierERKNS_6HeaderEb
  22              		.thumb
  23              		.thumb_func
  25              	_ZN4xpcc16CanConnectorBase19convertToIdentifierERKNS_6HeaderEb:
  26              	.LFB306:
  27              		.file 1 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.
   1:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** // coding: utf-8
   2:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** // ----------------------------------------------------------------------------
   3:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** /* Copyright (c) 2009, Roboterclub Aachen e.V.
   4:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp ****  * All rights reserved.
   5:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp ****  * 
   6:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp ****  * Redistribution and use in source and binary forms, with or without
   7:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp ****  * modification, are permitted provided that the following conditions are met:
   8:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp ****  * 
   9:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp ****  *     * Redistributions of source code must retain the above copyright
  10:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp ****  *       notice, this list of conditions and the following disclaimer.
  11:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp ****  *     * Redistributions in binary form must reproduce the above copyright
  12:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp ****  *       notice, this list of conditions and the following disclaimer in the
  13:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp ****  *       documentation and/or other materials provided with the distribution.
  14:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp ****  *     * Neither the name of the Roboterclub Aachen e.V. nor the
  15:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp ****  *       names of its contributors may be used to endorse or promote products
  16:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp ****  *       derived from this software without specific prior written permission.
  17:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp ****  * 
  18:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp ****  * THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
  19:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp ****  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  20:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  21:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp ****  * DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
  22:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  23:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  24:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  25:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  26:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  27:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  28:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp ****  */
  29:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** // ----------------------------------------------------------------------------
  30:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 
  31:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** #include <stdlib.h>
  32:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 
  33:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** #include "can_connector.hpp"
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** // ----------------------------------------------------------------------------
  36:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** uint8_t xpcc::CanConnectorBase::messageCounter = 0;
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** // ----------------------------------------------------------------------------
  39:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** uint32_t
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** xpcc::CanConnectorBase::convertToIdentifier(const Header & header,
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 		bool fragmentated)
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** {
  28              		.loc 1 42 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34 0000 0378     		ldrb	r3, [r0, #0]	@ zero_extendqisi2
  35 0002 013B     		subs	r3, r3, #1
  36 0004 DBB2     		uxtb	r3, r3
  37 0006 012B     		cmp	r3, #1
  38 0008 10B4     		push	{r4}
  39              	.LCFI0:
  40              		.cfi_def_cfa_offset 4
  41              		.cfi_offset 4, -4
  42 000a 13D9     		bls	.L13
  43              	.LBB12:
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 	uint32_t identifier;
  44:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 	
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 	switch (header.type)
  44              		.loc 1 45 0
  45 000c 0023     		movs	r3, #0
  46              	.L2:
  47              	.LVL1:
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 	{
  47:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 		case xpcc::Header::REQUEST:
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 			identifier = 0;
  49:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 			break;
  50:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 		case xpcc::Header::RESPONSE:
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 			identifier = 1;
  52:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 			break;
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 		case xpcc::Header::NEGATIVE_RESPONSE:
  54:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 			identifier = 2;
  55:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 			break;
  56:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 		default:
  57:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 			identifier = 0;
  58:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 			break;
  59:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 	}
  60:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 	
  61:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 	identifier = identifier << 1;
  62:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 	if (header.isAcknowledge){
  48              		.loc 1 62 0
  49 000e 4278     		ldrb	r2, [r0, #1]	@ zero_extendqisi2
  50 0010 0AB1     		cbz	r2, .L3
  63:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 		identifier |= 1;
  51              		.loc 1 63 0
  52 0012 43F00103 		orr	r3, r3, #1
  53              	.LVL2:
  54              	.L3:
  64:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 	}
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 	identifier = identifier << 1;
  66:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 	// Message counter
  67:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 	identifier = identifier << 1;
  55              		.loc 1 67 0
  56 0016 9B00     		lsls	r3, r3, #2
  57              	.LVL3:
  68:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 	
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 	if (fragmentated){
  58              		.loc 1 69 0
  59 0018 09B1     		cbz	r1, .L4
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 		identifier |= 1;
  60              		.loc 1 70 0
  61 001a 43F00103 		orr	r3, r3, #1
  62              	.LVL4:
  63              	.L4:
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 	}
  72:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 	identifier = identifier << 8;
  73:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 	identifier |= header.destination;
  64              		.loc 1 73 0
  65 001e 8478     		ldrb	r4, [r0, #2]	@ zero_extendqisi2
  74:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 	identifier = identifier << 8;
  75:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 	identifier |= header.source;
  66              		.loc 1 75 0
  67 0020 C178     		ldrb	r1, [r0, #3]	@ zero_extendqisi2
  68              	.LVL5:
  76:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 	identifier = identifier << 8;
  77:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 	identifier |= header.packetIdentifier;
  69              		.loc 1 77 0
  70 0022 0279     		ldrb	r2, [r0, #4]	@ zero_extendqisi2
  73:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 	identifier |= header.destination;
  71              		.loc 1 73 0
  72 0024 44EA0323 		orr	r3, r4, r3, lsl #8
  73              	.LVL6:
  75:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 	identifier |= header.source;
  74              		.loc 1 75 0
  75 0028 41EA0320 		orr	r0, r1, r3, lsl #8
  76              	.LVL7:
  77              	.LBE12:
  78:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 	
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 	return identifier;
  80:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** }
  78              		.loc 1 80 0
  79 002c 42EA0020 		orr	r0, r2, r0, lsl #8
  80              	.LVL8:
  81 0030 10BC     		pop	{r4}
  82 0032 7047     		bx	lr
  83              	.LVL9:
  84              	.L13:
  85 0034 024A     		ldr	r2, .L14
  86 0036 52F82330 		ldr	r3, [r2, r3, lsl #2]
  87 003a 5B00     		lsls	r3, r3, #1
  88 003c E7E7     		b	.L2
  89              	.L15:
  90 003e 00BF     		.align	2
  91              	.L14:
  92 0040 00000000 		.word	.LANCHOR0
  93              		.cfi_endproc
  94              	.LFE306:
  96              		.section	.text._ZN4xpcc16CanConnectorBase15convertToHeaderERKmRNS_6HeaderE,"ax",%progbits
  97              		.align	2
  98              		.global	_ZN4xpcc16CanConnectorBase15convertToHeaderERKmRNS_6HeaderE
  99              		.thumb
 100              		.thumb_func
 102              	_ZN4xpcc16CanConnectorBase15convertToHeaderERKmRNS_6HeaderE:
 103              	.LFB307:
  81:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 
  82:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** // ----------------------------------------------------------------------------
  83:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** bool
  84:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** xpcc::CanConnectorBase::convertToHeader(const uint32_t & identifier,
  85:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 		xpcc::Header & header)
  86:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** {
 104              		.loc 1 86 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 109              	.LVL10:
 110              	.LBB13:
  87:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 	const uint8_t *ptr = reinterpret_cast<const uint8_t *>(&identifier);
  88:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 	
  89:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 	header.packetIdentifier = ptr[0];
 111              		.loc 1 89 0
 112 0000 0378     		ldrb	r3, [r0, #0]	@ zero_extendqisi2
 113 0002 0B71     		strb	r3, [r1, #4]
  90:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 	header.source 			= ptr[1];
 114              		.loc 1 90 0
 115 0004 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 116 0006 CB70     		strb	r3, [r1, #3]
  91:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 	header.destination		= ptr[2];
 117              		.loc 1 91 0
 118 0008 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
 119 000a 8B70     		strb	r3, [r1, #2]
  92:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 	
  93:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 	uint8_t flags = ptr[3];
 120              		.loc 1 93 0
 121 000c C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 122              	.LVL11:
  94:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 	
  95:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 	if (flags & 0x04) {
 123              		.loc 1 95 0
 124 000e C3F38002 		ubfx	r2, r3, #2, #1
  96:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 		header.isAcknowledge = true;
  97:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 	}
  98:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 	else {
  99:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 		header.isAcknowledge = false;
 100:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 	}
 101:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 	
 102:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 	switch (flags & 0x18)
 125              		.loc 1 102 0
 126 0012 03F01803 		and	r3, r3, #24
 127 0016 082B     		cmp	r3, #8
 128 0018 4A70     		strb	r2, [r1, #1]
 129 001a 0CD0     		beq	.L19
 130 001c 102B     		cmp	r3, #16
 131 001e 07D0     		beq	.L20
 132 0020 23B9     		cbnz	r3, .L22
 133              	.L23:
 103:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 	{
 104:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 		case 0x00:
 105:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 			header.type = xpcc::Header::REQUEST;
 106:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 			break;
 107:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 		case 0x08:
 108:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 			header.type = xpcc::Header::RESPONSE;
 109:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 			break;
 110:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 		case 0x10:
 111:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 			header.type = xpcc::Header::NEGATIVE_RESPONSE;
 112:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 			break;
 113:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 		default:
 114:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 			// unknown type
 115:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 			//XPCC_LOG_ERROR << "Unknown Type" << xpcc::flush;
 116:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 			header.type = xpcc::Header::REQUEST;
 134              		.loc 1 116 0
 135 0022 0B70     		strb	r3, [r1, #0]
 136              	.L21:
 137              	.LVL12:
 138              	.LBB14:
 139              		.file 2 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.
   1:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** // coding: utf-8
   2:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** // ----------------------------------------------------------------------------
   3:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** /* Copyright (c) 2009, Roboterclub Aachen e.V.
   4:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp ****  * All rights reserved.
   5:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp ****  * 
   6:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp ****  * Redistribution and use in source and binary forms, with or without
   7:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp ****  * modification, are permitted provided that the following conditions are met:
   8:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp ****  * 
   9:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp ****  *     * Redistributions of source code must retain the above copyright
  10:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp ****  *       notice, this list of conditions and the following disclaimer.
  11:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp ****  *     * Redistributions in binary form must reproduce the above copyright
  12:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp ****  *       notice, this list of conditions and the following disclaimer in the
  13:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp ****  *       documentation and/or other materials provided with the distribution.
  14:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp ****  *     * Neither the name of the Roboterclub Aachen e.V. nor the
  15:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp ****  *       names of its contributors may be used to endorse or promote products
  16:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp ****  *       derived from this software without specific prior written permission.
  17:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp ****  * 
  18:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp ****  * THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
  19:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp ****  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  20:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  21:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp ****  * DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
  22:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  23:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  24:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  25:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  26:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  27:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  28:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp ****  */
  29:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** // ----------------------------------------------------------------------------
  30:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** 
  31:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** #ifndef	XPCC__CAN_CONNECTOR_HPP
  32:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** #define	XPCC__CAN_CONNECTOR_HPP
  33:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** 
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** #include <xpcc/container/linked_list.hpp>
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** #include "../backend_interface.hpp"
  36:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** 
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** // Filter
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** #define XPCC_CAN_PACKET_DESTINATION(x)		(static_cast<uint32_t>(x) << 16)
  39:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** #define XPCC_CAN_PACKET_SOURCE(x)			(static_cast<uint32_t>(x) << 8)
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** #define XPCC_CAN_PACKET_ID(x)				(static_cast<uint32_t>(x) << 0)
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** 
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** #define XPCC_CAN_PACKET_TYPE_REQUEST		(0x00UL << 24)
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** #define XPCC_CAN_PACKET_ACKNOWLEDGE			(0x04UL << 24)
  44:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** 
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** #define	XPCC_CAN_PACKET_EVENT				(XPCC_CAN_PACKET_TYPE_REQUEST | XPCC_CAN_PACKET_DESTINATION(0))
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** 
  47:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** // Filter Mask
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** #define XPCC_CAN_PACKET_DESTINATION_MASK	XPCC_CAN_PACKET_DESTINATION(0xff)
  49:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** #define XPCC_CAN_PACKET_SOURCE_MASK			XPCC_CAN_PACKET_SOURCE(0xff)
  50:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** #define XPCC_CAN_PACKET_ID_MASK				XPCC_CAN_PACKET_ID(0xff)
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** 
  52:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** #define XPCC_CAN_PACKET_TYPE_MASK			(0x18UL << 24)
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** #define XPCC_CAN_PACKET_ACKNOWLEDGE_MASK	(0x04UL << 24)
  54:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** 
  55:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** #define	XPCC_CAN_PACKET_EVENT_MASK			(XPCC_CAN_PACKET_DESTINATION_MASK | XPCC_CAN_PACKET_TYPE_MASK)
  56:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** 
  57:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** namespace xpcc
  58:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** {
  59:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** 	class CanConnectorBase
  60:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** 	{
  61:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** 	public:
  62:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** 		/// Convert a packet header to a can identifier
  63:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** 		static uint32_t
  64:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** 		convertToIdentifier(const Header & header, bool fragmentated);
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** 		
  66:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** 		/**
  67:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** 		 * \brief	Convert a can identifier to a packet header
  68:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** 		 * 
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** 		 * \param[in]	identifier	29-bit CAN identifier
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** 		 * \param[out]	header		Packet header
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** 		 * 
  72:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** 		 * \return	\c true if the message is part of a fragmented packet,
  73:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** 		 * 			\c false otherwise.
  74:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** 		 */
  75:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** 		static bool
  76:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** 		convertToHeader(const uint32_t & identifier, Header & header);
  77:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** 		
  78:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** 		static inline bool
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** 		isFragment(const uint32_t & identifier)
  80:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** 		{
  81:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** 			const uint8_t *ptr = reinterpret_cast<const uint8_t *>(&identifier);
  82:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.hpp **** 			return (ptr[3] & 0x01);
 140              		.loc 2 82 0
 141 0024 C078     		ldrb	r0, [r0, #3]	@ zero_extendqisi2
 142              	.LVL13:
 143              	.LBE14:
 144              	.LBE13:
 117:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 	}
 118:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 	
 119:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 	// check if the message is a fragment
 120:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 	return isFragment(identifier);
 121:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** }
 145              		.loc 1 121 0
 146 0026 00F00100 		and	r0, r0, #1
 147 002a 7047     		bx	lr
 148              	.LVL14:
 149              	.L22:
 150              	.LBB15:
 116:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 			header.type = xpcc::Header::REQUEST;
 151              		.loc 1 116 0
 152 002c 0023     		movs	r3, #0
 153 002e F8E7     		b	.L23
 154              	.L20:
 111:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 			header.type = xpcc::Header::NEGATIVE_RESPONSE;
 155              		.loc 1 111 0
 156 0030 0223     		movs	r3, #2
 157 0032 0B70     		strb	r3, [r1, #0]
 112:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 			break;
 158              		.loc 1 112 0
 159 0034 F6E7     		b	.L21
 160              	.L19:
 108:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 			header.type = xpcc::Header::RESPONSE;
 161              		.loc 1 108 0
 162 0036 0123     		movs	r3, #1
 163 0038 0B70     		strb	r3, [r1, #0]
 109:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 			break;
 164              		.loc 1 109 0
 165 003a F3E7     		b	.L21
 166              	.LBE15:
 167              		.cfi_endproc
 168              	.LFE307:
 170              		.section	.text._ZN4xpcc16CanConnectorBase20getNumberOfFragmentsEh,"ax",%progbits
 171              		.align	2
 172              		.global	_ZN4xpcc16CanConnectorBase20getNumberOfFragmentsEh
 173              		.thumb
 174              		.thumb_func
 176              	_ZN4xpcc16CanConnectorBase20getNumberOfFragmentsEh:
 177              	.LFB308:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** // ----------------------------------------------------------------------------
 124:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** uint8_t
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** xpcc::CanConnectorBase::getNumberOfFragments(uint8_t messageSize)
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** {
 178              		.loc 1 126 0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 8
 181              		@ frame_needed = 0, uses_anonymous_args = 0
 182              	.LVL15:
 183 0000 00B5     		push	{lr}
 184              	.LCFI1:
 185              		.cfi_def_cfa_offset 4
 186              		.cfi_offset 14, -4
 187 0002 83B0     		sub	sp, sp, #12
 188              	.LCFI2:
 189              		.cfi_def_cfa_offset 16
 190              		.loc 1 126 0
 191 0004 0146     		mov	r1, r0
 192              	.LBB16:
 127:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 	div_t n = div(messageSize, 6);
 193              		.loc 1 127 0
 194 0006 0622     		movs	r2, #6
 195 0008 6846     		mov	r0, sp
 196              	.LVL16:
 197 000a 064B     		ldr	r3, .L27
 198 000c 9847     		blx	r3
 199              	.LVL17:
 128:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 	return (n.rem > 0) ? n.quot + 1 : n.quot;
 200              		.loc 1 128 0
 201 000e 9DE80900 		ldmia	sp, {r0, r3}
 202 0012 002B     		cmp	r3, #0
 203 0014 03DD     		ble	.L25
 204              		.loc 1 128 0 is_stmt 0 discriminator 1
 205 0016 0130     		adds	r0, r0, #1
 206 0018 C0B2     		uxtb	r0, r0
 207              	.L26:
 208              	.LBE16:
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** }
 209              		.loc 1 129 0 is_stmt 1 discriminator 3
 210 001a 03B0     		add	sp, sp, #12
 211 001c 00BD     		pop	{pc}
 212              	.L25:
 213              	.LBB17:
 128:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/can_connector.cpp **** 	return (n.rem > 0) ? n.quot + 1 : n.quot;
 214              		.loc 1 128 0 discriminator 2
 215 001e C0B2     		uxtb	r0, r0
 216 0020 FBE7     		b	.L26
 217              	.L28:
 218 0022 00BF     		.align	2
 219              	.L27:
 220 0024 00000000 		.word	div
 221              	.LBE17:
 222              		.cfi_endproc
 223              	.LFE308:
 225              		.global	_ZN4xpcc16CanConnectorBase14messageCounterE
 226              		.section	.rodata.CSWTCH.8,"a",%progbits
 227              		.align	2
 228              		.set	.LANCHOR0,. + 0
 231              	CSWTCH.8:
 232 0000 01000000 		.word	1
 233 0004 02000000 		.word	2
 234              		.section	.bss._ZN4xpcc16CanConnectorBase14messageCounterE,"aw",%nobits
 237              	_ZN4xpcc16CanConnectorBase14messageCounterE:
 238 0000 00       		.space	1
 239              		.text
 240              	.Letext0:
 241              		.file 3 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/include/stddef.h"
 242              		.file 4 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/std
 243              		.file 5 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/std
 244              		.file 6 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++
 245              		.file 7 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++
 246              		.file 8 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++
 247              		.file 9 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/str
 248              		.file 10 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/allocator/allocator_base.hpp"
 249              		.file 11 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp"
 250              		.file 12 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/container/smart_pointer.hpp"
 251              		.file 13 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/../header.hpp
 252              		.file 14 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/communication/backend/can/../backend_in
 253              		.file 15 "<built-in>"
 254              		.file 16 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/connectivity/can/message.hpp"
 255              		.file 17 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c+
DEFINED SYMBOLS
                            *ABS*:00000000 can_connector.cpp
     /tmp/ccaF4MaG.s:20     .text._ZN4xpcc16CanConnectorBase19convertToIdentifierERKNS_6HeaderEb:00000000 $t
     /tmp/ccaF4MaG.s:25     .text._ZN4xpcc16CanConnectorBase19convertToIdentifierERKNS_6HeaderEb:00000000 _ZN4xpcc16CanConnectorBase19convertToIdentifierERKNS_6HeaderEb
     /tmp/ccaF4MaG.s:92     .text._ZN4xpcc16CanConnectorBase19convertToIdentifierERKNS_6HeaderEb:00000040 $d
     /tmp/ccaF4MaG.s:97     .text._ZN4xpcc16CanConnectorBase15convertToHeaderERKmRNS_6HeaderE:00000000 $t
     /tmp/ccaF4MaG.s:102    .text._ZN4xpcc16CanConnectorBase15convertToHeaderERKmRNS_6HeaderE:00000000 _ZN4xpcc16CanConnectorBase15convertToHeaderERKmRNS_6HeaderE
     /tmp/ccaF4MaG.s:171    .text._ZN4xpcc16CanConnectorBase20getNumberOfFragmentsEh:00000000 $t
     /tmp/ccaF4MaG.s:176    .text._ZN4xpcc16CanConnectorBase20getNumberOfFragmentsEh:00000000 _ZN4xpcc16CanConnectorBase20getNumberOfFragmentsEh
     /tmp/ccaF4MaG.s:220    .text._ZN4xpcc16CanConnectorBase20getNumberOfFragmentsEh:00000024 $d
     /tmp/ccaF4MaG.s:237    .bss._ZN4xpcc16CanConnectorBase14messageCounterE:00000000 _ZN4xpcc16CanConnectorBase14messageCounterE
     /tmp/ccaF4MaG.s:227    .rodata.CSWTCH.8:00000000 $d
     /tmp/ccaF4MaG.s:231    .rodata.CSWTCH.8:00000000 CSWTCH.8
     /tmp/ccaF4MaG.s:238    .bss._ZN4xpcc16CanConnectorBase14messageCounterE:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
div
