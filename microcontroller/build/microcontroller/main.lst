   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 2
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"main.cpp"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text._Z7systickv,"ax",%progbits
  20              		.align	2
  21              		.global	_Z7systickv
  22              		.thumb
  23              		.thumb_func
  25              	_Z7systickv:
  26              	.LFB1030:
  27              		.file 1 "main.cpp"
   1:main.cpp      **** #include <xpcc/architecture.hpp>
   2:main.cpp      **** 
   3:main.cpp      **** #include "control.h"
   4:main.cpp      **** #include "encoder.h"
   5:main.cpp      **** #include "motor.h"
   6:main.cpp      **** #include "hallSensor.h"
   7:main.cpp      **** #include "project.h"
   8:main.cpp      **** #include "pcInterface.h"
   9:main.cpp      **** #include "laserInterface.h"
  10:main.cpp      **** #include "Trigger.h"
  11:main.cpp      **** #include "pattern.h"
  12:main.cpp      **** #include "utils.h"
  13:main.cpp      **** 
  14:main.cpp      **** using namespace xpcc::stm32;
  15:main.cpp      **** 
  16:main.cpp      **** static bool initClock(){
  17:main.cpp      **** 	// use external 8MHz crystal
  18:main.cpp      **** 	if (!Clock::enableHse(Clock::HseConfig::HSE_CRYSTAL)) {
  19:main.cpp      **** 		return false;
  20:main.cpp      **** 	}
  21:main.cpp      **** 	Clock::enablePll(Clock::PllSource::PLL_HSI, 8, 168);
  22:main.cpp      **** 	return Clock::switchToPll();
  23:main.cpp      **** }
  24:main.cpp      **** 
  25:main.cpp      **** 
  26:main.cpp      **** template<Axis axis>
  27:main.cpp      **** void printControl(){
  28:main.cpp      **** 	static long long unsigned int step = 0;
  29:main.cpp      **** 	controlOut << step << " " << Control<axis>::getShallPosition() << " " << Control<axis>::getIsPosit
  30:main.cpp      **** 			<< Control<axis>::getShallSpeed() << " " << Control<axis>::getIsSpeed() << " "
  31:main.cpp      **** 			<< Control<axis>::getSpeedU() << " " << Control<axis>::getSpeedRealU() << endl;
  32:main.cpp      **** 	step++;
  33:main.cpp      **** }
  34:main.cpp      **** 
  35:main.cpp      **** //int last u;
  36:main.cpp      **** static int counter = 0;
  37:main.cpp      **** void systick(){
  28              		.loc 1 37 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  38:main.cpp      **** 	//if(Control)
  39:main.cpp      **** 	Control<ALL>::update(false);
  40:main.cpp      **** 	counter++;
  37              		.loc 1 40 0
  38 0002 084C     		ldr	r4, .L5
  39:main.cpp      **** 	Control<ALL>::update(false);
  39              		.loc 1 39 0
  40 0004 084B     		ldr	r3, .L5+4
  41 0006 0020     		movs	r0, #0
  42 0008 9847     		blx	r3
  43              	.LVL0:
  44              		.loc 1 40 0
  45 000a 2368     		ldr	r3, [r4, #0]
  46 000c 0133     		adds	r3, r3, #1
  41:main.cpp      **** #if !USE_LASER_DMA
  42:main.cpp      **** 	if(counter == 1000){
  47              		.loc 1 42 0
  48 000e B3F57A7F 		cmp	r3, #1000
  40:main.cpp      **** 	counter++;
  49              		.loc 1 40 0
  50 0012 2360     		str	r3, [r4, #0]
  51              		.loc 1 42 0
  52 0014 00D0     		beq	.L4
  53 0016 10BD     		pop	{r4, pc}
  54              	.L4:
  43:main.cpp      **** 		Laser::sendMeasurementRequest();
  55              		.loc 1 43 0
  56 0018 044B     		ldr	r3, .L5+8
  57 001a 9847     		blx	r3
  58              	.LVL1:
  44:main.cpp      **** 		counter = 0;
  59              		.loc 1 44 0
  60 001c 0023     		movs	r3, #0
  61 001e 2360     		str	r3, [r4, #0]
  62 0020 10BD     		pop	{r4, pc}
  63              	.L6:
  64 0022 00BF     		.align	2
  65              	.L5:
  66 0024 00000000 		.word	.LANCHOR0
  67 0028 00000000 		.word	_ZN7ControlIL4Axis5EE6updateEb
  68 002c 00000000 		.word	_ZN5Laser22sendMeasurementRequestEv
  69              		.cfi_endproc
  70              	.LFE1030:
  72              		.section	.text._ZN4xpcc8IOStreamlsERKc.isra.0.constprop.4,"ax",%progbits
  73              		.align	2
  74              		.thumb
  75              		.thumb_func
  77              	_ZN4xpcc8IOStreamlsERKc.isra.0.constprop.4:
  78              	.LFB1076:
  79              		.file 2 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp"
   1:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** // coding: utf-8
   2:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** // ----------------------------------------------------------------------------
   3:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** /* Copyright (c) 2009, Roboterclub Aachen e.V.
   4:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * All rights reserved.
   5:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *
   6:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * Redistribution and use in source and binary forms, with or without
   7:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * modification, are permitted provided that the following conditions are met:
   8:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * 
   9:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *     * Redistributions of source code must retain the above copyright
  10:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *       notice, this list of conditions and the following disclaimer.
  11:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *     * Redistributions in binary form must reproduce the above copyright
  12:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *       notice, this list of conditions and the following disclaimer in the
  13:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *       documentation and/or other materials provided with the distribution.
  14:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *     * Neither the name of the Roboterclub Aachen e.V. nor the
  15:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *       names of its contributors may be used to endorse or promote products
  16:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *       derived from this software without specific prior written permission.
  17:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *
  18:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
  19:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  20:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  21:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
  22:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  23:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  24:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  25:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  26:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  27:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  28:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  */
  29:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** // ----------------------------------------------------------------------------
  30:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
  31:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #ifndef XPCC__IOSTREAM_HPP
  32:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #define XPCC__IOSTREAM_HPP
  33:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #include <xpcc/architecture/utils.hpp>
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
  36:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #include "iodevice.hpp"
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #include "iodevice_wrapper.hpp"
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
  39:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** namespace xpcc
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** {
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	/**
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	 * \brief 	This Formats all primary types into a string stream for
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	 * 			output or it reads values from a input and converts them to
  44:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	 * 			a given type;
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	 *
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	 * \ingroup io
  47:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	 * \author	Martin Rosekeit <martin.rosekeit@rwth-aachen.de>
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	 */
  49:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	class IOStream
  50:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	{
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	public :
  52:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		/**
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		 * \brief	Constructor
  54:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		 * 
  55:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		 * \param	device	device to write the stream to
  56:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		 * 
  57:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		 * \code
  58:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		 *	MyIODevice device;
  59:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		 *	IOStream stream( device );
  60:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		 * \endcode
  61:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		 */
  62:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		IOStream(IODevice& device);
  63:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
  64:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		inline IOStream&
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		write(char c)
  66:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
  67:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->device->write(c);
  68:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		inline IOStream&
  72:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		flush()
  73:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
  74:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->device->flush();
  75:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->mode = Mode::Ascii;
  76:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
  77:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
  78:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		/// set the output mode to Mode::Binary style for \c char and \c char*
  80:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
  81:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		bin()
  82:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
  83:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->mode = Mode::Binary;
  84:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
  85:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
  86:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
  87:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		/// set the output mode to Mode::Hexadecimal style for \c char and \c char*
  88:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
  89:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		hex()
  90:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
  91:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->mode = Mode::Hexadecimal;
  92:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
  93:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
  94:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
  95:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		/// set the output mode to Mode::Ascii style for \c char and \c char*
  96:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
  97:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ascii()
  98:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
  99:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->mode = Mode::Ascii;
 100:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 101:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 102:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 103:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 104:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		IOStream&
 105:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const unsigned char& v)
 106:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 107:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 108:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeInteger(static_cast<uint16_t>(v));
 109:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 110:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 111:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 112:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 113:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else {
 114:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 115:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 116:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 117:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 118:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
 119:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		IOStream&
 120:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const char& v)
  80              		.loc 2 120 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              	.LVL2:
 121:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
  85              		.loc 2 122 0
  86 0000 4368     		ldr	r3, [r0, #4]
 120:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const char& v)
  87              		.loc 2 120 0
  88 0002 10B5     		push	{r4, lr}
  89              	.LCFI1:
  90              		.cfi_def_cfa_offset 8
  91              		.cfi_offset 4, -8
  92              		.cfi_offset 14, -4
 120:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const char& v)
  93              		.loc 2 120 0
  94 0004 0446     		mov	r4, r0
  95              		.loc 2 122 0
  96 0006 3BB1     		cbz	r3, .L11
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 124:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
  97              		.loc 2 126 0
  98 0008 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
  99              		.loc 2 125 0
 100 000a 022B     		cmp	r3, #2
 101              		.loc 2 126 0
 102 000c 0CBF     		ite	eq
 103 000e 054B     		ldreq	r3, .L12
 127:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 128:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else {
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 104              		.loc 2 129 0
 105 0010 054B     		ldrne	r3, .L12+4
 106 0012 9847     		blx	r3
 107              	.LVL3:
 108              	.L9:
 130:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 131:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 132:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 109              		.loc 2 132 0
 110 0014 2046     		mov	r0, r4
 111 0016 10BD     		pop	{r4, pc}
 112              	.LVL4:
 113              	.L11:
 114              	.LBB22:
 115              	.LBB23:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 116              		.loc 2 123 0
 117 0018 0068     		ldr	r0, [r0, #0]
 118              	.LVL5:
 119 001a 0368     		ldr	r3, [r0, #0]
 120 001c 0A21     		movs	r1, #10
 121 001e 9B68     		ldr	r3, [r3, #8]
 122 0020 9847     		blx	r3
 123              	.LVL6:
 124 0022 F7E7     		b	.L9
 125              	.L13:
 126              		.align	2
 127              	.L12:
 128 0024 00000000 		.word	_ZN4xpcc8IOStream8writeBinEh
 129 0028 00000000 		.word	_ZN4xpcc8IOStream8writeHexEh
 130              	.LBE23:
 131              	.LBE22:
 132              		.cfi_endproc
 133              	.LFE1076:
 135              		.section	.text._ZN4xpcc8IOStreamlsEPKc,"axG",%progbits,_ZN4xpcc8IOStreamlsEPKc,comdat
 136              		.align	2
 137              		.weak	_ZN4xpcc8IOStreamlsEPKc
 138              		.thumb
 139              		.thumb_func
 141              	_ZN4xpcc8IOStreamlsEPKc:
 142              	.LFB735:
 133:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 134:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 135:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const uint16_t& v)
 136:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 137:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 138:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeInteger(v);
 139:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 140:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 141:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v >> 8));
 142:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v & 0xff));
 143:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 144:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else {
 145:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v >> 8));
 146:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v & 0xff));
 147:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 148:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 149:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 150:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
 151:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 152:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const int16_t& v)
 153:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 154:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 155:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeInteger(v);
 156:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 157:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 158:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v >> 8));
 159:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v & 0xff));
 160:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 161:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else {
 162:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v >> 8));
 163:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v & 0xff));
 164:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 165:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 166:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 167:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
 168:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 169:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const uint32_t& v)
 170:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 171:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 172:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeInteger(v);
 173:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 174:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 175:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v >> 24));
 176:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v >> 16));
 177:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v >> 8));
 178:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v & 0xff));
 179:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 180:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else {
 181:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v >> 24));
 182:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v >> 16));
 183:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v >> 8));
 184:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v & 0xff));
 185:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 186:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 187:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 188:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
 189:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 190:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const int32_t& v)
 191:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 192:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 193:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeInteger(v);
 194:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 195:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 196:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v >> 24));
 197:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v >> 16));
 198:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v >> 8));
 199:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v & 0xff));
 200:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 201:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else {
 202:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v >> 24));
 203:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v >> 16));
 204:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v >> 8));
 205:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v & 0xff));
 206:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 207:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 208:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 209:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 210:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #if defined(XPCC__OS_OSX)
 211:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		// For APPLE 'int64_t' is of type 'int'. Therefore there is no
 212:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		// function here for the default type 'long int'. As 'long int' has the same
 213:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		// width as 'int64_t' we just use a typedef here.
 214:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 215:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const long int& v)
 216:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 217:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int64_t>(v));
 218:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 219:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 220:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 221:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 222:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const long unsigned int& v)
 223:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 224:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<uint64_t>(v));
 225:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 226:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 227:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #endif
 228:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 229:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #if defined(XPCC__CPU_ARM) || defined(XPCC__CPU_AVR32)
 230:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		// For ARM 'int32_t' is of type 'long'. Therefore there is no
 231:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		// function here for the default type 'int'. As 'int' has the same
 232:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		// width as 'int32_t' we just use a typedef here.
 233:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 234:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const int& v)
 235:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 237:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 238:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 239:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 240:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 241:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const unsigned int& v)
 242:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 243:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<uint32_t>(v));
 244:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 245:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 246:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #endif
 247:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 248:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** // The 64-bit types on the AVR are extremely slow and are
 249:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** // therefore excluded here
 250:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #if !defined(XPCC__CPU_AVR)
 251:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 252:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const uint64_t& v)
 253:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 254:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(v);
 255:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 256:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 257:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 258:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 259:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const int64_t& v)
 260:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 261:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(v);
 262:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 263:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 264:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #endif
 265:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 266:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 267:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const float& v)
 268:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 269:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeFloat(v);
 270:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 271:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 272:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
 273:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 274:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const double& v)
 275:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 276:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #if defined(XPCC__CPU_AVR)
 277:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeFloat(static_cast<float>(v));
 278:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #else
 279:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeDouble(v);
 280:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #endif
 281:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 282:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 283:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
 284:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		IOStream&
 285:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const char* s)
 143              		.loc 2 285 0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147              	.LVL7:
 286:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 148              		.loc 2 287 0
 149 0000 4368     		ldr	r3, [r0, #4]
 285:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const char* s)
 150              		.loc 2 285 0
 151 0002 10B5     		push	{r4, lr}
 152              	.LCFI2:
 153              		.cfi_def_cfa_offset 8
 154              		.cfi_offset 4, -8
 155              		.cfi_offset 14, -4
 285:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const char* s)
 156              		.loc 2 285 0
 157 0004 0446     		mov	r4, r0
 158              		.loc 2 287 0
 159 0006 33B1     		cbz	r3, .L18
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 289:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 160              		.loc 2 290 0
 161 0008 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 162              		.loc 2 291 0
 163 000a 0CBF     		ite	eq
 164 000c 054B     		ldreq	r3, .L19
 292:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 293:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else {
 294:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(s);
 165              		.loc 2 294 0
 166 000e 064B     		ldrne	r3, .L19+4
 167 0010 9847     		blx	r3
 168              	.LVL8:
 295:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 296:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 297:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 169              		.loc 2 297 0
 170 0012 2046     		mov	r0, r4
 171 0014 10BD     		pop	{r4, pc}
 172              	.LVL9:
 173              	.L18:
 174              	.LBB26:
 175              	.LBB27:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 176              		.loc 2 288 0
 177 0016 0068     		ldr	r0, [r0, #0]
 178 0018 0368     		ldr	r3, [r0, #0]
 179 001a DB68     		ldr	r3, [r3, #12]
 180 001c 9847     		blx	r3
 181              	.LVL10:
 182              	.LBE27:
 183              	.LBE26:
 184              		.loc 2 297 0
 185 001e 2046     		mov	r0, r4
 186 0020 10BD     		pop	{r4, pc}
 187              	.L20:
 188 0022 00BF     		.align	2
 189              	.L19:
 190 0024 00000000 		.word	_ZN4xpcc8IOStream8writeBinEPKc
 191 0028 00000000 		.word	_ZN4xpcc8IOStream8writeHexEPKc
 192              		.cfi_endproc
 193              	.LFE735:
 195              		.section	.text.startup.main,"ax",%progbits
 196              		.align	2
 197              		.global	main
 198              		.thumb
 199              		.thumb_func
 201              	main:
 202              	.LFB1042:
  45:main.cpp      **** 	}
  46:main.cpp      **** #endif
  47:main.cpp      **** 	/*counter++;
  48:main.cpp      **** 	if(counter > 500){
  49:main.cpp      **** 		Laser::sendMeasurementRequest();
  50:main.cpp      **** 		counter = 0;
  51:main.cpp      **** 	}*/
  52:main.cpp      **** 	//printControl<X>();
  53:main.cpp      **** }
  54:main.cpp      **** 
  55:main.cpp      **** GPIO__OUTPUT(LASER_TIMING, E, 1);
  56:main.cpp      **** GPIO__INPUT(LASER_STATUS, E, 5);
  57:main.cpp      **** 
  58:main.cpp      **** 
  59:main.cpp      **** MAIN_FUNCTION{
 203              		.loc 1 59 0
 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 8
 206              		@ frame_needed = 0, uses_anonymous_args = 0
 207 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 208              	.LCFI3:
 209              		.cfi_def_cfa_offset 36
 210              		.cfi_offset 4, -36
 211              		.cfi_offset 5, -32
 212              		.cfi_offset 6, -28
 213              		.cfi_offset 7, -24
 214              		.cfi_offset 8, -20
 215              		.cfi_offset 9, -16
 216              		.cfi_offset 10, -12
 217              		.cfi_offset 11, -8
 218              		.cfi_offset 14, -4
 219              	.LBB45:
 220              	.LBB46:
 221              	.LBB47:
  18:main.cpp      **** 	if (!Clock::enableHse(Clock::HseConfig::HSE_CRYSTAL)) {
 222              		.loc 1 18 0
 223 0004 0020     		movs	r0, #0
 224              	.LBE47:
 225              	.LBE46:
 226              	.LBE45:
 227              		.loc 1 59 0
 228 0006 83B0     		sub	sp, sp, #12
 229              	.LCFI4:
 230              		.cfi_def_cfa_offset 48
 231              	.LBB70:
 232              	.LBB50:
 233              	.LBB48:
  18:main.cpp      **** 	if (!Clock::enableHse(Clock::HseConfig::HSE_CRYSTAL)) {
 234              		.loc 1 18 0
 235 0008 40F2DC51 		movw	r1, #1500
 236 000c 484B     		ldr	r3, .L39
 237 000e 9847     		blx	r3
 238              	.LVL11:
 239 0010 0028     		cmp	r0, #0
 240 0012 40F08380 		bne	.L38
 241              	.L22:
 242              	.LBE48:
 243              	.LBE50:
  60:main.cpp      **** 	bool ok;
  61:main.cpp      **** 	ok = initClock(); //if this fails, we are going to have a bad time
  62:main.cpp      **** 
  63:main.cpp      **** 	//--------------------------------------------------------------
  64:main.cpp      **** 	//Init routines
  65:main.cpp      **** 	//--------------------------------------------------------------
  66:main.cpp      **** 	State::init(); //state handling, can visualize init failures via LEDs
 244              		.loc 1 66 0
 245 0016 474B     		ldr	r3, .L39+4
  67:main.cpp      **** 	ok = PC::init(); //starts up COM interface to computer
  68:main.cpp      **** 	dout << "COM INIT " << ok << endl;
 246              		.loc 1 68 0
 247 0018 DFF888A1 		ldr	sl, .L39+116
 248              	.LBB51:
 249              	.LBB52:
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 250              		.loc 2 236 0
 251 001c DFF88891 		ldr	r9, .L39+120
 252              	.LBE52:
 253              	.LBE51:
 254              		.loc 1 68 0
 255 0020 DFF88881 		ldr	r8, .L39+124
  69:main.cpp      **** 	ok = Encoder::init();
  70:main.cpp      **** 	dout << "ENCODER INIT " << ok << endl;
  71:main.cpp      **** 	ok = Motor<ALL>::init();
  72:main.cpp      **** 	dout << "MOTOR INIT " << ok << endl;
  73:main.cpp      **** 	ok = HallSensor<ALL>::init();
  74:main.cpp      **** 	dout << "HALLSENSOR INIT " << ok << endl;
  75:main.cpp      **** 	ok = Control<ALL>::init();
  76:main.cpp      **** 	dout << "CONTROL INIT " << ok << endl;
  77:main.cpp      **** 	ok = Laser::init();
  78:main.cpp      **** 	dout << "LASER INTERFACE INIT " << ok << endl;
  79:main.cpp      **** 
  80:main.cpp      **** 	//--------------------------------------------------------------
  81:main.cpp      **** 	//go go go
  82:main.cpp      **** 	//--------------------------------------------------------------
  83:main.cpp      **** 	SysTickTimer::attachInterrupt(systick);
  84:main.cpp      **** 
  85:main.cpp      **** 	Control<ALL>::enablePositionControl(false);
  86:main.cpp      **** 	Control<ALL>::enableSpeedControl(false);
 256              		.loc 1 86 0
 257 0024 DFF888B1 		ldr	fp, .L39+128
 258 0028 434C     		ldr	r4, .L39+8
 259 002a 444E     		ldr	r6, .L39+12
 260 002c 444D     		ldr	r5, .L39+16
 261 002e 454F     		ldr	r7, .L39+20
  66:main.cpp      **** 	State::init(); //state handling, can visualize init failures via LEDs
 262              		.loc 1 66 0
 263 0030 9847     		blx	r3
 264              	.LVL12:
  67:main.cpp      **** 	ok = PC::init(); //starts up COM interface to computer
 265              		.loc 1 67 0
 266 0032 454B     		ldr	r3, .L39+24
 267 0034 9847     		blx	r3
 268              	.LVL13:
 269 0036 0246     		mov	r2, r0
 270              	.LVL14:
  68:main.cpp      **** 	dout << "COM INIT " << ok << endl;
 271              		.loc 1 68 0
 272 0038 4449     		ldr	r1, .L39+28
 273 003a 0192     		str	r2, [sp, #4]
 274 003c 4448     		ldr	r0, .L39+32
 275              	.LVL15:
 276 003e D047     		blx	sl
 277              	.LVL16:
 278              	.LBB54:
 279              	.LBB53:
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 280              		.loc 2 236 0
 281 0040 019A     		ldr	r2, [sp, #4]
 282 0042 0190     		str	r0, [sp, #4]
 283 0044 1146     		mov	r1, r2
 284 0046 C847     		blx	r9
 285              	.LVL17:
 286              	.LBE53:
 287              	.LBE54:
  68:main.cpp      **** 	dout << "COM INIT " << ok << endl;
 288              		.loc 1 68 0
 289 0048 019B     		ldr	r3, [sp, #4]
 290 004a 1846     		mov	r0, r3
 291 004c C047     		blx	r8
 292              	.LVL18:
  69:main.cpp      **** 	ok = Encoder::init();
 293              		.loc 1 69 0
 294 004e 414B     		ldr	r3, .L39+36
 295 0050 9847     		blx	r3
 296              	.LVL19:
 297 0052 0246     		mov	r2, r0
 298              	.LVL20:
  70:main.cpp      **** 	dout << "ENCODER INIT " << ok << endl;
 299              		.loc 1 70 0
 300 0054 4049     		ldr	r1, .L39+40
 301 0056 0192     		str	r2, [sp, #4]
 302 0058 3D48     		ldr	r0, .L39+32
 303              	.LVL21:
 304 005a D047     		blx	sl
 305              	.LVL22:
 306              	.LBB55:
 307              	.LBB56:
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 308              		.loc 2 236 0
 309 005c 019A     		ldr	r2, [sp, #4]
 310 005e 0190     		str	r0, [sp, #4]
 311 0060 1146     		mov	r1, r2
 312 0062 C847     		blx	r9
 313              	.LVL23:
 314              	.LBE56:
 315              	.LBE55:
  70:main.cpp      **** 	dout << "ENCODER INIT " << ok << endl;
 316              		.loc 1 70 0
 317 0064 019B     		ldr	r3, [sp, #4]
 318 0066 1846     		mov	r0, r3
 319 0068 C047     		blx	r8
 320              	.LVL24:
  71:main.cpp      **** 	ok = Motor<ALL>::init();
 321              		.loc 1 71 0
 322 006a 3C4B     		ldr	r3, .L39+44
 323 006c 9847     		blx	r3
 324              	.LVL25:
 325 006e 0246     		mov	r2, r0
 326              	.LVL26:
  72:main.cpp      **** 	dout << "MOTOR INIT " << ok << endl;
 327              		.loc 1 72 0
 328 0070 3B49     		ldr	r1, .L39+48
 329 0072 0192     		str	r2, [sp, #4]
 330 0074 3648     		ldr	r0, .L39+32
 331              	.LVL27:
 332 0076 D047     		blx	sl
 333              	.LVL28:
 334              	.LBB57:
 335              	.LBB58:
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 336              		.loc 2 236 0
 337 0078 019A     		ldr	r2, [sp, #4]
 338 007a 0190     		str	r0, [sp, #4]
 339 007c 1146     		mov	r1, r2
 340 007e C847     		blx	r9
 341              	.LVL29:
 342              	.LBE58:
 343              	.LBE57:
  72:main.cpp      **** 	dout << "MOTOR INIT " << ok << endl;
 344              		.loc 1 72 0
 345 0080 019B     		ldr	r3, [sp, #4]
 346 0082 1846     		mov	r0, r3
 347 0084 C047     		blx	r8
 348              	.LVL30:
  73:main.cpp      **** 	ok = HallSensor<ALL>::init();
 349              		.loc 1 73 0
 350 0086 374B     		ldr	r3, .L39+52
 351 0088 9847     		blx	r3
 352              	.LVL31:
 353 008a 0246     		mov	r2, r0
 354              	.LVL32:
  74:main.cpp      **** 	dout << "HALLSENSOR INIT " << ok << endl;
 355              		.loc 1 74 0
 356 008c 3649     		ldr	r1, .L39+56
 357 008e 0192     		str	r2, [sp, #4]
 358 0090 2F48     		ldr	r0, .L39+32
 359              	.LVL33:
 360 0092 D047     		blx	sl
 361              	.LVL34:
 362              	.LBB59:
 363              	.LBB60:
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 364              		.loc 2 236 0
 365 0094 019A     		ldr	r2, [sp, #4]
 366 0096 0190     		str	r0, [sp, #4]
 367 0098 1146     		mov	r1, r2
 368 009a C847     		blx	r9
 369              	.LVL35:
 370              	.LBE60:
 371              	.LBE59:
  74:main.cpp      **** 	dout << "HALLSENSOR INIT " << ok << endl;
 372              		.loc 1 74 0
 373 009c 019B     		ldr	r3, [sp, #4]
 374 009e 1846     		mov	r0, r3
 375 00a0 C047     		blx	r8
 376              	.LVL36:
  75:main.cpp      **** 	ok = Control<ALL>::init();
 377              		.loc 1 75 0
 378 00a2 324B     		ldr	r3, .L39+60
 379 00a4 9847     		blx	r3
 380              	.LVL37:
 381 00a6 0246     		mov	r2, r0
 382              	.LVL38:
  76:main.cpp      **** 	dout << "CONTROL INIT " << ok << endl;
 383              		.loc 1 76 0
 384 00a8 3149     		ldr	r1, .L39+64
 385 00aa 0192     		str	r2, [sp, #4]
 386 00ac 2848     		ldr	r0, .L39+32
 387              	.LVL39:
 388 00ae D047     		blx	sl
 389              	.LVL40:
 390              	.LBB61:
 391              	.LBB62:
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 392              		.loc 2 236 0
 393 00b0 019A     		ldr	r2, [sp, #4]
 394 00b2 0190     		str	r0, [sp, #4]
 395 00b4 1146     		mov	r1, r2
 396 00b6 C847     		blx	r9
 397              	.LVL41:
 398              	.LBE62:
 399              	.LBE61:
  76:main.cpp      **** 	dout << "CONTROL INIT " << ok << endl;
 400              		.loc 1 76 0
 401 00b8 019B     		ldr	r3, [sp, #4]
 402 00ba 1846     		mov	r0, r3
 403 00bc C047     		blx	r8
 404              	.LVL42:
  77:main.cpp      **** 	ok = Laser::init();
 405              		.loc 1 77 0
 406 00be 2D4B     		ldr	r3, .L39+68
 407 00c0 9847     		blx	r3
 408              	.LVL43:
 409 00c2 0346     		mov	r3, r0
 410              	.LVL44:
  78:main.cpp      **** 	dout << "LASER INTERFACE INIT " << ok << endl;
 411              		.loc 1 78 0
 412 00c4 2C49     		ldr	r1, .L39+72
 413 00c6 0193     		str	r3, [sp, #4]
 414 00c8 2148     		ldr	r0, .L39+32
 415              	.LVL45:
 416 00ca D047     		blx	sl
 417              	.LVL46:
 418              	.LBB63:
 419              	.LBB64:
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 420              		.loc 2 236 0
 421 00cc 019B     		ldr	r3, [sp, #4]
 422              	.LBE64:
 423              	.LBE63:
  78:main.cpp      **** 	dout << "LASER INTERFACE INIT " << ok << endl;
 424              		.loc 1 78 0
 425 00ce 8246     		mov	sl, r0
 426              	.LVL47:
 427              	.LBB66:
 428              	.LBB65:
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 429              		.loc 2 236 0
 430 00d0 1946     		mov	r1, r3
 431 00d2 C847     		blx	r9
 432              	.LVL48:
 433              	.LBE65:
 434              	.LBE66:
  78:main.cpp      **** 	dout << "LASER INTERFACE INIT " << ok << endl;
 435              		.loc 1 78 0
 436 00d4 5046     		mov	r0, sl
 437 00d6 C047     		blx	r8
 438              	.LVL49:
  83:main.cpp      **** 	SysTickTimer::attachInterrupt(systick);
 439              		.loc 1 83 0
 440 00d8 2848     		ldr	r0, .L39+76
 441 00da 294B     		ldr	r3, .L39+80
 442 00dc 9847     		blx	r3
 443              	.LVL50:
  85:main.cpp      **** 	Control<ALL>::enablePositionControl(false);
 444              		.loc 1 85 0
 445 00de 0020     		movs	r0, #0
 446 00e0 284B     		ldr	r3, .L39+84
 447 00e2 9847     		blx	r3
 448              	.LVL51:
 449              		.loc 1 86 0
 450 00e4 0020     		movs	r0, #0
 451 00e6 D847     		blx	fp
 452              	.LVL52:
  87:main.cpp      **** 	Utils::calibrateZero();
 453              		.loc 1 87 0
 454 00e8 274B     		ldr	r3, .L39+88
 455 00ea 9847     		blx	r3
 456              	.LVL53:
  88:main.cpp      **** 
  89:main.cpp      **** 	Utils::enableSystick();
 457              		.loc 1 89 0
 458 00ec 274B     		ldr	r3, .L39+92
 459 00ee 9847     		blx	r3
 460              	.LVL54:
  90:main.cpp      **** 	Laser::enableRequests();
 461              		.loc 1 90 0
 462 00f0 274B     		ldr	r3, .L39+96
 463 00f2 9847     		blx	r3
 464              	.LVL55:
  91:main.cpp      **** 	State::set(State::READY);
 465              		.loc 1 91 0
 466 00f4 0120     		movs	r0, #1
 467 00f6 274B     		ldr	r3, .L39+100
 468 00f8 9847     		blx	r3
 469              	.LVL56:
  92:main.cpp      **** 
  93:main.cpp      **** 	Control<ALL>::enableSpeedControl(true);
 470              		.loc 1 93 0
 471 00fa 0120     		movs	r0, #1
 472 00fc D847     		blx	fp
 473              	.LVL57:
  94:main.cpp      **** 	Control<ALL>::enablePositionControl(true);
 474              		.loc 1 94 0
 475 00fe 214B     		ldr	r3, .L39+84
 476 0100 0120     		movs	r0, #1
 477 0102 9847     		blx	r3
 478              	.LVL58:
  95:main.cpp      **** 
  96:main.cpp      **** 	Trigger::forceTrigger();
 479              		.loc 1 96 0
 480 0104 244B     		ldr	r3, .L39+104
 481              	.L37:
 482 0106 9847     		blx	r3
 483              	.LVL59:
 484              	.L36:
  97:main.cpp      **** 
  98:main.cpp      **** 	//LASER_TIMING::setOutput(xpcc::stm32::OPEN_DRAIN);
  99:main.cpp      **** 
 100:main.cpp      **** 	//Trigger::enable(false);
 101:main.cpp      **** int i = 0;
 102:main.cpp      **** 	while(1){
 103:main.cpp      **** 		/*LASER_TIMING::set(true);
 104:main.cpp      **** 		xpcc::delay_ms(20);
 105:main.cpp      **** 		LASER_TIMING::set(false);
 106:main.cpp      **** 		xpcc::delay_ms(20);
 107:main.cpp      **** 
 108:main.cpp      **** 		coutRaw << "last m " << Laser::DoubleBuffer::get() << endl;
 109:main.cpp      **** 		coutRaw << "rec " << Laser::DoubleBuffer::inSize << endl;*/
 110:main.cpp      **** 
 111:main.cpp      **** 		Trigger::sample();
 485              		.loc 1 111 0 discriminator 1
 486 0108 A047     		blx	r4
 487              	.LVL60:
 112:main.cpp      **** 		PC::scanForCommands();
 488              		.loc 1 112 0 discriminator 1
 489 010a B047     		blx	r6
 490              	.LVL61:
 113:main.cpp      **** 		Trigger::sample();
 491              		.loc 1 113 0 discriminator 1
 492 010c A047     		blx	r4
 493              	.LVL62:
 494              	.LBB67:
 495              	.LBB68:
 496              		.file 3 "pattern.h"
   1:pattern.h     **** /*
   2:pattern.h     ****  * pattern.h
   3:pattern.h     ****  *
   4:pattern.h     ****  *  Created on: Jan 18, 2014
   5:pattern.h     ****  *      Author: jonas
   6:pattern.h     ****  */
   7:pattern.h     **** 
   8:pattern.h     **** #ifndef PATTERN_H_
   9:pattern.h     **** #define PATTERN_H_
  10:pattern.h     **** 
  11:pattern.h     **** #include "control.h"
  12:pattern.h     **** #include "project.h"
  13:pattern.h     **** #include "state.h"
  14:pattern.h     **** #include "pcInterface.h"
  15:pattern.h     **** 
  16:pattern.h     **** class QuadrangleZigZag;
  17:pattern.h     **** 
  18:pattern.h     **** class Pattern{
  19:pattern.h     **** 	static void (*func)(void);
  20:pattern.h     **** 	static bool running;
  21:pattern.h     **** 	static bool paused;
  22:pattern.h     **** public:
  23:pattern.h     **** 	template<class T>
  24:pattern.h     **** 	static void setPattern(T pattern, float maxSpeed = 1){
  25:pattern.h     **** 		(void)pattern;
  26:pattern.h     **** 		//Control<ALL>::setMaxSpeed(maxSpeed);
  27:pattern.h     **** 		func = &T::sample;
  28:pattern.h     **** 	}
  29:pattern.h     **** 	static void follow(){
  30:pattern.h     **** 		if(!running || func == 0){
 497              		.loc 3 30 0 discriminator 1
 498 010e 2B78     		ldrb	r3, [r5, #0]	@ zero_extendqisi2
 499 0110 002B     		cmp	r3, #0
 500 0112 F9D0     		beq	.L36
 501              		.loc 3 30 0 is_stmt 0
 502 0114 3B68     		ldr	r3, [r7, #0]
 503 0116 002B     		cmp	r3, #0
 504 0118 F5D1     		bne	.L37
 505 011a F5E7     		b	.L36
 506              	.LVL63:
 507              	.L38:
 508              	.LBE68:
 509              	.LBE67:
 510              	.LBB69:
 511              	.LBB49:
  21:main.cpp      **** 	Clock::enablePll(Clock::PllSource::PLL_HSI, 8, 168);
 512              		.loc 1 21 0 is_stmt 1
 513 011c 0020     		movs	r0, #0
 514 011e 0821     		movs	r1, #8
 515 0120 A822     		movs	r2, #168
 516 0122 1E4B     		ldr	r3, .L39+108
 517 0124 9847     		blx	r3
 518              	.LVL64:
  22:main.cpp      **** 	return Clock::switchToPll();
 519              		.loc 1 22 0
 520 0126 1E4B     		ldr	r3, .L39+112
 521 0128 40F2DC50 		movw	r0, #1500
 522 012c 9847     		blx	r3
 523              	.LVL65:
 524 012e 72E7     		b	.L22
 525              	.L40:
 526              		.align	2
 527              	.L39:
 528 0130 00000000 		.word	_ZN4xpcc5stm325Clock9enableHseENS1_9HseConfigEm
 529 0134 00000000 		.word	_ZN5State4initEv
 530 0138 00000000 		.word	_ZN7Trigger6sampleEv
 531 013c 00000000 		.word	_ZN2PC15scanForCommandsEv
 532 0140 00000000 		.word	_ZN7Pattern7runningE
 533 0144 00000000 		.word	_ZN7Pattern4funcE
 534 0148 00000000 		.word	_ZN2PC4initEv
 535 014c 00000000 		.word	.LC0
 536 0150 00000000 		.word	dout
 537 0154 00000000 		.word	_ZN7Encoder4initEv
 538 0158 0C000000 		.word	.LC1
 539 015c 00000000 		.word	_ZN5MotorIL4Axis5EE4initEv
 540 0160 1C000000 		.word	.LC2
 541 0164 00000000 		.word	_ZN10HallSensorIL4Axis5EE4initEv
 542 0168 28000000 		.word	.LC3
 543 016c 00000000 		.word	_ZN7ControlIL4Axis5EE4initEv
 544 0170 3C000000 		.word	.LC4
 545 0174 00000000 		.word	_ZN5Laser4initEv
 546 0178 4C000000 		.word	.LC5
 547 017c 00000000 		.word	_Z7systickv
 548 0180 00000000 		.word	_ZN4xpcc5stm3212SysTickTimer15attachInterruptEPFvvE
 549 0184 00000000 		.word	_ZN7ControlIL4Axis5EE21enablePositionControlEb
 550 0188 00000000 		.word	_ZN5Utils13calibrateZeroEv
 551 018c 00000000 		.word	_ZN5Utils13enableSystickEv
 552 0190 00000000 		.word	_ZN5Laser14enableRequestsEv
 553 0194 00000000 		.word	_ZN5State3setEi
 554 0198 00000000 		.word	_ZN7Trigger12forceTriggerEv
 555 019c 00000000 		.word	_ZN4xpcc5stm325Clock9enablePllENS1_9PllSourceEht
 556 01a0 00000000 		.word	_ZN4xpcc5stm325Clock11switchToPllEm
 557 01a4 00000000 		.word	_ZN4xpcc8IOStreamlsEPKc
 558 01a8 00000000 		.word	_ZN4xpcc8IOStream12writeIntegerEl
 559 01ac 00000000 		.word	_ZN4xpcc8IOStreamlsERKc.isra.0.constprop.4
 560 01b0 00000000 		.word	_ZN7ControlIL4Axis5EE18enableSpeedControlEb
 561              	.LBE49:
 562              	.LBE69:
 563              	.LBE70:
 564              		.cfi_endproc
 565              	.LFE1042:
 567              		.section	.rodata.str1.4,"aMS",%progbits,1
 568              		.align	2
 569              	.LC0:
 570 0000 434F4D20 		.ascii	"COM INIT \000"
 570      494E4954 
 570      2000
 571 000a 0000     		.space	2
 572              	.LC1:
 573 000c 454E434F 		.ascii	"ENCODER INIT \000"
 573      44455220 
 573      494E4954 
 573      2000
 574 001a 0000     		.space	2
 575              	.LC2:
 576 001c 4D4F544F 		.ascii	"MOTOR INIT \000"
 576      5220494E 
 576      49542000 
 577              	.LC3:
 578 0028 48414C4C 		.ascii	"HALLSENSOR INIT \000"
 578      53454E53 
 578      4F522049 
 578      4E495420 
 578      00
 579 0039 000000   		.space	3
 580              	.LC4:
 581 003c 434F4E54 		.ascii	"CONTROL INIT \000"
 581      524F4C20 
 581      494E4954 
 581      2000
 582 004a 0000     		.space	2
 583              	.LC5:
 584 004c 4C415345 		.ascii	"LASER INTERFACE INIT \000"
 584      5220494E 
 584      54455246 
 584      41434520 
 584      494E4954 
 585 0062 0000     		.section	.bss._ZL7counter,"aw",%nobits
 586              		.align	2
 587              		.set	.LANCHOR0,. + 0
 590              	_ZL7counter:
 591 0000 00000000 		.space	4
 592              		.text
 593              	.Letext0:
 594              		.file 4 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/std
 595              		.file 5 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/co
 596              		.file 6 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/ua
 597              		.file 7 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/ua
 598              		.file 8 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/gpio.hpp"
 599              		.file 9 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/fs
 600              		.file 10 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/connectivity/i2c/constants.hpp"
 601              		.file 11 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/atomic.hpp"
 602              		.file 12 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp"
 603              		.file 13 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/connectivity/can/message.hpp"
 604              		.file 14 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/template_metaprogramming.hpp"
 605              		.file 15 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/accessor/ram.hpp"
 606              		.file 16 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/include/stddef.h"
 607              		.file 17 "<built-in>"
 608              		.file 18 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c+
 609              		.file 19 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c+
 610              		.file 20 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/st
 611              		.file 21 "project.h"
 612              		.file 22 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/st
 613              		.file 23 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c+
 614              		.file 24 "/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h"
 615              		.file 25 "pcInterface.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.cpp
     /tmp/ccvVamm8.s:20     .text._Z7systickv:00000000 $t
     /tmp/ccvVamm8.s:25     .text._Z7systickv:00000000 _Z7systickv
     /tmp/ccvVamm8.s:66     .text._Z7systickv:00000024 $d
     /tmp/ccvVamm8.s:73     .text._ZN4xpcc8IOStreamlsERKc.isra.0.constprop.4:00000000 $t
     /tmp/ccvVamm8.s:77     .text._ZN4xpcc8IOStreamlsERKc.isra.0.constprop.4:00000000 _ZN4xpcc8IOStreamlsERKc.isra.0.constprop.4
     /tmp/ccvVamm8.s:128    .text._ZN4xpcc8IOStreamlsERKc.isra.0.constprop.4:00000024 $d
     /tmp/ccvVamm8.s:136    .text._ZN4xpcc8IOStreamlsEPKc:00000000 $t
     /tmp/ccvVamm8.s:141    .text._ZN4xpcc8IOStreamlsEPKc:00000000 _ZN4xpcc8IOStreamlsEPKc
     /tmp/ccvVamm8.s:190    .text._ZN4xpcc8IOStreamlsEPKc:00000024 $d
     /tmp/ccvVamm8.s:196    .text.startup.main:00000000 $t
     /tmp/ccvVamm8.s:201    .text.startup.main:00000000 main
     /tmp/ccvVamm8.s:528    .text.startup.main:00000130 $d
     /tmp/ccvVamm8.s:568    .rodata.str1.4:00000000 $d
     /tmp/ccvVamm8.s:586    .bss._ZL7counter:00000000 $d
     /tmp/ccvVamm8.s:590    .bss._ZL7counter:00000000 _ZL7counter
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
_ZN7ControlIL4Axis5EE6updateEb
_ZN5Laser22sendMeasurementRequestEv
_ZN4xpcc8IOStream8writeBinEh
_ZN4xpcc8IOStream8writeHexEh
_ZN4xpcc8IOStream8writeBinEPKc
_ZN4xpcc8IOStream8writeHexEPKc
_ZN4xpcc5stm325Clock9enableHseENS1_9HseConfigEm
_ZN5State4initEv
_ZN7Trigger6sampleEv
_ZN2PC15scanForCommandsEv
_ZN7Pattern7runningE
_ZN7Pattern4funcE
_ZN2PC4initEv
dout
_ZN7Encoder4initEv
_ZN5MotorIL4Axis5EE4initEv
_ZN10HallSensorIL4Axis5EE4initEv
_ZN7ControlIL4Axis5EE4initEv
_ZN5Laser4initEv
_ZN4xpcc5stm3212SysTickTimer15attachInterruptEPFvvE
_ZN7ControlIL4Axis5EE21enablePositionControlEb
_ZN5Utils13calibrateZeroEv
_ZN5Utils13enableSystickEv
_ZN5Laser14enableRequestsEv
_ZN5State3setEi
_ZN7Trigger12forceTriggerEv
_ZN4xpcc5stm325Clock9enablePllENS1_9PllSourceEht
_ZN4xpcc5stm325Clock11switchToPllEm
_ZN4xpcc8IOStream12writeIntegerEl
_ZN7ControlIL4Axis5EE18enableSpeedControlEb
