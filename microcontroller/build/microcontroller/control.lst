   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 2
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"control.cpp"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text._ZN7ControlIL4Axis5EE4initEv,"ax",%progbits
  20              		.align	2
  21              		.global	_ZN7ControlIL4Axis5EE4initEv
  22              		.thumb
  23              		.thumb_func
  25              	_ZN7ControlIL4Axis5EE4initEv:
  26              	.LFB1008:
  27              		.file 1 "control.cpp"
   1:control.cpp   **** /*
   2:control.cpp   ****  * control.cpp
   3:control.cpp   ****  *
   4:control.cpp   ****  *  Created on: Dec 29, 2013
   5:control.cpp   ****  *      Author: jonas
   6:control.cpp   ****  */
   7:control.cpp   **** 
   8:control.cpp   **** #include "control.h"
   9:control.cpp   **** 
  10:control.cpp   **** template<> float Control<ALL>::maxSpeed = 1;
  11:control.cpp   **** 
  12:control.cpp   **** template<>
  13:control.cpp   **** bool Control<ALL>::init(){
  28              		.loc 1 13 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 2DE9F00F 		push	{r4, r5, r6, r7, r8, r9, sl, fp}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 32
  36              		.cfi_offset 4, -32
  37              		.cfi_offset 5, -28
  38              		.cfi_offset 6, -24
  39              		.cfi_offset 7, -20
  40              		.cfi_offset 8, -16
  41              		.cfi_offset 9, -12
  42              		.cfi_offset 10, -8
  43              		.cfi_offset 11, -4
  44              	.LBB258:
  45              	.LBB259:
  46              		.file 2 "control_impl.h"
   1:control_impl.h **** /*
   2:control_impl.h ****  * control.cpp
   3:control_impl.h ****  *
   4:control_impl.h ****  *  Created on: Nov 25, 2013
   5:control_impl.h ****  *      Author: jonas
   6:control_impl.h ****  */
   7:control_impl.h **** 
   8:control_impl.h **** 
   9:control_impl.h **** #include "project.h"
  10:control_impl.h **** #include "control.h"
  11:control_impl.h **** #include "motor.h"
  12:control_impl.h **** #include "hallSensor.h"
  13:control_impl.h **** #include "securityController.h"
  14:control_impl.h **** 
  15:control_impl.h **** template<Axis axis>
  16:control_impl.h **** class Motor;
  17:control_impl.h **** 
  18:control_impl.h **** 
  19:control_impl.h **** template<Axis axis>
  20:control_impl.h **** bool Control<axis>::init(){
  21:control_impl.h **** 	Control<axis>::v_is = 0;
  47              		.loc 2 21 0
  48 0004 DFF8F8B0 		ldr	fp, .L2+44
  49              	.LBE259:
  22:control_impl.h **** 	Control<axis>::v_shall = 0;
  23:control_impl.h **** 	Control<axis>::last_pos = 0;
  24:control_impl.h **** 	Control<axis>::positionControlEnabled = true;
  25:control_impl.h **** 	Control<axis>::speedControlEnabled = true;
  26:control_impl.h **** 	//param order: P, I, D, maxErrorSum, maxOutput
  27:control_impl.h **** 	Control<axis>::pos_pid = xpcc::Pid<float, 1>(CONTROLX_KP, CONTROLX_KI, CONTROLX_KD,
  28:control_impl.h **** 			CONTROLX_MAX_ERRORSUM, CONTROLX_MAX_OUTPUT);
  29:control_impl.h **** 	Control<axis>::v_pid = xpcc::Pid<float, 1>(CONTROLV_KP, CONTROLV_KI, CONTROLV_KD,
  50              		.loc 2 29 0
  51 0008 324C     		ldr	r4, .L2
  27:control_impl.h **** 	Control<axis>::pos_pid = xpcc::Pid<float, 1>(CONTROLX_KP, CONTROLX_KI, CONTROLX_KD,
  52              		.loc 2 27 0
  53 000a 334F     		ldr	r7, .L2+4
  54              		.loc 2 29 0
  55 000c DFF8F490 		ldr	r9, .L2+48
  56 0010 DFF8F480 		ldr	r8, .L2+52
  57 0014 DFF8F4C0 		ldr	ip, .L2+56
  58 0018 C4F80090 		str	r9, [r4, #0]	@ float
  59              	.LBB260:
  21:control_impl.h **** 	Control<axis>::v_is = 0;
  60              		.loc 2 21 0
  61 001c 0026     		movs	r6, #0
  62 001e CBF80060 		str	r6, [fp, #0]
  23:control_impl.h **** 	Control<axis>::last_pos = 0;
  63              		.loc 2 23 0
  64 0022 DFF8ECB0 		ldr	fp, .L2+60
  65              	.LBE260:
  66              		.loc 2 29 0
  67 0026 6760     		str	r7, [r4, #4]	@ float
  68              	.LBB261:
  23:control_impl.h **** 	Control<axis>::last_pos = 0;
  69              		.loc 2 23 0
  70 0028 CBF80060 		str	r6, [fp, #0]
  22:control_impl.h **** 	Control<axis>::v_shall = 0;
  71              		.loc 2 22 0
  72 002c DFF8E4B0 		ldr	fp, .L2+64
  73              	.LBE261:
  74              		.loc 2 29 0
  75 0030 C4F80C80 		str	r8, [r4, #12]	@ float
  76              	.LBB262:
  22:control_impl.h **** 	Control<axis>::v_shall = 0;
  77              		.loc 2 22 0
  78 0034 CBF80060 		str	r6, [fp, #0]
  24:control_impl.h **** 	Control<axis>::positionControlEnabled = true;
  79              		.loc 2 24 0
  80 0038 DFF8DCB0 		ldr	fp, .L2+68
  81              	.LBE262:
  82              		.loc 2 29 0
  83 003c C4F810C0 		str	ip, [r4, #16]	@ float
  27:control_impl.h **** 	Control<axis>::pos_pid = xpcc::Pid<float, 1>(CONTROLX_KP, CONTROLX_KI, CONTROLX_KD,
  84              		.loc 2 27 0
  85 0040 0023     		movs	r3, #0
  86              	.LBB263:
  24:control_impl.h **** 	Control<axis>::positionControlEnabled = true;
  87              		.loc 2 24 0
  88 0042 0120     		movs	r0, #1
  89 0044 8BF80000 		strb	r0, [fp, #0]
  90              	.LBE263:
  91              		.loc 2 29 0
  92 0048 A360     		str	r3, [r4, #8]	@ float
  93 004a 6361     		str	r3, [r4, #20]	@ float
  94 004c A361     		str	r3, [r4, #24]	@ float
  95 004e E361     		str	r3, [r4, #28]	@ float
  96              	.LBE258:
  97              	.LBB266:
  98              	.LBB267:
  21:control_impl.h **** 	Control<axis>::v_is = 0;
  99              		.loc 2 21 0
 100 0050 DFF8C8B0 		ldr	fp, .L2+72
  22:control_impl.h **** 	Control<axis>::v_shall = 0;
 101              		.loc 2 22 0
 102 0054 214C     		ldr	r4, .L2+8
  21:control_impl.h **** 	Control<axis>::v_is = 0;
 103              		.loc 2 21 0
 104 0056 CBF80060 		str	r6, [fp, #0]
  22:control_impl.h **** 	Control<axis>::v_shall = 0;
 105              		.loc 2 22 0
 106 005a 2660     		str	r6, [r4, #0]
  23:control_impl.h **** 	Control<axis>::last_pos = 0;
 107              		.loc 2 23 0
 108 005c 204C     		ldr	r4, .L2+12
 109              	.LBE267:
 110              	.LBE266:
 111              	.LBB272:
  27:control_impl.h **** 	Control<axis>::pos_pid = xpcc::Pid<float, 1>(CONTROLX_KP, CONTROLX_KI, CONTROLX_KD,
 112              		.loc 2 27 0
 113 005e 214D     		ldr	r5, .L2+16
 114              	.LBE272:
 115              	.LBB273:
 116              	.LBB268:
  23:control_impl.h **** 	Control<axis>::last_pos = 0;
 117              		.loc 2 23 0
 118 0060 2660     		str	r6, [r4, #0]
  24:control_impl.h **** 	Control<axis>::positionControlEnabled = true;
 119              		.loc 2 24 0
 120 0062 214C     		ldr	r4, .L2+20
 121              	.LBE268:
  27:control_impl.h **** 	Control<axis>::pos_pid = xpcc::Pid<float, 1>(CONTROLX_KP, CONTROLX_KI, CONTROLX_KD,
 122              		.loc 2 27 0
 123 0064 2149     		ldr	r1, .L2+24
 124              		.loc 2 29 0
 125 0066 224A     		ldr	r2, .L2+28
 126              	.LBB269:
  24:control_impl.h **** 	Control<axis>::positionControlEnabled = true;
 127              		.loc 2 24 0
 128 0068 2070     		strb	r0, [r4, #0]
 129              	.LBE269:
 130              	.LBE273:
 131              	.LBB274:
  27:control_impl.h **** 	Control<axis>::pos_pid = xpcc::Pid<float, 1>(CONTROLX_KP, CONTROLX_KI, CONTROLX_KD,
 132              		.loc 2 27 0
 133 006a 9FED227A 		flds	s14, .L2+32
 134 006e DFED227A 		flds	s15, .L2+36
 135 0072 DFF8ACA0 		ldr	sl, .L2+76
 136              	.LBB264:
  25:control_impl.h **** 	Control<axis>::speedControlEnabled = true;
 137              		.loc 2 25 0
 138 0076 DFF8ACB0 		ldr	fp, .L2+80
 139              	.LBE264:
 140              	.LBE274:
 141              	.LBB275:
 142              	.LBB270:
 143 007a 204C     		ldr	r4, .L2+40
 144              	.LBE270:
 145              	.LBE275:
 146              	.LBB276:
 147              	.LBB265:
 148 007c 8BF80000 		strb	r0, [fp, #0]
 149              	.LVL0:
 150              	.LBE265:
  27:control_impl.h **** 	Control<axis>::pos_pid = xpcc::Pid<float, 1>(CONTROLX_KP, CONTROLX_KI, CONTROLX_KD,
 151              		.loc 2 27 0
 152 0080 F2EE046A 		fconsts	s13, #36
 153 0084 C5ED006A 		fsts	s13, [r5, #0]
 154 0088 6F60     		str	r7, [r5, #4]	@ float
 155 008a 85ED027A 		fsts	s14, [r5, #8]
 156 008e C5ED037A 		fsts	s15, [r5, #12]
 157 0092 C5F810A0 		str	sl, [r5, #16]	@ float
 158 0096 6B61     		str	r3, [r5, #20]	@ float
 159 0098 AB61     		str	r3, [r5, #24]	@ float
 160 009a EB61     		str	r3, [r5, #28]	@ float
 161              	.LVL1:
 162              	.LBE276:
 163              	.LBB277:
 164              	.LBB271:
  25:control_impl.h **** 	Control<axis>::speedControlEnabled = true;
 165              		.loc 2 25 0
 166 009c 2070     		strb	r0, [r4, #0]
 167              	.LVL2:
 168              	.LBE271:
  27:control_impl.h **** 	Control<axis>::pos_pid = xpcc::Pid<float, 1>(CONTROLX_KP, CONTROLX_KI, CONTROLX_KD,
 169              		.loc 2 27 0
 170 009e C1ED006A 		fsts	s13, [r1, #0]
 171 00a2 4F60     		str	r7, [r1, #4]	@ float
 172 00a4 81ED027A 		fsts	s14, [r1, #8]
 173 00a8 C1ED037A 		fsts	s15, [r1, #12]
 174 00ac C1F810A0 		str	sl, [r1, #16]	@ float
 175 00b0 4B61     		str	r3, [r1, #20]	@ float
 176 00b2 8B61     		str	r3, [r1, #24]	@ float
 177 00b4 CB61     		str	r3, [r1, #28]	@ float
 178              	.LVL3:
 179              		.loc 2 29 0
 180 00b6 C2F80090 		str	r9, [r2, #0]	@ float
 181 00ba 5760     		str	r7, [r2, #4]	@ float
 182 00bc 9360     		str	r3, [r2, #8]	@ float
 183 00be C2F80C80 		str	r8, [r2, #12]	@ float
 184 00c2 C2F810C0 		str	ip, [r2, #16]	@ float
 185 00c6 5361     		str	r3, [r2, #20]	@ float
 186 00c8 9361     		str	r3, [r2, #24]	@ float
 187 00ca D361     		str	r3, [r2, #28]	@ float
 188              	.LBE277:
  14:control.cpp   **** 	return Control<X>::init() && Control<Y>::init();
  15:control.cpp   **** }
 189              		.loc 1 15 0
 190 00cc BDE8F00F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp}
 191 00d0 7047     		bx	lr
 192              	.L3:
 193 00d2 00BF     		.align	2
 194              	.L2:
 195 00d4 00000000 		.word	_ZN7ControlIL4Axis0EE5v_pidE
 196 00d8 CDCCCC3D 		.word	1036831949
 197 00dc 00000000 		.word	_ZN7ControlIL4Axis2EE7v_shallE
 198 00e0 00000000 		.word	_ZN7ControlIL4Axis2EE8last_posE
 199 00e4 00000000 		.word	_ZN7ControlIL4Axis0EE7pos_pidE
 200 00e8 00000000 		.word	_ZN7ControlIL4Axis2EE22positionControlEnabledE
 201 00ec 00000000 		.word	_ZN7ControlIL4Axis2EE7pos_pidE
 202 00f0 00000000 		.word	_ZN7ControlIL4Axis2EE5v_pidE
 203 00f4 9A99993E 		.word	1050253722
 204 00f8 00007A45 		.word	1165623296
 205 00fc 00000000 		.word	_ZN7ControlIL4Axis2EE19speedControlEnabledE
 206 0100 00000000 		.word	_ZN7ControlIL4Axis0EE4v_isE
 207 0104 CDCC4C3E 		.word	1045220557
 208 0108 00201946 		.word	1176051712
 209 010c 00009644 		.word	1150681088
 210 0110 00000000 		.word	_ZN7ControlIL4Axis0EE8last_posE
 211 0114 00000000 		.word	_ZN7ControlIL4Axis0EE7v_shallE
 212 0118 00000000 		.word	_ZN7ControlIL4Axis0EE22positionControlEnabledE
 213 011c 00000000 		.word	_ZN7ControlIL4Axis2EE4v_isE
 214 0120 00683F47 		.word	1195337728
 215 0124 00000000 		.word	_ZN7ControlIL4Axis0EE19speedControlEnabledE
 216              		.cfi_endproc
 217              	.LFE1008:
 219              		.section	.text._ZN7ControlIL4Axis5EE6updateEb,"ax",%progbits
 220              		.align	2
 221              		.global	_ZN7ControlIL4Axis5EE6updateEb
 222              		.thumb
 223              		.thumb_func
 225              	_ZN7ControlIL4Axis5EE6updateEb:
 226              	.LFB1009:
  16:control.cpp   **** 
  17:control.cpp   **** template<>
  18:control.cpp   **** void Control<ALL>::update(bool externalLimitation){
 227              		.loc 1 18 0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 0, uses_anonymous_args = 0
 231              	.LVL4:
 232 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 233              	.LCFI1:
 234              		.cfi_def_cfa_offset 24
 235              		.cfi_offset 3, -24
 236              		.cfi_offset 4, -20
 237              		.cfi_offset 5, -16
 238              		.cfi_offset 6, -12
 239              		.cfi_offset 7, -8
 240              		.cfi_offset 14, -4
 241              	.LBB344:
 242              	.LBB345:
  30:control_impl.h **** 			CONTROLV_MAX_ERRORSUM, CONTROLV_MAX_OUTPUT);
  31:control_impl.h **** 	return true;
  32:control_impl.h **** }
  33:control_impl.h **** 
  34:control_impl.h **** 
  35:control_impl.h **** template<Axis axis>
  36:control_impl.h **** void Control<axis>::update(bool externalLimitation){
  37:control_impl.h **** 	int enc = getIsPosition();
  38:control_impl.h **** 
  39:control_impl.h **** 	if(positionControlEnabled){
 243              		.loc 2 39 0
 244 0002 B14B     		ldr	r3, .L116
 245 0004 1C78     		ldrb	r4, [r3, #0]	@ zero_extendqisi2
 246              	.LBB346:
 247              	.LBB347:
 248              	.LBB348:
 249              	.LBB349:
 250              		.file 3 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/ti
   1:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** // coding: utf-8
   2:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** // ----------------------------------------------------------------------------
   3:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** /* Copyright (c) 2011, Roboterclub Aachen e.V.
   4:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp ****  * All rights reserved.
   5:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp ****  *
   6:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp ****  * Redistribution and use in source and binary forms, with or without
   7:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp ****  * modification, are permitted provided that the following conditions are met:
   8:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp ****  * 
   9:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp ****  *     * Redistributions of source code must retain the above copyright
  10:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp ****  *       notice, this list of conditions and the following disclaimer.
  11:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp ****  *     * Redistributions in binary form must reproduce the above copyright
  12:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp ****  *       notice, this list of conditions and the following disclaimer in the
  13:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp ****  *       documentation and/or other materials provided with the distribution.
  14:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp ****  *     * Neither the name of the Roboterclub Aachen e.V. nor the
  15:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp ****  *       names of its contributors may be used to endorse or promote products
  16:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp ****  *       derived from this software without specific prior written permission.
  17:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp ****  *
  18:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp ****  * THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
  19:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp ****  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  20:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  21:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp ****  * DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
  22:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  23:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  24:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  25:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  26:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  27:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  28:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp ****  */
  29:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** // ----------------------------------------------------------------------------
  30:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** /*
  31:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp ****  * WARNING: This file is generated automatically, do not edit!
  32:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp ****  * Please modify the corresponding *.in file instead and rebuild this file. 
  33:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp ****  */
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** // ----------------------------------------------------------------------------
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 
  36:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** #ifndef XPCC_STM32__TIMER_5_HPP
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** #define XPCC_STM32__TIMER_5_HPP
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 
  39:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** #include "timer_base.hpp"
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** #if !defined (STM32F10X_LD) && !defined (STM32F10X_MD) && !defined(STM32F3XX)
  44:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** namespace xpcc
  47:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** {
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 	namespace stm32
  49:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 	{
  50:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 		/**
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 		 * @brief		General Purpose Timer 5
  52:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 		 * 
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 		 * Interrupt handler:
  54:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 		 * \code
  55:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 		 * extern "C" void
  56:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 		 * TIM5_IRQHandler(void)
  57:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 		 * {
  58:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 		 *     Timer5::resetInterruptFlags(Timer5::...);
  59:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 		 *     
  60:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 		 *     ...
  61:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 		 * }
  62:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 		 * \endcode
  63:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 		 * 
  64:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 		 * \warning	The Timer has much more possibilities than presented by this
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 		 * 			interface (e.g. Input Capture, Trigger for other Timers, DMA).
  66:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 		 * 			It might be expanded in the future.
  67:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 		 * 
  68:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 		 * @author		Fabian Greif
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 		 * @ingroup		stm32
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 		 */
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 		class Timer5 : public GeneralPurposeTimer
  72:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 		{
  73:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 		public:
  74:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** #if defined(STM32F2XX) || defined(STM32F3XX) || defined(STM32F4XX)
  75:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 
  76:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** #else
  77:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			enum Remap
  78:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			{
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 				NO_REMAP = 0,							///< (default)
  80:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 				FULL_REMAP = AFIO_MAPR_TIM5CH4_IREMAP,
  81:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			};
  82:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			static const uint32_t remapMask = AFIO_MAPR_TIM5CH4_IREMAP;
  83:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			
  84:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			/**
  85:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			 * Remap compare channels to other locations.
  86:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			 * 
  87:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			 * The pins are not automatically initialized. This has to be
  88:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			 * done by the user.
  89:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			 */
  90:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			static inline void
  91:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			remapPins(Remap mapping)
  92:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			{
  93:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 				AFIO->MAPR = (AFIO->MAPR & ~remapMask) | mapping;
  94:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			}
  95:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** #endif
  96:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 						
  97:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 		public:
  98:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 
  99:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			enum MasterMode
 100:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			{
 101:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 				MASTER_RESET 			= 0,							// 0b000
 102:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 				MASTER_ENABLE 			= TIM_CR2_MMS_0,				// 0b001
 103:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 				MASTER_UPDATE 			= TIM_CR2_MMS_1,				// 0b010
 104:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 				MASTER_COMPARE_PULSE 	= TIM_CR2_MMS_1 | TIM_CR2_MMS_0,// 0b011
 105:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 				MASTER_COMPARE_OC1REF 	= TIM_CR2_MMS_2,				// 0b100
 106:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 				MASTER_COMPARE_OC2REF 	= TIM_CR2_MMS_2 | TIM_CR2_MMS_0,// 0b101
 107:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			
 108:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			};
 109:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 
 110:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			enum SlaveModeTrigger
 111:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			{
 112:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 				
 113:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 				TRIGGER_INTERNAL_1 = TIM_SMCR_TS_0,
 114:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 				TRIGGER_INTERNAL_2 = TIM_SMCR_TS_1,
 115:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 				
 116:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 				TRIGGER_TI1_EDGE_DETECTOR = TIM_SMCR_TS_2,
 117:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 				TRIGGER_FILTERED_TI1 = TIM_SMCR_TS_2 | TIM_SMCR_TS_0,
 118:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 				TRIGGER_FILTERED_TI2 = TIM_SMCR_TS_2 | TIM_SMCR_TS_1,
 119:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 				TRIGGER_EXTERNAL = TIM_SMCR_TS_2 | TIM_SMCR_TS_1 | TIM_SMCR_TS_0,
 120:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			};
 121:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			enum SlaveMode
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			{
 124:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 				SLAVE_DISABLED	= 0, // Slave mode disabled - if CEN = '1' then the prescaler is clocked directl
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 				
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 				SLAVE_ENCODER_1	= TIM_SMCR_SMS_0, // Counter counts up/down on TI2FP2 edge depending on TI1FP1 
 127:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 				SLAVE_ENCODER_2	= TIM_SMCR_SMS_1, // Counter counts up/down on TI1FP1 edge depending on TI2FP2 
 128:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 				SLAVE_ENCODER_3	= TIM_SMCR_SMS_1 | TIM_SMCR_SMS_0, // Counter counts up/down on both TI1FP1 and
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 				
 130:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 				SLAVE_RESET		= TIM_SMCR_SMS_2, // Rising edge of the selected trigger input (TRGI) reinitialize
 131:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 				SLAVE_GATED		= TIM_SMCR_SMS_2 | TIM_SMCR_SMS_0, // The counter clock is enabled when the trigge
 132:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 				SLAVE_TRIGGER	= TIM_SMCR_SMS_2 | TIM_SMCR_SMS_1, // The counter starts at a rising edge of the 
 133:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 				SLAVE_EXTERNAL_CLOCK = TIM_SMCR_SMS_2 | TIM_SMCR_SMS_1 | TIM_SMCR_SMS_0, // Rising edges of the
 134:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 				
 135:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			};
 136:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			
 137:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			// This type is the internal size of the counter.
 138:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			// Timer 2 and 5 are the only one which have the size of 32 bit and
 139:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			// only on st32f2 and st32f4
 140:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** #if defined(STM32F2XX) || defined(STM32F3XX) || defined(STM32F4XX)
 141:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			typedef uint32_t Value;
 142:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** #else
 143:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			typedef uint16_t Value;
 144:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** #endif
 145:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			
 146:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			static void
 147:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			enable();
 148:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			
 149:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			static void
 150:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			disable();
 151:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			
 152:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			static inline void
 153:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			pause()
 154:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			{
 155:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 				TIM5->CR1 &= ~TIM_CR1_CEN;
 156:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			}
 157:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			
 158:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			static inline void
 159:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			start()
 160:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			{
 161:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 				TIM5->CR1 |= TIM_CR1_CEN;
 162:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			}
 163:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			
 164:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			static void
 165:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			setMode(Mode mode, SlaveMode slaveMode = SLAVE_DISABLED,
 166:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 					SlaveModeTrigger slaveModeTrigger = (SlaveModeTrigger) 0,
 167:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 					MasterMode masterMode = MASTER_RESET,
 168:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 					bool enableOnePulseMode = false);
 169:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			
 170:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			static inline void
 171:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			setPrescaler(uint16_t prescaler)
 172:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			{
 173:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 				// Because a prescaler of zero is not possible the actual
 174:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 				// prescaler value is \p prescaler - 1 (see Datasheet)
 175:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 				TIM5->PSC = prescaler - 1;
 176:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			}
 177:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			
 178:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			static inline void
 179:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			setOverflow(Value overflow)
 180:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			{
 181:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 				TIM5->ARR = overflow;
 182:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			}
 183:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			
 184:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			static Value
 185:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			setPeriod(uint32_t microseconds, bool autoApply = true);
 186:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			
 187:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			static inline void
 188:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			applyAndReset()
 189:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			{
 190:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 				// Generate Update Event to apply the new settings for ARR
 191:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 				TIM5->EGR |= TIM_EGR_UG;
 192:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			}
 193:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			
 194:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			static inline Value
 195:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			getValue()
 196:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 			{
 197:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_5.hpp **** 				return TIM5->CNT;
 251              		.loc 3 197 0
 252 0006 B14B     		ldr	r3, .L116+4
 253              	.LBE349:
 254              	.LBE348:
 255              	.LBE347:
 256              	.LBE346:
 257              	.LBE345:
 258              	.LBE344:
 259              		.loc 1 18 0
 260 0008 0646     		mov	r6, r0
 261              	.LVL5:
 262              	.LBB424:
 263              	.LBB417:
 264              	.LBB353:
 265              	.LBB352:
 266              	.LBB351:
 267              	.LBB350:
 268              		.loc 3 197 0
 269 000a 5A6A     		ldr	r2, [r3, #36]
 270              	.LBE350:
 271              	.LBE351:
 272              	.LBE352:
 273              	.LBE353:
 274              		.loc 2 39 0
 275 000c 002C     		cmp	r4, #0
 276 000e 40F00981 		bne	.L104
 277              	.L5:
  40:control_impl.h **** 		pos_pid.update(pos_shall - enc, externalLimitation);
  41:control_impl.h **** 		v_shall = pos_pid.getValue();
  42:control_impl.h **** 		/*if(abs(pos_shall - enc) <= CONTROLX_DEADBAND){
  43:control_impl.h **** 			v_shall = 0;
  44:control_impl.h **** 		}*/
  45:control_impl.h **** 	}
  46:control_impl.h **** 
  47:control_impl.h **** 	v_is = (enc - last_pos)*CONTROL_FREQUENCY;
 278              		.loc 2 47 0
 279 0012 AF4B     		ldr	r3, .L116+8
  48:control_impl.h **** 	last_pos = enc;
  49:control_impl.h **** 
  50:control_impl.h **** 	if(speedControlEnabled){
 280              		.loc 2 50 0
 281 0014 AF48     		ldr	r0, .L116+12
 282              	.LVL6:
  47:control_impl.h **** 	v_is = (enc - last_pos)*CONTROL_FREQUENCY;
 283              		.loc 2 47 0
 284 0016 1D68     		ldr	r5, [r3, #0]
 285 0018 AF49     		ldr	r1, .L116+16
  48:control_impl.h **** 	last_pos = enc;
 286              		.loc 2 48 0
 287 001a 1A60     		str	r2, [r3, #0]
 288              		.loc 2 50 0
 289 001c 0078     		ldrb	r0, [r0, #0]	@ zero_extendqisi2
  47:control_impl.h **** 	v_is = (enc - last_pos)*CONTROL_FREQUENCY;
 290              		.loc 2 47 0
 291 001e 531B     		subs	r3, r2, r5
 292 0020 4FF47A75 		mov	r5, #1000
 293 0024 05FB03F3 		mul	r3, r5, r3
 294 0028 0B60     		str	r3, [r1, #0]
 295              		.loc 2 50 0
 296 002a B0B9     		cbnz	r0, .L105
 297              	.L13:
 298              	.LVL7:
 299              	.LBE417:
 300              	.LBE424:
 301              	.LBB425:
 302              	.LBB426:
  39:control_impl.h **** 	if(positionControlEnabled){
 303              		.loc 2 39 0
 304 002c AB4B     		ldr	r3, .L116+20
 305 002e 1C78     		ldrb	r4, [r3, #0]	@ zero_extendqisi2
 306              	.LBB427:
 307              	.LBB428:
 308              	.LBB429:
 309              	.LBB430:
 310              		.file 4 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/ti
   1:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** // coding: utf-8
   2:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** // ----------------------------------------------------------------------------
   3:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** /* Copyright (c) 2011, Roboterclub Aachen e.V.
   4:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp ****  * All rights reserved.
   5:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp ****  *
   6:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp ****  * Redistribution and use in source and binary forms, with or without
   7:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp ****  * modification, are permitted provided that the following conditions are met:
   8:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp ****  * 
   9:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp ****  *     * Redistributions of source code must retain the above copyright
  10:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp ****  *       notice, this list of conditions and the following disclaimer.
  11:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp ****  *     * Redistributions in binary form must reproduce the above copyright
  12:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp ****  *       notice, this list of conditions and the following disclaimer in the
  13:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp ****  *       documentation and/or other materials provided with the distribution.
  14:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp ****  *     * Neither the name of the Roboterclub Aachen e.V. nor the
  15:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp ****  *       names of its contributors may be used to endorse or promote products
  16:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp ****  *       derived from this software without specific prior written permission.
  17:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp ****  *
  18:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp ****  * THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
  19:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp ****  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  20:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  21:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp ****  * DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
  22:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  23:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  24:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  25:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  26:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  27:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  28:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp ****  */
  29:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** // ----------------------------------------------------------------------------
  30:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** /*
  31:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp ****  * WARNING: This file is generated automatically, do not edit!
  32:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp ****  * Please modify the corresponding *.in file instead and rebuild this file. 
  33:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp ****  */
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** // ----------------------------------------------------------------------------
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 
  36:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** #ifndef XPCC_STM32__TIMER_2_HPP
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** #define XPCC_STM32__TIMER_2_HPP
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 
  39:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** #include "timer_base.hpp"
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 
  44:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** namespace xpcc
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** {
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 	namespace stm32
  47:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 	{
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 		/**
  49:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 		 * @brief		General Purpose Timer 2
  50:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 		 * 
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 		 * Interrupt handler:
  52:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 		 * \code
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 		 * extern "C" void
  54:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 		 * TIM2_IRQHandler(void)
  55:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 		 * {
  56:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 		 *     Timer2::resetInterruptFlags(Timer2::...);
  57:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 		 *     
  58:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 		 *     ...
  59:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 		 * }
  60:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 		 * \endcode
  61:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 		 * 
  62:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 		 * \warning	The Timer has much more possibilities than presented by this
  63:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 		 * 			interface (e.g. Input Capture, Trigger for other Timers, DMA).
  64:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 		 * 			It might be expanded in the future.
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 		 * 
  66:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 		 * @author		Fabian Greif
  67:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 		 * @ingroup		stm32
  68:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 		 */
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 		class Timer2 : public GeneralPurposeTimer
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 		{
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 		public:
  72:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** #if defined(STM32F2XX) || defined(STM32F3XX) || defined(STM32F4XX)
  73:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 
  74:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** #else
  75:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			enum Remap
  76:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			{
  77:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 				NO_REMAP = AFIO_MAPR_TIM2_REMAP_NOREMAP,				///< CH1/ETR/PA0, CH2/PA1, CH3/PA2, CH4/PA3 (defaul
  78:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 				PARTIAL_REMAP1 = AFIO_MAPR_TIM2_REMAP_PARTIALREMAP1,	///< CH1/ETR/PA15, CH2/PB3, CH3/PA2, CH4/P
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 				PARTIAL_REMAP2 = AFIO_MAPR_TIM2_REMAP_PARTIALREMAP2,	///< CH1/ETR/PA0, CH2/PA1, CH3/PB10, CH4/P
  80:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 				FULL_REMAP = AFIO_MAPR_TIM2_REMAP_FULLREMAP,			///< CH1/ETR/PA15, CH2/PB3, CH3/PB10, CH4/PB11
  81:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			};
  82:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			static const uint32_t remapMask = AFIO_MAPR_TIM2_REMAP;
  83:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			
  84:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			/**
  85:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			 * Remap compare channels to other locations.
  86:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			 * 
  87:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			 * The pins are not automatically initialized. This has to be
  88:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			 * done by the user.
  89:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			 */
  90:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			static inline void
  91:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			remapPins(Remap mapping)
  92:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			{
  93:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 				AFIO->MAPR = (AFIO->MAPR & ~remapMask) | mapping;
  94:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			}
  95:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** #endif
  96:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 						
  97:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 		public:
  98:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 
  99:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			enum MasterMode
 100:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			{
 101:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 				MASTER_RESET 			= 0,							// 0b000
 102:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 				MASTER_ENABLE 			= TIM_CR2_MMS_0,				// 0b001
 103:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 				MASTER_UPDATE 			= TIM_CR2_MMS_1,				// 0b010
 104:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 				MASTER_COMPARE_PULSE 	= TIM_CR2_MMS_1 | TIM_CR2_MMS_0,// 0b011
 105:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 				MASTER_COMPARE_OC1REF 	= TIM_CR2_MMS_2,				// 0b100
 106:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 				MASTER_COMPARE_OC2REF 	= TIM_CR2_MMS_2 | TIM_CR2_MMS_0,// 0b101
 107:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			
 108:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 				// Only available on TIM2/3/4
 109:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 				MASTER_COMPARE_OC3REF 	= TIM_CR2_MMS_2 | TIM_CR2_MMS_1,// 0b110
 110:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 				MASTER_COMPARE_OC4REF 	= TIM_CR2_MMS_2 | TIM_CR2_MMS_1	// 0b111
 111:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 														| TIM_CR2_MMS_0,
 112:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			};
 113:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 
 114:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			enum SlaveModeTrigger
 115:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			{
 116:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 				
 117:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 				TRIGGER_INTERNAL_1 = TIM_SMCR_TS_0,
 118:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 				TRIGGER_INTERNAL_2 = TIM_SMCR_TS_1,
 119:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 				
 120:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 				TRIGGER_TI1_EDGE_DETECTOR = TIM_SMCR_TS_2,
 121:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 				TRIGGER_FILTERED_TI1 = TIM_SMCR_TS_2 | TIM_SMCR_TS_0,
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 				TRIGGER_FILTERED_TI2 = TIM_SMCR_TS_2 | TIM_SMCR_TS_1,
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 				TRIGGER_EXTERNAL = TIM_SMCR_TS_2 | TIM_SMCR_TS_1 | TIM_SMCR_TS_0,
 124:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			};
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			enum SlaveMode
 127:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			{
 128:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 				SLAVE_DISABLED	= 0, // Slave mode disabled - if CEN = '1' then the prescaler is clocked directl
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 				
 130:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 				SLAVE_ENCODER_1	= TIM_SMCR_SMS_0, // Counter counts up/down on TI2FP2 edge depending on TI1FP1 
 131:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 				SLAVE_ENCODER_2	= TIM_SMCR_SMS_1, // Counter counts up/down on TI1FP1 edge depending on TI2FP2 
 132:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 				SLAVE_ENCODER_3	= TIM_SMCR_SMS_1 | TIM_SMCR_SMS_0, // Counter counts up/down on both TI1FP1 and
 133:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 				
 134:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 				SLAVE_RESET		= TIM_SMCR_SMS_2, // Rising edge of the selected trigger input (TRGI) reinitialize
 135:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 				SLAVE_GATED		= TIM_SMCR_SMS_2 | TIM_SMCR_SMS_0, // The counter clock is enabled when the trigge
 136:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 				SLAVE_TRIGGER	= TIM_SMCR_SMS_2 | TIM_SMCR_SMS_1, // The counter starts at a rising edge of the 
 137:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 				SLAVE_EXTERNAL_CLOCK = TIM_SMCR_SMS_2 | TIM_SMCR_SMS_1 | TIM_SMCR_SMS_0, // Rising edges of the
 138:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 				
 139:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 				#if defined(STM32F3XX)
 140:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 				SLAVE_RESET_TRIGGER	= TIM_SMCR_SMS_3,	// reinitialize and start counter
 141:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 				#endif
 142:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 				
 143:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			};
 144:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			
 145:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			// This type is the internal size of the counter.
 146:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			// Timer 2 and 5 are the only one which have the size of 32 bit and
 147:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			// only on st32f2 and st32f4
 148:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** #if defined(STM32F2XX) || defined(STM32F3XX) || defined(STM32F4XX)
 149:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			typedef uint32_t Value;
 150:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** #else
 151:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			typedef uint16_t Value;
 152:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** #endif
 153:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			
 154:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			static void
 155:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			enable();
 156:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			
 157:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			static void
 158:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			disable();
 159:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			
 160:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			static inline void
 161:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			pause()
 162:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			{
 163:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 				TIM2->CR1 &= ~TIM_CR1_CEN;
 164:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			}
 165:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			
 166:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			static inline void
 167:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			start()
 168:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			{
 169:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 				TIM2->CR1 |= TIM_CR1_CEN;
 170:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			}
 171:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			
 172:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			static void
 173:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			setMode(Mode mode, SlaveMode slaveMode = SLAVE_DISABLED,
 174:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 					SlaveModeTrigger slaveModeTrigger = (SlaveModeTrigger) 0,
 175:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 					MasterMode masterMode = MASTER_RESET,
 176:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 					bool enableOnePulseMode = false);
 177:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			
 178:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			static inline void
 179:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			setPrescaler(uint16_t prescaler)
 180:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			{
 181:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 				// Because a prescaler of zero is not possible the actual
 182:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 				// prescaler value is \p prescaler - 1 (see Datasheet)
 183:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 				TIM2->PSC = prescaler - 1;
 184:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			}
 185:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			
 186:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			static inline void
 187:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			setOverflow(Value overflow)
 188:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			{
 189:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 				TIM2->ARR = overflow;
 190:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			}
 191:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			
 192:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			static Value
 193:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			setPeriod(uint32_t microseconds, bool autoApply = true);
 194:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			
 195:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			static inline void
 196:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			applyAndReset()
 197:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			{
 198:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 				// Generate Update Event to apply the new settings for ARR
 199:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 				TIM2->EGR |= TIM_EGR_UG;
 200:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			}
 201:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			
 202:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			static inline Value
 203:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			getValue()
 204:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 			{
 205:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/timer/timer_2.hpp **** 				return TIM2->CNT;
 311              		.loc 4 205 0
 312 0030 4FF08043 		mov	r3, #1073741824
 313 0034 5A6A     		ldr	r2, [r3, #36]
 314              	.LBE430:
 315              	.LBE429:
 316              	.LBE428:
 317              	.LBE427:
  39:control_impl.h **** 	if(positionControlEnabled){
 318              		.loc 2 39 0
 319 0036 002C     		cmp	r4, #0
 320 0038 40F07881 		bne	.L106
 321              	.L28:
  47:control_impl.h **** 	v_is = (enc - last_pos)*CONTROL_FREQUENCY;
 322              		.loc 2 47 0
 323 003c A84B     		ldr	r3, .L116+24
 324              		.loc 2 50 0
 325 003e A948     		ldr	r0, .L116+28
  47:control_impl.h **** 	v_is = (enc - last_pos)*CONTROL_FREQUENCY;
 326              		.loc 2 47 0
 327 0040 1D68     		ldr	r5, [r3, #0]
 328 0042 A949     		ldr	r1, .L116+32
  48:control_impl.h **** 	last_pos = enc;
 329              		.loc 2 48 0
 330 0044 1A60     		str	r2, [r3, #0]
 331              		.loc 2 50 0
 332 0046 0078     		ldrb	r0, [r0, #0]	@ zero_extendqisi2
  47:control_impl.h **** 	v_is = (enc - last_pos)*CONTROL_FREQUENCY;
 333              		.loc 2 47 0
 334 0048 531B     		subs	r3, r2, r5
 335 004a 4FF47A75 		mov	r5, #1000
 336 004e 05FB03F3 		mul	r3, r5, r3
 337 0052 0B60     		str	r3, [r1, #0]
 338              		.loc 2 50 0
 339 0054 0028     		cmp	r0, #0
 340 0056 74D1     		bne	.L107
 341 0058 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 342              	.LVL8:
 343              	.L105:
 344              	.LBE426:
 345              	.LBE425:
 346              	.LBB497:
 347              	.LBB418:
  51:control_impl.h **** 		v_pid.update(v_shall - v_is);
 348              		.loc 2 51 0
 349 005a DFF8C4E2 		ldr	lr, .L116+88
 350              	.LBB354:
 351              	.LBB355:
 352              		.file 5 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp"
   1:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** // coding: utf-8
   2:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** // ----------------------------------------------------------------------------
   3:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** /* Copyright (c) 2009, Roboterclub Aachen e.V.
   4:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp ****  * All rights reserved.
   5:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp ****  *
   6:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp ****  * Redistribution and use in source and binary forms, with or without
   7:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp ****  * modification, are permitted provided that the following conditions are met:
   8:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp ****  * 
   9:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp ****  *     * Redistributions of source code must retain the above copyright
  10:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp ****  *       notice, this list of conditions and the following disclaimer.
  11:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp ****  *     * Redistributions in binary form must reproduce the above copyright
  12:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp ****  *       notice, this list of conditions and the following disclaimer in the
  13:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp ****  *       documentation and/or other materials provided with the distribution.
  14:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp ****  *     * Neither the name of the Roboterclub Aachen e.V. nor the
  15:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp ****  *       names of its contributors may be used to endorse or promote products
  16:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp ****  *       derived from this software without specific prior written permission.
  17:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp ****  *
  18:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp ****  * THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
  19:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp ****  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  20:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  21:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp ****  * DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
  22:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  23:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  24:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  25:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  26:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  27:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  28:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp ****  */
  29:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** // ----------------------------------------------------------------------------
  30:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 
  31:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** #ifndef XPCC__PID_IMPL_HPP
  32:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** #define XPCC__PID_IMPL_HPP
  33:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** template<typename T, unsigned int ScaleFactor>
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** xpcc::Pid<T, ScaleFactor>::Parameter::Parameter(
  36:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 		const float& kp, const float& ki, const float& kd,
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 		const T& maxErrorSum, const T& maxOutput) :
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	kp(static_cast<T>(kp * ScaleFactor)),
  39:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	ki(static_cast<T>(ki * ScaleFactor)),
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	kd(static_cast<T>(kd * ScaleFactor)),
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	maxErrorSum(static_cast<T>(maxErrorSum * ScaleFactor)),
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	maxOutput(maxOutput)
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** {
  44:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** }
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** // -----------------------------------------------------------------------------
  47:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** template<typename T, unsigned int ScaleFactor>
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** xpcc::Pid<T, ScaleFactor>::Pid(
  49:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 		const float& kp, const float& ki, const float& kd,
  50:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 		const T& maxErrorSum, const T& maxOutput) :
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	parameter(kp, ki, kd, maxErrorSum, maxOutput)
  52:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** {
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->reset();
  54:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** }
  55:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 
  56:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** // -----------------------------------------------------------------------------
  57:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** template<typename T, unsigned int ScaleFactor>
  58:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** xpcc::Pid<T, ScaleFactor>::Pid(
  59:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 		Parameter& parameter) :
  60:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	parameter(parameter)
  61:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** {
  62:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->reset();
  63:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** }
  64:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** template<typename T, unsigned int ScaleFactor>
  66:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** void
  67:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** xpcc::Pid<T, ScaleFactor>::reset()
  68:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** {
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->errorSum = 0;
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->lastError = 0;
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->output = 0;
  72:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** }
  73:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 
  74:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** template<typename T, unsigned int ScaleFactor>
  75:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** void
  76:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** xpcc::Pid<T, ScaleFactor>::setParameter(const Parameter& parameter)
  77:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** {
  78:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->parameter = parameter;
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** }
  80:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 
  81:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** template<typename T, unsigned int ScaleFactor>
  82:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** void
  83:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** xpcc::Pid<T, ScaleFactor>::update(const T& input, bool externalLimitation)
  84:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** {
  85:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	bool limitation = externalLimitation;
  86:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	
  87:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	T tempErrorSum = errorSum + input;
 353              		.loc 5 87 0
 354 005e A34B     		ldr	r3, .L116+36
 355              	.LBE355:
 356              	.LBE354:
 357              		.loc 2 51 0
 358 0060 DEF80050 		ldr	r5, [lr, #0]
 359 0064 0868     		ldr	r0, [r1, #0]
 360 0066 281A     		subs	r0, r5, r0
 361 0068 07EE900A 		fmsr	s15, r0	@ int
 362              	.LBB365:
 363              	.LBB360:
 364              		.loc 5 87 0
 365 006c D3ED055A 		flds	s11, [r3, #20]
 366              	.LBE360:
 367              	.LBE365:
 368              		.loc 2 51 0
 369 0070 B8EEE76A 		fsitos	s12, s15
 370              	.LVL9:
 371              	.LBB366:
 372              	.LBB361:
  88:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	if (tempErrorSum > this->parameter.maxErrorSum) {
 373              		.loc 5 88 0
 374 0074 93ED037A 		flds	s14, [r3, #12]
  87:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	T tempErrorSum = errorSum + input;
 375              		.loc 5 87 0
 376 0078 76EE257A 		fadds	s15, s12, s11
 377              	.LVL10:
 378              		.loc 5 88 0
 379 007c F4EEC77A 		fcmpes	s15, s14
 380 0080 F1EE10FA 		fmstat
 381 0084 40F3AC81 		ble	.L108
 382              	.L14:
 383              	.LVL11:
  89:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 		tempErrorSum = this->parameter.maxErrorSum;
  90:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	}
  91:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	else if (tempErrorSum < -this->parameter.maxErrorSum) {
  92:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 		tempErrorSum = -this->parameter.maxErrorSum;
  93:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	}
  94:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	
  95:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	WideType tmp = 0;
  96:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	tmp += static_cast<WideType>(this->parameter.kp) * input;
 384              		.loc 5 96 0
 385 0088 D3ED006A 		flds	s13, [r3, #0]
 386 008c DFED987A 		flds	s15, .L116+40
 387 0090 46EE267A 		fmacs	s15, s12, s13
 388              	.LVL12:
  97:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	tmp += static_cast<WideType>(this->parameter.ki) * (tempErrorSum);
 389              		.loc 5 97 0
 390 0094 D3ED016A 		flds	s13, [r3, #4]
  98:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	tmp += static_cast<WideType>(this->parameter.kd) * (input - this->lastError);
 391              		.loc 5 98 0
 392 0098 93ED065A 		flds	s10, [r3, #24]
  97:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	tmp += static_cast<WideType>(this->parameter.ki) * (tempErrorSum);
 393              		.loc 5 97 0
 394 009c 47EE267A 		fmacs	s15, s14, s13
 395              	.LVL13:
 396              		.loc 5 98 0
 397 00a0 36EE455A 		fsubs	s10, s12, s10
 398 00a4 D3ED026A 		flds	s13, [r3, #8]
 399 00a8 45EE267A 		fmacs	s15, s10, s13
 400              	.LVL14:
  99:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	
 100:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	tmp = tmp / ScaleFactor;
 101:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	
 102:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	if (tmp > this->parameter.maxOutput) {
 401              		.loc 5 102 0
 402 00ac D3ED046A 		flds	s13, [r3, #16]
 403 00b0 F4EEE67A 		fcmpes	s15, s13
 404 00b4 F1EE10FA 		fmstat
  96:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	tmp += static_cast<WideType>(this->parameter.kp) * input;
 405              		.loc 5 96 0
 406 00b8 8C48     		ldr	r0, .L116+36
 407              		.loc 5 102 0
 408 00ba 2EDC     		bgt	.L101
 103:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 		this->output = this->parameter.maxOutput;
 104:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 		limitation = true;
 105:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	}
 106:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	else if (tmp < -this->parameter.maxOutput) {
 409              		.loc 5 106 0
 410 00bc F1EE666A 		fnegs	s13, s13
 411 00c0 F4EEE67A 		fcmpes	s15, s13
 412 00c4 F1EE10FA 		fmstat
 413 00c8 27D4     		bmi	.L101
 107:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 		this->output = -this->parameter.maxOutput;
 108:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 		limitation = true;
 109:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	}
 110:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	else {
 111:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 		this->output = tmp;
 414              		.loc 5 111 0
 415 00ca C0ED077A 		fsts	s15, [r0, #28]
 416 00ce F0EE676A 		fcpys	s13, s15
 417              	.LVL15:
 418              	.L20:
 112:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	}
 113:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	
 114:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	// If an external limitation (saturation somewhere in the control loop) is
 115:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	// applied the error sum will only be decremented, never incremented.
 116:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	// This is done to help the system to leave the saturated state.
 117:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	if (not limitation or (std::abs(tempErrorSum) < std::abs(this->errorSum)))
 118:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	{
 119:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 		this->errorSum = tempErrorSum;
 419              		.loc 5 119 0
 420 00d2 83ED057A 		fsts	s14, [r3, #20]
 421              	.LVL16:
 422              	.L53:
 423              	.LBE361:
 424              	.LBE366:
 425              	.LBB367:
 426              	.LBB368:
 427              	.LBB369:
 428              	.LBB370:
 429              	.LBB371:
 430              		.file 6 "hallSensor.h"
   1:hallSensor.h  **** /*
   2:hallSensor.h  ****  * hallSensor.h
   3:hallSensor.h  ****  *
   4:hallSensor.h  ****  *  Created on: Dec 23, 2013
   5:hallSensor.h  ****  *      Author: jonas
   6:hallSensor.h  ****  */
   7:hallSensor.h  **** 
   8:hallSensor.h  **** #ifndef HALLSENSOR_H_
   9:hallSensor.h  **** #define HALLSENSOR_H_
  10:hallSensor.h  **** 
  11:hallSensor.h  **** //#pragma GCC push_options
  12:hallSensor.h  **** //#pragma GCC optimize ("O0")
  13:hallSensor.h  **** 
  14:hallSensor.h  **** #include "project.h"
  15:hallSensor.h  **** #include "control.h"
  16:hallSensor.h  **** 
  17:hallSensor.h  **** template<Axis axis>
  18:hallSensor.h  **** class HallSensor{
  19:hallSensor.h  **** private:
  20:hallSensor.h  **** 	static volatile bool triggered[2];
  21:hallSensor.h  **** 	static volatile bool state[2]; //the real current state
  22:hallSensor.h  **** 	static volatile int triggeredPosition[2];
  23:hallSensor.h  **** 
  24:hallSensor.h  **** 	GPIO__INPUT(XFRONT, E, 11);
  25:hallSensor.h  **** 	GPIO__INPUT(XEND, E, 7);
 431              		.loc 6 25 0
 432 00d6 8748     		ldr	r0, .L116+44
 433              	.LVL17:
 434              	.LBE371:
 435              	.LBE370:
 436              	.LBE369:
 437              	.LBE368:
 438              	.LBE367:
  52:control_impl.h **** 		v_u = v_pid.getValue();
  53:control_impl.h **** 		v_ureal = v_u;
 439              		.loc 2 53 0
 440 00d8 874F     		ldr	r7, .L116+48
 441              	.LBB382:
 442              	.LBB378:
 443              	.LBB374:
 444              	.LBB373:
 445              	.LBB372:
 446              		.loc 6 25 0
 447 00da 0069     		ldr	r0, [r0, #16]
 448              	.LBE372:
 449              	.LBE373:
 450              	.LBE374:
 451              	.LBE378:
 452              	.LBE382:
  52:control_impl.h **** 		v_u = v_pid.getValue();
 453              		.loc 2 52 0
 454 00dc DFF844C2 		ldr	ip, .L116+92
 455 00e0 FDEEE66A 		ftosizs	s13, s13
 456              	.LBB383:
 457              	.LBB379:
 458              		.file 7 "securityController.h"
   1:securityController.h **** /*
   2:securityController.h ****  * securityController.h
   3:securityController.h ****  *
   4:securityController.h ****  *  Created on: Dec 28, 2013
   5:securityController.h ****  *      Author: jonas
   6:securityController.h ****  */
   7:securityController.h **** 
   8:securityController.h **** #ifndef SECURITYCONTROLLER_H_
   9:securityController.h **** #define SECURITYCONTROLLER_H_
  10:securityController.h **** 
  11:securityController.h **** #include "project.h"
  12:securityController.h **** #include "hallSensor.h"
  13:securityController.h **** #include "state.h"
  14:securityController.h **** 
  15:securityController.h **** template <Axis axis> class HallSensor;
  16:securityController.h **** 
  17:securityController.h **** template<Axis axis>
  18:securityController.h **** class SecurityController{
  19:securityController.h **** public:
  20:securityController.h **** 
  21:securityController.h **** 	template<typename T>
  22:securityController.h **** 	static void saturate(T& value){
  23:securityController.h **** 		if((!HallSensor<axis>::getEndState()) && value > 0){
 459              		.loc 7 23 0
 460 00e4 10F08000 		ands	r0, r0, #128
 461              	.LBE379:
 462              	.LBE383:
  52:control_impl.h **** 		v_u = v_pid.getValue();
 463              		.loc 2 52 0
 464 00e8 16EE905A 		fmrs	r5, s13	@ int
 465              	.LBB384:
 466              	.LBB362:
 120:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	}
 121:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->lastError = input;
 467              		.loc 5 122 0
 468 00ec 83ED066A 		fsts	s12, [r3, #24]
 469              	.LVL18:
 470              	.LBE362:
 471              	.LBE384:
  52:control_impl.h **** 		v_u = v_pid.getValue();
 472              		.loc 2 52 0
 473 00f0 CCED006A 		fsts	s13, [ip, #0]	@ int
 474              		.loc 2 53 0
 475 00f4 C7ED006A 		fsts	s13, [r7, #0]	@ int
 476              	.LVL19:
 477              	.LBB385:
 478              	.LBB380:
 479              		.loc 7 23 0
 480 00f8 1BD1     		bne	.L21
 481 00fa 002D     		cmp	r5, #0
 482 00fc 19DD     		ble	.L21
 483              	.L23:
  24:securityController.h **** 			value = 0;
  25:securityController.h **** 			//bool clear = HallSensor<axis>::checkEndState();
  26:securityController.h **** 			//State::setSecondaryState(State::MOTOR_LIMITED, !clear);
  27:securityController.h **** 		}else if((!HallSensor<axis>::getFrontState()) && value < 0){
  28:securityController.h **** 			value = 0;
 484              		.loc 7 28 0
 485 00fe 3860     		str	r0, [r7, #0]
 486 0100 0546     		mov	r5, r0
 487              	.L55:
 488              	.LBE380:
 489              	.LBE385:
  54:control_impl.h **** 		SecurityController<axis>::saturate(v_ureal);
  55:control_impl.h **** 		if((abs(pos_shall - enc) <= CONTROLX_DEADBAND && positionControlEnabled)
 490              		.loc 2 55 0
 491 0102 7E48     		ldr	r0, .L116+52
 492 0104 0068     		ldr	r0, [r0, #0]
 493 0106 8242     		cmp	r2, r0
 494 0108 00F09E81 		beq	.L109
 495 010c 002C     		cmp	r4, #0
 496 010e 00F09C81 		beq	.L26
 497              	.L27:
  56:control_impl.h **** 				|| (!positionControlEnabled && abs(v_shall - v_is) < 1000)){
  57:control_impl.h **** 			v_ureal = 0;
  58:control_impl.h **** 			v_pid.reset();
  59:control_impl.h **** 			pos_pid.reset();
  60:control_impl.h **** 		}
  61:control_impl.h **** 		Motor<axis>::setSpeed(v_ureal);
 498              		.loc 2 61 0
 499 0112 2846     		mov	r0, r5
 500 0114 7A4B     		ldr	r3, .L116+56
 501              	.LVL20:
 502 0116 9847     		blx	r3
 503              	.LVL21:
 504 0118 88E7     		b	.L13
 505              	.LVL22:
 506              	.L101:
 507              	.LBB386:
 508              	.LBB363:
 509              	.LBB356:
 510              	.LBB357:
 511              		.file 8 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++
   1:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** // -*- C++ -*- C forwarding header.
   2:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** 
   3:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** // Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,
   4:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** // 2006, 2007, 2008, 2009, 2010, 2011
   5:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** // Free Software Foundation, Inc.
   6:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** //
   7:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   8:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** // software; you can redistribute it and/or modify it under the
   9:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** // terms of the GNU General Public License as published by the
  10:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** // Free Software Foundation; either version 3, or (at your option)
  11:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** // any later version.
  12:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** 
  13:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** // This library is distributed in the hope that it will be useful,
  14:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  15:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  16:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** // GNU General Public License for more details.
  17:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** 
  18:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** // Under Section 7 of GPL version 3, you are granted additional
  19:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** // permissions described in the GCC Runtime Library Exception, version
  20:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** // 3.1, as published by the Free Software Foundation.
  21:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** 
  22:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** // You should have received a copy of the GNU General Public License and
  23:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  24:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  25:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** // <http://www.gnu.org/licenses/>.
  26:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** 
  27:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** /** @file include/cmath
  28:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  29:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  30:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath ****  *
  31:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  32:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath ****  *  and its contents are (mostly) the same as that header, but are all
  33:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath ****  *  contained in the namespace @c std (except for names which are defined
  34:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath ****  *  as macros in C).
  35:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath ****  */
  36:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** 
  37:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** //
  38:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** // ISO C++ 14882: 26.5  C library
  39:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** //
  40:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** 
  41:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** #pragma GCC system_header
  42:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** 
  43:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** #include <bits/c++config.h>
  44:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** #include <bits/cpp_type_traits.h>
  45:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** #include <ext/type_traits.h>
  46:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** #include <math.h>
  47:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** 
  48:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** #ifndef _GLIBCXX_CMATH
  49:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** #define _GLIBCXX_CMATH 1
  50:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** 
  51:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  52:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** #undef abs
  53:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** #undef div
  54:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** #undef acos
  55:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** #undef asin
  56:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** #undef atan
  57:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** #undef atan2
  58:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** #undef ceil
  59:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** #undef cos
  60:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** #undef cosh
  61:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** #undef exp
  62:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** #undef fabs
  63:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** #undef floor
  64:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** #undef fmod
  65:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** #undef frexp
  66:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** #undef ldexp
  67:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** #undef log
  68:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** #undef log10
  69:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** #undef modf
  70:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** #undef pow
  71:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** #undef sin
  72:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** #undef sinh
  73:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** #undef sqrt
  74:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** #undef tan
  75:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** #undef tanh
  76:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** 
  77:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  78:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** {
  79:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  80:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** 
  81:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** #if !defined(__CORRECT_ISO_CPP_MATH_H_PROTO1) \
  82:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath ****   && !defined(__CORRECT_ISO_CPP_MATH_H_PROTO2)
  83:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath ****   inline _GLIBCXX_CONSTEXPR double
  84:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath ****   abs(double __x)
  85:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath ****   { return __builtin_fabs(__x); }
  86:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** #endif
  87:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** 
  88:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO1
  89:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath ****   inline _GLIBCXX_CONSTEXPR float
  90:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath ****   abs(float __x)
  91:/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c++/4.7.2/cmath ****   { return __builtin_fabsf(__x); }
 512              		.loc 8 91 0
 513 011a F0EEC77A 		fabss	s15, s14
 514              	.LVL23:
 515              	.LBE357:
 516              	.LBE356:
 517              	.LBB358:
 518              	.LBB359:
 519 011e F0EEE55A 		fabss	s11, s11
 520              	.LBE359:
 521              	.LBE358:
 117:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	if (not limitation or (std::abs(tempErrorSum) < std::abs(this->errorSum)))
 522              		.loc 5 117 0
 523 0122 F4EEE57A 		fcmpes	s15, s11
 524 0126 F1EE10FA 		fmstat
 107:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 		this->output = -this->parameter.maxOutput;
 525              		.loc 5 107 0
 526 012a C0ED076A 		fsts	s13, [r0, #28]
 527              	.LVL24:
 117:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	if (not limitation or (std::abs(tempErrorSum) < std::abs(this->errorSum)))
 528              		.loc 5 117 0
 529 012e D2D5     		bpl	.L53
 530 0130 CFE7     		b	.L20
 531              	.LVL25:
 532              	.L21:
 533              	.LBE363:
 534              	.LBE386:
 535              	.LBB387:
 536              	.LBB381:
 537              	.LBB375:
 538              	.LBB376:
 539              	.LBB377:
  24:hallSensor.h  **** 	GPIO__INPUT(XFRONT, E, 11);
 540              		.loc 6 24 0
 541 0132 7048     		ldr	r0, .L116+44
 542 0134 0069     		ldr	r0, [r0, #16]
 543              	.LBE377:
 544              	.LBE376:
 545              	.LBE375:
  27:securityController.h **** 		}else if((!HallSensor<axis>::getFrontState()) && value < 0){
 546              		.loc 7 27 0
 547 0136 10F40060 		ands	r0, r0, #2048
 548 013a E2D1     		bne	.L55
 549 013c 002D     		cmp	r5, #0
 550 013e E0DA     		bge	.L55
 551 0140 DDE7     		b	.L23
 552              	.LVL26:
 553              	.L107:
 554              	.LBE381:
 555              	.LBE387:
 556              	.LBE418:
 557              	.LBE497:
 558              	.LBB498:
 559              	.LBB492:
  51:control_impl.h **** 		v_pid.update(v_shall - v_is);
 560              		.loc 2 51 0
 561 0142 704F     		ldr	r7, .L116+60
 562              	.LBB431:
 563              	.LBB432:
  87:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	T tempErrorSum = errorSum + input;
 564              		.loc 5 87 0
 565 0144 704B     		ldr	r3, .L116+64
 566              	.LBE432:
 567              	.LBE431:
  51:control_impl.h **** 		v_pid.update(v_shall - v_is);
 568              		.loc 2 51 0
 569 0146 3D68     		ldr	r5, [r7, #0]
 570 0148 0868     		ldr	r0, [r1, #0]
 571 014a 281A     		subs	r0, r5, r0
 572 014c 07EE900A 		fmsr	s15, r0	@ int
 573              	.LBB442:
 574              	.LBB437:
  87:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	T tempErrorSum = errorSum + input;
 575              		.loc 5 87 0
 576 0150 D3ED055A 		flds	s11, [r3, #20]
 577              	.LBE437:
 578              	.LBE442:
  51:control_impl.h **** 		v_pid.update(v_shall - v_is);
 579              		.loc 2 51 0
 580 0154 B8EEE76A 		fsitos	s12, s15
 581              	.LVL27:
 582              	.LBB443:
 583              	.LBB438:
  88:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	if (tempErrorSum > this->parameter.maxErrorSum) {
 584              		.loc 5 88 0
 585 0158 93ED037A 		flds	s14, [r3, #12]
  87:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	T tempErrorSum = errorSum + input;
 586              		.loc 5 87 0
 587 015c 76EE257A 		fadds	s15, s12, s11
 588              	.LVL28:
  88:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	if (tempErrorSum > this->parameter.maxErrorSum) {
 589              		.loc 5 88 0
 590 0160 F4EEC77A 		fcmpes	s15, s14
 591 0164 F1EE10FA 		fmstat
 592 0168 40F33081 		ble	.L110
 593              	.L37:
 594              	.LVL29:
  96:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	tmp += static_cast<WideType>(this->parameter.kp) * input;
 595              		.loc 5 96 0
 596 016c D3ED006A 		flds	s13, [r3, #0]
 597 0170 DFED5F7A 		flds	s15, .L116+40
 598 0174 46EE267A 		fmacs	s15, s12, s13
 599              	.LVL30:
  97:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	tmp += static_cast<WideType>(this->parameter.ki) * (tempErrorSum);
 600              		.loc 5 97 0
 601 0178 D3ED016A 		flds	s13, [r3, #4]
  98:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	tmp += static_cast<WideType>(this->parameter.kd) * (input - this->lastError);
 602              		.loc 5 98 0
 603 017c 93ED065A 		flds	s10, [r3, #24]
  97:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	tmp += static_cast<WideType>(this->parameter.ki) * (tempErrorSum);
 604              		.loc 5 97 0
 605 0180 47EE267A 		fmacs	s15, s14, s13
 606              	.LVL31:
  98:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	tmp += static_cast<WideType>(this->parameter.kd) * (input - this->lastError);
 607              		.loc 5 98 0
 608 0184 36EE455A 		fsubs	s10, s12, s10
 609 0188 D3ED026A 		flds	s13, [r3, #8]
 610 018c 45EE267A 		fmacs	s15, s10, s13
 611              	.LVL32:
 102:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	if (tmp > this->parameter.maxOutput) {
 612              		.loc 5 102 0
 613 0190 D3ED046A 		flds	s13, [r3, #16]
 614 0194 F4EEE67A 		fcmpes	s15, s13
 615 0198 F1EE10FA 		fmstat
  96:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	tmp += static_cast<WideType>(this->parameter.kp) * input;
 616              		.loc 5 96 0
 617 019c 5A48     		ldr	r0, .L116+64
 102:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	if (tmp > this->parameter.maxOutput) {
 618              		.loc 5 102 0
 619 019e 2DDC     		bgt	.L102
 106:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	else if (tmp < -this->parameter.maxOutput) {
 620              		.loc 5 106 0
 621 01a0 F1EE666A 		fnegs	s13, s13
 622 01a4 F4EEE67A 		fcmpes	s15, s13
 623 01a8 F1EE10FA 		fmstat
 624 01ac 26D4     		bmi	.L102
 111:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 		this->output = tmp;
 625              		.loc 5 111 0
 626 01ae C0ED077A 		fsts	s15, [r0, #28]
 627 01b2 F0EE676A 		fcpys	s13, s15
 628              	.LVL33:
 629              	.L43:
 119:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 		this->errorSum = tempErrorSum;
 630              		.loc 5 119 0
 631 01b6 83ED057A 		fsts	s14, [r3, #20]
 632              	.LVL34:
 633              	.L59:
 634              	.LBE438:
 635              	.LBE443:
 636              	.LBB444:
 637              	.LBB445:
 638              	.LBB446:
 639              	.LBB447:
 640              	.LBB448:
  26:hallSensor.h  **** 	GPIO__INPUT(YFRONT, D, 8);
  27:hallSensor.h  **** 	GPIO__INPUT(YEND, D, 9);
 641              		.loc 6 27 0
 642 01ba 5448     		ldr	r0, .L116+68
 643              	.LVL35:
 644              	.LBE448:
 645              	.LBE447:
 646              	.LBE446:
 647              	.LBE445:
 648              	.LBE444:
  53:control_impl.h **** 		v_ureal = v_u;
 649              		.loc 2 53 0
 650 01bc 544E     		ldr	r6, .L116+72
 651              	.LVL36:
 652              	.LBB459:
 653              	.LBB455:
 654              	.LBB451:
 655              	.LBB450:
 656              	.LBB449:
 657              		.loc 6 27 0
 658 01be 0569     		ldr	r5, [r0, #16]
 659              	.LBE449:
 660              	.LBE450:
 661              	.LBE451:
 662              	.LBE455:
 663              	.LBE459:
  52:control_impl.h **** 		v_u = v_pid.getValue();
 664              		.loc 2 52 0
 665 01c0 DFF864E1 		ldr	lr, .L116+96
 666 01c4 FDEEE66A 		ftosizs	s13, s13
 667              	.LBB460:
 668              	.LBB456:
  23:securityController.h **** 		if((!HallSensor<axis>::getEndState()) && value > 0){
 669              		.loc 7 23 0
 670 01c8 15F40075 		ands	r5, r5, #512
 671              	.LBE456:
 672              	.LBE460:
  52:control_impl.h **** 		v_u = v_pid.getValue();
 673              		.loc 2 52 0
 674 01cc 16EE900A 		fmrs	r0, s13	@ int
 675              	.LBB461:
 676              	.LBB439:
 677              		.loc 5 122 0
 678 01d0 83ED066A 		fsts	s12, [r3, #24]
 679              	.LVL37:
 680              	.LBE439:
 681              	.LBE461:
  52:control_impl.h **** 		v_u = v_pid.getValue();
 682              		.loc 2 52 0
 683 01d4 CEED006A 		fsts	s13, [lr, #0]	@ int
  53:control_impl.h **** 		v_ureal = v_u;
 684              		.loc 2 53 0
 685 01d8 C6ED006A 		fsts	s13, [r6, #0]	@ int
 686              	.LVL38:
 687              	.LBB462:
 688              	.LBB457:
  23:securityController.h **** 		if((!HallSensor<axis>::getEndState()) && value > 0){
 689              		.loc 7 23 0
 690 01dc 1AD1     		bne	.L44
 691 01de 0028     		cmp	r0, #0
 692 01e0 18DD     		ble	.L44
 693              	.L46:
 694              		.loc 7 28 0
 695 01e2 3560     		str	r5, [r6, #0]
 696 01e4 2846     		mov	r0, r5
 697              	.L61:
 698              	.LBE457:
 699              	.LBE462:
  55:control_impl.h **** 		if((abs(pos_shall - enc) <= CONTROLX_DEADBAND && positionControlEnabled)
 700              		.loc 2 55 0
 701 01e6 4B4D     		ldr	r5, .L116+76
 702 01e8 2D68     		ldr	r5, [r5, #0]
 703 01ea AA42     		cmp	r2, r5
 704 01ec 00F01681 		beq	.L111
 705 01f0 002C     		cmp	r4, #0
 706 01f2 00F01481 		beq	.L49
 707              	.L50:
 708              		.loc 2 61 0
 709 01f6 484B     		ldr	r3, .L116+80
 710              	.LVL39:
 711 01f8 9847     		blx	r3
 712              	.LVL40:
 713 01fa F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 714              	.LVL41:
 715              	.L102:
 716              	.LBB463:
 717              	.LBB440:
 718              	.LBB433:
 719              	.LBB434:
 720              		.loc 8 91 0
 721 01fc F0EEC77A 		fabss	s15, s14
 722              	.LVL42:
 723              	.LBE434:
 724              	.LBE433:
 725              	.LBB435:
 726              	.LBB436:
 727 0200 F0EEE55A 		fabss	s11, s11
 728              	.LBE436:
 729              	.LBE435:
 117:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	if (not limitation or (std::abs(tempErrorSum) < std::abs(this->errorSum)))
 730              		.loc 5 117 0
 731 0204 F4EEE57A 		fcmpes	s15, s11
 732 0208 F1EE10FA 		fmstat
 107:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 		this->output = -this->parameter.maxOutput;
 733              		.loc 5 107 0
 734 020c C0ED076A 		fsts	s13, [r0, #28]
 735              	.LVL43:
 117:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	if (not limitation or (std::abs(tempErrorSum) < std::abs(this->errorSum)))
 736              		.loc 5 117 0
 737 0210 D3D5     		bpl	.L59
 738 0212 D0E7     		b	.L43
 739              	.LVL44:
 740              	.L44:
 741              	.LBE440:
 742              	.LBE463:
 743              	.LBB464:
 744              	.LBB458:
 745              	.LBB452:
 746              	.LBB453:
 747              	.LBB454:
  26:hallSensor.h  **** 	GPIO__INPUT(YFRONT, D, 8);
 748              		.loc 6 26 0
 749 0214 3D4D     		ldr	r5, .L116+68
 750 0216 2D69     		ldr	r5, [r5, #16]
 751              	.LBE454:
 752              	.LBE453:
 753              	.LBE452:
  27:securityController.h **** 		}else if((!HallSensor<axis>::getFrontState()) && value < 0){
 754              		.loc 7 27 0
 755 0218 15F48075 		ands	r5, r5, #256
 756 021c E3D1     		bne	.L61
 757 021e 0028     		cmp	r0, #0
 758 0220 E1DA     		bge	.L61
 759 0222 DEE7     		b	.L46
 760              	.LVL45:
 761              	.L104:
 762              	.LBE458:
 763              	.LBE464:
 764              	.LBE492:
 765              	.LBE498:
 766              	.LBB499:
 767              	.LBB419:
  40:control_impl.h **** 		pos_pid.update(pos_shall - enc, externalLimitation);
 768              		.loc 2 40 0
 769 0224 3549     		ldr	r1, .L116+52
 770              	.LBB388:
 771              	.LBB389:
  87:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	T tempErrorSum = errorSum + input;
 772              		.loc 5 87 0
 773 0226 3D4B     		ldr	r3, .L116+84
 774              	.LBE389:
 775              	.LBE388:
  40:control_impl.h **** 		pos_pid.update(pos_shall - enc, externalLimitation);
 776              		.loc 2 40 0
 777 0228 0968     		ldr	r1, [r1, #0]
 778 022a 891A     		subs	r1, r1, r2
 779 022c 07EE901A 		fmsr	s15, r1	@ int
 780              	.LBB400:
 781              	.LBB394:
  87:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	T tempErrorSum = errorSum + input;
 782              		.loc 5 87 0
 783 0230 D3ED055A 		flds	s11, [r3, #20]
 784              	.LBE394:
 785              	.LBE400:
  40:control_impl.h **** 		pos_pid.update(pos_shall - enc, externalLimitation);
 786              		.loc 2 40 0
 787 0234 F8EEE76A 		fsitos	s13, s15
 788              	.LVL46:
 789              	.LBB401:
 790              	.LBB395:
  88:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	if (tempErrorSum > this->parameter.maxErrorSum) {
 791              		.loc 5 88 0
 792 0238 93ED037A 		flds	s14, [r3, #12]
  87:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	T tempErrorSum = errorSum + input;
 793              		.loc 5 87 0
 794 023c 76EEA57A 		fadds	s15, s13, s11
 795              	.LVL47:
  88:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	if (tempErrorSum > this->parameter.maxErrorSum) {
 796              		.loc 5 88 0
 797 0240 F4EEC77A 		fcmpes	s15, s14
 798 0244 F1EE10FA 		fmstat
 799 0248 40F3DE80 		ble	.L112
 800              	.L6:
 801              	.LVL48:
  96:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	tmp += static_cast<WideType>(this->parameter.kp) * input;
 802              		.loc 5 96 0
 803 024c 93ED006A 		flds	s12, [r3, #0]
 804 0250 DFED277A 		flds	s15, .L116+40
 805 0254 46EE867A 		fmacs	s15, s13, s12
 806              	.LVL49:
  97:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	tmp += static_cast<WideType>(this->parameter.ki) * (tempErrorSum);
 807              		.loc 5 97 0
 808 0258 93ED016A 		flds	s12, [r3, #4]
  98:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	tmp += static_cast<WideType>(this->parameter.kd) * (input - this->lastError);
 809              		.loc 5 98 0
 810 025c 93ED065A 		flds	s10, [r3, #24]
  97:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	tmp += static_cast<WideType>(this->parameter.ki) * (tempErrorSum);
 811              		.loc 5 97 0
 812 0260 47EE067A 		fmacs	s15, s14, s12
 813              	.LVL50:
  98:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	tmp += static_cast<WideType>(this->parameter.kd) * (input - this->lastError);
 814              		.loc 5 98 0
 815 0264 36EEC55A 		fsubs	s10, s13, s10
 816 0268 93ED026A 		flds	s12, [r3, #8]
 817 026c 45EE067A 		fmacs	s15, s10, s12
 818              	.LVL51:
 102:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	if (tmp > this->parameter.maxOutput) {
 819              		.loc 5 102 0
 820 0270 93ED046A 		flds	s12, [r3, #16]
 821 0274 F4EEC67A 		fcmpes	s15, s12
 822 0278 F1EE10FA 		fmstat
  96:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	tmp += static_cast<WideType>(this->parameter.kp) * input;
 823              		.loc 5 96 0
 824 027c 2749     		ldr	r1, .L116+84
 102:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	if (tmp > this->parameter.maxOutput) {
 825              		.loc 5 102 0
 826 027e 15DC     		bgt	.L99
 106:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	else if (tmp < -this->parameter.maxOutput) {
 827              		.loc 5 106 0
 828 0280 B1EE466A 		fnegs	s12, s12
 829 0284 F4EEC67A 		fcmpes	s15, s12
 830 0288 F1EE10FA 		fmstat
 831 028c 0ED4     		bmi	.L99
 111:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 		this->output = tmp;
 832              		.loc 5 111 0
 833 028e C1ED077A 		fsts	s15, [r1, #28]
 117:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	if (not limitation or (std::abs(tempErrorSum) < std::abs(this->errorSum)))
 834              		.loc 5 117 0
 835 0292 002E     		cmp	r6, #0
 836 0294 40F0F580 		bne	.L113
 837              	.LVL52:
 838              	.L12:
 119:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 		this->errorSum = tempErrorSum;
 839              		.loc 5 119 0
 840 0298 83ED057A 		fsts	s14, [r3, #20]
 841              	.LVL53:
 842              	.L52:
 843              	.LBE395:
 844              	.LBE401:
  41:control_impl.h **** 		v_shall = pos_pid.getValue();
 845              		.loc 2 41 0
 846 029c FDEEE77A 		ftosizs	s15, s15
 847              	.LBB402:
 848              	.LBB396:
 849              		.loc 5 122 0
 850 02a0 C3ED066A 		fsts	s13, [r3, #24]
 851              	.LVL54:
 852              	.LBE396:
 853              	.LBE402:
  41:control_impl.h **** 		v_shall = pos_pid.getValue();
 854              		.loc 2 41 0
 855 02a4 1E4B     		ldr	r3, .L116+88
 856 02a6 C3ED007A 		fsts	s15, [r3, #0]	@ int
 857 02aa B2E6     		b	.L5
 858              	.LVL55:
 859              	.L99:
 860              	.LBB403:
 861              	.LBB397:
 107:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 		this->output = -this->parameter.maxOutput;
 862              		.loc 5 107 0
 863 02ac 81ED076A 		fsts	s12, [r1, #28]
 864              	.LVL56:
 865              	.L51:
 866              	.LBB390:
 867              	.LBB391:
 868              		.loc 8 91 0
 869 02b0 F0EEC77A 		fabss	s15, s14
 870              	.LVL57:
 871              	.LBE391:
 872              	.LBE390:
 873              	.LBB392:
 874              	.LBB393:
 875 02b4 F0EEE55A 		fabss	s11, s11
 876              	.LVL58:
 877              	.LBE393:
 878              	.LBE392:
 117:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	if (not limitation or (std::abs(tempErrorSum) < std::abs(this->errorSum)))
 879              		.loc 5 117 0
 880 02b8 F4EEE57A 		fcmpes	s15, s11
 881 02bc F1EE10FA 		fmstat
 882 02c0 F0EE467A 		fcpys	s15, s12
 883 02c4 E8D4     		bmi	.L12
 884 02c6 E9E7     		b	.L52
 885              	.L117:
 886              		.align	2
 887              	.L116:
 888 02c8 00000000 		.word	_ZN7ControlIL4Axis0EE22positionControlEnabledE
 889 02cc 000C0040 		.word	1073744896
 890 02d0 00000000 		.word	_ZN7ControlIL4Axis0EE8last_posE
 891 02d4 00000000 		.word	_ZN7ControlIL4Axis0EE19speedControlEnabledE
 892 02d8 00000000 		.word	_ZN7ControlIL4Axis0EE4v_isE
 893 02dc 00000000 		.word	_ZN7ControlIL4Axis2EE22positionControlEnabledE
 894 02e0 00000000 		.word	_ZN7ControlIL4Axis2EE8last_posE
 895 02e4 00000000 		.word	_ZN7ControlIL4Axis2EE19speedControlEnabledE
 896 02e8 00000000 		.word	_ZN7ControlIL4Axis2EE4v_isE
 897 02ec 00000000 		.word	_ZN7ControlIL4Axis0EE5v_pidE
 898 02f0 00000000 		.word	0
 899 02f4 00100240 		.word	1073876992
 900 02f8 00000000 		.word	_ZN7ControlIL4Axis0EE7v_urealE
 901 02fc 00000000 		.word	_ZN7ControlIL4Axis0EE9pos_shallE
 902 0300 00000000 		.word	_ZN5MotorIL4Axis0EE8setSpeedEi
 903 0304 00000000 		.word	_ZN7ControlIL4Axis2EE7v_shallE
 904 0308 00000000 		.word	_ZN7ControlIL4Axis2EE5v_pidE
 905 030c 000C0240 		.word	1073875968
 906 0310 00000000 		.word	_ZN7ControlIL4Axis2EE7v_urealE
 907 0314 00000000 		.word	_ZN7ControlIL4Axis2EE9pos_shallE
 908 0318 00000000 		.word	_ZN5MotorIL4Axis2EE8setSpeedEi
 909 031c 00000000 		.word	_ZN7ControlIL4Axis0EE7pos_pidE
 910 0320 00000000 		.word	_ZN7ControlIL4Axis0EE7v_shallE
 911 0324 00000000 		.word	_ZN7ControlIL4Axis0EE3v_uE
 912 0328 00000000 		.word	_ZN7ControlIL4Axis2EE3v_uE
 913              	.LVL59:
 914              	.L106:
 915              	.LBE397:
 916              	.LBE403:
 917              	.LBE419:
 918              	.LBE499:
 919              	.LBB500:
 920              	.LBB493:
  40:control_impl.h **** 		pos_pid.update(pos_shall - enc, externalLimitation);
 921              		.loc 2 40 0
 922 032c 5649     		ldr	r1, .L118
 923              	.LBB465:
 924              	.LBB466:
  87:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	T tempErrorSum = errorSum + input;
 925              		.loc 5 87 0
 926 032e 574B     		ldr	r3, .L118+4
 927              	.LBE466:
 928              	.LBE465:
  40:control_impl.h **** 		pos_pid.update(pos_shall - enc, externalLimitation);
 929              		.loc 2 40 0
 930 0330 0968     		ldr	r1, [r1, #0]
 931 0332 891A     		subs	r1, r1, r2
 932 0334 07EE901A 		fmsr	s15, r1	@ int
 933              	.LBB477:
 934              	.LBB471:
  87:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	T tempErrorSum = errorSum + input;
 935              		.loc 5 87 0
 936 0338 D3ED055A 		flds	s11, [r3, #20]
 937              	.LBE471:
 938              	.LBE477:
  40:control_impl.h **** 		pos_pid.update(pos_shall - enc, externalLimitation);
 939              		.loc 2 40 0
 940 033c F8EEE76A 		fsitos	s13, s15
 941              	.LVL60:
 942              	.LBB478:
 943              	.LBB472:
  88:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	if (tempErrorSum > this->parameter.maxErrorSum) {
 944              		.loc 5 88 0
 945 0340 93ED037A 		flds	s14, [r3, #12]
  87:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	T tempErrorSum = errorSum + input;
 946              		.loc 5 87 0
 947 0344 76EEA57A 		fadds	s15, s13, s11
 948              	.LVL61:
  88:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	if (tempErrorSum > this->parameter.maxErrorSum) {
 949              		.loc 5 88 0
 950 0348 F4EEC77A 		fcmpes	s15, s14
 951 034c F1EE10FA 		fmstat
 952 0350 50DD     		ble	.L114
 953              	.L29:
 954              	.LVL62:
  96:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	tmp += static_cast<WideType>(this->parameter.kp) * input;
 955              		.loc 5 96 0
 956 0352 93ED006A 		flds	s12, [r3, #0]
 957 0356 DFED4E7A 		flds	s15, .L118+8
 958 035a 46EE867A 		fmacs	s15, s13, s12
 959              	.LVL63:
  97:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	tmp += static_cast<WideType>(this->parameter.ki) * (tempErrorSum);
 960              		.loc 5 97 0
 961 035e 93ED016A 		flds	s12, [r3, #4]
  98:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	tmp += static_cast<WideType>(this->parameter.kd) * (input - this->lastError);
 962              		.loc 5 98 0
 963 0362 93ED065A 		flds	s10, [r3, #24]
  97:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	tmp += static_cast<WideType>(this->parameter.ki) * (tempErrorSum);
 964              		.loc 5 97 0
 965 0366 47EE067A 		fmacs	s15, s14, s12
 966              	.LVL64:
  98:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	tmp += static_cast<WideType>(this->parameter.kd) * (input - this->lastError);
 967              		.loc 5 98 0
 968 036a 36EEC55A 		fsubs	s10, s13, s10
 969 036e 93ED026A 		flds	s12, [r3, #8]
 970 0372 45EE067A 		fmacs	s15, s10, s12
 971              	.LVL65:
 102:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	if (tmp > this->parameter.maxOutput) {
 972              		.loc 5 102 0
 973 0376 93ED046A 		flds	s12, [r3, #16]
 974 037a F4EEC67A 		fcmpes	s15, s12
 975 037e F1EE10FA 		fmstat
  96:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	tmp += static_cast<WideType>(this->parameter.kp) * input;
 976              		.loc 5 96 0
 977 0382 4249     		ldr	r1, .L118+4
 102:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	if (tmp > this->parameter.maxOutput) {
 978              		.loc 5 102 0
 979 0384 14DC     		bgt	.L100
 106:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	else if (tmp < -this->parameter.maxOutput) {
 980              		.loc 5 106 0
 981 0386 B1EE466A 		fnegs	s12, s12
 982 038a F4EEC67A 		fcmpes	s15, s12
 983 038e F1EE10FA 		fmstat
 984 0392 0DD4     		bmi	.L100
 111:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 		this->output = tmp;
 985              		.loc 5 111 0
 986 0394 C1ED077A 		fsts	s15, [r1, #28]
 117:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	if (not limitation or (std::abs(tempErrorSum) < std::abs(this->errorSum)))
 987              		.loc 5 117 0
 988 0398 002E     		cmp	r6, #0
 989 039a 6FD1     		bne	.L115
 990              	.LVL66:
 991              	.L35:
 119:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 		this->errorSum = tempErrorSum;
 992              		.loc 5 119 0
 993 039c 83ED057A 		fsts	s14, [r3, #20]
 994              	.LVL67:
 995              	.L58:
 996              	.LBE472:
 997              	.LBE478:
  41:control_impl.h **** 		v_shall = pos_pid.getValue();
 998              		.loc 2 41 0
 999 03a0 FDEEE77A 		ftosizs	s15, s15
 1000              	.LBB479:
 1001              	.LBB473:
 1002              		.loc 5 122 0
 1003 03a4 C3ED066A 		fsts	s13, [r3, #24]
 1004              	.LVL68:
 1005              	.LBE473:
 1006              	.LBE479:
  41:control_impl.h **** 		v_shall = pos_pid.getValue();
 1007              		.loc 2 41 0
 1008 03a8 3A4B     		ldr	r3, .L118+12
 1009 03aa C3ED007A 		fsts	s15, [r3, #0]	@ int
 1010 03ae 45E6     		b	.L28
 1011              	.LVL69:
 1012              	.L100:
 1013              	.LBB480:
 1014              	.LBB474:
 107:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 		this->output = -this->parameter.maxOutput;
 1015              		.loc 5 107 0
 1016 03b0 81ED076A 		fsts	s12, [r1, #28]
 1017              	.LVL70:
 1018              	.L57:
 1019              	.LBB467:
 1020              	.LBB468:
 1021              		.loc 8 91 0
 1022 03b4 F0EEC77A 		fabss	s15, s14
 1023              	.LVL71:
 1024              	.LBE468:
 1025              	.LBE467:
 1026              	.LBB469:
 1027              	.LBB470:
 1028 03b8 F0EEE55A 		fabss	s11, s11
 1029              	.LVL72:
 1030              	.LBE470:
 1031              	.LBE469:
 117:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	if (not limitation or (std::abs(tempErrorSum) < std::abs(this->errorSum)))
 1032              		.loc 5 117 0
 1033 03bc F4EEE57A 		fcmpes	s15, s11
 1034 03c0 F1EE10FA 		fmstat
 1035 03c4 F0EE467A 		fcpys	s15, s12
 1036 03c8 E8D4     		bmi	.L35
 1037 03ca E9E7     		b	.L58
 1038              	.LVL73:
 1039              	.L110:
 1040              	.LBE474:
 1041              	.LBE480:
 1042              	.LBB481:
 1043              	.LBB441:
  91:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	else if (tempErrorSum < -this->parameter.maxErrorSum) {
 1044              		.loc 5 91 0
 1045 03cc B1EE477A 		fnegs	s14, s14
  87:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	T tempErrorSum = errorSum + input;
 1046              		.loc 5 87 0
 1047 03d0 F4EEC77A 		fcmpes	s15, s14
 1048 03d4 F1EE10FA 		fmstat
 1049 03d8 58BF     		it	pl
 1050 03da B0EE677A 		fcpyspl	s14, s15
 1051 03de C5E6     		b	.L37
 1052              	.LVL74:
 1053              	.L108:
 1054              	.LBE441:
 1055              	.LBE481:
 1056              	.LBE493:
 1057              	.LBE500:
 1058              	.LBB501:
 1059              	.LBB420:
 1060              	.LBB404:
 1061              	.LBB364:
  91:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	else if (tempErrorSum < -this->parameter.maxErrorSum) {
 1062              		.loc 5 91 0
 1063 03e0 B1EE477A 		fnegs	s14, s14
  87:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	T tempErrorSum = errorSum + input;
 1064              		.loc 5 87 0
 1065 03e4 F4EEC77A 		fcmpes	s15, s14
 1066 03e8 F1EE10FA 		fmstat
 1067 03ec 58BF     		it	pl
 1068 03ee B0EE677A 		fcpyspl	s14, s15
 1069 03f2 49E6     		b	.L14
 1070              	.LVL75:
 1071              	.L114:
 1072              	.LBE364:
 1073              	.LBE404:
 1074              	.LBE420:
 1075              	.LBE501:
 1076              	.LBB502:
 1077              	.LBB494:
 1078              	.LBB482:
 1079              	.LBB475:
  91:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	else if (tempErrorSum < -this->parameter.maxErrorSum) {
 1080              		.loc 5 91 0
 1081 03f4 B1EE477A 		fnegs	s14, s14
  87:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	T tempErrorSum = errorSum + input;
 1082              		.loc 5 87 0
 1083 03f8 F4EEC77A 		fcmpes	s15, s14
 1084 03fc F1EE10FA 		fmstat
 1085 0400 58BF     		it	pl
 1086 0402 B0EE677A 		fcpyspl	s14, s15
 1087 0406 A4E7     		b	.L29
 1088              	.LVL76:
 1089              	.L112:
 1090              	.LBE475:
 1091              	.LBE482:
 1092              	.LBE494:
 1093              	.LBE502:
 1094              	.LBB503:
 1095              	.LBB421:
 1096              	.LBB405:
 1097              	.LBB398:
  91:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	else if (tempErrorSum < -this->parameter.maxErrorSum) {
 1098              		.loc 5 91 0
 1099 0408 B1EE477A 		fnegs	s14, s14
  87:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	T tempErrorSum = errorSum + input;
 1100              		.loc 5 87 0
 1101 040c F4EEC77A 		fcmpes	s15, s14
 1102 0410 F1EE10FA 		fmstat
 1103 0414 58BF     		it	pl
 1104 0416 B0EE677A 		fcpyspl	s14, s15
 1105 041a 17E7     		b	.L6
 1106              	.LVL77:
 1107              	.L111:
 1108              	.LBE398:
 1109              	.LBE405:
 1110              	.LBE421:
 1111              	.LBE503:
 1112              	.LBB504:
 1113              	.LBB495:
  55:control_impl.h **** 		if((abs(pos_shall - enc) <= CONTROLX_DEADBAND && positionControlEnabled)
 1114              		.loc 2 55 0
 1115 041c 4CB9     		cbnz	r4, .L48
 1116              	.L49:
 1117 041e 3C68     		ldr	r4, [r7, #0]
 1118 0420 0A68     		ldr	r2, [r1, #0]
 1119 0422 A21A     		subs	r2, r4, r2
 1120 0424 002A     		cmp	r2, #0
 1121 0426 B8BF     		it	lt
 1122 0428 5242     		rsblt	r2, r2, #0
 1123 042a B2F57A7F 		cmp	r2, #1000
 1124 042e BFF6E2AE 		bge	.L50
 1125              	.L48:
 1126              	.LBB483:
 1127              	.LBB484:
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->errorSum = 0;
 1128              		.loc 5 69 0
 1129 0432 1649     		ldr	r1, .L118+4
 1130              	.LBE484:
 1131              	.LBE483:
 1132              	.LBB486:
 1133              	.LBB487:
 1134 0434 0022     		movs	r2, #0
 1135              	.LBE487:
 1136              	.LBE486:
  57:control_impl.h **** 			v_ureal = 0;
 1137              		.loc 2 57 0
 1138 0436 0020     		movs	r0, #0
 1139 0438 3060     		str	r0, [r6, #0]
 1140              	.LVL78:
 1141              	.LBB489:
 1142              	.LBB488:
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->errorSum = 0;
 1143              		.loc 5 69 0
 1144 043a 5A61     		str	r2, [r3, #20]	@ float
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->lastError = 0;
 1145              		.loc 5 70 0
 1146 043c 9A61     		str	r2, [r3, #24]	@ float
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->output = 0;
 1147              		.loc 5 71 0
 1148 043e DA61     		str	r2, [r3, #28]	@ float
 1149              	.LVL79:
 1150              	.LBE488:
 1151              	.LBE489:
 1152              	.LBB490:
 1153              	.LBB485:
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->errorSum = 0;
 1154              		.loc 5 69 0
 1155 0440 4A61     		str	r2, [r1, #20]	@ float
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->lastError = 0;
 1156              		.loc 5 70 0
 1157 0442 8A61     		str	r2, [r1, #24]	@ float
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->output = 0;
 1158              		.loc 5 71 0
 1159 0444 CA61     		str	r2, [r1, #28]	@ float
 1160 0446 D6E6     		b	.L50
 1161              	.LVL80:
 1162              	.L109:
 1163              	.LBE485:
 1164              	.LBE490:
 1165              	.LBE495:
 1166              	.LBE504:
 1167              	.LBB505:
 1168              	.LBB422:
  55:control_impl.h **** 		if((abs(pos_shall - enc) <= CONTROLX_DEADBAND && positionControlEnabled)
 1169              		.loc 2 55 0
 1170 0448 54B9     		cbnz	r4, .L25
 1171              	.L26:
 1172 044a DEF80000 		ldr	r0, [lr, #0]
 1173 044e 0A68     		ldr	r2, [r1, #0]
 1174 0450 821A     		subs	r2, r0, r2
 1175 0452 002A     		cmp	r2, #0
 1176 0454 B8BF     		it	lt
 1177 0456 5242     		rsblt	r2, r2, #0
 1178 0458 B2F57A7F 		cmp	r2, #1000
 1179 045c BFF659AE 		bge	.L27
 1180              	.L25:
 1181              	.LBB406:
 1182              	.LBB407:
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->errorSum = 0;
 1183              		.loc 5 69 0
 1184 0460 0022     		movs	r2, #0
 1185              	.LBE407:
 1186              	.LBE406:
 1187              	.LBB410:
 1188              	.LBB411:
 1189 0462 0D49     		ldr	r1, .L118+16
 1190              	.LBE411:
 1191              	.LBE410:
 1192              	.LBB413:
 1193              	.LBB408:
 1194 0464 5A61     		str	r2, [r3, #20]	@ float
 1195              	.LBE408:
 1196              	.LBE413:
  57:control_impl.h **** 			v_ureal = 0;
 1197              		.loc 2 57 0
 1198 0466 0025     		movs	r5, #0
 1199              	.LBB414:
 1200              	.LBB409:
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->lastError = 0;
 1201              		.loc 5 70 0
 1202 0468 9A61     		str	r2, [r3, #24]	@ float
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->output = 0;
 1203              		.loc 5 71 0
 1204 046a DA61     		str	r2, [r3, #28]	@ float
 1205              	.LBE409:
 1206              	.LBE414:
 1207              		.loc 2 61 0
 1208 046c 2846     		mov	r0, r5
 1209 046e 0B4B     		ldr	r3, .L118+20
 1210              	.LVL81:
  57:control_impl.h **** 			v_ureal = 0;
 1211              		.loc 2 57 0
 1212 0470 3D60     		str	r5, [r7, #0]
 1213              	.LVL82:
 1214              	.LBB415:
 1215              	.LBB412:
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->errorSum = 0;
 1216              		.loc 5 69 0
 1217 0472 4A61     		str	r2, [r1, #20]	@ float
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->lastError = 0;
 1218              		.loc 5 70 0
 1219 0474 8A61     		str	r2, [r1, #24]	@ float
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->output = 0;
 1220              		.loc 5 71 0
 1221 0476 CA61     		str	r2, [r1, #28]	@ float
 1222              	.LBE412:
 1223              	.LBE415:
 1224              		.loc 2 61 0
 1225 0478 9847     		blx	r3
 1226              	.LVL83:
 1227 047a D7E5     		b	.L13
 1228              	.LVL84:
 1229              	.L115:
 1230              	.LBE422:
 1231              	.LBE505:
 1232              	.LBB506:
 1233              	.LBB496:
 1234              	.LBB491:
 1235              	.LBB476:
 117:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	if (not limitation or (std::abs(tempErrorSum) < std::abs(this->errorSum)))
 1236              		.loc 5 117 0
 1237 047c B0EE676A 		fcpys	s12, s15
 1238 0480 98E7     		b	.L57
 1239              	.LVL85:
 1240              	.L113:
 1241              	.LBE476:
 1242              	.LBE491:
 1243              	.LBE496:
 1244              	.LBE506:
 1245              	.LBB507:
 1246              	.LBB423:
 1247              	.LBB416:
 1248              	.LBB399:
 1249 0482 B0EE676A 		fcpys	s12, s15
 1250 0486 13E7     		b	.L51
 1251              	.L119:
 1252              		.align	2
 1253              	.L118:
 1254 0488 00000000 		.word	_ZN7ControlIL4Axis2EE9pos_shallE
 1255 048c 00000000 		.word	_ZN7ControlIL4Axis2EE7pos_pidE
 1256 0490 00000000 		.word	0
 1257 0494 00000000 		.word	_ZN7ControlIL4Axis2EE7v_shallE
 1258 0498 00000000 		.word	_ZN7ControlIL4Axis0EE7pos_pidE
 1259 049c 00000000 		.word	_ZN5MotorIL4Axis0EE8setSpeedEi
 1260              	.LBE399:
 1261              	.LBE416:
 1262              	.LBE423:
 1263              	.LBE507:
 1264              		.cfi_endproc
 1265              	.LFE1009:
 1267              		.section	.text._ZN7ControlIL4Axis2EE13getIsPositionEv,"ax",%progbits
 1268              		.align	2
 1269              		.global	_ZN7ControlIL4Axis2EE13getIsPositionEv
 1270              		.thumb
 1271              		.thumb_func
 1273              	_ZN7ControlIL4Axis2EE13getIsPositionEv:
 1274              	.LFB1010:
  19:control.cpp   **** 	Control<X>::update(externalLimitation);
  20:control.cpp   **** 	Control<Y>::update(externalLimitation);
  21:control.cpp   **** }
  22:control.cpp   **** 
  23:control.cpp   **** template<>
  24:control.cpp   **** int32_t Control<Y>::getIsPosition(){
 1275              		.loc 1 24 0
 1276              		.cfi_startproc
 1277              		@ args = 0, pretend = 0, frame = 0
 1278              		@ frame_needed = 0, uses_anonymous_args = 0
 1279              		@ link register save eliminated.
 1280              	.LBB508:
 1281              	.LBB509:
 1282              		.loc 4 205 0
 1283 0000 4FF08043 		mov	r3, #1073741824
 1284 0004 586A     		ldr	r0, [r3, #36]
 1285              	.LBE509:
 1286              	.LBE508:
  25:control.cpp   **** 	return int32_t(xpcc::stm32::Timer2::getValue());
  26:control.cpp   **** }
 1287              		.loc 1 26 0
 1288 0006 7047     		bx	lr
 1289              		.cfi_endproc
 1290              	.LFE1010:
 1292              		.section	.text._ZN7ControlIL4Axis0EE13getIsPositionEv,"ax",%progbits
 1293              		.align	2
 1294              		.global	_ZN7ControlIL4Axis0EE13getIsPositionEv
 1295              		.thumb
 1296              		.thumb_func
 1298              	_ZN7ControlIL4Axis0EE13getIsPositionEv:
 1299              	.LFB1011:
  27:control.cpp   **** 
  28:control.cpp   **** template<>
  29:control.cpp   **** int32_t Control<X>::getIsPosition(){
 1300              		.loc 1 29 0
 1301              		.cfi_startproc
 1302              		@ args = 0, pretend = 0, frame = 0
 1303              		@ frame_needed = 0, uses_anonymous_args = 0
 1304              		@ link register save eliminated.
 1305              	.LBB510:
 1306              	.LBB511:
 1307              		.loc 3 197 0
 1308 0000 014B     		ldr	r3, .L122
 1309 0002 586A     		ldr	r0, [r3, #36]
 1310              	.LBE511:
 1311              	.LBE510:
  30:control.cpp   **** 	return int32_t(xpcc::stm32::Timer5::getValue());
  31:control.cpp   **** }
 1312              		.loc 1 31 0
 1313 0004 7047     		bx	lr
 1314              	.L123:
 1315 0006 00BF     		.align	2
 1316              	.L122:
 1317 0008 000C0040 		.word	1073744896
 1318              		.cfi_endproc
 1319              	.LFE1011:
 1321              		.section	.text._ZN7ControlIL4Axis5EE9resetVPidEv,"ax",%progbits
 1322              		.align	2
 1323              		.global	_ZN7ControlIL4Axis5EE9resetVPidEv
 1324              		.thumb
 1325              		.thumb_func
 1327              	_ZN7ControlIL4Axis5EE9resetVPidEv:
 1328              	.LFB1012:
  32:control.cpp   **** 
  33:control.cpp   **** template<>
  34:control.cpp   **** void Control<ALL>::resetVPid(){
 1329              		.loc 1 34 0
 1330              		.cfi_startproc
 1331              		@ args = 0, pretend = 0, frame = 0
 1332              		@ frame_needed = 0, uses_anonymous_args = 0
 1333              		@ link register save eliminated.
 1334              	.LVL86:
 1335              	.LBB512:
 1336              	.LBB513:
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->errorSum = 0;
 1337              		.loc 5 69 0
 1338 0000 0449     		ldr	r1, .L125
 1339              	.LBE513:
 1340              	.LBE512:
 1341              	.LBB515:
 1342              	.LBB516:
 1343 0002 054A     		ldr	r2, .L125+4
 1344              	.LBE516:
 1345              	.LBE515:
 1346              	.LBB518:
 1347              	.LBB514:
 1348 0004 0023     		movs	r3, #0
 1349 0006 4B61     		str	r3, [r1, #20]	@ float
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->lastError = 0;
 1350              		.loc 5 70 0
 1351 0008 8B61     		str	r3, [r1, #24]	@ float
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->output = 0;
 1352              		.loc 5 71 0
 1353 000a CB61     		str	r3, [r1, #28]	@ float
 1354              	.LVL87:
 1355              	.LBE514:
 1356              	.LBE518:
 1357              	.LBB519:
 1358              	.LBB517:
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->errorSum = 0;
 1359              		.loc 5 69 0
 1360 000c 5361     		str	r3, [r2, #20]	@ float
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->lastError = 0;
 1361              		.loc 5 70 0
 1362 000e 9361     		str	r3, [r2, #24]	@ float
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->output = 0;
 1363              		.loc 5 71 0
 1364 0010 D361     		str	r3, [r2, #28]	@ float
 1365 0012 7047     		bx	lr
 1366              	.L126:
 1367              		.align	2
 1368              	.L125:
 1369 0014 00000000 		.word	_ZN7ControlIL4Axis0EE5v_pidE
 1370 0018 00000000 		.word	_ZN7ControlIL4Axis2EE5v_pidE
 1371              	.LBE517:
 1372              	.LBE519:
 1373              		.cfi_endproc
 1374              	.LFE1012:
 1376              		.section	.text._ZN7ControlIL4Axis5EE11resetPosPidEv,"ax",%progbits
 1377              		.align	2
 1378              		.global	_ZN7ControlIL4Axis5EE11resetPosPidEv
 1379              		.thumb
 1380              		.thumb_func
 1382              	_ZN7ControlIL4Axis5EE11resetPosPidEv:
 1383              	.LFB1013:
  35:control.cpp   **** 	Control<X>::v_pid.reset();
  36:control.cpp   **** 	Control<Y>::v_pid.reset();
  37:control.cpp   **** }
  38:control.cpp   **** 
  39:control.cpp   **** template<>
  40:control.cpp   **** void Control<ALL>::resetPosPid(){
 1384              		.loc 1 40 0
 1385              		.cfi_startproc
 1386              		@ args = 0, pretend = 0, frame = 0
 1387              		@ frame_needed = 0, uses_anonymous_args = 0
 1388              		@ link register save eliminated.
 1389              	.LVL88:
 1390              	.LBB520:
 1391              	.LBB521:
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->errorSum = 0;
 1392              		.loc 5 69 0
 1393 0000 0449     		ldr	r1, .L128
 1394              	.LBE521:
 1395              	.LBE520:
 1396              	.LBB523:
 1397              	.LBB524:
 1398 0002 054A     		ldr	r2, .L128+4
 1399              	.LBE524:
 1400              	.LBE523:
 1401              	.LBB526:
 1402              	.LBB522:
 1403 0004 0023     		movs	r3, #0
 1404 0006 4B61     		str	r3, [r1, #20]	@ float
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->lastError = 0;
 1405              		.loc 5 70 0
 1406 0008 8B61     		str	r3, [r1, #24]	@ float
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->output = 0;
 1407              		.loc 5 71 0
 1408 000a CB61     		str	r3, [r1, #28]	@ float
 1409              	.LVL89:
 1410              	.LBE522:
 1411              	.LBE526:
 1412              	.LBB527:
 1413              	.LBB525:
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->errorSum = 0;
 1414              		.loc 5 69 0
 1415 000c 5361     		str	r3, [r2, #20]	@ float
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->lastError = 0;
 1416              		.loc 5 70 0
 1417 000e 9361     		str	r3, [r2, #24]	@ float
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->output = 0;
 1418              		.loc 5 71 0
 1419 0010 D361     		str	r3, [r2, #28]	@ float
 1420 0012 7047     		bx	lr
 1421              	.L129:
 1422              		.align	2
 1423              	.L128:
 1424 0014 00000000 		.word	_ZN7ControlIL4Axis0EE7pos_pidE
 1425 0018 00000000 		.word	_ZN7ControlIL4Axis2EE7pos_pidE
 1426              	.LBE525:
 1427              	.LBE527:
 1428              		.cfi_endproc
 1429              	.LFE1013:
 1431              		.section	.text._ZN7ControlIL4Axis5EE18enableSpeedControlEb,"ax",%progbits
 1432              		.align	2
 1433              		.global	_ZN7ControlIL4Axis5EE18enableSpeedControlEb
 1434              		.thumb
 1435              		.thumb_func
 1437              	_ZN7ControlIL4Axis5EE18enableSpeedControlEb:
 1438              	.LFB1014:
  41:control.cpp   **** 	Control<X>::pos_pid.reset();
  42:control.cpp   **** 	Control<Y>::pos_pid.reset();
  43:control.cpp   **** }
  44:control.cpp   **** 
  45:control.cpp   **** template<>
  46:control.cpp   **** void Control<ALL>::enableSpeedControl(bool enable){
 1439              		.loc 1 46 0
 1440              		.cfi_startproc
 1441              		@ args = 0, pretend = 0, frame = 0
 1442              		@ frame_needed = 0, uses_anonymous_args = 0
 1443              		@ link register save eliminated.
 1444              	.LVL90:
 1445              	.LBB528:
 1446              	.LBB529:
 1447              	.LBB530:
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->errorSum = 0;
 1448              		.loc 5 69 0
 1449 0000 0649     		ldr	r1, .L131
 1450              	.LBE530:
 1451              	.LBE529:
 1452              	.LBB532:
 1453              	.LBB533:
 1454 0002 074A     		ldr	r2, .L131+4
 1455              	.LBE533:
 1456              	.LBE532:
 1457              	.LBB535:
 1458              	.LBB531:
 1459 0004 0023     		movs	r3, #0
 1460 0006 4B61     		str	r3, [r1, #20]	@ float
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->lastError = 0;
 1461              		.loc 5 70 0
 1462 0008 8B61     		str	r3, [r1, #24]	@ float
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->output = 0;
 1463              		.loc 5 71 0
 1464 000a CB61     		str	r3, [r1, #28]	@ float
 1465              	.LVL91:
 1466              	.LBE531:
 1467              	.LBE535:
 1468              	.LBB536:
 1469              	.LBB534:
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->errorSum = 0;
 1470              		.loc 5 69 0
 1471 000c 5361     		str	r3, [r2, #20]	@ float
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->lastError = 0;
 1472              		.loc 5 70 0
 1473 000e 9361     		str	r3, [r2, #24]	@ float
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->output = 0;
 1474              		.loc 5 71 0
 1475 0010 D361     		str	r3, [r2, #28]	@ float
 1476              	.LBE534:
 1477              	.LBE536:
 1478              	.LBE528:
  47:control.cpp   **** 	Control<ALL>::resetVPid();
  48:control.cpp   **** 	Control<X>::speedControlEnabled = enable;
 1479              		.loc 1 48 0
 1480 0012 044B     		ldr	r3, .L131+8
 1481 0014 1870     		strb	r0, [r3, #0]
  49:control.cpp   **** 	Control<Y>::speedControlEnabled = enable;
 1482              		.loc 1 49 0
 1483 0016 044B     		ldr	r3, .L131+12
 1484 0018 1870     		strb	r0, [r3, #0]
 1485 001a 7047     		bx	lr
 1486              	.L132:
 1487              		.align	2
 1488              	.L131:
 1489 001c 00000000 		.word	_ZN7ControlIL4Axis0EE5v_pidE
 1490 0020 00000000 		.word	_ZN7ControlIL4Axis2EE5v_pidE
 1491 0024 00000000 		.word	_ZN7ControlIL4Axis0EE19speedControlEnabledE
 1492 0028 00000000 		.word	_ZN7ControlIL4Axis2EE19speedControlEnabledE
 1493              		.cfi_endproc
 1494              	.LFE1014:
 1496              		.section	.text._ZN7ControlIL4Axis5EE21enablePositionControlEb,"ax",%progbits
 1497              		.align	2
 1498              		.global	_ZN7ControlIL4Axis5EE21enablePositionControlEb
 1499              		.thumb
 1500              		.thumb_func
 1502              	_ZN7ControlIL4Axis5EE21enablePositionControlEb:
 1503              	.LFB1015:
  50:control.cpp   **** }
  51:control.cpp   **** 
  52:control.cpp   **** template<>
  53:control.cpp   **** void Control<ALL>::enablePositionControl(bool enable){
 1504              		.loc 1 53 0
 1505              		.cfi_startproc
 1506              		@ args = 0, pretend = 0, frame = 0
 1507              		@ frame_needed = 0, uses_anonymous_args = 0
 1508              		@ link register save eliminated.
 1509              	.LVL92:
 1510 0000 30B4     		push	{r4, r5}
 1511              	.LCFI2:
 1512              		.cfi_def_cfa_offset 8
 1513              		.cfi_offset 4, -8
 1514              		.cfi_offset 5, -4
  54:control.cpp   **** 	if(enable){
 1515              		.loc 1 54 0
 1516 0002 B0B1     		cbz	r0, .L134
 1517              	.LVL93:
 1518              	.LBB537:
 1519              	.LBB538:
 1520              	.LBB539:
 1521              	.LBB540:
 1522              		.loc 3 197 0
 1523 0004 124B     		ldr	r3, .L138
 1524              	.LBE540:
 1525              	.LBE539:
 1526              	.LBE538:
 1527              	.LBE537:
 1528              	.LBB544:
 1529              	.LBB545:
 1530              	.LBB546:
 1531              	.LBB547:
 1532              	.LBB548:
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->errorSum = 0;
 1533              		.loc 5 69 0
 1534 0006 1349     		ldr	r1, .L138+4
 1535              	.LBE548:
 1536              	.LBE547:
 1537              	.LBE546:
 1538              	.LBE545:
 1539              	.LBE544:
 1540              	.LBB563:
 1541              	.LBB543:
 1542              	.LBB542:
 1543              	.LBB541:
 1544              		.loc 3 197 0
 1545 0008 5C6A     		ldr	r4, [r3, #36]
 1546              	.LBE541:
 1547              	.LBE542:
 1548              	.LBE543:
 1549              	.LBE563:
 1550              	.LBB564:
 1551              	.LBB565:
  62:control_impl.h **** 	}
  63:control_impl.h **** }
  64:control_impl.h **** 
  65:control_impl.h **** template<Axis axis>
  66:control_impl.h **** void Control<axis>::setShallPosition(int position){
  67:control_impl.h **** 	Control<ALL>::resetPosPid();
  68:control_impl.h **** 	Control<ALL>::resetVPid();
  69:control_impl.h **** 	pos_shall = position;
 1552              		.loc 2 69 0
 1553 000a 134B     		ldr	r3, .L138+8
 1554              	.LBE565:
 1555              	.LBE564:
 1556              	.LBB567:
 1557              	.LBB560:
 1558              	.LBB557:
 1559              	.LBB551:
 1560              	.LBB552:
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->errorSum = 0;
 1561              		.loc 5 69 0
 1562 000c 134A     		ldr	r2, .L138+12
 1563              	.LBE552:
 1564              	.LBE551:
 1565              	.LBE557:
 1566              	.LBE560:
 1567              	.LBE567:
 1568              	.LBB568:
 1569              	.LBB566:
 1570              		.loc 2 69 0
 1571 000e 1C60     		str	r4, [r3, #0]
 1572              	.LBE566:
 1573              	.LBE568:
 1574              	.LBB569:
 1575              	.LBB570:
 1576              	.LBB571:
 1577              	.LBB572:
 1578              		.loc 4 205 0
 1579 0010 4FF08044 		mov	r4, #1073741824
 1580              	.LBE572:
 1581              	.LBE571:
 1582              	.LBE570:
 1583              	.LBE569:
 1584              	.LBB576:
 1585              	.LBB561:
 1586              	.LBB558:
 1587              	.LBB554:
 1588              	.LBB549:
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->errorSum = 0;
 1589              		.loc 5 69 0
 1590 0014 0023     		movs	r3, #0
 1591              	.LBE549:
 1592              	.LBE554:
 1593              	.LBE558:
 1594              	.LBE561:
 1595              	.LBE576:
 1596              	.LBB577:
 1597              	.LBB575:
 1598              	.LBB574:
 1599              	.LBB573:
 1600              		.loc 4 205 0
 1601 0016 656A     		ldr	r5, [r4, #36]
 1602              	.LBE573:
 1603              	.LBE574:
 1604              	.LBE575:
 1605              	.LBE577:
 1606              	.LBB578:
 1607              	.LBB562:
 1608              	.LBB559:
 1609              	.LBB555:
 1610              	.LBB550:
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->errorSum = 0;
 1611              		.loc 5 69 0
 1612 0018 4B61     		str	r3, [r1, #20]	@ float
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->lastError = 0;
 1613              		.loc 5 70 0
 1614 001a 8B61     		str	r3, [r1, #24]	@ float
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->output = 0;
 1615              		.loc 5 71 0
 1616 001c CB61     		str	r3, [r1, #28]	@ float
 1617              	.LVL94:
 1618              	.LBE550:
 1619              	.LBE555:
 1620              	.LBB556:
 1621              	.LBB553:
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->errorSum = 0;
 1622              		.loc 5 69 0
 1623 001e 5361     		str	r3, [r2, #20]	@ float
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->lastError = 0;
 1624              		.loc 5 70 0
 1625 0020 9361     		str	r3, [r2, #24]	@ float
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->output = 0;
 1626              		.loc 5 71 0
 1627 0022 D361     		str	r3, [r2, #28]	@ float
 1628              	.LBE553:
 1629              	.LBE556:
 1630              	.LBE559:
  48:control.cpp   **** 	Control<X>::speedControlEnabled = enable;
 1631              		.loc 1 48 0
 1632 0024 0E4B     		ldr	r3, .L138+16
 1633 0026 0124     		movs	r4, #1
 1634 0028 1C70     		strb	r4, [r3, #0]
  49:control.cpp   **** 	Control<Y>::speedControlEnabled = enable;
 1635              		.loc 1 49 0
 1636 002a 0E4B     		ldr	r3, .L138+20
 1637 002c 1C70     		strb	r4, [r3, #0]
 1638              	.LBE562:
 1639              	.LBE578:
 1640              	.LBB579:
 1641              	.LBB580:
 1642              		.loc 2 69 0
 1643 002e 0E4B     		ldr	r3, .L138+24
 1644 0030 1D60     		str	r5, [r3, #0]
 1645              	.LVL95:
 1646              	.L134:
 1647              	.LBE580:
 1648              	.LBE579:
 1649              	.LBB581:
 1650              	.LBB582:
 1651              	.LBB583:
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->errorSum = 0;
 1652              		.loc 5 69 0
 1653 0032 0E49     		ldr	r1, .L138+28
 1654              	.LBE583:
 1655              	.LBE582:
 1656              	.LBB585:
 1657              	.LBB586:
 1658 0034 0E4A     		ldr	r2, .L138+32
 1659              	.LBE586:
 1660              	.LBE585:
 1661              	.LBE581:
  55:control.cpp   **** 		Control<ALL>::enableSpeedControl(true);
  56:control.cpp   **** 		Control<X>::setShallPosition(Control<X>::getIsPosition());
  57:control.cpp   **** 		Control<Y>::setShallPosition(Control<Y>::getIsPosition());
  58:control.cpp   **** 	}
  59:control.cpp   **** 	Control<X>::positionControlEnabled = enable;
 1662              		.loc 1 59 0
 1663 0036 0F4C     		ldr	r4, .L138+36
 1664              	.LBB590:
 1665              	.LBB588:
 1666              	.LBB584:
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->errorSum = 0;
 1667              		.loc 5 69 0
 1668 0038 0023     		movs	r3, #0
 1669 003a 4B61     		str	r3, [r1, #20]	@ float
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->lastError = 0;
 1670              		.loc 5 70 0
 1671 003c 8B61     		str	r3, [r1, #24]	@ float
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->output = 0;
 1672              		.loc 5 71 0
 1673 003e CB61     		str	r3, [r1, #28]	@ float
 1674              	.LBE584:
 1675              	.LBE588:
 1676              	.LBB589:
 1677              	.LBB587:
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->errorSum = 0;
 1678              		.loc 5 69 0
 1679 0040 5361     		str	r3, [r2, #20]	@ float
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->lastError = 0;
 1680              		.loc 5 70 0
 1681 0042 9361     		str	r3, [r2, #24]	@ float
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->output = 0;
 1682              		.loc 5 71 0
 1683 0044 D361     		str	r3, [r2, #28]	@ float
 1684              	.LBE587:
 1685              	.LBE589:
 1686              	.LBE590:
  60:control.cpp   **** 	Control<Y>::positionControlEnabled = enable;
 1687              		.loc 1 60 0
 1688 0046 0C4B     		ldr	r3, .L138+40
  59:control.cpp   **** 	Control<X>::positionControlEnabled = enable;
 1689              		.loc 1 59 0
 1690 0048 2070     		strb	r0, [r4, #0]
 1691              		.loc 1 60 0
 1692 004a 1870     		strb	r0, [r3, #0]
 1693              	.LVL96:
  61:control.cpp   **** 	Control<ALL>::resetPosPid();
  62:control.cpp   **** }
 1694              		.loc 1 62 0
 1695 004c 30BC     		pop	{r4, r5}
 1696 004e 7047     		bx	lr
 1697              	.L139:
 1698              		.align	2
 1699              	.L138:
 1700 0050 000C0040 		.word	1073744896
 1701 0054 00000000 		.word	_ZN7ControlIL4Axis0EE5v_pidE
 1702 0058 00000000 		.word	_ZN7ControlIL4Axis0EE9pos_shallE
 1703 005c 00000000 		.word	_ZN7ControlIL4Axis2EE5v_pidE
 1704 0060 00000000 		.word	_ZN7ControlIL4Axis0EE19speedControlEnabledE
 1705 0064 00000000 		.word	_ZN7ControlIL4Axis2EE19speedControlEnabledE
 1706 0068 00000000 		.word	_ZN7ControlIL4Axis2EE9pos_shallE
 1707 006c 00000000 		.word	_ZN7ControlIL4Axis0EE7pos_pidE
 1708 0070 00000000 		.word	_ZN7ControlIL4Axis2EE7pos_pidE
 1709 0074 00000000 		.word	_ZN7ControlIL4Axis0EE22positionControlEnabledE
 1710 0078 00000000 		.word	_ZN7ControlIL4Axis2EE22positionControlEnabledE
 1711              		.cfi_endproc
 1712              	.LFE1015:
 1714              		.section	.text._ZN7ControlIL4Axis5EE11setMaxSpeedEf,"ax",%progbits
 1715              		.align	2
 1716              		.global	_ZN7ControlIL4Axis5EE11setMaxSpeedEf
 1717              		.thumb
 1718              		.thumb_func
 1720              	_ZN7ControlIL4Axis5EE11setMaxSpeedEf:
 1721              	.LFB1016:
  63:control.cpp   **** 
  64:control.cpp   **** template<>
  65:control.cpp   **** void Control<ALL>::setMaxSpeed(float maxSpeed){
 1722              		.loc 1 65 0
 1723              		.cfi_startproc
 1724              		@ args = 0, pretend = 0, frame = 0
 1725              		@ frame_needed = 0, uses_anonymous_args = 0
 1726              		@ link register save eliminated.
 1727              	.LVL97:
 1728              		.loc 1 65 0
 1729 0000 07EE900A 		fmsr	s15, r0
 1730              	.LBB591:
  66:control.cpp   **** 	if(maxSpeed > 1)
 1731              		.loc 1 66 0
 1732 0004 F7EE006A 		fconsts	s13, #112
 1733 0008 F4EEE67A 		fcmpes	s15, s13
 1734 000c F1EE10FA 		fmstat
 1735 0010 0DDD     		ble	.L144
 1736 0012 9FED107A 		flds	s14, .L146
  67:control.cpp   **** 		maxSpeed = 1;
 1737              		.loc 1 67 0
 1738 0016 F0EE667A 		fcpys	s15, s13
 1739              	.L141:
 1740              	.LVL98:
 1741              	.LBB592:
 1742              	.LBB593:
 1743              		.file 9 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp"
   1:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** // coding: utf-8
   2:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** // ----------------------------------------------------------------------------
   3:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** /* Copyright (c) 2009, Roboterclub Aachen e.V.
   4:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp ****  * All rights reserved.
   5:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp ****  *
   6:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp ****  * Redistribution and use in source and binary forms, with or without
   7:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp ****  * modification, are permitted provided that the following conditions are met:
   8:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp ****  * 
   9:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp ****  *     * Redistributions of source code must retain the above copyright
  10:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp ****  *       notice, this list of conditions and the following disclaimer.
  11:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp ****  *     * Redistributions in binary form must reproduce the above copyright
  12:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp ****  *       notice, this list of conditions and the following disclaimer in the
  13:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp ****  *       documentation and/or other materials provided with the distribution.
  14:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp ****  *     * Neither the name of the Roboterclub Aachen e.V. nor the
  15:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp ****  *       names of its contributors may be used to endorse or promote products
  16:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp ****  *       derived from this software without specific prior written permission.
  17:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp ****  *
  18:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp ****  * THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
  19:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp ****  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  20:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  21:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp ****  * DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
  22:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  23:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  24:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  25:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  26:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  27:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  28:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp ****  */
  29:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** // ----------------------------------------------------------------------------
  30:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 
  31:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** #ifndef XPCC__PID_HPP
  32:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** #define XPCC__PID_HPP
  33:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** #include <cstdlib>
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** #include <cmath>
  36:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** #include <stdint.h>
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** #include <xpcc/utils/arithmetic_traits.hpp>
  39:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** namespace xpcc
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** {
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 	/**
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 	 * \brief	A proportional-integral-derivative controller (PID controller)
  44:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 	 *
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 	 * The PID controller is one of the basic controlling algorithm.
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 	 *
  47:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 	 * The \p maxErrorSum is to be used, to limit the internal integrator and so
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 	 * provide an anti wind up.
  49:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 	 *
  50:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 	 * With the template parameter \c ScaleFactor this class provides an
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 	 * fix point capability with integer types.
  52:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 	 * 
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 	 * Example for a motor speed control with a 10-bit PWM output.
  54:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 	 * \code
  55:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 	 * Pid<int16_t, 10> pid(0.4, 0.5, 0, 200, 512);
  56:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 	 * 
  57:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 	 * ...
  58:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 	 * 
  59:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 	 * v_target = ... // setpoint
  60:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 	 * v_input  = ... // input value 
  61:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 	 * 
  62:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 	 * pid.update(v_target - v_input);
  63:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 	 * pwm = pid.getValue();
  64:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 	 * \endcode
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 	 * 
  66:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 	 * \todo	use the faster avr::mul and avr::mac functions
  67:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 	 * 
  68:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 	 * \author	Fabian Greif
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 	 * \ingroup	filter
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 	 */
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 	template<typename T, unsigned int ScaleFactor = 1>
  72:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 	class Pid
  73:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 	{
  74:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 		typedef typename ArithmeticTraits<T>::WideType WideType;
  75:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 		
  76:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 	public:
  77:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 		typedef T ValueType;
  78:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 		/**
  80:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 		 * \brief	Parameter for a PID calculation
  81:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 		 */
  82:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 		struct Parameter
  83:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 		{
  84:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 			/// \todo	description why we use float here!
  85:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 			/// \todo	calculate maxErrorSum from the parameters
  86:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 			Parameter(const float& kp = 0, const float& ki = 0, const float& kd = 0,
  87:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 					  const T& maxErrorSum = 0, const T& maxOutput = 0);
  88:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 			
  89:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 			inline void
  90:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 			setKp(float kp) {
  91:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 				this->kp = static_cast<T>(kp * ScaleFactor);
  92:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 			}
  93:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 			
  94:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 			inline void
  95:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 			setKi(float ki) {
  96:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 				this->ki = static_cast<T>(ki * ScaleFactor);
  97:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 			}
  98:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 			
  99:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 			inline void
 100:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 			setKd(float kd) {
 101:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 				this->kd = static_cast<T>(kd * ScaleFactor);
 102:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 			}
 103:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 			
 104:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 			inline void
 105:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 			setMaxErrorSum(float maxErrorSum) {
 106:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 				this->maxErrorSum = static_cast<T>(maxErrorSum * ScaleFactor);
 107:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 			}
 108:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 			
 109:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 		public:
 110:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 			T kp;		///< Proportional gain multiplied with ScaleFactor
 111:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 			T ki;		///< Integral gain multiplied with ScaleFactor
 112:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 			T kd;		///< Differential gain multiplied with ScaleFactor
 113:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 			
 114:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 			T maxErrorSum;	///< integral will be limited to this value
 115:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 			T maxOutput;	///< output will be limited to this value
 116:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 			
 117:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 			friend class Pid;
 118:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 		};
 119:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 		
 120:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 	public:
 121:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 		/**
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 		 * \param	kp	proportional gain
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 		 * \param	ki	integral gain
 124:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 		 * \param	kd	differential gain
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 		 * \param	maxErrorSum	integral will be limited to this value
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 		 * \param	maxOutput	output will be limited to this value
 127:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 		 **/
 128:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 		Pid(const float& kp = 0, const float& ki = 0, const float& kd = 0,
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 				const T& maxErrorSum = 0, const T& maxOutput = 0);
 130:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 		
 131:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 		/**
 132:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 		 * \param	parameter	list of parameters to the controller
 133:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 		 **/
 134:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 		Pid(Parameter& parameter);
 135:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 		
 136:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 		/**
 137:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 		 * Reset the parameters of the controller.
 138:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 		 *
 139:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 		 * \param	parameter	list of parameters to the controller
 140:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 		 **/
 141:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 		void
 142:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 		setParameter(const Parameter& parameter);
 143:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 		
 144:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 		inline const Parameter&
 145:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 		getParameter(){
 146:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 			return this->parameter;
 147:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 		}
 148:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 
 149:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 		/**
 150:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 		 *
 151:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 		 */
 152:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 		inline void
 153:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 		setMaxOutput(T maxOutput){
 154:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid.hpp **** 			this->parameter.maxOutput = maxOutput;
 1744              		.loc 9 154 0
 1745 001a 0F4B     		ldr	r3, .L146+4
 1746 001c 83ED047A 		fsts	s14, [r3, #16]
 1747              	.LVL99:
 1748              	.LBE593:
 1749              	.LBE592:
 1750              	.LBB594:
 1751              	.LBB595:
 1752 0020 0E4B     		ldr	r3, .L146+8
 1753 0022 83ED047A 		fsts	s14, [r3, #16]
 1754              	.LBE595:
 1755              	.LBE594:
  68:control.cpp   **** 	if(maxSpeed < 0)
  69:control.cpp   **** 		maxSpeed = 0;
  70:control.cpp   **** 	int speed = MOTOR_MAX_SPEED*maxSpeed;
  71:control.cpp   **** 	Control<X>::pos_pid.setMaxOutput(speed);
  72:control.cpp   **** 	Control<Y>::pos_pid.setMaxOutput(speed);
  73:control.cpp   **** 	Control<ALL>::maxSpeed = maxSpeed;
 1756              		.loc 1 73 0
 1757 0026 0E4B     		ldr	r3, .L146+12
 1758 0028 C3ED007A 		fsts	s15, [r3, #0]
 1759 002c 7047     		bx	lr
 1760              	.LVL100:
 1761              	.L144:
  68:control.cpp   **** 	if(maxSpeed < 0)
 1762              		.loc 1 68 0
 1763 002e F5EEC07A 		fcmpezs	s15
 1764 0032 F1EE10FA 		fmstat
 1765 0036 04D5     		bpl	.L145
 1766 0038 9FED0A7A 		flds	s14, .L146+16
  69:control.cpp   **** 		maxSpeed = 0;
 1767              		.loc 1 69 0
 1768 003c F0EE477A 		fcpys	s15, s14
 1769 0040 EBE7     		b	.L141
 1770              	.L145:
 1771 0042 9FED047A 		flds	s14, .L146
 1772 0046 27EE877A 		fmuls	s14, s15, s14
 1773 004a BDEEC77A 		ftosizs	s14, s14
 1774 004e B8EEC77A 		fsitos	s14, s14
 1775 0052 E2E7     		b	.L141
 1776              	.L147:
 1777              		.align	2
 1778              	.L146:
 1779 0054 00683F47 		.word	1195337728
 1780 0058 00000000 		.word	_ZN7ControlIL4Axis0EE7pos_pidE
 1781 005c 00000000 		.word	_ZN7ControlIL4Axis2EE7pos_pidE
 1782 0060 00000000 		.word	.LANCHOR0
 1783 0064 00000000 		.word	0
 1784              	.LBE591:
 1785              		.cfi_endproc
 1786              	.LFE1016:
 1788              		.section	.text.startup._GLOBAL__sub_I__ZN7ControlIL4Axis5EE8maxSpeedE,"ax",%progbits
 1789              		.align	2
 1790              		.thumb
 1791              		.thumb_func
 1793              	_GLOBAL__sub_I__ZN7ControlIL4Axis5EE8maxSpeedE:
 1794              	.LFB1074:
  74:control.cpp   **** }
 1795              		.loc 1 74 0
 1796              		.cfi_startproc
 1797              		@ args = 0, pretend = 0, frame = 0
 1798              		@ frame_needed = 0, uses_anonymous_args = 0
 1799              		@ link register save eliminated.
 1800              	.LVL101:
 1801              	.LBB618:
 1802              	.LBB619:
 1803              		.file 10 "control.h"
   1:control.h     **** /*
   2:control.h     ****  * control.h
   3:control.h     ****  *
   4:control.h     ****  *  Created on: Nov 24, 2013
   5:control.h     ****  *      Author: jonas
   6:control.h     ****  */
   7:control.h     **** 
   8:control.h     **** #ifndef CONTROL_H_
   9:control.h     **** #define CONTROL_H_
  10:control.h     **** 
  11:control.h     **** #include "project.h"
  12:control.h     **** #include <xpcc/math/filter/pid.hpp>
  13:control.h     **** 
  14:control.h     **** 
  15:control.h     **** template<Axis axis>
  16:control.h     **** class Control{
  17:control.h     **** 
  18:control.h     **** 	friend class Control<ALL>;
  19:control.h     **** 
  20:control.h     **** private:
  21:control.h     **** 	static volatile int pos_shall;
  22:control.h     **** 	static volatile int v_is; // velocity in pulses/s
  23:control.h     **** 	static volatile int v_shall;
  24:control.h     **** 
  25:control.h     **** 	static float maxSpeed;
  26:control.h     **** 	static xpcc::Pid<float, 1> v_pid;
  27:control.h     **** 	static xpcc::Pid<float, 1> pos_pid;
  28:control.h     **** 	static int v_u; // speed controller output
  29:control.h     **** 	static int v_ureal;
  30:control.h     **** 	static int last_pos; //position when the last control loop was executed
  31:control.h     **** 
  32:control.h     **** 	static bool positionControlEnabled;
  33:control.h     **** 	static bool speedControlEnabled;
  34:control.h     **** 
  35:control.h     **** public:
  36:control.h     **** 
  37:control.h     **** 	static bool init();
  38:control.h     **** 	static void enablePositionControl(bool enable);
  39:control.h     **** 	static void enableSpeedControl(bool enable);
  40:control.h     **** 	static void setShallPosition(int x);
  41:control.h     **** 	/**
  42:control.h     **** 	 * Also disables the position controller
  43:control.h     **** 	 * @param speed [-1,1]
  44:control.h     **** 	 */
  45:control.h     **** 	static void setShallSpeed(double speed);
  46:control.h     **** 	static int getSpeedErrorSum();
  47:control.h     **** 	static int getPositionErrorSum();
  48:control.h     **** 	static int32_t getIsPosition();
  49:control.h     **** 	static inline int getShallSpeed(){ return v_shall; }
  50:control.h     **** 	static inline int getIsSpeed(){ return v_is; }
  51:control.h     **** 	static inline int getShallPosition(){ return pos_shall; }
  52:control.h     **** 	static inline int getSpeedU(){ return v_u; }
  53:control.h     **** 	static inline int getSpeedRealU(){ return v_ureal; }
  54:control.h     **** 	static inline int getPosU(){ return v_shall; } //only valid if position controller is active
  55:control.h     **** 	static const xpcc::Pid<float,1>::Parameter& getVPidParams(){ return v_pid.getParameter(); }
  56:control.h     **** 	static const xpcc::Pid<float,1>::Parameter& getPosPidParams(){ return pos_pid.getParameter(); }
  57:control.h     **** 	static bool isPositionControlEnabled(){ return positionControlEnabled; }
  58:control.h     **** 	static bool isSpeedControlEnabled(){ return speedControlEnabled; }
  59:control.h     **** 	static void resetVPid();
  60:control.h     **** 	static void resetPosPid();
  61:control.h     **** 	static float getMaxSpeed(){ return maxSpeed; }
  62:control.h     **** 	/**
  63:control.h     **** 	 * [0, 1]
  64:control.h     **** 	 * Limits the output of the position controller
  65:control.h     **** 	 */
  66:control.h     **** 	static void setMaxSpeed(float maxSpeed);
  67:control.h     **** 
  68:control.h     **** 	/**
  69:control.h     **** 	 * To be called periodically (1kHz)
  70:control.h     **** 	 * Computes new ouput values for the H-bridge
  71:control.h     **** 	 */
  72:control.h     **** 	static void update(bool externalLimitation);
  73:control.h     **** 
  74:control.h     **** };
  75:control.h     **** 
  76:control.h     **** template<Axis axis> volatile int Control<axis>::pos_shall;
  77:control.h     **** template<Axis axis> volatile int Control<axis>::v_is;
  78:control.h     **** template<Axis axis> volatile int Control<axis>::v_shall;
  79:control.h     **** template<Axis axis> int Control<axis>::v_u;
  80:control.h     **** template<Axis axis> int Control<axis>::v_ureal;
  81:control.h     **** template<Axis axis> float Control<axis>::maxSpeed;
  82:control.h     **** 
  83:control.h     **** template<Axis axis> bool Control<axis>::positionControlEnabled;
  84:control.h     **** template<Axis axis> bool Control<axis>::speedControlEnabled;
  85:control.h     **** 
  86:control.h     **** template<Axis axis> xpcc::Pid<float, 1> Control<axis>::v_pid;
 1804              		.loc 10 86 0
 1805 0000 2049     		ldr	r1, .L153
 1806 0002 0B68     		ldr	r3, [r1, #0]
 1807 0004 DB07     		lsls	r3, r3, #31
 1808 0006 0BD4     		bmi	.L149
 1809              	.LBB620:
 1810              	.LBB621:
 1811              	.LBB622:
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	maxOutput(maxOutput)
 1812              		.loc 5 42 0
 1813 0008 1F4B     		ldr	r3, .L153+4
 1814 000a 0022     		movs	r2, #0
 1815 000c 1A60     		str	r2, [r3, #0]	@ float
 1816 000e 5A60     		str	r2, [r3, #4]	@ float
 1817 0010 9A60     		str	r2, [r3, #8]	@ float
 1818 0012 DA60     		str	r2, [r3, #12]	@ float
 1819 0014 1A61     		str	r2, [r3, #16]	@ float
 1820              	.LBE622:
 1821              	.LBE621:
 1822              	.LBB623:
 1823              	.LBB624:
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->errorSum = 0;
 1824              		.loc 5 69 0
 1825 0016 5A61     		str	r2, [r3, #20]	@ float
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->lastError = 0;
 1826              		.loc 5 70 0
 1827 0018 9A61     		str	r2, [r3, #24]	@ float
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->output = 0;
 1828              		.loc 5 71 0
 1829 001a DA61     		str	r2, [r3, #28]	@ float
 1830              	.LBE624:
 1831              	.LBE623:
 1832              	.LBE620:
 1833              		.loc 10 86 0
 1834 001c 0123     		movs	r3, #1
 1835 001e 0B60     		str	r3, [r1, #0]
 1836              	.LVL102:
 1837              	.L149:
 1838 0020 1A49     		ldr	r1, .L153+8
 1839 0022 0B68     		ldr	r3, [r1, #0]
 1840 0024 D807     		lsls	r0, r3, #31
 1841 0026 0BD4     		bmi	.L150
 1842              	.LBB625:
 1843              	.LBB626:
 1844              	.LBB627:
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	maxOutput(maxOutput)
 1845              		.loc 5 42 0
 1846 0028 194B     		ldr	r3, .L153+12
 1847 002a 0022     		movs	r2, #0
 1848 002c 1A60     		str	r2, [r3, #0]	@ float
 1849 002e 5A60     		str	r2, [r3, #4]	@ float
 1850 0030 9A60     		str	r2, [r3, #8]	@ float
 1851 0032 DA60     		str	r2, [r3, #12]	@ float
 1852 0034 1A61     		str	r2, [r3, #16]	@ float
 1853              	.LBE627:
 1854              	.LBE626:
 1855              	.LBB628:
 1856              	.LBB629:
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->errorSum = 0;
 1857              		.loc 5 69 0
 1858 0036 5A61     		str	r2, [r3, #20]	@ float
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->lastError = 0;
 1859              		.loc 5 70 0
 1860 0038 9A61     		str	r2, [r3, #24]	@ float
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->output = 0;
 1861              		.loc 5 71 0
 1862 003a DA61     		str	r2, [r3, #28]	@ float
 1863              	.LBE629:
 1864              	.LBE628:
 1865              	.LBE625:
 1866              		.loc 10 86 0
 1867 003c 0123     		movs	r3, #1
 1868 003e 0B60     		str	r3, [r1, #0]
 1869              	.LVL103:
 1870              	.L150:
  87:control.h     **** template<Axis axis> xpcc::Pid<float, 1> Control<axis>::pos_pid;
 1871              		.loc 10 87 0
 1872 0040 1449     		ldr	r1, .L153+16
 1873 0042 0B68     		ldr	r3, [r1, #0]
 1874 0044 DA07     		lsls	r2, r3, #31
 1875 0046 0BD4     		bmi	.L151
 1876              	.LBB630:
 1877              	.LBB631:
 1878              	.LBB632:
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	maxOutput(maxOutput)
 1879              		.loc 5 42 0
 1880 0048 134B     		ldr	r3, .L153+20
 1881 004a 0022     		movs	r2, #0
 1882 004c 1A60     		str	r2, [r3, #0]	@ float
 1883 004e 5A60     		str	r2, [r3, #4]	@ float
 1884 0050 9A60     		str	r2, [r3, #8]	@ float
 1885 0052 DA60     		str	r2, [r3, #12]	@ float
 1886 0054 1A61     		str	r2, [r3, #16]	@ float
 1887              	.LBE632:
 1888              	.LBE631:
 1889              	.LBB633:
 1890              	.LBB634:
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->errorSum = 0;
 1891              		.loc 5 69 0
 1892 0056 5A61     		str	r2, [r3, #20]	@ float
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->lastError = 0;
 1893              		.loc 5 70 0
 1894 0058 9A61     		str	r2, [r3, #24]	@ float
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->output = 0;
 1895              		.loc 5 71 0
 1896 005a DA61     		str	r2, [r3, #28]	@ float
 1897              	.LBE634:
 1898              	.LBE633:
 1899              	.LBE630:
 1900              		.loc 10 87 0
 1901 005c 0123     		movs	r3, #1
 1902 005e 0B60     		str	r3, [r1, #0]
 1903              	.LVL104:
 1904              	.L151:
 1905 0060 0E49     		ldr	r1, .L153+24
 1906 0062 0B68     		ldr	r3, [r1, #0]
 1907 0064 DB07     		lsls	r3, r3, #31
 1908 0066 0BD4     		bmi	.L148
 1909              	.LBB635:
 1910              	.LBB636:
 1911              	.LBB637:
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	maxOutput(maxOutput)
 1912              		.loc 5 42 0
 1913 0068 0D4B     		ldr	r3, .L153+28
 1914 006a 0022     		movs	r2, #0
 1915 006c 1A60     		str	r2, [r3, #0]	@ float
 1916 006e 5A60     		str	r2, [r3, #4]	@ float
 1917 0070 9A60     		str	r2, [r3, #8]	@ float
 1918 0072 DA60     		str	r2, [r3, #12]	@ float
 1919 0074 1A61     		str	r2, [r3, #16]	@ float
 1920              	.LBE637:
 1921              	.LBE636:
 1922              	.LBB638:
 1923              	.LBB639:
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->errorSum = 0;
 1924              		.loc 5 69 0
 1925 0076 5A61     		str	r2, [r3, #20]	@ float
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->lastError = 0;
 1926              		.loc 5 70 0
 1927 0078 9A61     		str	r2, [r3, #24]	@ float
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/math/filter/pid_impl.hpp **** 	this->output = 0;
 1928              		.loc 5 71 0
 1929 007a DA61     		str	r2, [r3, #28]	@ float
 1930              	.LBE639:
 1931              	.LBE638:
 1932              	.LBE635:
 1933              		.loc 10 87 0
 1934 007c 0123     		movs	r3, #1
 1935 007e 0B60     		str	r3, [r1, #0]
 1936              	.LVL105:
 1937              	.L148:
 1938 0080 7047     		bx	lr
 1939              	.L154:
 1940 0082 00BF     		.align	2
 1941              	.L153:
 1942 0084 00000000 		.word	_ZGVN7ControlIL4Axis0EE5v_pidE
 1943 0088 00000000 		.word	_ZN7ControlIL4Axis0EE5v_pidE
 1944 008c 00000000 		.word	_ZGVN7ControlIL4Axis2EE5v_pidE
 1945 0090 00000000 		.word	_ZN7ControlIL4Axis2EE5v_pidE
 1946 0094 00000000 		.word	_ZGVN7ControlIL4Axis0EE7pos_pidE
 1947 0098 00000000 		.word	_ZN7ControlIL4Axis0EE7pos_pidE
 1948 009c 00000000 		.word	_ZGVN7ControlIL4Axis2EE7pos_pidE
 1949 00a0 00000000 		.word	_ZN7ControlIL4Axis2EE7pos_pidE
 1950              	.LBE619:
 1951              	.LBE618:
 1952              		.cfi_endproc
 1953              	.LFE1074:
 1955              		.section	.init_array,"aw",%init_array
 1956              		.align	2
 1957 0000 00000000 		.word	_GLOBAL__sub_I__ZN7ControlIL4Axis5EE8maxSpeedE(target1)
 1958              		.weak	_ZN7ControlIL4Axis2EE7v_shallE
 1959              		.section	.bss._ZN7ControlIL4Axis2EE7v_shallE,"awG",%nobits,_ZN7ControlIL4Axis2EE7v_shallE,comdat
 1960              		.align	2
 1963              	_ZN7ControlIL4Axis2EE7v_shallE:
 1964 0000 00000000 		.space	4
 1965              		.weak	_ZN7ControlIL4Axis2EE4v_isE
 1966              		.section	.bss._ZN7ControlIL4Axis2EE4v_isE,"awG",%nobits,_ZN7ControlIL4Axis2EE4v_isE,comdat
 1967              		.align	2
 1970              	_ZN7ControlIL4Axis2EE4v_isE:
 1971 0000 00000000 		.space	4
 1972              		.weak	_ZN7ControlIL4Axis2EE9pos_shallE
 1973              		.section	.bss._ZN7ControlIL4Axis2EE9pos_shallE,"awG",%nobits,_ZN7ControlIL4Axis2EE9pos_shallE,comd
 1974              		.align	2
 1977              	_ZN7ControlIL4Axis2EE9pos_shallE:
 1978 0000 00000000 		.space	4
 1979              		.weak	_ZN7ControlIL4Axis0EE7v_shallE
 1980              		.section	.bss._ZN7ControlIL4Axis0EE7v_shallE,"awG",%nobits,_ZN7ControlIL4Axis0EE7v_shallE,comdat
 1981              		.align	2
 1984              	_ZN7ControlIL4Axis0EE7v_shallE:
 1985 0000 00000000 		.space	4
 1986              		.weak	_ZN7ControlIL4Axis0EE4v_isE
 1987              		.section	.bss._ZN7ControlIL4Axis0EE4v_isE,"awG",%nobits,_ZN7ControlIL4Axis0EE4v_isE,comdat
 1988              		.align	2
 1991              	_ZN7ControlIL4Axis0EE4v_isE:
 1992 0000 00000000 		.space	4
 1993              		.weak	_ZN7ControlIL4Axis0EE9pos_shallE
 1994              		.section	.bss._ZN7ControlIL4Axis0EE9pos_shallE,"awG",%nobits,_ZN7ControlIL4Axis0EE9pos_shallE,comd
 1995              		.align	2
 1998              	_ZN7ControlIL4Axis0EE9pos_shallE:
 1999 0000 00000000 		.space	4
 2000              		.global	_ZN7ControlIL4Axis5EE8maxSpeedE
 2001              		.weak	_ZN7ControlIL4Axis0EE8last_posE
 2002              		.section	.bss._ZN7ControlIL4Axis0EE8last_posE,"awG",%nobits,_ZN7ControlIL4Axis0EE8last_posE,comdat
 2003              		.align	2
 2006              	_ZN7ControlIL4Axis0EE8last_posE:
 2007 0000 00000000 		.space	4
 2008              		.weak	_ZN7ControlIL4Axis0EE22positionControlEnabledE
 2009              		.section	.bss._ZN7ControlIL4Axis0EE22positionControlEnabledE,"awG",%nobits,_ZN7ControlIL4Axis0EE22
 2012              	_ZN7ControlIL4Axis0EE22positionControlEnabledE:
 2013 0000 00       		.space	1
 2014              		.weak	_ZN7ControlIL4Axis0EE19speedControlEnabledE
 2015              		.section	.bss._ZN7ControlIL4Axis0EE19speedControlEnabledE,"awG",%nobits,_ZN7ControlIL4Axis0EE19spe
 2018              	_ZN7ControlIL4Axis0EE19speedControlEnabledE:
 2019 0000 00       		.space	1
 2020              		.weak	_ZN7ControlIL4Axis0EE7pos_pidE
 2021              		.section	.bss._ZN7ControlIL4Axis0EE7pos_pidE,"awG",%nobits,_ZN7ControlIL4Axis0EE7pos_pidE,comdat
 2022              		.align	2
 2025              	_ZN7ControlIL4Axis0EE7pos_pidE:
 2026 0000 00000000 		.space	32
 2026      00000000 
 2026      00000000 
 2026      00000000 
 2026      00000000 
 2027              		.weak	_ZN7ControlIL4Axis0EE5v_pidE
 2028              		.section	.bss._ZN7ControlIL4Axis0EE5v_pidE,"awG",%nobits,_ZN7ControlIL4Axis0EE5v_pidE,comdat
 2029              		.align	2
 2032              	_ZN7ControlIL4Axis0EE5v_pidE:
 2033 0000 00000000 		.space	32
 2033      00000000 
 2033      00000000 
 2033      00000000 
 2033      00000000 
 2034              		.weak	_ZN7ControlIL4Axis2EE8last_posE
 2035              		.section	.bss._ZN7ControlIL4Axis2EE8last_posE,"awG",%nobits,_ZN7ControlIL4Axis2EE8last_posE,comdat
 2036              		.align	2
 2039              	_ZN7ControlIL4Axis2EE8last_posE:
 2040 0000 00000000 		.space	4
 2041              		.weak	_ZN7ControlIL4Axis2EE22positionControlEnabledE
 2042              		.section	.bss._ZN7ControlIL4Axis2EE22positionControlEnabledE,"awG",%nobits,_ZN7ControlIL4Axis2EE22
 2045              	_ZN7ControlIL4Axis2EE22positionControlEnabledE:
 2046 0000 00       		.space	1
 2047              		.weak	_ZN7ControlIL4Axis2EE19speedControlEnabledE
 2048              		.section	.bss._ZN7ControlIL4Axis2EE19speedControlEnabledE,"awG",%nobits,_ZN7ControlIL4Axis2EE19spe
 2051              	_ZN7ControlIL4Axis2EE19speedControlEnabledE:
 2052 0000 00       		.space	1
 2053              		.weak	_ZN7ControlIL4Axis2EE7pos_pidE
 2054              		.section	.bss._ZN7ControlIL4Axis2EE7pos_pidE,"awG",%nobits,_ZN7ControlIL4Axis2EE7pos_pidE,comdat
 2055              		.align	2
 2058              	_ZN7ControlIL4Axis2EE7pos_pidE:
 2059 0000 00000000 		.space	32
 2059      00000000 
 2059      00000000 
 2059      00000000 
 2059      00000000 
 2060              		.weak	_ZN7ControlIL4Axis2EE5v_pidE
 2061              		.section	.bss._ZN7ControlIL4Axis2EE5v_pidE,"awG",%nobits,_ZN7ControlIL4Axis2EE5v_pidE,comdat
 2062              		.align	2
 2065              	_ZN7ControlIL4Axis2EE5v_pidE:
 2066 0000 00000000 		.space	32
 2066      00000000 
 2066      00000000 
 2066      00000000 
 2066      00000000 
 2067              		.weak	_ZN7ControlIL4Axis0EE3v_uE
 2068              		.section	.bss._ZN7ControlIL4Axis0EE3v_uE,"awG",%nobits,_ZN7ControlIL4Axis0EE3v_uE,comdat
 2069              		.align	2
 2072              	_ZN7ControlIL4Axis0EE3v_uE:
 2073 0000 00000000 		.space	4
 2074              		.weak	_ZN7ControlIL4Axis0EE7v_urealE
 2075              		.section	.bss._ZN7ControlIL4Axis0EE7v_urealE,"awG",%nobits,_ZN7ControlIL4Axis0EE7v_urealE,comdat
 2076              		.align	2
 2079              	_ZN7ControlIL4Axis0EE7v_urealE:
 2080 0000 00000000 		.space	4
 2081              		.weak	_ZN7ControlIL4Axis2EE3v_uE
 2082              		.section	.bss._ZN7ControlIL4Axis2EE3v_uE,"awG",%nobits,_ZN7ControlIL4Axis2EE3v_uE,comdat
 2083              		.align	2
 2086              	_ZN7ControlIL4Axis2EE3v_uE:
 2087 0000 00000000 		.space	4
 2088              		.weak	_ZN7ControlIL4Axis2EE7v_urealE
 2089              		.section	.bss._ZN7ControlIL4Axis2EE7v_urealE,"awG",%nobits,_ZN7ControlIL4Axis2EE7v_urealE,comdat
 2090              		.align	2
 2093              	_ZN7ControlIL4Axis2EE7v_urealE:
 2094 0000 00000000 		.space	4
 2095              		.weak	_ZGVN7ControlIL4Axis0EE5v_pidE
 2096              		.section	.bss._ZGVN7ControlIL4Axis0EE5v_pidE,"awG",%nobits,_ZGVN7ControlIL4Axis0EE5v_pidE,comdat
 2097              		.align	2
 2100              	_ZGVN7ControlIL4Axis0EE5v_pidE:
 2101 0000 00000000 		.space	4
 2102              		.weak	_ZGVN7ControlIL4Axis2EE5v_pidE
 2103              		.section	.bss._ZGVN7ControlIL4Axis2EE5v_pidE,"awG",%nobits,_ZGVN7ControlIL4Axis2EE5v_pidE,comdat
 2104              		.align	2
 2107              	_ZGVN7ControlIL4Axis2EE5v_pidE:
 2108 0000 00000000 		.space	4
 2109              		.weak	_ZGVN7ControlIL4Axis0EE7pos_pidE
 2110              		.section	.bss._ZGVN7ControlIL4Axis0EE7pos_pidE,"awG",%nobits,_ZGVN7ControlIL4Axis0EE7pos_pidE,comd
 2111              		.align	2
 2114              	_ZGVN7ControlIL4Axis0EE7pos_pidE:
 2115 0000 00000000 		.space	4
 2116              		.weak	_ZGVN7ControlIL4Axis2EE7pos_pidE
 2117              		.section	.bss._ZGVN7ControlIL4Axis2EE7pos_pidE,"awG",%nobits,_ZGVN7ControlIL4Axis2EE7pos_pidE,comd
 2118              		.align	2
 2121              	_ZGVN7ControlIL4Axis2EE7pos_pidE:
 2122 0000 00000000 		.space	4
 2123              		.section	.data._ZN7ControlIL4Axis5EE8maxSpeedE,"aw",%progbits
 2124              		.align	2
 2125              		.set	.LANCHOR0,. + 0
 2128              	_ZN7ControlIL4Axis5EE8maxSpeedE:
 2129 0000 0000803F 		.word	1065353216
 2130              		.text
 2131              	.Letext0:
 2132              		.file 11 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/st
 2133              		.file 12 "/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Device/ST/STM32F4xx/Incl
 2134              		.file 13 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/c
 2135              		.file 14 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/gpio.hpp"
 2136              		.file 15 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/f
 2137              		.file 16 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/connectivity/i2c/constants.hpp"
 2138              		.file 17 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/atomic.hpp"
 2139              		.file 18 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/connectivity/can/message.hpp"
 2140              		.file 19 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/template_metaprogramming.hpp"
 2141              		.file 20 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/arithmetic_traits.hpp"
 2142              		.file 21 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp"
 2143              		.file 22 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/include/stddef.h"
 2144              		.file 23 "<built-in>"
 2145              		.file 24 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c+
 2146              		.file 25 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c+
 2147              		.file 26 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/st
 2148              		.file 27 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/st
 2149              		.file 28 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c+
 2150              		.file 29 "/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h"
 2151              		.file 30 "project.h"
DEFINED SYMBOLS
                            *ABS*:00000000 control.cpp
     /tmp/ccJh8wEn.s:20     .text._ZN7ControlIL4Axis5EE4initEv:00000000 $t
     /tmp/ccJh8wEn.s:25     .text._ZN7ControlIL4Axis5EE4initEv:00000000 _ZN7ControlIL4Axis5EE4initEv
     /tmp/ccJh8wEn.s:195    .text._ZN7ControlIL4Axis5EE4initEv:000000d4 $d
     /tmp/ccJh8wEn.s:2032   .bss._ZN7ControlIL4Axis0EE5v_pidE:00000000 _ZN7ControlIL4Axis0EE5v_pidE
     /tmp/ccJh8wEn.s:1963   .bss._ZN7ControlIL4Axis2EE7v_shallE:00000000 _ZN7ControlIL4Axis2EE7v_shallE
     /tmp/ccJh8wEn.s:2039   .bss._ZN7ControlIL4Axis2EE8last_posE:00000000 _ZN7ControlIL4Axis2EE8last_posE
     /tmp/ccJh8wEn.s:2025   .bss._ZN7ControlIL4Axis0EE7pos_pidE:00000000 _ZN7ControlIL4Axis0EE7pos_pidE
     /tmp/ccJh8wEn.s:2045   .bss._ZN7ControlIL4Axis2EE22positionControlEnabledE:00000000 _ZN7ControlIL4Axis2EE22positionControlEnabledE
     /tmp/ccJh8wEn.s:2058   .bss._ZN7ControlIL4Axis2EE7pos_pidE:00000000 _ZN7ControlIL4Axis2EE7pos_pidE
     /tmp/ccJh8wEn.s:2065   .bss._ZN7ControlIL4Axis2EE5v_pidE:00000000 _ZN7ControlIL4Axis2EE5v_pidE
     /tmp/ccJh8wEn.s:2051   .bss._ZN7ControlIL4Axis2EE19speedControlEnabledE:00000000 _ZN7ControlIL4Axis2EE19speedControlEnabledE
     /tmp/ccJh8wEn.s:1991   .bss._ZN7ControlIL4Axis0EE4v_isE:00000000 _ZN7ControlIL4Axis0EE4v_isE
     /tmp/ccJh8wEn.s:2006   .bss._ZN7ControlIL4Axis0EE8last_posE:00000000 _ZN7ControlIL4Axis0EE8last_posE
     /tmp/ccJh8wEn.s:1984   .bss._ZN7ControlIL4Axis0EE7v_shallE:00000000 _ZN7ControlIL4Axis0EE7v_shallE
     /tmp/ccJh8wEn.s:2012   .bss._ZN7ControlIL4Axis0EE22positionControlEnabledE:00000000 _ZN7ControlIL4Axis0EE22positionControlEnabledE
     /tmp/ccJh8wEn.s:1970   .bss._ZN7ControlIL4Axis2EE4v_isE:00000000 _ZN7ControlIL4Axis2EE4v_isE
     /tmp/ccJh8wEn.s:2018   .bss._ZN7ControlIL4Axis0EE19speedControlEnabledE:00000000 _ZN7ControlIL4Axis0EE19speedControlEnabledE
     /tmp/ccJh8wEn.s:220    .text._ZN7ControlIL4Axis5EE6updateEb:00000000 $t
     /tmp/ccJh8wEn.s:225    .text._ZN7ControlIL4Axis5EE6updateEb:00000000 _ZN7ControlIL4Axis5EE6updateEb
     /tmp/ccJh8wEn.s:888    .text._ZN7ControlIL4Axis5EE6updateEb:000002c8 $d
     /tmp/ccJh8wEn.s:2079   .bss._ZN7ControlIL4Axis0EE7v_urealE:00000000 _ZN7ControlIL4Axis0EE7v_urealE
     /tmp/ccJh8wEn.s:1998   .bss._ZN7ControlIL4Axis0EE9pos_shallE:00000000 _ZN7ControlIL4Axis0EE9pos_shallE
     /tmp/ccJh8wEn.s:2093   .bss._ZN7ControlIL4Axis2EE7v_urealE:00000000 _ZN7ControlIL4Axis2EE7v_urealE
     /tmp/ccJh8wEn.s:1977   .bss._ZN7ControlIL4Axis2EE9pos_shallE:00000000 _ZN7ControlIL4Axis2EE9pos_shallE
     /tmp/ccJh8wEn.s:2072   .bss._ZN7ControlIL4Axis0EE3v_uE:00000000 _ZN7ControlIL4Axis0EE3v_uE
     /tmp/ccJh8wEn.s:2086   .bss._ZN7ControlIL4Axis2EE3v_uE:00000000 _ZN7ControlIL4Axis2EE3v_uE
     /tmp/ccJh8wEn.s:922    .text._ZN7ControlIL4Axis5EE6updateEb:0000032c $t
     /tmp/ccJh8wEn.s:1254   .text._ZN7ControlIL4Axis5EE6updateEb:00000488 $d
     /tmp/ccJh8wEn.s:1268   .text._ZN7ControlIL4Axis2EE13getIsPositionEv:00000000 $t
     /tmp/ccJh8wEn.s:1273   .text._ZN7ControlIL4Axis2EE13getIsPositionEv:00000000 _ZN7ControlIL4Axis2EE13getIsPositionEv
     /tmp/ccJh8wEn.s:1293   .text._ZN7ControlIL4Axis0EE13getIsPositionEv:00000000 $t
     /tmp/ccJh8wEn.s:1298   .text._ZN7ControlIL4Axis0EE13getIsPositionEv:00000000 _ZN7ControlIL4Axis0EE13getIsPositionEv
     /tmp/ccJh8wEn.s:1317   .text._ZN7ControlIL4Axis0EE13getIsPositionEv:00000008 $d
     /tmp/ccJh8wEn.s:1322   .text._ZN7ControlIL4Axis5EE9resetVPidEv:00000000 $t
     /tmp/ccJh8wEn.s:1327   .text._ZN7ControlIL4Axis5EE9resetVPidEv:00000000 _ZN7ControlIL4Axis5EE9resetVPidEv
     /tmp/ccJh8wEn.s:1369   .text._ZN7ControlIL4Axis5EE9resetVPidEv:00000014 $d
     /tmp/ccJh8wEn.s:1377   .text._ZN7ControlIL4Axis5EE11resetPosPidEv:00000000 $t
     /tmp/ccJh8wEn.s:1382   .text._ZN7ControlIL4Axis5EE11resetPosPidEv:00000000 _ZN7ControlIL4Axis5EE11resetPosPidEv
     /tmp/ccJh8wEn.s:1424   .text._ZN7ControlIL4Axis5EE11resetPosPidEv:00000014 $d
     /tmp/ccJh8wEn.s:1432   .text._ZN7ControlIL4Axis5EE18enableSpeedControlEb:00000000 $t
     /tmp/ccJh8wEn.s:1437   .text._ZN7ControlIL4Axis5EE18enableSpeedControlEb:00000000 _ZN7ControlIL4Axis5EE18enableSpeedControlEb
     /tmp/ccJh8wEn.s:1489   .text._ZN7ControlIL4Axis5EE18enableSpeedControlEb:0000001c $d
     /tmp/ccJh8wEn.s:1497   .text._ZN7ControlIL4Axis5EE21enablePositionControlEb:00000000 $t
     /tmp/ccJh8wEn.s:1502   .text._ZN7ControlIL4Axis5EE21enablePositionControlEb:00000000 _ZN7ControlIL4Axis5EE21enablePositionControlEb
     /tmp/ccJh8wEn.s:1700   .text._ZN7ControlIL4Axis5EE21enablePositionControlEb:00000050 $d
     /tmp/ccJh8wEn.s:1715   .text._ZN7ControlIL4Axis5EE11setMaxSpeedEf:00000000 $t
     /tmp/ccJh8wEn.s:1720   .text._ZN7ControlIL4Axis5EE11setMaxSpeedEf:00000000 _ZN7ControlIL4Axis5EE11setMaxSpeedEf
     /tmp/ccJh8wEn.s:1779   .text._ZN7ControlIL4Axis5EE11setMaxSpeedEf:00000054 $d
     /tmp/ccJh8wEn.s:1789   .text.startup._GLOBAL__sub_I__ZN7ControlIL4Axis5EE8maxSpeedE:00000000 $t
     /tmp/ccJh8wEn.s:1793   .text.startup._GLOBAL__sub_I__ZN7ControlIL4Axis5EE8maxSpeedE:00000000 _GLOBAL__sub_I__ZN7ControlIL4Axis5EE8maxSpeedE
     /tmp/ccJh8wEn.s:1942   .text.startup._GLOBAL__sub_I__ZN7ControlIL4Axis5EE8maxSpeedE:00000084 $d
     /tmp/ccJh8wEn.s:2100   .bss._ZGVN7ControlIL4Axis0EE5v_pidE:00000000 _ZGVN7ControlIL4Axis0EE5v_pidE
     /tmp/ccJh8wEn.s:2107   .bss._ZGVN7ControlIL4Axis2EE5v_pidE:00000000 _ZGVN7ControlIL4Axis2EE5v_pidE
     /tmp/ccJh8wEn.s:2114   .bss._ZGVN7ControlIL4Axis0EE7pos_pidE:00000000 _ZGVN7ControlIL4Axis0EE7pos_pidE
     /tmp/ccJh8wEn.s:2121   .bss._ZGVN7ControlIL4Axis2EE7pos_pidE:00000000 _ZGVN7ControlIL4Axis2EE7pos_pidE
     /tmp/ccJh8wEn.s:1956   .init_array:00000000 $d
     /tmp/ccJh8wEn.s:1960   .bss._ZN7ControlIL4Axis2EE7v_shallE:00000000 $d
     /tmp/ccJh8wEn.s:1967   .bss._ZN7ControlIL4Axis2EE4v_isE:00000000 $d
     /tmp/ccJh8wEn.s:1974   .bss._ZN7ControlIL4Axis2EE9pos_shallE:00000000 $d
     /tmp/ccJh8wEn.s:1981   .bss._ZN7ControlIL4Axis0EE7v_shallE:00000000 $d
     /tmp/ccJh8wEn.s:1988   .bss._ZN7ControlIL4Axis0EE4v_isE:00000000 $d
     /tmp/ccJh8wEn.s:1995   .bss._ZN7ControlIL4Axis0EE9pos_shallE:00000000 $d
     /tmp/ccJh8wEn.s:2128   .data._ZN7ControlIL4Axis5EE8maxSpeedE:00000000 _ZN7ControlIL4Axis5EE8maxSpeedE
     /tmp/ccJh8wEn.s:2003   .bss._ZN7ControlIL4Axis0EE8last_posE:00000000 $d
     /tmp/ccJh8wEn.s:2013   .bss._ZN7ControlIL4Axis0EE22positionControlEnabledE:00000000 $d
     /tmp/ccJh8wEn.s:2019   .bss._ZN7ControlIL4Axis0EE19speedControlEnabledE:00000000 $d
     /tmp/ccJh8wEn.s:2022   .bss._ZN7ControlIL4Axis0EE7pos_pidE:00000000 $d
     /tmp/ccJh8wEn.s:2029   .bss._ZN7ControlIL4Axis0EE5v_pidE:00000000 $d
     /tmp/ccJh8wEn.s:2036   .bss._ZN7ControlIL4Axis2EE8last_posE:00000000 $d
     /tmp/ccJh8wEn.s:2046   .bss._ZN7ControlIL4Axis2EE22positionControlEnabledE:00000000 $d
     /tmp/ccJh8wEn.s:2052   .bss._ZN7ControlIL4Axis2EE19speedControlEnabledE:00000000 $d
     /tmp/ccJh8wEn.s:2055   .bss._ZN7ControlIL4Axis2EE7pos_pidE:00000000 $d
     /tmp/ccJh8wEn.s:2062   .bss._ZN7ControlIL4Axis2EE5v_pidE:00000000 $d
     /tmp/ccJh8wEn.s:2069   .bss._ZN7ControlIL4Axis0EE3v_uE:00000000 $d
     /tmp/ccJh8wEn.s:2076   .bss._ZN7ControlIL4Axis0EE7v_urealE:00000000 $d
     /tmp/ccJh8wEn.s:2083   .bss._ZN7ControlIL4Axis2EE3v_uE:00000000 $d
     /tmp/ccJh8wEn.s:2090   .bss._ZN7ControlIL4Axis2EE7v_urealE:00000000 $d
     /tmp/ccJh8wEn.s:2097   .bss._ZGVN7ControlIL4Axis0EE5v_pidE:00000000 $d
     /tmp/ccJh8wEn.s:2104   .bss._ZGVN7ControlIL4Axis2EE5v_pidE:00000000 $d
     /tmp/ccJh8wEn.s:2111   .bss._ZGVN7ControlIL4Axis0EE7pos_pidE:00000000 $d
     /tmp/ccJh8wEn.s:2118   .bss._ZGVN7ControlIL4Axis2EE7pos_pidE:00000000 $d
     /tmp/ccJh8wEn.s:2124   .data._ZN7ControlIL4Axis5EE8maxSpeedE:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
_ZN5MotorIL4Axis0EE8setSpeedEi
_ZN5MotorIL4Axis2EE8setSpeedEi
