   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 2
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"Trigger.cpp"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text._ZN7Trigger6sampleEv,"ax",%progbits
  20              		.align	2
  21              		.global	_ZN7Trigger6sampleEv
  22              		.thumb
  23              		.thumb_func
  25              	_ZN7Trigger6sampleEv:
  26              	.LFB1015:
  27              		.file 1 "Trigger.cpp"
   1:Trigger.cpp   **** /*
   2:Trigger.cpp   ****  * Trigger.cpp
   3:Trigger.cpp   ****  *
   4:Trigger.cpp   ****  *  Created on: Jan 16, 2014
   5:Trigger.cpp   ****  *      Author: jonas
   6:Trigger.cpp   ****  */
   7:Trigger.cpp   **** 
   8:Trigger.cpp   **** #include "Trigger.h"
   9:Trigger.cpp   **** #include "laserInterface.h"
  10:Trigger.cpp   **** #include "control.h"
  11:Trigger.cpp   **** 
  12:Trigger.cpp   **** namespace{
  13:Trigger.cpp   **** int thresholdX = 20;
  14:Trigger.cpp   **** int thresholdY = 20;
  15:Trigger.cpp   **** int lastXPos = 0;
  16:Trigger.cpp   **** int lastYPos = 0;
  17:Trigger.cpp   **** bool enabled = true;
  18:Trigger.cpp   **** }
  19:Trigger.cpp   **** 
  20:Trigger.cpp   **** 
  21:Trigger.cpp   **** void Trigger::sample(){
  28              		.loc 1 21 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 24
  35              		.cfi_offset 3, -24
  36              		.cfi_offset 4, -20
  37              		.cfi_offset 5, -16
  38              		.cfi_offset 6, -12
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41              	.LBB75:
  22:Trigger.cpp   **** 	if(!enabled){
  42              		.loc 1 22 0
  43 0002 504B     		ldr	r3, .L38
  44 0004 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
  45 0006 03B9     		cbnz	r3, .L31
  46              	.L1:
  47 0008 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
  48              	.L31:
  23:Trigger.cpp   **** 		return;
  24:Trigger.cpp   **** 	}
  25:Trigger.cpp   **** 
  26:Trigger.cpp   **** 	int xnow = Control<X>::getIsPosition();
  49              		.loc 1 26 0
  50 000a 4F4B     		ldr	r3, .L38+4
  51 000c 9847     		blx	r3
  52              	.LVL0:
  27:Trigger.cpp   **** 	int ynow = Control<Y>::getIsPosition();
  53              		.loc 1 27 0
  54 000e 4F4B     		ldr	r3, .L38+8
  26:Trigger.cpp   **** 	int xnow = Control<X>::getIsPosition();
  55              		.loc 1 26 0
  56 0010 0446     		mov	r4, r0
  57              	.LVL1:
  58              		.loc 1 27 0
  59 0012 9847     		blx	r3
  60              	.LVL2:
  61              	.LBB76:
  28:Trigger.cpp   **** 
  29:Trigger.cpp   **** 	if(abs(xnow - lastXPos) >= thresholdX ||
  62              		.loc 1 29 0
  63 0014 4E4B     		ldr	r3, .L38+12
  64 0016 4F49     		ldr	r1, .L38+16
  65 0018 1A68     		ldr	r2, [r3, #0]
  66 001a 0968     		ldr	r1, [r1, #0]
  67 001c A21A     		subs	r2, r4, r2
  68 001e 002A     		cmp	r2, #0
  69 0020 B8BF     		it	lt
  70 0022 5242     		rsblt	r2, r2, #0
  71 0024 8A42     		cmp	r2, r1
  72              	.LBE76:
  27:Trigger.cpp   **** 	int ynow = Control<Y>::getIsPosition();
  73              		.loc 1 27 0
  74 0026 0546     		mov	r5, r0
  75              	.LVL3:
  76 0028 4B4A     		ldr	r2, .L38+20
  77              	.LBB132:
  78              		.loc 1 29 0
  79 002a 08DA     		bge	.L4
  30:Trigger.cpp   **** 	   abs(ynow - lastYPos) >= thresholdY){
  80              		.loc 1 30 0 discriminator 1
  81 002c 1168     		ldr	r1, [r2, #0]
  29:Trigger.cpp   **** 	if(abs(xnow - lastXPos) >= thresholdX ||
  82              		.loc 1 29 0 discriminator 1
  83 002e 4B48     		ldr	r0, .L38+24
  84              	.LVL4:
  85              		.loc 1 30 0 discriminator 1
  86 0030 691A     		subs	r1, r5, r1
  29:Trigger.cpp   **** 	if(abs(xnow - lastXPos) >= thresholdX ||
  87              		.loc 1 29 0 discriminator 1
  88 0032 0068     		ldr	r0, [r0, #0]
  89              		.loc 1 30 0 discriminator 1
  90 0034 0029     		cmp	r1, #0
  91 0036 B8BF     		it	lt
  92 0038 4942     		rsblt	r1, r1, #0
  29:Trigger.cpp   **** 	if(abs(xnow - lastXPos) >= thresholdX ||
  93              		.loc 1 29 0 discriminator 1
  94 003a 8142     		cmp	r1, r0
  95 003c E4DB     		blt	.L1
  96              	.L4:
  97              	.LBB77:
  31:Trigger.cpp   **** 		//send output
  32:Trigger.cpp   **** 		lastXPos = xnow;
  98              		.loc 1 32 0
  99 003e 1C60     		str	r4, [r3, #0]
 100              	.LBB78:
  33:Trigger.cpp   **** 		lastYPos = ynow;
  34:Trigger.cpp   **** 		if(Laser::DoubleBuffer::good()){
 101              		.loc 1 34 0
 102 0040 474B     		ldr	r3, .L38+28
 103              	.LBE78:
  33:Trigger.cpp   **** 		lastYPos = ynow;
 104              		.loc 1 33 0
 105 0042 1560     		str	r5, [r2, #0]
 106              	.LBB131:
 107              		.loc 1 34 0
 108 0044 9847     		blx	r3
 109              	.LVL5:
 110 0046 0028     		cmp	r0, #0
 111 0048 44D0     		beq	.L6
 112              	.LVL6:
 113              	.LBB79:
 114              	.LBB80:
 115              	.LBB81:
 116              		.file 2 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp"
   1:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** // coding: utf-8
   2:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** // ----------------------------------------------------------------------------
   3:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** /* Copyright (c) 2009, Roboterclub Aachen e.V.
   4:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * All rights reserved.
   5:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *
   6:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * Redistribution and use in source and binary forms, with or without
   7:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * modification, are permitted provided that the following conditions are met:
   8:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * 
   9:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *     * Redistributions of source code must retain the above copyright
  10:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *       notice, this list of conditions and the following disclaimer.
  11:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *     * Redistributions in binary form must reproduce the above copyright
  12:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *       notice, this list of conditions and the following disclaimer in the
  13:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *       documentation and/or other materials provided with the distribution.
  14:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *     * Neither the name of the Roboterclub Aachen e.V. nor the
  15:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *       names of its contributors may be used to endorse or promote products
  16:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *       derived from this software without specific prior written permission.
  17:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  *
  18:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
  19:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  20:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  21:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * DISCLAIMED. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
  22:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  23:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  24:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  25:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  26:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  27:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  28:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp ****  */
  29:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** // ----------------------------------------------------------------------------
  30:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
  31:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #ifndef XPCC__IOSTREAM_HPP
  32:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #define XPCC__IOSTREAM_HPP
  33:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
  34:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #include <xpcc/architecture/utils.hpp>
  35:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
  36:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #include "iodevice.hpp"
  37:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #include "iodevice_wrapper.hpp"
  38:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
  39:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** namespace xpcc
  40:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** {
  41:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	/**
  42:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	 * \brief 	This Formats all primary types into a string stream for
  43:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	 * 			output or it reads values from a input and converts them to
  44:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	 * 			a given type;
  45:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	 *
  46:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	 * \ingroup io
  47:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	 * \author	Martin Rosekeit <martin.rosekeit@rwth-aachen.de>
  48:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	 */
  49:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	class IOStream
  50:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	{
  51:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 	public :
  52:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		/**
  53:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		 * \brief	Constructor
  54:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		 * 
  55:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		 * \param	device	device to write the stream to
  56:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		 * 
  57:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		 * \code
  58:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		 *	MyIODevice device;
  59:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		 *	IOStream stream( device );
  60:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		 * \endcode
  61:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		 */
  62:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		IOStream(IODevice& device);
  63:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
  64:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		inline IOStream&
  65:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		write(char c)
  66:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
  67:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->device->write(c);
  68:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
  69:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
  70:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
  71:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		inline IOStream&
  72:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		flush()
  73:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
  74:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->device->flush();
  75:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->mode = Mode::Ascii;
  76:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
  77:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
  78:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
  79:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		/// set the output mode to Mode::Binary style for \c char and \c char*
  80:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
  81:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		bin()
  82:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
  83:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->mode = Mode::Binary;
  84:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
  85:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
  86:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
  87:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		/// set the output mode to Mode::Hexadecimal style for \c char and \c char*
  88:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
  89:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		hex()
  90:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
  91:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->mode = Mode::Hexadecimal;
  92:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
  93:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
  94:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
  95:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		/// set the output mode to Mode::Ascii style for \c char and \c char*
  96:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
  97:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ascii()
  98:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
  99:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->mode = Mode::Ascii;
 100:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 101:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 102:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 103:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 104:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		IOStream&
 105:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const unsigned char& v)
 106:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 107:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 108:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeInteger(static_cast<uint16_t>(v));
 109:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 110:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 111:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 112:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 113:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else {
 114:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 115:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 116:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 117:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 118:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
 119:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		IOStream&
 120:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const char& v)
 121:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 124:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 127:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 128:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else {
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 130:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 131:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 132:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 133:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 134:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 135:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const uint16_t& v)
 136:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 137:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 138:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeInteger(v);
 139:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 140:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 141:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v >> 8));
 142:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v & 0xff));
 143:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 144:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else {
 145:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v >> 8));
 146:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v & 0xff));
 147:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 148:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 149:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 150:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
 151:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 152:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const int16_t& v)
 153:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 154:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 155:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeInteger(v);
 156:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 157:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 158:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v >> 8));
 159:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v & 0xff));
 160:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 161:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else {
 162:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v >> 8));
 163:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v & 0xff));
 164:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 165:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 166:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 167:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
 168:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 169:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const uint32_t& v)
 170:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 171:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 172:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeInteger(v);
 173:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 174:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 175:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v >> 24));
 176:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v >> 16));
 177:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v >> 8));
 178:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v & 0xff));
 179:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 180:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else {
 181:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v >> 24));
 182:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v >> 16));
 183:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v >> 8));
 184:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v & 0xff));
 185:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 186:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 187:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 188:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
 189:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 190:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const int32_t& v)
 191:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 192:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 193:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeInteger(v);
 194:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 195:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 196:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v >> 24));
 197:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v >> 16));
 198:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v >> 8));
 199:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(static_cast<uint8_t>(v & 0xff));
 200:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 201:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else {
 202:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v >> 24));
 203:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v >> 16));
 204:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v >> 8));
 205:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(static_cast<uint8_t>(v & 0xff));
 206:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 207:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 208:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 209:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 210:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #if defined(XPCC__OS_OSX)
 211:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		// For APPLE 'int64_t' is of type 'int'. Therefore there is no
 212:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		// function here for the default type 'long int'. As 'long int' has the same
 213:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		// width as 'int64_t' we just use a typedef here.
 214:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 215:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const long int& v)
 216:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 217:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int64_t>(v));
 218:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 219:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 220:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 221:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 222:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const long unsigned int& v)
 223:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 224:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<uint64_t>(v));
 225:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 226:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 227:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #endif
 228:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 229:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #if defined(XPCC__CPU_ARM) || defined(XPCC__CPU_AVR32)
 230:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		// For ARM 'int32_t' is of type 'long'. Therefore there is no
 231:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		// function here for the default type 'int'. As 'int' has the same
 232:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		// width as 'int32_t' we just use a typedef here.
 233:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 234:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const int& v)
 235:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 117              		.loc 2 236 0
 118 004a 464F     		ldr	r7, .L38+32
 119 004c 464E     		ldr	r6, .L38+36
 120 004e 3846     		mov	r0, r7
 121 0050 2146     		mov	r1, r4
 122 0052 B047     		blx	r6
 123              	.LVL7:
 124              	.LBE81:
 125              	.LBE80:
 126              	.LBB82:
 127              	.LBB83:
 237:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 238:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 239:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 240:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 241:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const unsigned int& v)
 242:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 243:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<uint32_t>(v));
 244:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 245:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 246:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #endif
 247:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 248:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** // The 64-bit types on the AVR are extremely slow and are
 249:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** // therefore excluded here
 250:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #if !defined(XPCC__CPU_AVR)
 251:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 252:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const uint64_t& v)
 253:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 254:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(v);
 255:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 256:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 257:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 258:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 259:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const int64_t& v)
 260:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 261:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(v);
 262:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 263:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 264:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #endif
 265:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		
 266:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 267:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const float& v)
 268:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 269:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeFloat(v);
 270:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 271:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 272:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
 273:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		ALWAYS_INLINE IOStream&
 274:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const double& v)
 275:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 276:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #if defined(XPCC__CPU_AVR)
 277:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeFloat(static_cast<float>(v));
 278:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #else
 279:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeDouble(v);
 280:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** #endif
 281:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			return *this;
 282:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		}
 283:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 
 284:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		IOStream&
 285:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		operator << (const char* s)
 286:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 		{
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 128              		.loc 2 287 0
 129 0054 7B68     		ldr	r3, [r7, #4]
 130 0056 002B     		cmp	r3, #0
 131 0058 61D0     		beq	.L32
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 289:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 132              		.loc 2 290 0
 133 005a 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 134              		.loc 2 291 0
 135 005c 3846     		mov	r0, r7
 136 005e 4349     		ldr	r1, .L38+40
 137 0060 0CBF     		ite	eq
 138 0062 434B     		ldreq	r3, .L38+44
 292:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			}
 293:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else {
 294:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(s);
 139              		.loc 2 294 0
 140 0064 434B     		ldrne	r3, .L38+48
 141 0066 9847     		blx	r3
 142              	.LVL8:
 143              	.L8:
 144              	.LBE83:
 145              	.LBE82:
 146              	.LBB87:
 147              	.LBB88:
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 148              		.loc 2 236 0
 149 0068 3E4C     		ldr	r4, .L38+32
 150              	.LVL9:
 151 006a 2946     		mov	r1, r5
 152 006c 2046     		mov	r0, r4
 153 006e B047     		blx	r6
 154              	.LVL10:
 155              	.LBE88:
 156              	.LBE87:
 157              	.LBB89:
 158              	.LBB90:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 159              		.loc 2 287 0
 160 0070 7B68     		ldr	r3, [r7, #4]
 161 0072 002B     		cmp	r3, #0
 162 0074 4DD0     		beq	.L33
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 163              		.loc 2 290 0
 164 0076 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 165              		.loc 2 291 0
 166 0078 2046     		mov	r0, r4
 167 007a 3C49     		ldr	r1, .L38+40
 168 007c 0CBF     		ite	eq
 169 007e 3C4B     		ldreq	r3, .L38+44
 170              		.loc 2 294 0
 171 0080 3C4B     		ldrne	r3, .L38+48
 172 0082 9847     		blx	r3
 173              	.LVL11:
 174              	.L11:
 175              	.LBE90:
 176              	.LBE89:
  35:Trigger.cpp   **** 			mout << xnow << "," << ynow << ",";
  36:Trigger.cpp   **** 			//measurement is exactly 8 chars long
  37:Trigger.cpp   **** 			const char* p = Laser::DoubleBuffer::get()+3;
 177              		.loc 1 37 0
 178 0084 3C4B     		ldr	r3, .L38+52
 179 0086 1C68     		ldr	r4, [r3, #0]
  38:Trigger.cpp   **** 			for(int i = 0; i < 8; i++){
 180              		.loc 1 38 0
 181 0088 0025     		movs	r5, #0
 182              	.LVL12:
  37:Trigger.cpp   **** 			const char* p = Laser::DoubleBuffer::get()+3;
 183              		.loc 1 37 0
 184 008a 0334     		adds	r4, r4, #3
 185              	.LVL13:
 186 008c 0AE0     		b	.L16
 187              	.LVL14:
 188              	.L13:
 189              	.LBB94:
 190              	.LBB95:
 191              	.LBB96:
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 192              		.loc 2 125 0
 193 008e 022B     		cmp	r3, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 194              		.loc 2 126 0
 195 0090 03BF     		ittte	eq
 196 0092 3046     		moveq	r0, r6
 197 0094 1146     		moveq	r1, r2
 198 0096 394B     		ldreq	r3, .L38+56
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 199              		.loc 2 129 0
 200 0098 394B     		ldrne	r3, .L38+60
 201              	.LBE96:
 202              	.LBE95:
 203              		.loc 1 38 0
 204 009a 0135     		adds	r5, r5, #1
 205              	.LBB104:
 206              	.LBB101:
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 207              		.loc 2 129 0
 208 009c 9847     		blx	r3
 209              	.LVL15:
 210              	.LBE101:
 211              	.LBE104:
  39:Trigger.cpp   **** 				mout << *p;
  40:Trigger.cpp   **** 				p++;
 212              		.loc 1 40 0
 213 009e 0134     		adds	r4, r4, #1
 214              	.LVL16:
  38:Trigger.cpp   **** 			for(int i = 0; i < 8; i++){
 215              		.loc 1 38 0
 216 00a0 082D     		cmp	r5, #8
 217 00a2 0ED0     		beq	.L34
 218              	.LVL17:
 219              	.L16:
 220              	.LBE94:
  41:Trigger.cpp   **** 			}
  42:Trigger.cpp   **** 			mout << endl;
  43:Trigger.cpp   **** 		}else{
  44:Trigger.cpp   **** 			pout << xnow << "," << ynow << endl;
  45:Trigger.cpp   **** 		}
  46:Trigger.cpp   **** 	}
  47:Trigger.cpp   **** }
  48:Trigger.cpp   **** 
  49:Trigger.cpp   **** void Trigger::forceTrigger(){
  50:Trigger.cpp   **** 
  51:Trigger.cpp   **** 	int xnow = Control<X>::getIsPosition();
  52:Trigger.cpp   **** 	int ynow = Control<Y>::getIsPosition();
  53:Trigger.cpp   **** 		//send output
  54:Trigger.cpp   **** 	lastXPos = xnow;
  55:Trigger.cpp   **** 	lastYPos = ynow;
  56:Trigger.cpp   **** 
  57:Trigger.cpp   **** 	if(Laser::DoubleBuffer::good()){
  58:Trigger.cpp   **** 		mout << xnow << "," << ynow << ",";
  59:Trigger.cpp   **** 		//measurement is exactly 8 chars long
  60:Trigger.cpp   **** 		const char* p = Laser::DoubleBuffer::get()+3;
  61:Trigger.cpp   **** 		for(int i = 0; i < 8; i++){
  62:Trigger.cpp   **** 			mout << *p;
  63:Trigger.cpp   **** 			p++;
  64:Trigger.cpp   **** 		}
  65:Trigger.cpp   **** 		mout << endl;
  66:Trigger.cpp   **** 	}else{
  67:Trigger.cpp   **** 		pout << xnow << "," << ynow << endl;
  68:Trigger.cpp   **** 	}
  69:Trigger.cpp   **** 
  70:Trigger.cpp   **** }
  71:Trigger.cpp   **** 
  72:Trigger.cpp   **** void Trigger::setThreshold(int threshold){
  73:Trigger.cpp   **** 	thresholdX = threshold;
  74:Trigger.cpp   **** 	thresholdY = threshold;
  75:Trigger.cpp   **** }
  76:Trigger.cpp   **** 
  77:Trigger.cpp   **** int Trigger::getThreshold(){
  78:Trigger.cpp   **** 	return thresholdX;
  79:Trigger.cpp   **** }
  80:Trigger.cpp   **** 
  81:Trigger.cpp   **** void Trigger::enable(bool enable){
  82:Trigger.cpp   **** 	enabled = enable;
  83:Trigger.cpp   **** }
 221              		.loc 1 83 0 discriminator 2
 222 00a4 2278     		ldrb	r2, [r4, #0]	@ zero_extendqisi2
 223              	.LVL18:
 224              	.LBB107:
 225              	.LBB105:
 226              	.LBB102:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 227              		.loc 2 122 0 discriminator 2
 228 00a6 2F4E     		ldr	r6, .L38+32
 229 00a8 7B68     		ldr	r3, [r7, #4]
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 230              		.loc 2 129 0 discriminator 2
 231 00aa 1146     		mov	r1, r2
 232 00ac 3046     		mov	r0, r6
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 233              		.loc 2 122 0 discriminator 2
 234 00ae 002B     		cmp	r3, #0
 235 00b0 EDD1     		bne	.L13
 236              	.LVL19:
 237              	.LBB97:
 238              	.LBB98:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 239              		.loc 2 123 0
 240 00b2 3068     		ldr	r0, [r6, #0]
 241 00b4 0368     		ldr	r3, [r0, #0]
 242              	.LBE98:
 243              	.LBE97:
 244              	.LBE102:
 245              	.LBE105:
  38:Trigger.cpp   **** 			for(int i = 0; i < 8; i++){
 246              		.loc 1 38 0
 247 00b6 0135     		adds	r5, r5, #1
 248              	.LBB106:
 249              	.LBB103:
 250              	.LBB100:
 251              	.LBB99:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 252              		.loc 2 123 0
 253 00b8 9B68     		ldr	r3, [r3, #8]
 254 00ba 9847     		blx	r3
 255              	.LVL20:
 256              	.LBE99:
 257              	.LBE100:
 258              	.LBE103:
 259              	.LBE106:
  40:Trigger.cpp   **** 				p++;
 260              		.loc 1 40 0
 261 00bc 0134     		adds	r4, r4, #1
 262              	.LVL21:
  38:Trigger.cpp   **** 			for(int i = 0; i < 8; i++){
 263              		.loc 1 38 0
 264 00be 082D     		cmp	r5, #8
 265 00c0 F0D1     		bne	.L16
 266              	.LVL22:
 267              	.L34:
 268              	.LBE107:
 269              	.LBB108:
 270              	.LBB109:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 271              		.loc 2 122 0
 272 00c2 7B68     		ldr	r3, [r7, #4]
 273 00c4 2748     		ldr	r0, .L38+32
 274 00c6 DBB9     		cbnz	r3, .L29
 275              	.LVL23:
 276              	.LBB110:
 277              	.LBB111:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 278              		.loc 2 123 0
 279 00c8 0068     		ldr	r0, [r0, #0]
 280 00ca 0368     		ldr	r3, [r0, #0]
 281 00cc 0A21     		movs	r1, #10
 282 00ce 9B68     		ldr	r3, [r3, #8]
 283 00d0 9847     		blx	r3
 284              	.LVL24:
 285 00d2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 286              	.LVL25:
 287              	.L6:
 288              	.LBE111:
 289              	.LBE110:
 290              	.LBE109:
 291              	.LBE108:
 292              	.LBE79:
 293              	.LBB114:
 294              	.LBB115:
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 295              		.loc 2 236 0
 296 00d4 2B4F     		ldr	r7, .L38+64
 297 00d6 244E     		ldr	r6, .L38+36
 298 00d8 3846     		mov	r0, r7
 299 00da 2146     		mov	r1, r4
 300 00dc B047     		blx	r6
 301              	.LVL26:
 302              	.LBE115:
 303              	.LBE114:
 304              	.LBB116:
 305              	.LBB117:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 306              		.loc 2 287 0
 307 00de 7B68     		ldr	r3, [r7, #4]
 308 00e0 002B     		cmp	r3, #0
 309 00e2 28D0     		beq	.L35
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 310              		.loc 2 290 0
 311 00e4 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 312              		.loc 2 291 0
 313 00e6 3846     		mov	r0, r7
 314 00e8 2049     		ldr	r1, .L38+40
 315 00ea 0CBF     		ite	eq
 316 00ec 204B     		ldreq	r3, .L38+44
 317              		.loc 2 294 0
 318 00ee 214B     		ldrne	r3, .L38+48
 319 00f0 9847     		blx	r3
 320              	.LVL27:
 321              	.L20:
 322              	.LBE117:
 323              	.LBE116:
 324              	.LBB121:
 325              	.LBB122:
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 326              		.loc 2 236 0
 327 00f2 244C     		ldr	r4, .L38+64
 328              	.LVL28:
 329 00f4 2946     		mov	r1, r5
 330 00f6 2046     		mov	r0, r4
 331 00f8 B047     		blx	r6
 332              	.LVL29:
 333              	.LBE122:
 334              	.LBE121:
 335              	.LBB123:
 336              	.LBB124:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 337              		.loc 2 122 0
 338 00fa 7B68     		ldr	r3, [r7, #4]
 339 00fc ABB1     		cbz	r3, .L36
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 340              		.loc 2 126 0
 341 00fe 2046     		mov	r0, r4
 342              	.LVL30:
 343              	.L29:
 344 0100 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 345              		.loc 2 125 0
 346 0102 022B     		cmp	r3, #2
 347 0104 02D0     		beq	.L37
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 348              		.loc 2 129 0
 349 0106 1E4B     		ldr	r3, .L38+60
 350 0108 9847     		blx	r3
 351              	.LVL31:
 352 010a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 353              	.L37:
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 354              		.loc 2 126 0
 355 010c 1B4B     		ldr	r3, .L38+56
 356 010e 9847     		blx	r3
 357              	.LVL32:
 358 0110 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 359              	.LVL33:
 360              	.L33:
 361              	.LBE124:
 362              	.LBE123:
 363              	.LBB128:
 364              	.LBB112:
 365              	.LBB93:
 366              	.LBB91:
 367              	.LBB92:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 368              		.loc 2 288 0
 369 0112 2068     		ldr	r0, [r4, #0]
 370 0114 1549     		ldr	r1, .L38+40
 371 0116 0368     		ldr	r3, [r0, #0]
 372 0118 DB68     		ldr	r3, [r3, #12]
 373 011a 9847     		blx	r3
 374              	.LVL34:
 375 011c B2E7     		b	.L11
 376              	.LVL35:
 377              	.L32:
 378              	.LBE92:
 379              	.LBE91:
 380              	.LBE93:
 381              	.LBE112:
 382              	.LBB113:
 383              	.LBB86:
 384              	.LBB84:
 385              	.LBB85:
 386 011e 3868     		ldr	r0, [r7, #0]
 387 0120 1249     		ldr	r1, .L38+40
 388 0122 0368     		ldr	r3, [r0, #0]
 389 0124 DB68     		ldr	r3, [r3, #12]
 390 0126 9847     		blx	r3
 391              	.LVL36:
 392 0128 9EE7     		b	.L8
 393              	.LVL37:
 394              	.L36:
 395              	.LBE85:
 396              	.LBE84:
 397              	.LBE86:
 398              	.LBE113:
 399              	.LBE128:
 400              	.LBB129:
 401              	.LBB127:
 402              	.LBB125:
 403              	.LBB126:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 404              		.loc 2 123 0
 405 012a 2068     		ldr	r0, [r4, #0]
 406 012c 0368     		ldr	r3, [r0, #0]
 407 012e 0A21     		movs	r1, #10
 408 0130 9B68     		ldr	r3, [r3, #8]
 409 0132 9847     		blx	r3
 410              	.LVL38:
 411 0134 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 412              	.LVL39:
 413              	.L35:
 414              	.LBE126:
 415              	.LBE125:
 416              	.LBE127:
 417              	.LBE129:
 418              	.LBB130:
 419              	.LBB120:
 420              	.LBB118:
 421              	.LBB119:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 422              		.loc 2 288 0
 423 0136 3868     		ldr	r0, [r7, #0]
 424 0138 0C49     		ldr	r1, .L38+40
 425 013a 0368     		ldr	r3, [r0, #0]
 426 013c DB68     		ldr	r3, [r3, #12]
 427 013e 9847     		blx	r3
 428              	.LVL40:
 429 0140 D7E7     		b	.L20
 430              	.L39:
 431 0142 00BF     		.align	2
 432              	.L38:
 433 0144 00000000 		.word	.LANCHOR0
 434 0148 00000000 		.word	_ZN7ControlIL4Axis0EE13getIsPositionEv
 435 014c 00000000 		.word	_ZN7ControlIL4Axis2EE13getIsPositionEv
 436 0150 00000000 		.word	.LANCHOR1
 437 0154 00000000 		.word	.LANCHOR2
 438 0158 00000000 		.word	.LANCHOR3
 439 015c 00000000 		.word	.LANCHOR4
 440 0160 00000000 		.word	_ZN5Laser12DoubleBuffer4goodEv
 441 0164 00000000 		.word	mout
 442 0168 00000000 		.word	_ZN4xpcc8IOStream12writeIntegerEl
 443 016c 00000000 		.word	.LC0
 444 0170 00000000 		.word	_ZN4xpcc8IOStream8writeBinEPKc
 445 0174 00000000 		.word	_ZN4xpcc8IOStream8writeHexEPKc
 446 0178 00000000 		.word	_ZN5Laser12DoubleBuffer9bufOutPtrE
 447 017c 00000000 		.word	_ZN4xpcc8IOStream8writeBinEh
 448 0180 00000000 		.word	_ZN4xpcc8IOStream8writeHexEh
 449 0184 00000000 		.word	pout
 450              	.LBE119:
 451              	.LBE118:
 452              	.LBE120:
 453              	.LBE130:
 454              	.LBE131:
 455              	.LBE77:
 456              	.LBE132:
 457              	.LBE75:
 458              		.cfi_endproc
 459              	.LFE1015:
 461              		.section	.text._ZN7Trigger12forceTriggerEv,"ax",%progbits
 462              		.align	2
 463              		.global	_ZN7Trigger12forceTriggerEv
 464              		.thumb
 465              		.thumb_func
 467              	_ZN7Trigger12forceTriggerEv:
 468              	.LFB1016:
  49:Trigger.cpp   **** void Trigger::forceTrigger(){
 469              		.loc 1 49 0
 470              		.cfi_startproc
 471              		@ args = 0, pretend = 0, frame = 0
 472              		@ frame_needed = 0, uses_anonymous_args = 0
 473 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 474              	.LCFI1:
 475              		.cfi_def_cfa_offset 24
 476              		.cfi_offset 3, -24
 477              		.cfi_offset 4, -20
 478              		.cfi_offset 5, -16
 479              		.cfi_offset 6, -12
 480              		.cfi_offset 7, -8
 481              		.cfi_offset 14, -4
 482              	.LBB171:
  51:Trigger.cpp   **** 	int xnow = Control<X>::getIsPosition();
 483              		.loc 1 51 0
 484 0002 434B     		ldr	r3, .L69
 485 0004 9847     		blx	r3
 486              	.LVL41:
  52:Trigger.cpp   **** 	int ynow = Control<Y>::getIsPosition();
 487              		.loc 1 52 0
 488 0006 434B     		ldr	r3, .L69+4
  51:Trigger.cpp   **** 	int xnow = Control<X>::getIsPosition();
 489              		.loc 1 51 0
 490 0008 0646     		mov	r6, r0
 491              	.LVL42:
  52:Trigger.cpp   **** 	int ynow = Control<Y>::getIsPosition();
 492              		.loc 1 52 0
 493 000a 9847     		blx	r3
 494              	.LVL43:
  54:Trigger.cpp   **** 	lastXPos = xnow;
 495              		.loc 1 54 0
 496 000c 424B     		ldr	r3, .L69+8
 497 000e 1E60     		str	r6, [r3, #0]
  55:Trigger.cpp   **** 	lastYPos = ynow;
 498              		.loc 1 55 0
 499 0010 424B     		ldr	r3, .L69+12
 500 0012 1860     		str	r0, [r3, #0]
 501              	.LBB172:
  57:Trigger.cpp   **** 	if(Laser::DoubleBuffer::good()){
 502              		.loc 1 57 0
 503 0014 424B     		ldr	r3, .L69+16
 504              	.LBE172:
  52:Trigger.cpp   **** 	int ynow = Control<Y>::getIsPosition();
 505              		.loc 1 52 0
 506 0016 0546     		mov	r5, r0
 507              	.LVL44:
 508              	.LBB226:
  57:Trigger.cpp   **** 	if(Laser::DoubleBuffer::good()){
 509              		.loc 1 57 0
 510 0018 9847     		blx	r3
 511              	.LVL45:
 512 001a 0028     		cmp	r0, #0
 513 001c 44D0     		beq	.L41
 514              	.LVL46:
 515              	.LBB173:
 516              	.LBB174:
 517              	.LBB175:
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 518              		.loc 2 236 0
 519 001e 414F     		ldr	r7, .L69+20
 520 0020 414C     		ldr	r4, .L69+24
 521 0022 3846     		mov	r0, r7
 522 0024 3146     		mov	r1, r6
 523 0026 A047     		blx	r4
 524              	.LVL47:
 525              	.LBE175:
 526              	.LBE174:
 527              	.LBB176:
 528              	.LBB177:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 529              		.loc 2 287 0
 530 0028 7B68     		ldr	r3, [r7, #4]
 531 002a 002B     		cmp	r3, #0
 532 002c 58D0     		beq	.L64
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 533              		.loc 2 290 0
 534 002e 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 535              		.loc 2 291 0
 536 0030 3846     		mov	r0, r7
 537 0032 3E49     		ldr	r1, .L69+28
 538 0034 0CBF     		ite	eq
 539 0036 3E4B     		ldreq	r3, .L69+32
 540              		.loc 2 294 0
 541 0038 3E4B     		ldrne	r3, .L69+36
 542 003a 9847     		blx	r3
 543              	.LVL48:
 544              	.L43:
 545              	.LBE177:
 546              	.LBE176:
 547              	.LBB181:
 548              	.LBB182:
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 549              		.loc 2 236 0
 550 003c 394E     		ldr	r6, .L69+20
 551              	.LVL49:
 552 003e 2946     		mov	r1, r5
 553 0040 3046     		mov	r0, r6
 554 0042 A047     		blx	r4
 555              	.LVL50:
 556              	.LBE182:
 557              	.LBE181:
 558              	.LBB183:
 559              	.LBB184:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 560              		.loc 2 287 0
 561 0044 7B68     		ldr	r3, [r7, #4]
 562 0046 002B     		cmp	r3, #0
 563 0048 56D0     		beq	.L65
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 564              		.loc 2 290 0
 565 004a 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 566              		.loc 2 291 0
 567 004c 3046     		mov	r0, r6
 568 004e 3749     		ldr	r1, .L69+28
 569 0050 0CBF     		ite	eq
 570 0052 374B     		ldreq	r3, .L69+32
 571              		.loc 2 294 0
 572 0054 374B     		ldrne	r3, .L69+36
 573 0056 9847     		blx	r3
 574              	.LVL51:
 575              	.L46:
 576              	.LBE184:
 577              	.LBE183:
  60:Trigger.cpp   **** 		const char* p = Laser::DoubleBuffer::get()+3;
 578              		.loc 1 60 0
 579 0058 374B     		ldr	r3, .L69+40
 580 005a 1C68     		ldr	r4, [r3, #0]
  61:Trigger.cpp   **** 		for(int i = 0; i < 8; i++){
 581              		.loc 1 61 0
 582 005c 0025     		movs	r5, #0
 583              	.LVL52:
  60:Trigger.cpp   **** 		const char* p = Laser::DoubleBuffer::get()+3;
 584              		.loc 1 60 0
 585 005e 0334     		adds	r4, r4, #3
 586              	.LVL53:
 587 0060 0AE0     		b	.L51
 588              	.LVL54:
 589              	.L48:
 590              	.LBB188:
 591              	.LBB189:
 592              	.LBB190:
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 593              		.loc 2 125 0
 594 0062 022B     		cmp	r3, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 595              		.loc 2 126 0
 596 0064 03BF     		ittte	eq
 597 0066 3046     		moveq	r0, r6
 598 0068 1146     		moveq	r1, r2
 599 006a 344B     		ldreq	r3, .L69+44
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 600              		.loc 2 129 0
 601 006c 344B     		ldrne	r3, .L69+48
 602              	.LBE190:
 603              	.LBE189:
  61:Trigger.cpp   **** 		for(int i = 0; i < 8; i++){
 604              		.loc 1 61 0
 605 006e 0135     		adds	r5, r5, #1
 606              	.LBB198:
 607              	.LBB195:
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 608              		.loc 2 129 0
 609 0070 9847     		blx	r3
 610              	.LVL55:
 611              	.LBE195:
 612              	.LBE198:
  63:Trigger.cpp   **** 			p++;
 613              		.loc 1 63 0
 614 0072 0134     		adds	r4, r4, #1
 615              	.LVL56:
  61:Trigger.cpp   **** 		for(int i = 0; i < 8; i++){
 616              		.loc 1 61 0
 617 0074 082D     		cmp	r5, #8
 618 0076 0ED0     		beq	.L66
 619              	.LVL57:
 620              	.L51:
 621              	.LBE188:
 622              		.loc 1 83 0 discriminator 2
 623 0078 2278     		ldrb	r2, [r4, #0]	@ zero_extendqisi2
 624              	.LVL58:
 625              	.LBB201:
 626              	.LBB199:
 627              	.LBB196:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 628              		.loc 2 122 0 discriminator 2
 629 007a 2A4E     		ldr	r6, .L69+20
 630 007c 7B68     		ldr	r3, [r7, #4]
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 631              		.loc 2 129 0 discriminator 2
 632 007e 1146     		mov	r1, r2
 633 0080 3046     		mov	r0, r6
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 634              		.loc 2 122 0 discriminator 2
 635 0082 002B     		cmp	r3, #0
 636 0084 EDD1     		bne	.L48
 637              	.LVL59:
 638              	.LBB191:
 639              	.LBB192:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 640              		.loc 2 123 0
 641 0086 3068     		ldr	r0, [r6, #0]
 642 0088 0368     		ldr	r3, [r0, #0]
 643              	.LBE192:
 644              	.LBE191:
 645              	.LBE196:
 646              	.LBE199:
  61:Trigger.cpp   **** 		for(int i = 0; i < 8; i++){
 647              		.loc 1 61 0
 648 008a 0135     		adds	r5, r5, #1
 649              	.LBB200:
 650              	.LBB197:
 651              	.LBB194:
 652              	.LBB193:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 653              		.loc 2 123 0
 654 008c 9B68     		ldr	r3, [r3, #8]
 655 008e 9847     		blx	r3
 656              	.LVL60:
 657              	.LBE193:
 658              	.LBE194:
 659              	.LBE197:
 660              	.LBE200:
  63:Trigger.cpp   **** 			p++;
 661              		.loc 1 63 0
 662 0090 0134     		adds	r4, r4, #1
 663              	.LVL61:
  61:Trigger.cpp   **** 		for(int i = 0; i < 8; i++){
 664              		.loc 1 61 0
 665 0092 082D     		cmp	r5, #8
 666 0094 F0D1     		bne	.L51
 667              	.LVL62:
 668              	.L66:
 669              	.LBE201:
 670              	.LBB202:
 671              	.LBB203:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 672              		.loc 2 122 0
 673 0096 7B68     		ldr	r3, [r7, #4]
 674 0098 2248     		ldr	r0, .L69+20
 675 009a D3B9     		cbnz	r3, .L63
 676              	.LVL63:
 677              	.LBB204:
 678              	.LBB205:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 679              		.loc 2 123 0
 680 009c 0068     		ldr	r0, [r0, #0]
 681 009e 0368     		ldr	r3, [r0, #0]
 682 00a0 0A21     		movs	r1, #10
 683 00a2 9B68     		ldr	r3, [r3, #8]
 684 00a4 9847     		blx	r3
 685              	.LVL64:
 686 00a6 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 687              	.LVL65:
 688              	.L41:
 689              	.LBE205:
 690              	.LBE204:
 691              	.LBE203:
 692              	.LBE202:
 693              	.LBE173:
 694              	.LBB208:
 695              	.LBB209:
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 696              		.loc 2 236 0
 697 00a8 264F     		ldr	r7, .L69+52
 698 00aa 1F4C     		ldr	r4, .L69+24
 699 00ac 3846     		mov	r0, r7
 700 00ae 3146     		mov	r1, r6
 701 00b0 A047     		blx	r4
 702              	.LVL66:
 703              	.LBE209:
 704              	.LBE208:
 705              	.LBB210:
 706              	.LBB211:
 287:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if( this->mode == Mode::Ascii ) {
 707              		.loc 2 287 0
 708 00b2 7B68     		ldr	r3, [r7, #4]
 709 00b4 D3B1     		cbz	r3, .L67
 290:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if( this->mode == Mode::Binary ) {
 710              		.loc 2 290 0
 711 00b6 022B     		cmp	r3, #2
 291:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(s);
 712              		.loc 2 291 0
 713 00b8 3846     		mov	r0, r7
 714 00ba 1C49     		ldr	r1, .L69+28
 715 00bc 0CBF     		ite	eq
 716 00be 1C4B     		ldreq	r3, .L69+32
 717              		.loc 2 294 0
 718 00c0 1C4B     		ldrne	r3, .L69+36
 719 00c2 9847     		blx	r3
 720              	.LVL67:
 721              	.L56:
 722              	.LBE211:
 723              	.LBE210:
 724              	.LBB215:
 725              	.LBB216:
 236:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			this->writeInteger(static_cast<int32_t>(v));
 726              		.loc 2 236 0
 727 00c4 1F4E     		ldr	r6, .L69+52
 728              	.LVL68:
 729 00c6 2946     		mov	r1, r5
 730 00c8 3046     		mov	r0, r6
 731 00ca A047     		blx	r4
 732              	.LVL69:
 733              	.LBE216:
 734              	.LBE215:
 735              	.LBB217:
 736              	.LBB218:
 122:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			if (this->mode == Mode::Ascii) {
 737              		.loc 2 122 0
 738 00cc 7B68     		ldr	r3, [r7, #4]
 739 00ce CBB1     		cbz	r3, .L68
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 740              		.loc 2 126 0
 741 00d0 3046     		mov	r0, r6
 742              	.LVL70:
 743              	.L63:
 744 00d2 0A21     		movs	r1, #10
 125:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 			else if (this->mode == Mode::Binary) {
 745              		.loc 2 125 0
 746 00d4 022B     		cmp	r3, #2
 126:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeBin(v);
 747              		.loc 2 126 0
 748 00d6 0CBF     		ite	eq
 749 00d8 184B     		ldreq	r3, .L69+44
 129:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->writeHex(v);
 750              		.loc 2 129 0
 751 00da 194B     		ldrne	r3, .L69+48
 752 00dc 9847     		blx	r3
 753              	.LVL71:
 754 00de F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 755              	.LVL72:
 756              	.L64:
 757              	.LBE218:
 758              	.LBE217:
 759              	.LBB222:
 760              	.LBB206:
 761              	.LBB180:
 762              	.LBB178:
 763              	.LBB179:
 288:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(s);
 764              		.loc 2 288 0
 765 00e0 3868     		ldr	r0, [r7, #0]
 766 00e2 1249     		ldr	r1, .L69+28
 767 00e4 0368     		ldr	r3, [r0, #0]
 768 00e6 DB68     		ldr	r3, [r3, #12]
 769 00e8 9847     		blx	r3
 770              	.LVL73:
 771 00ea A7E7     		b	.L43
 772              	.LVL74:
 773              	.L67:
 774              	.LBE179:
 775              	.LBE178:
 776              	.LBE180:
 777              	.LBE206:
 778              	.LBE222:
 779              	.LBB223:
 780              	.LBB214:
 781              	.LBB212:
 782              	.LBB213:
 783 00ec 3868     		ldr	r0, [r7, #0]
 784 00ee 0F49     		ldr	r1, .L69+28
 785 00f0 0368     		ldr	r3, [r0, #0]
 786 00f2 DB68     		ldr	r3, [r3, #12]
 787 00f4 9847     		blx	r3
 788              	.LVL75:
 789 00f6 E5E7     		b	.L56
 790              	.LVL76:
 791              	.L65:
 792              	.LBE213:
 793              	.LBE212:
 794              	.LBE214:
 795              	.LBE223:
 796              	.LBB224:
 797              	.LBB207:
 798              	.LBB187:
 799              	.LBB185:
 800              	.LBB186:
 801 00f8 3068     		ldr	r0, [r6, #0]
 802 00fa 0C49     		ldr	r1, .L69+28
 803 00fc 0368     		ldr	r3, [r0, #0]
 804 00fe DB68     		ldr	r3, [r3, #12]
 805 0100 9847     		blx	r3
 806              	.LVL77:
 807 0102 A9E7     		b	.L46
 808              	.LVL78:
 809              	.L68:
 810              	.LBE186:
 811              	.LBE185:
 812              	.LBE187:
 813              	.LBE207:
 814              	.LBE224:
 815              	.LBB225:
 816              	.LBB221:
 817              	.LBB219:
 818              	.LBB220:
 123:/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iostream.hpp **** 				this->device->write(v);
 819              		.loc 2 123 0
 820 0104 3068     		ldr	r0, [r6, #0]
 821 0106 0368     		ldr	r3, [r0, #0]
 822 0108 0A21     		movs	r1, #10
 823 010a 9B68     		ldr	r3, [r3, #8]
 824 010c 9847     		blx	r3
 825              	.LVL79:
 826 010e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 827              	.L70:
 828              		.align	2
 829              	.L69:
 830 0110 00000000 		.word	_ZN7ControlIL4Axis0EE13getIsPositionEv
 831 0114 00000000 		.word	_ZN7ControlIL4Axis2EE13getIsPositionEv
 832 0118 00000000 		.word	.LANCHOR1
 833 011c 00000000 		.word	.LANCHOR3
 834 0120 00000000 		.word	_ZN5Laser12DoubleBuffer4goodEv
 835 0124 00000000 		.word	mout
 836 0128 00000000 		.word	_ZN4xpcc8IOStream12writeIntegerEl
 837 012c 00000000 		.word	.LC0
 838 0130 00000000 		.word	_ZN4xpcc8IOStream8writeBinEPKc
 839 0134 00000000 		.word	_ZN4xpcc8IOStream8writeHexEPKc
 840 0138 00000000 		.word	_ZN5Laser12DoubleBuffer9bufOutPtrE
 841 013c 00000000 		.word	_ZN4xpcc8IOStream8writeBinEh
 842 0140 00000000 		.word	_ZN4xpcc8IOStream8writeHexEh
 843 0144 00000000 		.word	pout
 844              	.LBE220:
 845              	.LBE219:
 846              	.LBE221:
 847              	.LBE225:
 848              	.LBE226:
 849              	.LBE171:
 850              		.cfi_endproc
 851              	.LFE1016:
 853              		.section	.text._ZN7Trigger12setThresholdEi,"ax",%progbits
 854              		.align	2
 855              		.global	_ZN7Trigger12setThresholdEi
 856              		.thumb
 857              		.thumb_func
 859              	_ZN7Trigger12setThresholdEi:
 860              	.LFB1017:
  72:Trigger.cpp   **** void Trigger::setThreshold(int threshold){
 861              		.loc 1 72 0
 862              		.cfi_startproc
 863              		@ args = 0, pretend = 0, frame = 0
 864              		@ frame_needed = 0, uses_anonymous_args = 0
 865              		@ link register save eliminated.
 866              	.LVL80:
  73:Trigger.cpp   **** 	thresholdX = threshold;
 867              		.loc 1 73 0
 868 0000 024B     		ldr	r3, .L72
 869 0002 1860     		str	r0, [r3, #0]
  74:Trigger.cpp   **** 	thresholdY = threshold;
 870              		.loc 1 74 0
 871 0004 024B     		ldr	r3, .L72+4
 872 0006 1860     		str	r0, [r3, #0]
 873 0008 7047     		bx	lr
 874              	.L73:
 875 000a 00BF     		.align	2
 876              	.L72:
 877 000c 00000000 		.word	.LANCHOR2
 878 0010 00000000 		.word	.LANCHOR4
 879              		.cfi_endproc
 880              	.LFE1017:
 882              		.section	.text._ZN7Trigger12getThresholdEv,"ax",%progbits
 883              		.align	2
 884              		.global	_ZN7Trigger12getThresholdEv
 885              		.thumb
 886              		.thumb_func
 888              	_ZN7Trigger12getThresholdEv:
 889              	.LFB1018:
  77:Trigger.cpp   **** int Trigger::getThreshold(){
 890              		.loc 1 77 0
 891              		.cfi_startproc
 892              		@ args = 0, pretend = 0, frame = 0
 893              		@ frame_needed = 0, uses_anonymous_args = 0
 894              		@ link register save eliminated.
  78:Trigger.cpp   **** 	return thresholdX;
 895              		.loc 1 78 0
 896 0000 014B     		ldr	r3, .L75
  79:Trigger.cpp   **** }
 897              		.loc 1 79 0
 898 0002 1868     		ldr	r0, [r3, #0]
 899 0004 7047     		bx	lr
 900              	.L76:
 901 0006 00BF     		.align	2
 902              	.L75:
 903 0008 00000000 		.word	.LANCHOR2
 904              		.cfi_endproc
 905              	.LFE1018:
 907              		.section	.text._ZN7Trigger6enableEb,"ax",%progbits
 908              		.align	2
 909              		.global	_ZN7Trigger6enableEb
 910              		.thumb
 911              		.thumb_func
 913              	_ZN7Trigger6enableEb:
 914              	.LFB1019:
  81:Trigger.cpp   **** void Trigger::enable(bool enable){
 915              		.loc 1 81 0
 916              		.cfi_startproc
 917              		@ args = 0, pretend = 0, frame = 0
 918              		@ frame_needed = 0, uses_anonymous_args = 0
 919              		@ link register save eliminated.
 920              	.LVL81:
  82:Trigger.cpp   **** 	enabled = enable;
 921              		.loc 1 82 0
 922 0000 014B     		ldr	r3, .L78
 923 0002 1870     		strb	r0, [r3, #0]
 924 0004 7047     		bx	lr
 925              	.L79:
 926 0006 00BF     		.align	2
 927              	.L78:
 928 0008 00000000 		.word	.LANCHOR0
 929              		.cfi_endproc
 930              	.LFE1019:
 932              		.section	.data._ZN12_GLOBAL__N_110thresholdYE,"aw",%progbits
 933              		.align	2
 934              		.set	.LANCHOR4,. + 0
 937              	_ZN12_GLOBAL__N_110thresholdYE:
 938 0000 14000000 		.word	20
 939              		.section	.rodata.str1.4,"aMS",%progbits,1
 940              		.align	2
 941              	.LC0:
 942 0000 2C00     		.ascii	",\000"
 943 0002 0000     		.section	.bss._ZN12_GLOBAL__N_18lastXPosE,"aw",%nobits
 944              		.align	2
 945              		.set	.LANCHOR1,. + 0
 948              	_ZN12_GLOBAL__N_18lastXPosE:
 949 0000 00000000 		.space	4
 950              		.section	.bss._ZN12_GLOBAL__N_18lastYPosE,"aw",%nobits
 951              		.align	2
 952              		.set	.LANCHOR3,. + 0
 955              	_ZN12_GLOBAL__N_18lastYPosE:
 956 0000 00000000 		.space	4
 957              		.section	.data._ZN12_GLOBAL__N_17enabledE,"aw",%progbits
 958              		.set	.LANCHOR0,. + 0
 961              	_ZN12_GLOBAL__N_17enabledE:
 962 0000 01       		.byte	1
 963              		.section	.data._ZN12_GLOBAL__N_110thresholdXE,"aw",%progbits
 964              		.align	2
 965              		.set	.LANCHOR2,. + 0
 968              	_ZN12_GLOBAL__N_110thresholdXE:
 969 0000 14000000 		.word	20
 970              		.text
 971              	.Letext0:
 972              		.file 3 "Trigger.h"
 973              		.file 4 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/std
 974              		.file 5 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/co
 975              		.file 6 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/gpio.hpp"
 976              		.file 7 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/platform/cortex_m3/stm32/fs
 977              		.file 8 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/connectivity/i2c/constants.hpp"
 978              		.file 9 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/atomic.hpp"
 979              		.file 10 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/io/iodevice.hpp"
 980              		.file 11 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/driver/connectivity/can/message.hpp"
 981              		.file 12 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/utils/template_metaprogramming.hpp"
 982              		.file 13 "/home/jonas/warwick/3dProfilometer/xpcc/src/xpcc/architecture/driver/accessor/ram.hpp"
 983              		.file 14 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/include/stddef.h"
 984              		.file 15 "<built-in>"
 985              		.file 16 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c+
 986              		.file 17 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c+
 987              		.file 18 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/st
 988              		.file 19 "laserInterface.h"
 989              		.file 20 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/st
 990              		.file 21 "/opt/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/c+
 991              		.file 22 "/home/jonas/warwick/3dProfilometer/xpcc/ext/stm32f4xx_lib/CMSIS/Include/core_cm4.h"
 992              		.file 23 "project.h"
DEFINED SYMBOLS
                            *ABS*:00000000 Trigger.cpp
     /tmp/ccUK6trD.s:20     .text._ZN7Trigger6sampleEv:00000000 $t
     /tmp/ccUK6trD.s:25     .text._ZN7Trigger6sampleEv:00000000 _ZN7Trigger6sampleEv
     /tmp/ccUK6trD.s:433    .text._ZN7Trigger6sampleEv:00000144 $d
     /tmp/ccUK6trD.s:462    .text._ZN7Trigger12forceTriggerEv:00000000 $t
     /tmp/ccUK6trD.s:467    .text._ZN7Trigger12forceTriggerEv:00000000 _ZN7Trigger12forceTriggerEv
     /tmp/ccUK6trD.s:830    .text._ZN7Trigger12forceTriggerEv:00000110 $d
     /tmp/ccUK6trD.s:854    .text._ZN7Trigger12setThresholdEi:00000000 $t
     /tmp/ccUK6trD.s:859    .text._ZN7Trigger12setThresholdEi:00000000 _ZN7Trigger12setThresholdEi
     /tmp/ccUK6trD.s:877    .text._ZN7Trigger12setThresholdEi:0000000c $d
     /tmp/ccUK6trD.s:883    .text._ZN7Trigger12getThresholdEv:00000000 $t
     /tmp/ccUK6trD.s:888    .text._ZN7Trigger12getThresholdEv:00000000 _ZN7Trigger12getThresholdEv
     /tmp/ccUK6trD.s:903    .text._ZN7Trigger12getThresholdEv:00000008 $d
     /tmp/ccUK6trD.s:908    .text._ZN7Trigger6enableEb:00000000 $t
     /tmp/ccUK6trD.s:913    .text._ZN7Trigger6enableEb:00000000 _ZN7Trigger6enableEb
     /tmp/ccUK6trD.s:928    .text._ZN7Trigger6enableEb:00000008 $d
     /tmp/ccUK6trD.s:933    .data._ZN12_GLOBAL__N_110thresholdYE:00000000 $d
     /tmp/ccUK6trD.s:937    .data._ZN12_GLOBAL__N_110thresholdYE:00000000 _ZN12_GLOBAL__N_110thresholdYE
     /tmp/ccUK6trD.s:940    .rodata.str1.4:00000000 $d
     /tmp/ccUK6trD.s:944    .bss._ZN12_GLOBAL__N_18lastXPosE:00000000 $d
     /tmp/ccUK6trD.s:948    .bss._ZN12_GLOBAL__N_18lastXPosE:00000000 _ZN12_GLOBAL__N_18lastXPosE
     /tmp/ccUK6trD.s:951    .bss._ZN12_GLOBAL__N_18lastYPosE:00000000 $d
     /tmp/ccUK6trD.s:955    .bss._ZN12_GLOBAL__N_18lastYPosE:00000000 _ZN12_GLOBAL__N_18lastYPosE
     /tmp/ccUK6trD.s:961    .data._ZN12_GLOBAL__N_17enabledE:00000000 _ZN12_GLOBAL__N_17enabledE
     /tmp/ccUK6trD.s:964    .data._ZN12_GLOBAL__N_110thresholdXE:00000000 $d
     /tmp/ccUK6trD.s:968    .data._ZN12_GLOBAL__N_110thresholdXE:00000000 _ZN12_GLOBAL__N_110thresholdXE
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
_ZN7ControlIL4Axis0EE13getIsPositionEv
_ZN7ControlIL4Axis2EE13getIsPositionEv
_ZN5Laser12DoubleBuffer4goodEv
mout
_ZN4xpcc8IOStream12writeIntegerEl
_ZN4xpcc8IOStream8writeBinEPKc
_ZN4xpcc8IOStream8writeHexEPKc
_ZN5Laser12DoubleBuffer9bufOutPtrE
_ZN4xpcc8IOStream8writeBinEh
_ZN4xpcc8IOStream8writeHexEh
pout
